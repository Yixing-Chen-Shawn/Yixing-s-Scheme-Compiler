; ModuleID = '../../header.cpp'
source_filename = "../../header.cpp"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx12.0.0"

%struct.ScmObj = type { i64*, i32 }

@.str = private unnamed_addr constant [22 x i8] c"closure_place_freevar\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"closure_get_fn_part\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"closure_env_get\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"Fatal library run-time error: \00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"unwrap_cons takes a Cons object! Got %d in fn %s\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6 = private unnamed_addr constant [53 x i8] c"unwrap_vector takes a Vector object! Got %d in fn %s\00", align 1
@.str.7 = private unnamed_addr constant [51 x i8] c"unwrap_clo takes a Closure object! Got %d in fn %s\00", align 1
@.str.8 = private unnamed_addr constant [48 x i8] c"unwrap_int takes an Int object! Got %d in fn %s\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"unwrap_bool takes a Bool object! Got %d in fn %s\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"unwrap_str takes a Str object! Got %d in fn %s\00", align 1
@.str.11 = private unnamed_addr constant [47 x i8] c"unwrap_sym takes a Sym object! Got %d in fn %s\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"is_truthy_value\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"Expected cons but got something else for function '%s'\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"applyprim_display\00", align 1
@.str.15 = private unnamed_addr constant [37 x i8] c"function '%s' only takes 1 argument.\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"applyprim_print\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"'()\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"'%s\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"prim_print Sym case.\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"'(\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"applyprim_println\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"#<void>\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"()\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"prim_print_aux bool case\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"#f\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"#t\00", align 1
@.str.28 = private unnamed_addr constant [27 x i8] c"Unknown Boolean value: %lu\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"#<procedure>\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.32 = private unnamed_addr constant [25 x i8] c"prim_print_aux Int case.\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.34 = private unnamed_addr constant [25 x i8] c"prim_print_aux Str case.\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"prim_print_aux Sym case.\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"(print v); unrecognized value %lu\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"print_cons\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c" . \00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"print_vector\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"#(\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"Void\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"Null\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"Bool\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"Closure\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"Cons\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"Int\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"Symbol\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"Vector\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"Other\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"applyprim_halt\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"get_vector_length\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"_get_both\00", align 1
@.str.55 = private unnamed_addr constant [59 x i8] c"Vectors larger than 256 elements are unimplemented. Sorry!\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"applyprim_make_45vector\00", align 1
@.str.57 = private unnamed_addr constant [46 x i8] c"Function '%s' expected 2 arguments but got 1.\00", align 1
@.str.58 = private unnamed_addr constant [38 x i8] c"Function '%s' only takes 2 arguments.\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"make-vector\00", align 1
@.str.60 = private unnamed_addr constant [20 x i8] c"applyprim_vector_63\00", align 1
@.str.61 = private unnamed_addr constant [26 x i8] c"applyprim_vector_45length\00", align 1
@.str.62 = private unnamed_addr constant [21 x i8] c"prim_vector_45length\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"bounds check\00", align 1
@.str.64 = private unnamed_addr constant [53 x i8] c"Bounds check fail, wanted pos %ld, only %ld elements\00", align 1
@.str.65 = private unnamed_addr constant [23 x i8] c"applyprim_vector_45ref\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"vector-ref\00", align 1
@.str.67 = private unnamed_addr constant [21 x i8] c"vector-ref index_pos\00", align 1
@.str.68 = private unnamed_addr constant [26 x i8] c"applyprim_vector_45set_33\00", align 1
@.str.69 = private unnamed_addr constant [46 x i8] c"Function '%s' expected 3 arguments but got 1.\00", align 1
@.str.70 = private unnamed_addr constant [46 x i8] c"Function '%s' expected 3 arguments but got 2.\00", align 1
@.str.71 = private unnamed_addr constant [38 x i8] c"Function '%s' only takes 3 arguments.\00", align 1
@.str.72 = private unnamed_addr constant [12 x i8] c"vector-set!\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"apply vector-set! index_pos\00", align 1
@.str.74 = private unnamed_addr constant [64 x i8] c"Expected an empty list but got something else for function '%s'\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"applyprim_void\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"vec_eq_helper avec\00", align 1
@.str.77 = private unnamed_addr constant [19 x i8] c"vec_eq_helper bvec\00", align 1
@.str.78 = private unnamed_addr constant [19 x i8] c"vec_eq_helper alen\00", align 1
@.str.79 = private unnamed_addr constant [19 x i8] c"vec_eq_helper blen\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"prim_eq_63 Bool a\00", align 1
@.str.81 = private unnamed_addr constant [18 x i8] c"prim_eq_63 Bool b\00", align 1
@.str.82 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Int a\00", align 1
@.str.83 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Int b\00", align 1
@.str.84 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Str a\00", align 1
@.str.85 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Str b\00", align 1
@.str.86 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Sym a\00", align 1
@.str.87 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Sym b\00", align 1
@.str.88 = private unnamed_addr constant [42 x i8] c"I do not know what youre trying to eq?!!.\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"applyprim_eq_63\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"applyprim_eqv_63\00", align 1
@.str.91 = private unnamed_addr constant [19 x i8] c"applyprim_equal_63\00", align 1
@.str.92 = private unnamed_addr constant [20 x i8] c"applyprim_number_63\00", align 1
@.str.93 = private unnamed_addr constant [21 x i8] c"applyprim_integer_63\00", align 1
@.str.94 = private unnamed_addr constant [21 x i8] c"applyprim_boolean_63\00", align 1
@.str.95 = private unnamed_addr constant [18 x i8] c"applyprim_void_63\00", align 1
@.str.96 = private unnamed_addr constant [23 x i8] c"applyprim_procedure_63\00", align 1
@.str.97 = private unnamed_addr constant [18 x i8] c"applyprim_null_63\00", align 1
@.str.98 = private unnamed_addr constant [18 x i8] c"applyprim_cons_63\00", align 1
@.str.99 = private unnamed_addr constant [15 x i8] c"applyprim_cons\00", align 1
@.str.100 = private unnamed_addr constant [14 x i8] c"applyprim_car\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"car\00", align 1
@.str.102 = private unnamed_addr constant [14 x i8] c"applyprim_cdr\00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"cdr\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"+ a\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"+ b\00", align 1
@.str.106 = private unnamed_addr constant [37 x i8] c"Expected Cons in apply +, but got %s\00", align 1
@.str.107 = private unnamed_addr constant [14 x i8] c"apply + final\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"- a\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"- b\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"apply -\00", align 1
@.str.111 = private unnamed_addr constant [15 x i8] c"apply - carval\00", align 1
@.str.112 = private unnamed_addr constant [20 x i8] c"applyprim__45 final\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"* a\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"* b\00", align 1
@.str.115 = private unnamed_addr constant [17 x i8] c"apply * cons_obj\00", align 1
@.str.116 = private unnamed_addr constant [15 x i8] c"apply * carval\00", align 1
@.str.117 = private unnamed_addr constant [15 x i8] c"apply * cdrval\00", align 1
@.str.118 = private unnamed_addr constant [36 x i8] c"apply * taking a non-list argument!\00", align 1
@.str.119 = private unnamed_addr constant [4 x i8] c"/ a\00", align 1
@.str.120 = private unnamed_addr constant [4 x i8] c"/ b\00", align 1
@.str.121 = private unnamed_addr constant [14 x i8] c"applyprim__61\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"= a\00", align 1
@.str.123 = private unnamed_addr constant [4 x i8] c"= b\00", align 1
@.str.124 = private unnamed_addr constant [4 x i8] c"< a\00", align 1
@.str.125 = private unnamed_addr constant [4 x i8] c"< b\00", align 1
@.str.126 = private unnamed_addr constant [17 x i8] c"applyprim__60_61\00", align 1
@.str.127 = private unnamed_addr constant [5 x i8] c"<= a\00", align 1
@.str.128 = private unnamed_addr constant [5 x i8] c"<= b\00", align 1
@.str.129 = private unnamed_addr constant [14 x i8] c"applyprim_not\00", align 1
@.str.130 = private unnamed_addr constant [4 x i8] c"not\00", align 1

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @alloc(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 16)
  %5 = extractvalue { i64, i1 } %4, 1
  %6 = extractvalue { i64, i1 } %4, 0
  %7 = select i1 %5, i64 -1, i64 %6
  %8 = call noalias nonnull i8* @_Znam(i64 %7) #8
  %9 = bitcast i8* %8 to %struct.ScmObj*
  ret %struct.ScmObj* %9
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin allocsize(0)
declare nonnull i8* @_Znam(i64) #2

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @closure_alloc(i64 %0, i64 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj*, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = call %struct.ScmObj* @alloc(i64 2)
  store %struct.ScmObj* %9, %struct.ScmObj** %5, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  store i32 9, i32* %10, align 8
  %11 = load i64, i64* %4, align 8
  %12 = inttoptr i64 %11 to i64*
  %13 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 1
  store i32 9, i32* %14, align 8
  %15 = load i64, i64* %3, align 8
  %16 = call %struct.ScmObj* @const_init_int(i64 %15)
  %17 = call %struct.ScmObj* @const_init_int(i64 0)
  %18 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %16, %struct.ScmObj* %17)
  %19 = bitcast %struct.ScmObj* %18 to i64*
  %20 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  store i64* %19, i64** %20, align 8
  %21 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 0
  %23 = bitcast %struct.ScmObj* %22 to i8*
  %24 = bitcast %struct.ScmObj* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %26 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %25, i64 1
  %27 = bitcast %struct.ScmObj* %26 to i8*
  %28 = bitcast %struct.ScmObj* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false)
  %29 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %29, %struct.ScmObj** %8, align 8
  %30 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %31 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %30, i32 0, i32 1
  store i32 3, i32* %31, align 8
  %32 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %33 = bitcast %struct.ScmObj* %32 to i64*
  %34 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %35 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %34, i32 0, i32 0
  store i64* %33, i64** %35, align 8
  %36 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  ret %struct.ScmObj* %36
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.ScmObj*, align 8
  %9 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %11 = call i64 @unwrap_int(%struct.ScmObj* %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i64 0, i64 0))
  store i64 %11, i64* %5, align 8
  %12 = load i64, i64* %5, align 8
  %13 = add i64 1, %12
  %14 = call %struct.ScmObj* @alloc(i64 %13)
  store %struct.ScmObj* %14, %struct.ScmObj** %6, align 8
  %15 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %16 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %15, i64 0
  %17 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %16, i32 0, i32 1
  store i32 5, i32* %17, align 8
  %18 = load i64, i64* %5, align 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i32 0, i32 0
  store i64* %19, i64** %22, align 8
  store i64 1, i64* %7, align 8
  br label %23

23:                                               ; preds = %49, %2
  %24 = load i64, i64* %7, align 8
  %25 = load i64, i64* %5, align 8
  %26 = icmp ule i64 %24, %25
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  %28 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %28, %struct.ScmObj** %8, align 8
  %29 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %30 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %33 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %32, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  %34 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %35 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %34, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i32 0, i32 0
  store i64* %36, i64** %38, align 8
  %39 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %40 = load i64, i64* %7, align 8
  %41 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %39, i64 %40
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i32 0, i32 1
  store i32 9, i32* %42, align 8
  %43 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %44 = bitcast %struct.ScmObj* %43 to i64*
  %45 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %46 = load i64, i64* %7, align 8
  %47 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %45, i64 %46
  %48 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %47, i32 0, i32 0
  store i64* %44, i64** %48, align 8
  br label %49

49:                                               ; preds = %27
  %50 = load i64, i64* %7, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %7, align 8
  br label %23, !llvm.loop !8

52:                                               ; preds = %23
  %53 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %53, %struct.ScmObj** %9, align 8
  %54 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %55 = bitcast %struct.ScmObj* %54 to i64*
  %56 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %57 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %56, i32 0, i32 0
  store i64* %55, i64** %57, align 8
  %58 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %59 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %58, i32 0, i32 1
  store i32 8, i32* %59, align 8
  %60 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  ret %struct.ScmObj* %60
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_int(i64 %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store i64 %0, i64* %2, align 8
  %4 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %4, %struct.ScmObj** %3, align 8
  %5 = load i64, i64* %2, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  store i64* %6, i64** %8, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  store i32 5, i32* %10, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  ret %struct.ScmObj* %11
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline optnone ssp uwtable mustprogress
define void @closure_place_freevar(%struct.ScmObj* %0, %struct.ScmObj* %1, i64 %2) #0 {
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.ScmObj*, align 8
  %8 = alloca %struct.ScmObj*, align 8
  %9 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %11 = call %struct.ScmObj* @unwrap_clo(%struct.ScmObj* %10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0))
  store %struct.ScmObj* %11, %struct.ScmObj** %7, align 8
  %12 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %13 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %12, i64 1
  %14 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %13, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = bitcast i64* %15 to %struct.ScmObj*
  store %struct.ScmObj* %16, %struct.ScmObj** %8, align 8
  %17 = load i64, i64* %6, align 8
  %18 = call %struct.ScmObj* @const_init_int(i64 %17)
  store %struct.ScmObj* %18, %struct.ScmObj** %9, align 8
  %19 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %21 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %22 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %19, %struct.ScmObj* %20, %struct.ScmObj* %21)
  ret void
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @unwrap_clo(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 3
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = bitcast i64* %20 to %struct.ScmObj*
  ret %struct.ScmObj* %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %0, %struct.ScmObj* %1, %struct.ScmObj* %2) #0 {
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  store %struct.ScmObj* %2, %struct.ScmObj** %6, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %11 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.72, i64 0, i64 0))
  store %struct.ScmObj* %11, %struct.ScmObj** %7, align 8
  %12 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %13 = call i64 @unwrap_int(%struct.ScmObj* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0))
  store i64 %13, i64* %8, align 8
  %14 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %15 = load i64, i64* %8, align 8
  call void @bounds_check(%struct.ScmObj* %14, i64 %15)
  %16 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %16, %struct.ScmObj** %9, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  %22 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %23 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %22, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %26 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %25, i32 0, i32 0
  store i64* %24, i64** %26, align 8
  %27 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %28 = bitcast %struct.ScmObj* %27 to i64*
  %29 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %30 = load i64, i64* %8, align 8
  %31 = add nsw i64 %30, 1
  %32 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %29, i64 %31
  %33 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %32, i32 0, i32 0
  store i64* %28, i64** %33, align 8
  %34 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %34
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define void (%struct.ScmObj*, %struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = call %struct.ScmObj* @unwrap_clo(%struct.ScmObj* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0))
  store %struct.ScmObj* %5, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 0
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast i64* %9 to void (%struct.ScmObj*, %struct.ScmObj*)*
  ret void (%struct.ScmObj*, %struct.ScmObj*)* %10
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @closure_env_get(%struct.ScmObj* %0, i64 %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = call %struct.ScmObj* @unwrap_clo(%struct.ScmObj* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0))
  store %struct.ScmObj* %8, %struct.ScmObj** %5, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i64 1
  %11 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = bitcast i64* %12 to %struct.ScmObj*
  store %struct.ScmObj* %13, %struct.ScmObj** %6, align 8
  %14 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %15 = load i64, i64* %4, align 8
  %16 = call %struct.ScmObj* @const_init_int(i64 %15)
  %17 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %14, %struct.ScmObj* %16)
  ret %struct.ScmObj* %17
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0))
  store %struct.ScmObj* %8, %struct.ScmObj** %5, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %10 = call i64 @unwrap_int(%struct.ScmObj* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.67, i64 0, i64 0))
  store i64 %10, i64* %6, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %12 = load i64, i64* %6, align 8
  call void @bounds_check(%struct.ScmObj* %11, i64 %12)
  %13 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %14 = load i64, i64* %6, align 8
  %15 = add nsw i64 %14, 1
  %16 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %13, i64 %15
  %17 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %16, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = bitcast i64* %18 to %struct.ScmObj*
  ret %struct.ScmObj* %19
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = bitcast i64* %20 to %struct.ScmObj*
  ret %struct.ScmObj* %21
}

declare i32 @printf(i8*, ...) #4

; Function Attrs: noreturn
declare void @exit(i32) #5

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 8
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = bitcast i64* %20 to %struct.ScmObj*
  ret %struct.ScmObj* %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i64 @unwrap_int(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 5
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = ptrtoint i64* %20 to i64
  ret i64 %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i64 @unwrap_bool(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 2
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = ptrtoint i64* %20 to i64
  ret i64 %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i8* @unwrap_str(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 6
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = bitcast i64* %20 to i8*
  ret i8* %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i8* @unwrap_sym(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 7
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = bitcast i64* %20 to i8*
  ret i8* %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i64 @is_truthy_value(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %9 = call i64 @unwrap_bool(%struct.ScmObj* %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0))
  %10 = icmp eq i64 %9, 0
  br label %11

11:                                               ; preds = %7, %1
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  %13 = zext i1 %12 to i64
  %14 = select i1 %12, i1 false, i1 true
  %15 = zext i1 %14 to i64
  ret i64 %15
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_void() #0 {
  %1 = alloca %struct.ScmObj*, align 8
  %2 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %2, %struct.ScmObj** %1, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_null() #0 {
  %1 = alloca %struct.ScmObj*, align 8
  %2 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %2, %struct.ScmObj** %1, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  store i32 1, i32* %6, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_true() #0 {
  %1 = alloca %struct.ScmObj*, align 8
  %2 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %2, %struct.ScmObj** %1, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 0
  store i64* inttoptr (i64 1 to i64*), i64** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  store i32 2, i32* %6, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_false() #0 {
  %1 = alloca %struct.ScmObj*, align 8
  %2 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %2, %struct.ScmObj** %1, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  store i32 2, i32* %6, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_string(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store i8* %0, i8** %2, align 8
  %4 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %4, %struct.ScmObj** %3, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = bitcast i8* %5 to i64*
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  store i64* %6, i64** %8, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  store i32 6, i32* %10, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  ret %struct.ScmObj* %11
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_symbol(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store i8* %0, i8** %2, align 8
  %4 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %4, %struct.ScmObj** %3, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = bitcast i8* %5 to i64*
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  store i64* %6, i64** %8, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  store i32 7, i32* %10, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  ret %struct.ScmObj* %11
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_display(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_display(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_display(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = call %struct.ScmObj* @prim_print(%struct.ScmObj* %3)
  ret %struct.ScmObj* %4
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_print(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca i32, align 4
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* %3, align 4
  switch i32 %7, label %23 [
    i32 1, label %8
    i32 7, label %10
    i32 0, label %14
    i32 4, label %15
    i32 2, label %20
    i32 3, label %20
    i32 5, label %20
    i32 6, label %20
    i32 8, label %20
    i32 9, label %20
  ]

8:                                                ; preds = %1
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0))
  br label %23

10:                                               ; preds = %1
  %11 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %12 = call i8* @unwrap_sym(%struct.ScmObj* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i8* %12)
  br label %23

14:                                               ; preds = %1
  br label %23

15:                                               ; preds = %1
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0))
  %17 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %18 = call %struct.ScmObj* @print_cons(%struct.ScmObj* %17)
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  br label %23

20:                                               ; preds = %1, %1, %1, %1, %1, %1
  %21 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %22 = call %struct.ScmObj* @prim_print_aux(%struct.ScmObj* %21)
  br label %23

23:                                               ; preds = %1, %20, %15, %14, %10, %8
  %24 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %24
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_print(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_print(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @print_cons(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i64 0, i64 0))
  store %struct.ScmObj* %7, %struct.ScmObj** %3, align 8
  %8 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %9 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i64 0
  store %struct.ScmObj* %9, %struct.ScmObj** %4, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %11 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %10, i64 1
  store %struct.ScmObj* %11, %struct.ScmObj** %5, align 8
  %12 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %13 = call %struct.ScmObj* @prim_print_aux(%struct.ScmObj* %12)
  %14 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %15 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %28 [
    i32 1, label %17
    i32 0, label %18
    i32 4, label %20
    i32 7, label %24
    i32 2, label %24
    i32 3, label %24
    i32 5, label %24
    i32 6, label %24
    i32 8, label %24
    i32 9, label %24
  ]

17:                                               ; preds = %1
  br label %28

18:                                               ; preds = %1
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0))
  br label %28

20:                                               ; preds = %1
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0))
  %22 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %23 = call %struct.ScmObj* @print_cons(%struct.ScmObj* %22)
  br label %28

24:                                               ; preds = %1, %1, %1, %1, %1, %1, %1
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0))
  %26 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %27 = call %struct.ScmObj* @prim_print_aux(%struct.ScmObj* %26)
  br label %28

28:                                               ; preds = %1, %24, %20, %18, %17
  %29 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %29
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_print_aux(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %3, align 4
  %8 = load i32, i32* %3, align 4
  switch i32 %8, label %58 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %30
    i32 4, label %32
    i32 5, label %37
    i32 6, label %41
    i32 7, label %45
    i32 8, label %49
    i32 9, label %52
  ]

9:                                                ; preds = %1
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0))
  br label %58

11:                                               ; preds = %1
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0))
  br label %58

13:                                               ; preds = %1
  %14 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %15 = call i64 @unwrap_bool(%struct.ScmObj* %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0))
  store i64 %15, i64* %4, align 8
  %16 = load i64, i64* %4, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0))
  br label %29

20:                                               ; preds = %13
  %21 = load i64, i64* %4, align 8
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0))
  br label %28

25:                                               ; preds = %20
  %26 = load i64, i64* %4, align 8
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.28, i64 0, i64 0), i64 %26)
  br label %28

28:                                               ; preds = %25, %23
  br label %29

29:                                               ; preds = %28, %18
  br label %58

30:                                               ; preds = %1
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0))
  br label %58

32:                                               ; preds = %1
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0))
  %34 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %35 = call %struct.ScmObj* @print_cons(%struct.ScmObj* %34)
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  br label %58

37:                                               ; preds = %1
  %38 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %39 = call i64 @unwrap_int(%struct.ScmObj* %38, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.32, i64 0, i64 0))
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %39)
  br label %58

41:                                               ; preds = %1
  %42 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %43 = call i8* @unwrap_str(%struct.ScmObj* %42, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i64 0, i64 0))
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i8* %43)
  br label %58

45:                                               ; preds = %1
  %46 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %47 = call i8* @unwrap_sym(%struct.ScmObj* %46, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0))
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i8* %47)
  br label %58

49:                                               ; preds = %1
  %50 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %51 = call %struct.ScmObj* @print_vector(%struct.ScmObj* %50)
  br label %58

52:                                               ; preds = %1
  %53 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %54 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = ptrtoint i64* %55 to i64
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i64 0, i64 0), i64 %56)
  br label %58

58:                                               ; preds = %1, %52, %49, %45, %41, %37, %32, %30, %29, %11, %9
  %59 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %59
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_println(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_println(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_println(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = call %struct.ScmObj* @prim_print(%struct.ScmObj* %3)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  %6 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %6
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @print_vector(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %8 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0))
  store %struct.ScmObj* %8, %struct.ScmObj** %3, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = call i64 @_get_vector_length(%struct.ScmObj* %9)
  store i64 %10, i64* %4, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i64 0, i64 0))
  store i64 1, i64* %5, align 8
  br label %12

12:                                               ; preds = %30, %1
  %13 = load i64, i64* %5, align 8
  %14 = load i64, i64* %4, align 8
  %15 = icmp ule i64 %13, %14
  br i1 %15, label %16, label %33

16:                                               ; preds = %12
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0))
  br label %21

21:                                               ; preds = %19, %16
  %22 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %23 = load i64, i64* %5, align 8
  %24 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %22, i64 %23
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = bitcast i64* %26 to %struct.ScmObj*
  store %struct.ScmObj* %27, %struct.ScmObj** %6, align 8
  %28 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %29 = call %struct.ScmObj* @prim_print_aux(%struct.ScmObj* %28)
  br label %30

30:                                               ; preds = %21
  %31 = load i64, i64* %5, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %5, align 8
  br label %12, !llvm.loop !10

33:                                               ; preds = %12
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  %35 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %35
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i64 @_get_vector_length(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i64 0, i64 0))
  store %struct.ScmObj* %5, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 0
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = ptrtoint i64* %9 to i64
  ret i64 %10
}

; Function Attrs: noinline nounwind optnone ssp uwtable mustprogress
define i8* @get_type_name(i32 %0) #6 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %15 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
    i32 6, label %11
    i32 7, label %12
    i32 8, label %13
    i32 9, label %14
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i8** %2, align 8
  br label %15

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i8** %2, align 8
  br label %15

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), i8** %2, align 8
  br label %15

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), i8** %2, align 8
  br label %15

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i8** %2, align 8
  br label %15

10:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0), i8** %2, align 8
  br label %15

11:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i8** %2, align 8
  br label %15

12:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0), i8** %2, align 8
  br label %15

13:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i8** %2, align 8
  br label %15

14:                                               ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0), i8** %2, align 8
  br label %15

15:                                               ; preds = %5, %6, %7, %8, %9, %10, %11, %12, %13, %14, %1
  %16 = load i8*, i8** %2, align 8
  ret i8* %16
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_halt(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_halt(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = call %struct.ScmObj* @prim_print(%struct.ScmObj* %3)
  %5 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %11

11:                                               ; preds = %9, %1
  call void @exit(i32 0) #9
  unreachable
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define void @_get_both(%struct.ScmObj* %0, %struct.ScmObj* %1, %struct.ScmObj* %2) #0 {
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  store %struct.ScmObj* %2, %struct.ScmObj** %6, align 8
  %8 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %9 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0))
  store %struct.ScmObj* %9, %struct.ScmObj** %7, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %11 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %10, i64 0
  %12 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %13 = bitcast %struct.ScmObj* %12 to i8*
  %14 = bitcast %struct.ScmObj* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false)
  %15 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %16 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %15, i64 1
  %17 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %18 = bitcast %struct.ScmObj* %17 to i8*
  %19 = bitcast %struct.ScmObj* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false)
  ret void
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_vector(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj, align 8
  %4 = alloca [256 x %struct.ScmObj*], align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.ScmObj, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %12 = bitcast %struct.ScmObj* %3 to i8*
  %13 = bitcast %struct.ScmObj* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = bitcast [256 x %struct.ScmObj*]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 2048, i1 false)
  store i64 0, i64* %5, align 8
  br label %15

15:                                               ; preds = %24, %1
  %16 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 4
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = load i64, i64* %5, align 8
  %21 = icmp ult i64 %20, 256
  br label %22

22:                                               ; preds = %19, %15
  %23 = phi i1 [ false, %15 ], [ %21, %19 ]
  br i1 %23, label %24, label %43

24:                                               ; preds = %22
  call void @_get_both(%struct.ScmObj* %3, %struct.ScmObj* %6, %struct.ScmObj* %7)
  %25 = call %struct.ScmObj* @alloc(i64 1)
  %26 = load i64, i64* %5, align 8
  %27 = getelementptr inbounds [256 x %struct.ScmObj*], [256 x %struct.ScmObj*]* %4, i64 0, i64 %26
  store %struct.ScmObj* %25, %struct.ScmObj** %27, align 8
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = load i64, i64* %5, align 8
  %31 = getelementptr inbounds [256 x %struct.ScmObj*], [256 x %struct.ScmObj*]* %4, i64 0, i64 %30
  %32 = load %struct.ScmObj*, %struct.ScmObj** %31, align 8
  %33 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %32, i32 0, i32 1
  store i32 %29, i32* %33, align 8
  %34 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %5, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %5, align 8
  %38 = getelementptr inbounds [256 x %struct.ScmObj*], [256 x %struct.ScmObj*]* %4, i64 0, i64 %36
  %39 = load %struct.ScmObj*, %struct.ScmObj** %38, align 8
  %40 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %39, i32 0, i32 0
  store i64* %35, i64** %40, align 8
  %41 = bitcast %struct.ScmObj* %3 to i8*
  %42 = bitcast %struct.ScmObj* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false)
  br label %15, !llvm.loop !11

43:                                               ; preds = %22
  %44 = load i64, i64* %5, align 8
  %45 = icmp eq i64 %44, 256
  br i1 %45, label %46, label %54

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp ne i32 %48, 1
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.55, i64 0, i64 0))
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

54:                                               ; preds = %46, %43
  %55 = load i64, i64* %5, align 8
  %56 = add i64 %55, 1
  %57 = call %struct.ScmObj* @alloc(i64 %56)
  store %struct.ScmObj* %57, %struct.ScmObj** %8, align 8
  %58 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %59 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %58, i64 0
  %60 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %59, i32 0, i32 1
  store i32 5, i32* %60, align 8
  %61 = load i64, i64* %5, align 8
  %62 = inttoptr i64 %61 to i64*
  %63 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %64 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %63, i64 0
  %65 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %64, i32 0, i32 0
  store i64* %62, i64** %65, align 8
  store i64 0, i64* %9, align 8
  br label %66

66:                                               ; preds = %85, %54
  %67 = load i64, i64* %9, align 8
  %68 = load i64, i64* %5, align 8
  %69 = icmp ult i64 %67, %68
  br i1 %69, label %70, label %88

70:                                               ; preds = %66
  %71 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %72 = load i64, i64* %9, align 8
  %73 = add i64 %72, 1
  %74 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %71, i64 %73
  %75 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %74, i32 0, i32 1
  store i32 9, i32* %75, align 8
  %76 = load i64, i64* %9, align 8
  %77 = getelementptr inbounds [256 x %struct.ScmObj*], [256 x %struct.ScmObj*]* %4, i64 0, i64 %76
  %78 = load %struct.ScmObj*, %struct.ScmObj** %77, align 8
  %79 = bitcast %struct.ScmObj* %78 to i64*
  %80 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %81 = load i64, i64* %9, align 8
  %82 = add i64 %81, 1
  %83 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %80, i64 %82
  %84 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %83, i32 0, i32 0
  store i64* %79, i64** %84, align 8
  br label %85

85:                                               ; preds = %70
  %86 = load i64, i64* %9, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %9, align 8
  br label %66, !llvm.loop !12

88:                                               ; preds = %66
  %89 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %89, %struct.ScmObj** %10, align 8
  %90 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %91 = bitcast %struct.ScmObj* %90 to i64*
  %92 = load %struct.ScmObj*, %struct.ScmObj** %10, align 8
  %93 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %92, i32 0, i32 0
  store i64* %91, i64** %93, align 8
  %94 = load %struct.ScmObj*, %struct.ScmObj** %10, align 8
  %95 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %94, i32 0, i32 1
  store i32 8, i32* %95, align 8
  %96 = load %struct.ScmObj*, %struct.ScmObj** %10, align 8
  ret %struct.ScmObj* %96
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_make_45vector(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_vector_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_vector_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_vector_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 8
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = call %struct.ScmObj* @const_init_true()
  br label %11

9:                                                ; preds = %1
  %10 = call %struct.ScmObj* @const_init_false()
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi %struct.ScmObj* [ %8, %7 ], [ %10, %9 ]
  ret %struct.ScmObj* %12
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_vector_45length(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_vector_45length(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_vector_45length(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i64 0, i64 0))
  store %struct.ScmObj* %5, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 0
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define void @bounds_check(%struct.ScmObj* %0, i64 %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 0
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i64 0, i64 0))
  store i64 %8, i64* %5, align 8
  %9 = load i64, i64* %4, align 8
  %10 = add nsw i64 %9, 1
  %11 = load i64, i64* %5, align 8
  %12 = icmp sgt i64 %10, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %2
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = load i64, i64* %4, align 8
  %16 = load i64, i64* %5, align 8
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.64, i64 0, i64 0), i64 %15, i64 %16)
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

19:                                               ; preds = %2
  ret void
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_vector_45ref(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_vector_45set_33(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  %9 = alloca %struct.ScmObj*, align 8
  %10 = alloca %struct.ScmObj, align 8
  %11 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %12 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %13 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 4
  br i1 %15, label %16, label %20

16:                                               ; preds = %1
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

20:                                               ; preds = %1
  %21 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %22 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %21, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  store %struct.ScmObj* %22, %struct.ScmObj** %3, align 8
  %23 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %24 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %23, i64 0
  %25 = bitcast %struct.ScmObj* %4 to i8*
  %26 = bitcast %struct.ScmObj* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false)
  %27 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %27, i64 1
  %29 = bitcast %struct.ScmObj* %5 to i8*
  %30 = bitcast %struct.ScmObj* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false)
  %31 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ne i32 %32, 4
  br i1 %33, label %34, label %38

34:                                               ; preds = %20
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

38:                                               ; preds = %20
  %39 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  store %struct.ScmObj* %39, %struct.ScmObj** %6, align 8
  %40 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %41 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %40, i64 0
  %42 = bitcast %struct.ScmObj* %7 to i8*
  %43 = bitcast %struct.ScmObj* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 16, i1 false)
  %44 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %44, i64 1
  %46 = bitcast %struct.ScmObj* %8 to i8*
  %47 = bitcast %struct.ScmObj* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false)
  %48 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp ne i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %38
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

55:                                               ; preds = %38
  %56 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  store %struct.ScmObj* %56, %struct.ScmObj** %9, align 8
  %57 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %58 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %57, i64 0
  %59 = bitcast %struct.ScmObj* %10 to i8*
  %60 = bitcast %struct.ScmObj* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false)
  %61 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %62 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %61, i64 1
  %63 = bitcast %struct.ScmObj* %11 to i8*
  %64 = bitcast %struct.ScmObj* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 16, i1 false)
  %65 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp ne i32 %66, 1
  br i1 %67, label %68, label %72

68:                                               ; preds = %55
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

72:                                               ; preds = %55
  %73 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %4, %struct.ScmObj* %7, %struct.ScmObj* %10)
  ret %struct.ScmObj* %73
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_void(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 1
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i64 0, i64 0))
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

11:                                               ; preds = %1
  %12 = call %struct.ScmObj* @prim_void()
  ret %struct.ScmObj* %12
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_void() #0 {
  %1 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %1
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i32 @cons_eq_helper(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  call void @_get_both(%struct.ScmObj* %9, %struct.ScmObj* %5, %struct.ScmObj* %6)
  %10 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  call void @_get_both(%struct.ScmObj* %10, %struct.ScmObj* %7, %struct.ScmObj* %8)
  %11 = call i32 @eq_helper(%struct.ScmObj* %5, %struct.ScmObj* %7)
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = call i32 @eq_helper(%struct.ScmObj* %6, %struct.ScmObj* %8)
  %15 = icmp ne i32 %14, 0
  br label %16

16:                                               ; preds = %13, %2
  %17 = phi i1 [ false, %2 ], [ %15, %13 ]
  %18 = zext i1 %17 to i32
  ret i32 %18
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i32 @eq_helper(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %11 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %14 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %12, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %75

18:                                               ; preds = %2
  %19 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %20 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %75 [
    i32 0, label %22
    i32 1, label %23
    i32 2, label %24
    i32 3, label %32
    i32 4, label %33
    i32 5, label %37
    i32 6, label %45
    i32 7, label %56
    i32 8, label %67
    i32 9, label %71
  ]

22:                                               ; preds = %18
  store i32 1, i32* %3, align 4
  br label %75

23:                                               ; preds = %18
  store i32 1, i32* %3, align 4
  br label %75

24:                                               ; preds = %18
  %25 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %26 = call i64 @unwrap_bool(%struct.ScmObj* %25, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0))
  %27 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %28 = call i64 @unwrap_bool(%struct.ScmObj* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.81, i64 0, i64 0))
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %24
  store i32 1, i32* %3, align 4
  br label %75

31:                                               ; preds = %24
  store i32 0, i32* %3, align 4
  br label %75

32:                                               ; preds = %18
  store i32 0, i32* %3, align 4
  br label %75

33:                                               ; preds = %18
  %34 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %35 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %36 = call i32 @cons_eq_helper(%struct.ScmObj* %34, %struct.ScmObj* %35)
  store i32 %36, i32* %3, align 4
  br label %75

37:                                               ; preds = %18
  %38 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %39 = call i64 @unwrap_int(%struct.ScmObj* %38, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82, i64 0, i64 0))
  %40 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %41 = call i64 @unwrap_int(%struct.ScmObj* %40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.83, i64 0, i64 0))
  %42 = icmp eq i64 %39, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %37
  store i32 1, i32* %3, align 4
  br label %75

44:                                               ; preds = %37
  store i32 0, i32* %3, align 4
  br label %75

45:                                               ; preds = %18
  %46 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %47 = call i8* @unwrap_str(%struct.ScmObj* %46, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.84, i64 0, i64 0))
  store i8* %47, i8** %6, align 8
  %48 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %49 = call i8* @unwrap_str(%struct.ScmObj* %48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.85, i64 0, i64 0))
  store i8* %49, i8** %7, align 8
  %50 = load i8*, i8** %6, align 8
  %51 = load i8*, i8** %7, align 8
  %52 = call i32 @strcmp(i8* %50, i8* %51)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %45
  store i32 1, i32* %3, align 4
  br label %75

55:                                               ; preds = %45
  store i32 0, i32* %3, align 4
  br label %75

56:                                               ; preds = %18
  %57 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %58 = call i8* @unwrap_sym(%struct.ScmObj* %57, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.86, i64 0, i64 0))
  store i8* %58, i8** %8, align 8
  %59 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %60 = call i8* @unwrap_sym(%struct.ScmObj* %59, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i64 0, i64 0))
  store i8* %60, i8** %9, align 8
  %61 = load i8*, i8** %8, align 8
  %62 = load i8*, i8** %9, align 8
  %63 = call i32 @strcmp(i8* %61, i8* %62)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %56
  store i32 1, i32* %3, align 4
  br label %75

66:                                               ; preds = %56
  store i32 0, i32* %3, align 4
  br label %75

67:                                               ; preds = %18
  %68 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %69 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %70 = call i32 @vec_eq_helper(%struct.ScmObj* %68, %struct.ScmObj* %69)
  store i32 %70, i32* %3, align 4
  br label %75

71:                                               ; preds = %18
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.88, i64 0, i64 0))
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

75:                                               ; preds = %17, %22, %23, %30, %31, %32, %33, %43, %44, %54, %55, %65, %66, %67, %18
  %76 = load i32, i32* %3, align 4
  ret i32 %76
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i32 @vec_eq_helper(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %12 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i64 0, i64 0))
  store %struct.ScmObj* %12, %struct.ScmObj** %6, align 8
  %13 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %14 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i64 0, i64 0))
  store %struct.ScmObj* %14, %struct.ScmObj** %7, align 8
  %15 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %16 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %15, i64 0
  %17 = call i64 @unwrap_int(%struct.ScmObj* %16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i64 0, i64 0))
  store i64 %17, i64* %8, align 8
  %18 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i64 0
  %20 = call i64 @unwrap_int(%struct.ScmObj* %19, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.79, i64 0, i64 0))
  store i64 %20, i64* %9, align 8
  %21 = load i64, i64* %8, align 8
  %22 = load i64, i64* %9, align 8
  %23 = icmp ne i64 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %45

25:                                               ; preds = %2
  store i64 0, i64* %10, align 8
  br label %26

26:                                               ; preds = %41, %25
  %27 = load i64, i64* %10, align 8
  %28 = load i64, i64* %8, align 8
  %29 = icmp sle i64 %27, %28
  br i1 %29, label %30, label %44

30:                                               ; preds = %26
  %31 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %32 = load i64, i64* %10, align 8
  %33 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %31, i64 %32
  %34 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %35 = load i64, i64* %10, align 8
  %36 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %34, i64 %35
  %37 = call i32 @eq_helper(%struct.ScmObj* %33, %struct.ScmObj* %36)
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %30
  store i32 0, i32* %3, align 4
  br label %45

40:                                               ; preds = %30
  br label %41

41:                                               ; preds = %40
  %42 = load i64, i64* %10, align 8
  %43 = add nsw i64 %42, 1
  store i64 %43, i64* %10, align 8
  br label %26, !llvm.loop !13

44:                                               ; preds = %26
  store i32 1, i32* %3, align 4
  br label %45

45:                                               ; preds = %44, %39, %24
  %46 = load i32, i32* %3, align 4
  ret i32 %46
}

declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_eq_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_eq_63(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_eq_63(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %7 = call i32 @eq_helper(%struct.ScmObj* %5, %struct.ScmObj* %6)
  %8 = icmp eq i32 %7, 1
  %9 = call %struct.ScmObj* @make_predicate(i1 zeroext %8)
  ret %struct.ScmObj* %9
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @make_predicate(i1 zeroext %0) #0 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  %4 = load i8, i8* %2, align 1
  %5 = trunc i8 %4 to i1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = call %struct.ScmObj* @const_init_true()
  br label %10

8:                                                ; preds = %1
  %9 = call %struct.ScmObj* @const_init_false()
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi %struct.ScmObj* [ %7, %6 ], [ %9, %8 ]
  ret %struct.ScmObj* %11
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_eqv_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_eqv_63(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_eqv_63(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %7 = call %struct.ScmObj* @prim_eq_63(%struct.ScmObj* %5, %struct.ScmObj* %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_equal_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_equal_63(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_equal_63(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %7 = call %struct.ScmObj* @prim_eq_63(%struct.ScmObj* %5, %struct.ScmObj* %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_number_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_number_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_number_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = call %struct.ScmObj* @prim_integer_63(%struct.ScmObj* %3)
  ret %struct.ScmObj* %4
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_integer_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 5
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_integer_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_integer_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_boolean_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.94, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.94, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.94, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_boolean_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_boolean_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_void_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_void_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_void_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_procedure_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_procedure_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_procedure_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 3
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_null_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_null_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_cons_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.98, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.98, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.98, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_cons_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_cons_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 4
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_cons(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_cons(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %7 = call %struct.ScmObj* @alloc(i64 2)
  store %struct.ScmObj* %7, %struct.ScmObj** %5, align 8
  %8 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i64 0
  %11 = bitcast %struct.ScmObj* %10 to i8*
  %12 = bitcast %struct.ScmObj* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  %13 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %14 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %15 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %14, i64 1
  %16 = bitcast %struct.ScmObj* %15 to i8*
  %17 = bitcast %struct.ScmObj* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false)
  %18 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %18, %struct.ScmObj** %6, align 8
  %19 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %20 = bitcast %struct.ScmObj* %19 to i64*
  %21 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i32 0, i32 0
  store i64* %20, i64** %22, align 8
  %23 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %24 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %23, i32 0, i32 1
  store i32 4, i32* %24, align 8
  %25 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  ret %struct.ScmObj* %25
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_car(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_car(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0))
  store %struct.ScmObj* %5, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 0
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_cdr(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.102, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.102, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.102, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_cdr(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i64 0, i64 0))
  store %struct.ScmObj* %5, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 1
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__43(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i64 0, i64 0))
  store i64 %8, i64* %5, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %10 = call i64 @unwrap_int(%struct.ScmObj* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i64 0, i64 0))
  store i64 %10, i64* %6, align 8
  %11 = load i64, i64* %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = add nsw i64 %11, %12
  %14 = call %struct.ScmObj* @const_init_int(i64 %13)
  ret %struct.ScmObj* %14
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim__43(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %3, align 4
  %10 = load i32, i32* %3, align 4
  %11 = icmp ne i32 %10, 4
  br i1 %11, label %12, label %21

12:                                               ; preds = %1
  %13 = load i32, i32* %3, align 4
  %14 = icmp ne i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %17 = load i32, i32* %3, align 4
  %18 = call i8* @get_type_name(i32 %17)
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.106, i64 0, i64 0), i8* %18)
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

21:                                               ; preds = %12, %1
  store i64 0, i64* %4, align 8
  br label %22

22:                                               ; preds = %27, %21
  %23 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %24 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 4
  br i1 %26, label %27, label %32

27:                                               ; preds = %22
  %28 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  call void @_get_both(%struct.ScmObj* %28, %struct.ScmObj* %5, %struct.ScmObj* %6)
  %29 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.107, i64 0, i64 0))
  %30 = load i64, i64* %4, align 8
  %31 = add nsw i64 %30, %29
  store i64 %31, i64* %4, align 8
  store %struct.ScmObj* %6, %struct.ScmObj** %2, align 8
  br label %22, !llvm.loop !14

32:                                               ; preds = %22
  %33 = load i64, i64* %4, align 8
  %34 = call %struct.ScmObj* @const_init_int(i64 %33)
  ret %struct.ScmObj* %34
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__45(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i64 0, i64 0))
  store i64 %8, i64* %5, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %10 = call i64 @unwrap_int(%struct.ScmObj* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i64 0, i64 0))
  store i64 %10, i64* %6, align 8
  %11 = load i64, i64* %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = sub nsw i64 %11, %12
  %14 = call %struct.ScmObj* @const_init_int(i64 %13)
  ret %struct.ScmObj* %14
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim__45(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.ScmObj, align 8
  %10 = alloca %struct.ScmObj, align 8
  %11 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  %12 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %13 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i64 0, i64 0))
  store %struct.ScmObj* %13, %struct.ScmObj** %4, align 8
  %14 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %15 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %14, i64 0
  %16 = bitcast %struct.ScmObj* %5 to i8*
  %17 = bitcast %struct.ScmObj* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false)
  %18 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i64 1
  %20 = bitcast %struct.ScmObj* %6 to i8*
  %21 = bitcast %struct.ScmObj* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false)
  %22 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.111, i64 0, i64 0))
  store i64 %22, i64* %7, align 8
  %23 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %1
  %27 = load i64, i64* %7, align 8
  %28 = sub nsw i64 0, %27
  %29 = call %struct.ScmObj* @const_init_int(i64 %28)
  store %struct.ScmObj* %29, %struct.ScmObj** %2, align 8
  br label %47

30:                                               ; preds = %1
  %31 = load i64, i64* %7, align 8
  store i64 %31, i64* %8, align 8
  %32 = bitcast %struct.ScmObj* %9 to i8*
  %33 = bitcast %struct.ScmObj* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false)
  br label %34

34:                                               ; preds = %38, %30
  %35 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp ne i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  call void @_get_both(%struct.ScmObj* %9, %struct.ScmObj* %10, %struct.ScmObj* %11)
  %39 = call i64 @unwrap_int(%struct.ScmObj* %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.112, i64 0, i64 0))
  %40 = load i64, i64* %8, align 8
  %41 = sub nsw i64 %40, %39
  store i64 %41, i64* %8, align 8
  %42 = bitcast %struct.ScmObj* %9 to i8*
  %43 = bitcast %struct.ScmObj* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 16, i1 false)
  br label %34, !llvm.loop !15

44:                                               ; preds = %34
  %45 = load i64, i64* %8, align 8
  %46 = call %struct.ScmObj* @const_init_int(i64 %45)
  store %struct.ScmObj* %46, %struct.ScmObj** %2, align 8
  br label %47

47:                                               ; preds = %44, %26
  %48 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  ret %struct.ScmObj* %48
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__42(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i64 0, i64 0))
  %7 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i64 0, i64 0))
  %9 = mul nsw i64 %6, %8
  %10 = call %struct.ScmObj* @const_init_int(i64 %9)
  ret %struct.ScmObj* %10
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim__42(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %1
  %14 = call %struct.ScmObj* @const_init_int(i64 1)
  store %struct.ScmObj* %14, %struct.ScmObj** %2, align 8
  br label %42

15:                                               ; preds = %1
  %16 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %17 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %20, label %38

20:                                               ; preds = %15
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.115, i64 0, i64 0))
  store %struct.ScmObj* %22, %struct.ScmObj** %4, align 8
  %23 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %24 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %23, i64 0
  %25 = bitcast %struct.ScmObj* %5 to i8*
  %26 = bitcast %struct.ScmObj* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false)
  %27 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %27, i64 1
  %29 = bitcast %struct.ScmObj* %6 to i8*
  %30 = bitcast %struct.ScmObj* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false)
  %31 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i64 0, i64 0))
  store i64 %31, i64* %7, align 8
  %32 = call %struct.ScmObj* @applyprim__42(%struct.ScmObj* %6)
  %33 = call i64 @unwrap_int(%struct.ScmObj* %32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.117, i64 0, i64 0))
  store i64 %33, i64* %8, align 8
  %34 = load i64, i64* %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = mul nsw i64 %34, %35
  %37 = call %struct.ScmObj* @const_init_int(i64 %36)
  store %struct.ScmObj* %37, %struct.ScmObj** %2, align 8
  br label %42

38:                                               ; preds = %15
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.118, i64 0, i64 0))
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

42:                                               ; preds = %20, %13
  %43 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  ret %struct.ScmObj* %43
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__47(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.119, i64 0, i64 0))
  store i64 %8, i64* %5, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %10 = call i64 @unwrap_int(%struct.ScmObj* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120, i64 0, i64 0))
  store i64 %10, i64* %6, align 8
  %11 = load i64, i64* %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = sdiv i64 %11, %12
  %14 = call %struct.ScmObj* @const_init_int(i64 %13)
  ret %struct.ScmObj* %14
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim__61(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim__61(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__61(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %7 = call i64 @unwrap_int(%struct.ScmObj* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.122, i64 0, i64 0))
  %8 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %9 = call i64 @unwrap_int(%struct.ScmObj* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0))
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = call %struct.ScmObj* @const_init_true()
  store %struct.ScmObj* %12, %struct.ScmObj** %3, align 8
  br label %15

13:                                               ; preds = %2
  %14 = call %struct.ScmObj* @const_init_false()
  store %struct.ScmObj* %14, %struct.ScmObj** %3, align 8
  br label %15

15:                                               ; preds = %13, %11
  %16 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  ret %struct.ScmObj* %16
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__60(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124, i64 0, i64 0))
  %7 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.125, i64 0, i64 0))
  %9 = icmp slt i64 %6, %8
  %10 = call %struct.ScmObj* @make_predicate(i1 zeroext %9)
  ret %struct.ScmObj* %10
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim__60_61(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim__60_61(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__60_61(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i64 0, i64 0))
  %7 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.128, i64 0, i64 0))
  %9 = icmp sle i64 %6, %8
  %10 = call %struct.ScmObj* @make_predicate(i1 zeroext %9)
  ret %struct.ScmObj* %10
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_not(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_not(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_not(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = call i64 @unwrap_bool(%struct.ScmObj* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i64 0, i64 0))
  %5 = icmp eq i64 %4, 0
  %6 = call %struct.ScmObj* @make_predicate(i1 zeroext %5)
  ret %struct.ScmObj* %6
}

attributes #0 = { noinline optnone ssp uwtable mustprogress "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nobuiltin allocsize(0) "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind optnone ssp uwtable mustprogress "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #8 = { builtin allocsize(0) }
attributes #9 = { noreturn }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 12, i32 1]}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 1, !"branch-target-enforcement", i32 0}
!3 = !{i32 1, !"sign-return-address", i32 0}
!4 = !{i32 1, !"sign-return-address-all", i32 0}
!5 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!6 = !{i32 7, !"PIC Level", i32 2}
!7 = !{!"Apple clang version 13.0.0 (clang-1300.0.29.3)"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
!10 = distinct !{!10, !9}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !9}
!14 = distinct !{!14, !9}
!15 = distinct !{!15, !9}


;;;header ended;;;



define ccc i32 @main() {
%mainenv94206 = call %struct.ScmObj* @const_init_null()
%mainargs94207 = call %struct.ScmObj* @const_init_null()
call tailcc void @proc_main(%struct.ScmObj* %mainenv94206, %struct.ScmObj* %mainargs94207)
ret i32 0
}

define tailcc void @proc_main(%struct.ScmObj* %mainenv94204,%struct.ScmObj* %mainargs94205) {
%stackaddr$makeclosure94208 = alloca %struct.ScmObj*, align 8
%fptrToInt94209 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48473 to i64
%ae48473 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94209)
store volatile %struct.ScmObj* %ae48473, %struct.ScmObj** %stackaddr$makeclosure94208, align 8
%ae48474 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94210 = alloca %struct.ScmObj*, align 8
%fptrToInt94211 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48475 to i64
%ae48475 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94211)
store volatile %struct.ScmObj* %ae48475, %struct.ScmObj** %stackaddr$makeclosure94210, align 8
%argslist94203$ae484730 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94212 = alloca %struct.ScmObj*, align 8
%argslist94203$ae484731 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48475, %struct.ScmObj* %argslist94203$ae484730)
store volatile %struct.ScmObj* %argslist94203$ae484731, %struct.ScmObj** %stackaddr$prim94212, align 8
%stackaddr$prim94213 = alloca %struct.ScmObj*, align 8
%argslist94203$ae484732 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48474, %struct.ScmObj* %argslist94203$ae484731)
store volatile %struct.ScmObj* %argslist94203$ae484732, %struct.ScmObj** %stackaddr$prim94213, align 8
%clofunc94214 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48473)
musttail call tailcc void %clofunc94214(%struct.ScmObj* %ae48473, %struct.ScmObj* %argslist94203$ae484732)
ret void
}

define tailcc void @proc_clo$ae48473(%struct.ScmObj* %env$ae48473,%struct.ScmObj* %current_45args92846) {
%stackaddr$prim94215 = alloca %struct.ScmObj*, align 8
%_95k48294 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92846)
store volatile %struct.ScmObj* %_95k48294, %struct.ScmObj** %stackaddr$prim94215, align 8
%stackaddr$prim94216 = alloca %struct.ScmObj*, align 8
%current_45args92847 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92846)
store volatile %struct.ScmObj* %current_45args92847, %struct.ScmObj** %stackaddr$prim94216, align 8
%stackaddr$prim94217 = alloca %struct.ScmObj*, align 8
%anf_45bind48158 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92847)
store volatile %struct.ScmObj* %anf_45bind48158, %struct.ScmObj** %stackaddr$prim94217, align 8
%stackaddr$makeclosure94218 = alloca %struct.ScmObj*, align 8
%fptrToInt94219 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48488 to i64
%ae48488 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94219)
store volatile %struct.ScmObj* %ae48488, %struct.ScmObj** %stackaddr$makeclosure94218, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48488, %struct.ScmObj* %anf_45bind48158, i64 0)
%ae48489 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94220 = alloca %struct.ScmObj*, align 8
%fptrToInt94221 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48490 to i64
%ae48490 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94221)
store volatile %struct.ScmObj* %ae48490, %struct.ScmObj** %stackaddr$makeclosure94220, align 8
%argslist94198$ae484880 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94222 = alloca %struct.ScmObj*, align 8
%argslist94198$ae484881 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48490, %struct.ScmObj* %argslist94198$ae484880)
store volatile %struct.ScmObj* %argslist94198$ae484881, %struct.ScmObj** %stackaddr$prim94222, align 8
%stackaddr$prim94223 = alloca %struct.ScmObj*, align 8
%argslist94198$ae484882 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48489, %struct.ScmObj* %argslist94198$ae484881)
store volatile %struct.ScmObj* %argslist94198$ae484882, %struct.ScmObj** %stackaddr$prim94223, align 8
%clofunc94224 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48488)
musttail call tailcc void %clofunc94224(%struct.ScmObj* %ae48488, %struct.ScmObj* %argslist94198$ae484882)
ret void
}

define tailcc void @proc_clo$ae48488(%struct.ScmObj* %env$ae48488,%struct.ScmObj* %current_45args92849) {
%stackaddr$env-ref94225 = alloca %struct.ScmObj*, align 8
%anf_45bind48158 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48488, i64 0)
store %struct.ScmObj* %anf_45bind48158, %struct.ScmObj** %stackaddr$env-ref94225
%stackaddr$prim94226 = alloca %struct.ScmObj*, align 8
%_95k48295 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92849)
store volatile %struct.ScmObj* %_95k48295, %struct.ScmObj** %stackaddr$prim94226, align 8
%stackaddr$prim94227 = alloca %struct.ScmObj*, align 8
%current_45args92850 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92849)
store volatile %struct.ScmObj* %current_45args92850, %struct.ScmObj** %stackaddr$prim94227, align 8
%stackaddr$prim94228 = alloca %struct.ScmObj*, align 8
%anf_45bind48162 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92850)
store volatile %struct.ScmObj* %anf_45bind48162, %struct.ScmObj** %stackaddr$prim94228, align 8
%stackaddr$makeclosure94229 = alloca %struct.ScmObj*, align 8
%fptrToInt94230 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48603 to i64
%ae48603 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94230)
store volatile %struct.ScmObj* %ae48603, %struct.ScmObj** %stackaddr$makeclosure94229, align 8
%argslist94177$anf_45bind481580 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94231 = alloca %struct.ScmObj*, align 8
%argslist94177$anf_45bind481581 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48162, %struct.ScmObj* %argslist94177$anf_45bind481580)
store volatile %struct.ScmObj* %argslist94177$anf_45bind481581, %struct.ScmObj** %stackaddr$prim94231, align 8
%stackaddr$prim94232 = alloca %struct.ScmObj*, align 8
%argslist94177$anf_45bind481582 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48603, %struct.ScmObj* %argslist94177$anf_45bind481581)
store volatile %struct.ScmObj* %argslist94177$anf_45bind481582, %struct.ScmObj** %stackaddr$prim94232, align 8
%clofunc94233 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind48158)
musttail call tailcc void %clofunc94233(%struct.ScmObj* %anf_45bind48158, %struct.ScmObj* %argslist94177$anf_45bind481582)
ret void
}

define tailcc void @proc_clo$ae48603(%struct.ScmObj* %env$ae48603,%struct.ScmObj* %current_45args92852) {
%stackaddr$prim94234 = alloca %struct.ScmObj*, align 8
%_95k48296 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92852)
store volatile %struct.ScmObj* %_95k48296, %struct.ScmObj** %stackaddr$prim94234, align 8
%stackaddr$prim94235 = alloca %struct.ScmObj*, align 8
%current_45args92853 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92852)
store volatile %struct.ScmObj* %current_45args92853, %struct.ScmObj** %stackaddr$prim94235, align 8
%stackaddr$prim94236 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92853)
store volatile %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$prim94236, align 8
%stackaddr$makeclosure94237 = alloca %struct.ScmObj*, align 8
%fptrToInt94238 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48605 to i64
%ae48605 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94238)
store volatile %struct.ScmObj* %ae48605, %struct.ScmObj** %stackaddr$makeclosure94237, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48605, %struct.ScmObj* %Ycmb48032, i64 0)
%ae48606 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94239 = alloca %struct.ScmObj*, align 8
%fptrToInt94240 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48607 to i64
%ae48607 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94240)
store volatile %struct.ScmObj* %ae48607, %struct.ScmObj** %stackaddr$makeclosure94239, align 8
%argslist94176$ae486050 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94241 = alloca %struct.ScmObj*, align 8
%argslist94176$ae486051 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48607, %struct.ScmObj* %argslist94176$ae486050)
store volatile %struct.ScmObj* %argslist94176$ae486051, %struct.ScmObj** %stackaddr$prim94241, align 8
%stackaddr$prim94242 = alloca %struct.ScmObj*, align 8
%argslist94176$ae486052 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48606, %struct.ScmObj* %argslist94176$ae486051)
store volatile %struct.ScmObj* %argslist94176$ae486052, %struct.ScmObj** %stackaddr$prim94242, align 8
%clofunc94243 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48605)
musttail call tailcc void %clofunc94243(%struct.ScmObj* %ae48605, %struct.ScmObj* %argslist94176$ae486052)
ret void
}

define tailcc void @proc_clo$ae48605(%struct.ScmObj* %env$ae48605,%struct.ScmObj* %current_45args92855) {
%stackaddr$env-ref94244 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48605, i64 0)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94244
%stackaddr$prim94245 = alloca %struct.ScmObj*, align 8
%_95k48297 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92855)
store volatile %struct.ScmObj* %_95k48297, %struct.ScmObj** %stackaddr$prim94245, align 8
%stackaddr$prim94246 = alloca %struct.ScmObj*, align 8
%current_45args92856 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92855)
store volatile %struct.ScmObj* %current_45args92856, %struct.ScmObj** %stackaddr$prim94246, align 8
%stackaddr$prim94247 = alloca %struct.ScmObj*, align 8
%anf_45bind48167 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92856)
store volatile %struct.ScmObj* %anf_45bind48167, %struct.ScmObj** %stackaddr$prim94247, align 8
%stackaddr$makeclosure94248 = alloca %struct.ScmObj*, align 8
%fptrToInt94249 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48683 to i64
%ae48683 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94249)
store volatile %struct.ScmObj* %ae48683, %struct.ScmObj** %stackaddr$makeclosure94248, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48683, %struct.ScmObj* %Ycmb48032, i64 0)
%argslist94160$Ycmb480320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94250 = alloca %struct.ScmObj*, align 8
%argslist94160$Ycmb480321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48167, %struct.ScmObj* %argslist94160$Ycmb480320)
store volatile %struct.ScmObj* %argslist94160$Ycmb480321, %struct.ScmObj** %stackaddr$prim94250, align 8
%stackaddr$prim94251 = alloca %struct.ScmObj*, align 8
%argslist94160$Ycmb480322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48683, %struct.ScmObj* %argslist94160$Ycmb480321)
store volatile %struct.ScmObj* %argslist94160$Ycmb480322, %struct.ScmObj** %stackaddr$prim94251, align 8
%clofunc94252 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb48032)
musttail call tailcc void %clofunc94252(%struct.ScmObj* %Ycmb48032, %struct.ScmObj* %argslist94160$Ycmb480322)
ret void
}

define tailcc void @proc_clo$ae48683(%struct.ScmObj* %env$ae48683,%struct.ScmObj* %current_45args92858) {
%stackaddr$env-ref94253 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48683, i64 0)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94253
%stackaddr$prim94254 = alloca %struct.ScmObj*, align 8
%_95k48298 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92858)
store volatile %struct.ScmObj* %_95k48298, %struct.ScmObj** %stackaddr$prim94254, align 8
%stackaddr$prim94255 = alloca %struct.ScmObj*, align 8
%current_45args92859 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92858)
store volatile %struct.ScmObj* %current_45args92859, %struct.ScmObj** %stackaddr$prim94255, align 8
%stackaddr$prim94256 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92859)
store volatile %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$prim94256, align 8
%stackaddr$makeclosure94257 = alloca %struct.ScmObj*, align 8
%fptrToInt94258 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48685 to i64
%ae48685 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94258)
store volatile %struct.ScmObj* %ae48685, %struct.ScmObj** %stackaddr$makeclosure94257, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48685, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48685, %struct.ScmObj* %Ycmb48032, i64 1)
%ae48686 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94259 = alloca %struct.ScmObj*, align 8
%fptrToInt94260 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48687 to i64
%ae48687 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94260)
store volatile %struct.ScmObj* %ae48687, %struct.ScmObj** %stackaddr$makeclosure94259, align 8
%argslist94159$ae486850 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94261 = alloca %struct.ScmObj*, align 8
%argslist94159$ae486851 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48687, %struct.ScmObj* %argslist94159$ae486850)
store volatile %struct.ScmObj* %argslist94159$ae486851, %struct.ScmObj** %stackaddr$prim94261, align 8
%stackaddr$prim94262 = alloca %struct.ScmObj*, align 8
%argslist94159$ae486852 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48686, %struct.ScmObj* %argslist94159$ae486851)
store volatile %struct.ScmObj* %argslist94159$ae486852, %struct.ScmObj** %stackaddr$prim94262, align 8
%clofunc94263 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48685)
musttail call tailcc void %clofunc94263(%struct.ScmObj* %ae48685, %struct.ScmObj* %argslist94159$ae486852)
ret void
}

define tailcc void @proc_clo$ae48685(%struct.ScmObj* %env$ae48685,%struct.ScmObj* %current_45args92861) {
%stackaddr$env-ref94264 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48685, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94264
%stackaddr$env-ref94265 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48685, i64 1)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94265
%stackaddr$prim94266 = alloca %struct.ScmObj*, align 8
%_95k48299 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92861)
store volatile %struct.ScmObj* %_95k48299, %struct.ScmObj** %stackaddr$prim94266, align 8
%stackaddr$prim94267 = alloca %struct.ScmObj*, align 8
%current_45args92862 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92861)
store volatile %struct.ScmObj* %current_45args92862, %struct.ScmObj** %stackaddr$prim94267, align 8
%stackaddr$prim94268 = alloca %struct.ScmObj*, align 8
%anf_45bind48173 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92862)
store volatile %struct.ScmObj* %anf_45bind48173, %struct.ScmObj** %stackaddr$prim94268, align 8
%stackaddr$makeclosure94269 = alloca %struct.ScmObj*, align 8
%fptrToInt94270 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48780 to i64
%ae48780 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94270)
store volatile %struct.ScmObj* %ae48780, %struct.ScmObj** %stackaddr$makeclosure94269, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48780, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48780, %struct.ScmObj* %Ycmb48032, i64 1)
%argslist94140$Ycmb480320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94271 = alloca %struct.ScmObj*, align 8
%argslist94140$Ycmb480321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48173, %struct.ScmObj* %argslist94140$Ycmb480320)
store volatile %struct.ScmObj* %argslist94140$Ycmb480321, %struct.ScmObj** %stackaddr$prim94271, align 8
%stackaddr$prim94272 = alloca %struct.ScmObj*, align 8
%argslist94140$Ycmb480322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48780, %struct.ScmObj* %argslist94140$Ycmb480321)
store volatile %struct.ScmObj* %argslist94140$Ycmb480322, %struct.ScmObj** %stackaddr$prim94272, align 8
%clofunc94273 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb48032)
musttail call tailcc void %clofunc94273(%struct.ScmObj* %Ycmb48032, %struct.ScmObj* %argslist94140$Ycmb480322)
ret void
}

define tailcc void @proc_clo$ae48780(%struct.ScmObj* %env$ae48780,%struct.ScmObj* %current_45args92864) {
%stackaddr$env-ref94274 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48780, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94274
%stackaddr$env-ref94275 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48780, i64 1)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94275
%stackaddr$prim94276 = alloca %struct.ScmObj*, align 8
%_95k48300 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92864)
store volatile %struct.ScmObj* %_95k48300, %struct.ScmObj** %stackaddr$prim94276, align 8
%stackaddr$prim94277 = alloca %struct.ScmObj*, align 8
%current_45args92865 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92864)
store volatile %struct.ScmObj* %current_45args92865, %struct.ScmObj** %stackaddr$prim94277, align 8
%stackaddr$prim94278 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92865)
store volatile %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$prim94278, align 8
%stackaddr$makeclosure94279 = alloca %struct.ScmObj*, align 8
%fptrToInt94280 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48782 to i64
%ae48782 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt94280)
store volatile %struct.ScmObj* %ae48782, %struct.ScmObj** %stackaddr$makeclosure94279, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48782, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48782, %struct.ScmObj* %_37map148049, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae48782, %struct.ScmObj* %Ycmb48032, i64 2)
%ae48783 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94281 = alloca %struct.ScmObj*, align 8
%fptrToInt94282 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48784 to i64
%ae48784 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94282)
store volatile %struct.ScmObj* %ae48784, %struct.ScmObj** %stackaddr$makeclosure94281, align 8
%argslist94139$ae487820 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94283 = alloca %struct.ScmObj*, align 8
%argslist94139$ae487821 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48784, %struct.ScmObj* %argslist94139$ae487820)
store volatile %struct.ScmObj* %argslist94139$ae487821, %struct.ScmObj** %stackaddr$prim94283, align 8
%stackaddr$prim94284 = alloca %struct.ScmObj*, align 8
%argslist94139$ae487822 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48783, %struct.ScmObj* %argslist94139$ae487821)
store volatile %struct.ScmObj* %argslist94139$ae487822, %struct.ScmObj** %stackaddr$prim94284, align 8
%clofunc94285 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48782)
musttail call tailcc void %clofunc94285(%struct.ScmObj* %ae48782, %struct.ScmObj* %argslist94139$ae487822)
ret void
}

define tailcc void @proc_clo$ae48782(%struct.ScmObj* %env$ae48782,%struct.ScmObj* %current_45args92867) {
%stackaddr$env-ref94286 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48782, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94286
%stackaddr$env-ref94287 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48782, i64 1)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref94287
%stackaddr$env-ref94288 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48782, i64 2)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94288
%stackaddr$prim94289 = alloca %struct.ScmObj*, align 8
%_95k48301 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92867)
store volatile %struct.ScmObj* %_95k48301, %struct.ScmObj** %stackaddr$prim94289, align 8
%stackaddr$prim94290 = alloca %struct.ScmObj*, align 8
%current_45args92868 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92867)
store volatile %struct.ScmObj* %current_45args92868, %struct.ScmObj** %stackaddr$prim94290, align 8
%stackaddr$prim94291 = alloca %struct.ScmObj*, align 8
%anf_45bind48180 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92868)
store volatile %struct.ScmObj* %anf_45bind48180, %struct.ScmObj** %stackaddr$prim94291, align 8
%stackaddr$makeclosure94292 = alloca %struct.ScmObj*, align 8
%fptrToInt94293 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48930 to i64
%ae48930 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt94293)
store volatile %struct.ScmObj* %ae48930, %struct.ScmObj** %stackaddr$makeclosure94292, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48930, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48930, %struct.ScmObj* %_37map148049, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae48930, %struct.ScmObj* %Ycmb48032, i64 2)
%argslist94123$Ycmb480320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94294 = alloca %struct.ScmObj*, align 8
%argslist94123$Ycmb480321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48180, %struct.ScmObj* %argslist94123$Ycmb480320)
store volatile %struct.ScmObj* %argslist94123$Ycmb480321, %struct.ScmObj** %stackaddr$prim94294, align 8
%stackaddr$prim94295 = alloca %struct.ScmObj*, align 8
%argslist94123$Ycmb480322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48930, %struct.ScmObj* %argslist94123$Ycmb480321)
store volatile %struct.ScmObj* %argslist94123$Ycmb480322, %struct.ScmObj** %stackaddr$prim94295, align 8
%clofunc94296 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb48032)
musttail call tailcc void %clofunc94296(%struct.ScmObj* %Ycmb48032, %struct.ScmObj* %argslist94123$Ycmb480322)
ret void
}

define tailcc void @proc_clo$ae48930(%struct.ScmObj* %env$ae48930,%struct.ScmObj* %current_45args92870) {
%stackaddr$env-ref94297 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48930, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94297
%stackaddr$env-ref94298 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48930, i64 1)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref94298
%stackaddr$env-ref94299 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48930, i64 2)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94299
%stackaddr$prim94300 = alloca %struct.ScmObj*, align 8
%_95k48302 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92870)
store volatile %struct.ScmObj* %_95k48302, %struct.ScmObj** %stackaddr$prim94300, align 8
%stackaddr$prim94301 = alloca %struct.ScmObj*, align 8
%current_45args92871 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92870)
store volatile %struct.ScmObj* %current_45args92871, %struct.ScmObj** %stackaddr$prim94301, align 8
%stackaddr$prim94302 = alloca %struct.ScmObj*, align 8
%_37take48045 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92871)
store volatile %struct.ScmObj* %_37take48045, %struct.ScmObj** %stackaddr$prim94302, align 8
%stackaddr$makeclosure94303 = alloca %struct.ScmObj*, align 8
%fptrToInt94304 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48932 to i64
%ae48932 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt94304)
store volatile %struct.ScmObj* %ae48932, %struct.ScmObj** %stackaddr$makeclosure94303, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48932, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48932, %struct.ScmObj* %_37map148049, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae48932, %struct.ScmObj* %Ycmb48032, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae48932, %struct.ScmObj* %_37take48045, i64 3)
%ae48933 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94305 = alloca %struct.ScmObj*, align 8
%fptrToInt94306 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48934 to i64
%ae48934 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94306)
store volatile %struct.ScmObj* %ae48934, %struct.ScmObj** %stackaddr$makeclosure94305, align 8
%argslist94122$ae489320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94307 = alloca %struct.ScmObj*, align 8
%argslist94122$ae489321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48934, %struct.ScmObj* %argslist94122$ae489320)
store volatile %struct.ScmObj* %argslist94122$ae489321, %struct.ScmObj** %stackaddr$prim94307, align 8
%stackaddr$prim94308 = alloca %struct.ScmObj*, align 8
%argslist94122$ae489322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48933, %struct.ScmObj* %argslist94122$ae489321)
store volatile %struct.ScmObj* %argslist94122$ae489322, %struct.ScmObj** %stackaddr$prim94308, align 8
%clofunc94309 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48932)
musttail call tailcc void %clofunc94309(%struct.ScmObj* %ae48932, %struct.ScmObj* %argslist94122$ae489322)
ret void
}

define tailcc void @proc_clo$ae48932(%struct.ScmObj* %env$ae48932,%struct.ScmObj* %current_45args92873) {
%stackaddr$env-ref94310 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48932, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94310
%stackaddr$env-ref94311 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48932, i64 1)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref94311
%stackaddr$env-ref94312 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48932, i64 2)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94312
%stackaddr$env-ref94313 = alloca %struct.ScmObj*, align 8
%_37take48045 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48932, i64 3)
store %struct.ScmObj* %_37take48045, %struct.ScmObj** %stackaddr$env-ref94313
%stackaddr$prim94314 = alloca %struct.ScmObj*, align 8
%_95k48303 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92873)
store volatile %struct.ScmObj* %_95k48303, %struct.ScmObj** %stackaddr$prim94314, align 8
%stackaddr$prim94315 = alloca %struct.ScmObj*, align 8
%current_45args92874 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92873)
store volatile %struct.ScmObj* %current_45args92874, %struct.ScmObj** %stackaddr$prim94315, align 8
%stackaddr$prim94316 = alloca %struct.ScmObj*, align 8
%anf_45bind48184 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92874)
store volatile %struct.ScmObj* %anf_45bind48184, %struct.ScmObj** %stackaddr$prim94316, align 8
%stackaddr$makeclosure94317 = alloca %struct.ScmObj*, align 8
%fptrToInt94318 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49013 to i64
%ae49013 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt94318)
store volatile %struct.ScmObj* %ae49013, %struct.ScmObj** %stackaddr$makeclosure94317, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49013, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49013, %struct.ScmObj* %_37map148049, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49013, %struct.ScmObj* %Ycmb48032, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49013, %struct.ScmObj* %_37take48045, i64 3)
%argslist94108$Ycmb480320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94319 = alloca %struct.ScmObj*, align 8
%argslist94108$Ycmb480321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48184, %struct.ScmObj* %argslist94108$Ycmb480320)
store volatile %struct.ScmObj* %argslist94108$Ycmb480321, %struct.ScmObj** %stackaddr$prim94319, align 8
%stackaddr$prim94320 = alloca %struct.ScmObj*, align 8
%argslist94108$Ycmb480322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49013, %struct.ScmObj* %argslist94108$Ycmb480321)
store volatile %struct.ScmObj* %argslist94108$Ycmb480322, %struct.ScmObj** %stackaddr$prim94320, align 8
%clofunc94321 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb48032)
musttail call tailcc void %clofunc94321(%struct.ScmObj* %Ycmb48032, %struct.ScmObj* %argslist94108$Ycmb480322)
ret void
}

define tailcc void @proc_clo$ae49013(%struct.ScmObj* %env$ae49013,%struct.ScmObj* %current_45args92876) {
%stackaddr$env-ref94322 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49013, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94322
%stackaddr$env-ref94323 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49013, i64 1)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref94323
%stackaddr$env-ref94324 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49013, i64 2)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94324
%stackaddr$env-ref94325 = alloca %struct.ScmObj*, align 8
%_37take48045 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49013, i64 3)
store %struct.ScmObj* %_37take48045, %struct.ScmObj** %stackaddr$env-ref94325
%stackaddr$prim94326 = alloca %struct.ScmObj*, align 8
%_95k48304 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92876)
store volatile %struct.ScmObj* %_95k48304, %struct.ScmObj** %stackaddr$prim94326, align 8
%stackaddr$prim94327 = alloca %struct.ScmObj*, align 8
%current_45args92877 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92876)
store volatile %struct.ScmObj* %current_45args92877, %struct.ScmObj** %stackaddr$prim94327, align 8
%stackaddr$prim94328 = alloca %struct.ScmObj*, align 8
%_37length48042 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92877)
store volatile %struct.ScmObj* %_37length48042, %struct.ScmObj** %stackaddr$prim94328, align 8
%stackaddr$makeclosure94329 = alloca %struct.ScmObj*, align 8
%fptrToInt94330 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49015 to i64
%ae49015 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt94330)
store volatile %struct.ScmObj* %ae49015, %struct.ScmObj** %stackaddr$makeclosure94329, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49015, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49015, %struct.ScmObj* %_37map148049, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49015, %struct.ScmObj* %Ycmb48032, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49015, %struct.ScmObj* %_37take48045, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49015, %struct.ScmObj* %_37length48042, i64 4)
%ae49016 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94331 = alloca %struct.ScmObj*, align 8
%fptrToInt94332 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49017 to i64
%ae49017 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94332)
store volatile %struct.ScmObj* %ae49017, %struct.ScmObj** %stackaddr$makeclosure94331, align 8
%argslist94107$ae490150 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94333 = alloca %struct.ScmObj*, align 8
%argslist94107$ae490151 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49017, %struct.ScmObj* %argslist94107$ae490150)
store volatile %struct.ScmObj* %argslist94107$ae490151, %struct.ScmObj** %stackaddr$prim94333, align 8
%stackaddr$prim94334 = alloca %struct.ScmObj*, align 8
%argslist94107$ae490152 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49016, %struct.ScmObj* %argslist94107$ae490151)
store volatile %struct.ScmObj* %argslist94107$ae490152, %struct.ScmObj** %stackaddr$prim94334, align 8
%clofunc94335 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49015)
musttail call tailcc void %clofunc94335(%struct.ScmObj* %ae49015, %struct.ScmObj* %argslist94107$ae490152)
ret void
}

define tailcc void @proc_clo$ae49015(%struct.ScmObj* %env$ae49015,%struct.ScmObj* %current_45args92879) {
%stackaddr$env-ref94336 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49015, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94336
%stackaddr$env-ref94337 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49015, i64 1)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref94337
%stackaddr$env-ref94338 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49015, i64 2)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94338
%stackaddr$env-ref94339 = alloca %struct.ScmObj*, align 8
%_37take48045 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49015, i64 3)
store %struct.ScmObj* %_37take48045, %struct.ScmObj** %stackaddr$env-ref94339
%stackaddr$env-ref94340 = alloca %struct.ScmObj*, align 8
%_37length48042 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49015, i64 4)
store %struct.ScmObj* %_37length48042, %struct.ScmObj** %stackaddr$env-ref94340
%stackaddr$prim94341 = alloca %struct.ScmObj*, align 8
%_95k48305 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92879)
store volatile %struct.ScmObj* %_95k48305, %struct.ScmObj** %stackaddr$prim94341, align 8
%stackaddr$prim94342 = alloca %struct.ScmObj*, align 8
%current_45args92880 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92879)
store volatile %struct.ScmObj* %current_45args92880, %struct.ScmObj** %stackaddr$prim94342, align 8
%stackaddr$prim94343 = alloca %struct.ScmObj*, align 8
%anf_45bind48189 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92880)
store volatile %struct.ScmObj* %anf_45bind48189, %struct.ScmObj** %stackaddr$prim94343, align 8
%stackaddr$makeclosure94344 = alloca %struct.ScmObj*, align 8
%fptrToInt94345 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49092 to i64
%ae49092 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt94345)
store volatile %struct.ScmObj* %ae49092, %struct.ScmObj** %stackaddr$makeclosure94344, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49092, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49092, %struct.ScmObj* %_37map148049, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49092, %struct.ScmObj* %Ycmb48032, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49092, %struct.ScmObj* %_37take48045, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49092, %struct.ScmObj* %_37length48042, i64 4)
%argslist94091$Ycmb480320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94346 = alloca %struct.ScmObj*, align 8
%argslist94091$Ycmb480321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48189, %struct.ScmObj* %argslist94091$Ycmb480320)
store volatile %struct.ScmObj* %argslist94091$Ycmb480321, %struct.ScmObj** %stackaddr$prim94346, align 8
%stackaddr$prim94347 = alloca %struct.ScmObj*, align 8
%argslist94091$Ycmb480322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49092, %struct.ScmObj* %argslist94091$Ycmb480321)
store volatile %struct.ScmObj* %argslist94091$Ycmb480322, %struct.ScmObj** %stackaddr$prim94347, align 8
%clofunc94348 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb48032)
musttail call tailcc void %clofunc94348(%struct.ScmObj* %Ycmb48032, %struct.ScmObj* %argslist94091$Ycmb480322)
ret void
}

define tailcc void @proc_clo$ae49092(%struct.ScmObj* %env$ae49092,%struct.ScmObj* %current_45args92882) {
%stackaddr$env-ref94349 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49092, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94349
%stackaddr$env-ref94350 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49092, i64 1)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref94350
%stackaddr$env-ref94351 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49092, i64 2)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94351
%stackaddr$env-ref94352 = alloca %struct.ScmObj*, align 8
%_37take48045 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49092, i64 3)
store %struct.ScmObj* %_37take48045, %struct.ScmObj** %stackaddr$env-ref94352
%stackaddr$env-ref94353 = alloca %struct.ScmObj*, align 8
%_37length48042 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49092, i64 4)
store %struct.ScmObj* %_37length48042, %struct.ScmObj** %stackaddr$env-ref94353
%stackaddr$prim94354 = alloca %struct.ScmObj*, align 8
%_95k48306 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92882)
store volatile %struct.ScmObj* %_95k48306, %struct.ScmObj** %stackaddr$prim94354, align 8
%stackaddr$prim94355 = alloca %struct.ScmObj*, align 8
%current_45args92883 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92882)
store volatile %struct.ScmObj* %current_45args92883, %struct.ScmObj** %stackaddr$prim94355, align 8
%stackaddr$prim94356 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92883)
store volatile %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$prim94356, align 8
%stackaddr$makeclosure94357 = alloca %struct.ScmObj*, align 8
%fptrToInt94358 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49094 to i64
%ae49094 = call %struct.ScmObj* @closure_alloc(i64 6, i64 %fptrToInt94358)
store volatile %struct.ScmObj* %ae49094, %struct.ScmObj** %stackaddr$makeclosure94357, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49094, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49094, %struct.ScmObj* %_37foldl148037, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49094, %struct.ScmObj* %_37map148049, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49094, %struct.ScmObj* %Ycmb48032, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49094, %struct.ScmObj* %_37take48045, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49094, %struct.ScmObj* %_37length48042, i64 5)
%ae49095 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94359 = alloca %struct.ScmObj*, align 8
%fptrToInt94360 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49096 to i64
%ae49096 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94360)
store volatile %struct.ScmObj* %ae49096, %struct.ScmObj** %stackaddr$makeclosure94359, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49096, %struct.ScmObj* %_37foldl148037, i64 0)
%argslist94090$ae490940 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94361 = alloca %struct.ScmObj*, align 8
%argslist94090$ae490941 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49096, %struct.ScmObj* %argslist94090$ae490940)
store volatile %struct.ScmObj* %argslist94090$ae490941, %struct.ScmObj** %stackaddr$prim94361, align 8
%stackaddr$prim94362 = alloca %struct.ScmObj*, align 8
%argslist94090$ae490942 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49095, %struct.ScmObj* %argslist94090$ae490941)
store volatile %struct.ScmObj* %argslist94090$ae490942, %struct.ScmObj** %stackaddr$prim94362, align 8
%clofunc94363 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49094)
musttail call tailcc void %clofunc94363(%struct.ScmObj* %ae49094, %struct.ScmObj* %argslist94090$ae490942)
ret void
}

define tailcc void @proc_clo$ae49094(%struct.ScmObj* %env$ae49094,%struct.ScmObj* %current_45args92885) {
%stackaddr$env-ref94364 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49094, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94364
%stackaddr$env-ref94365 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49094, i64 1)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94365
%stackaddr$env-ref94366 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49094, i64 2)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref94366
%stackaddr$env-ref94367 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49094, i64 3)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94367
%stackaddr$env-ref94368 = alloca %struct.ScmObj*, align 8
%_37take48045 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49094, i64 4)
store %struct.ScmObj* %_37take48045, %struct.ScmObj** %stackaddr$env-ref94368
%stackaddr$env-ref94369 = alloca %struct.ScmObj*, align 8
%_37length48042 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49094, i64 5)
store %struct.ScmObj* %_37length48042, %struct.ScmObj** %stackaddr$env-ref94369
%stackaddr$prim94370 = alloca %struct.ScmObj*, align 8
%_95k48307 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92885)
store volatile %struct.ScmObj* %_95k48307, %struct.ScmObj** %stackaddr$prim94370, align 8
%stackaddr$prim94371 = alloca %struct.ScmObj*, align 8
%current_45args92886 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92885)
store volatile %struct.ScmObj* %current_45args92886, %struct.ScmObj** %stackaddr$prim94371, align 8
%stackaddr$prim94372 = alloca %struct.ScmObj*, align 8
%_37last48075 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92886)
store volatile %struct.ScmObj* %_37last48075, %struct.ScmObj** %stackaddr$prim94372, align 8
%stackaddr$makeclosure94373 = alloca %struct.ScmObj*, align 8
%fptrToInt94374 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49148 to i64
%ae49148 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt94374)
store volatile %struct.ScmObj* %ae49148, %struct.ScmObj** %stackaddr$makeclosure94373, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49148, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49148, %struct.ScmObj* %_37foldl148037, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49148, %struct.ScmObj* %_37map148049, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49148, %struct.ScmObj* %Ycmb48032, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49148, %struct.ScmObj* %_37last48075, i64 4)
%ae49149 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94375 = alloca %struct.ScmObj*, align 8
%fptrToInt94376 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49150 to i64
%ae49150 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94376)
store volatile %struct.ScmObj* %ae49150, %struct.ScmObj** %stackaddr$makeclosure94375, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49150, %struct.ScmObj* %_37take48045, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49150, %struct.ScmObj* %_37length48042, i64 1)
%argslist94076$ae491480 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94377 = alloca %struct.ScmObj*, align 8
%argslist94076$ae491481 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49150, %struct.ScmObj* %argslist94076$ae491480)
store volatile %struct.ScmObj* %argslist94076$ae491481, %struct.ScmObj** %stackaddr$prim94377, align 8
%stackaddr$prim94378 = alloca %struct.ScmObj*, align 8
%argslist94076$ae491482 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49149, %struct.ScmObj* %argslist94076$ae491481)
store volatile %struct.ScmObj* %argslist94076$ae491482, %struct.ScmObj** %stackaddr$prim94378, align 8
%clofunc94379 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49148)
musttail call tailcc void %clofunc94379(%struct.ScmObj* %ae49148, %struct.ScmObj* %argslist94076$ae491482)
ret void
}

define tailcc void @proc_clo$ae49148(%struct.ScmObj* %env$ae49148,%struct.ScmObj* %current_45args92888) {
%stackaddr$env-ref94380 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49148, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94380
%stackaddr$env-ref94381 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49148, i64 1)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94381
%stackaddr$env-ref94382 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49148, i64 2)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref94382
%stackaddr$env-ref94383 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49148, i64 3)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94383
%stackaddr$env-ref94384 = alloca %struct.ScmObj*, align 8
%_37last48075 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49148, i64 4)
store %struct.ScmObj* %_37last48075, %struct.ScmObj** %stackaddr$env-ref94384
%stackaddr$prim94385 = alloca %struct.ScmObj*, align 8
%_95k48308 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92888)
store volatile %struct.ScmObj* %_95k48308, %struct.ScmObj** %stackaddr$prim94385, align 8
%stackaddr$prim94386 = alloca %struct.ScmObj*, align 8
%current_45args92889 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92888)
store volatile %struct.ScmObj* %current_45args92889, %struct.ScmObj** %stackaddr$prim94386, align 8
%stackaddr$prim94387 = alloca %struct.ScmObj*, align 8
%_37drop_45right48072 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92889)
store volatile %struct.ScmObj* %_37drop_45right48072, %struct.ScmObj** %stackaddr$prim94387, align 8
%stackaddr$makeclosure94388 = alloca %struct.ScmObj*, align 8
%fptrToInt94389 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49178 to i64
%ae49178 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt94389)
store volatile %struct.ScmObj* %ae49178, %struct.ScmObj** %stackaddr$makeclosure94388, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49178, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49178, %struct.ScmObj* %_37foldl148037, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49178, %struct.ScmObj* %_37drop_45right48072, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49178, %struct.ScmObj* %Ycmb48032, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49178, %struct.ScmObj* %_37last48075, i64 4)
%ae49179 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94390 = alloca %struct.ScmObj*, align 8
%fptrToInt94391 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49180 to i64
%ae49180 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94391)
store volatile %struct.ScmObj* %ae49180, %struct.ScmObj** %stackaddr$makeclosure94390, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49180, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49180, %struct.ScmObj* %_37map148049, i64 1)
%argslist94066$ae491780 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94392 = alloca %struct.ScmObj*, align 8
%argslist94066$ae491781 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49180, %struct.ScmObj* %argslist94066$ae491780)
store volatile %struct.ScmObj* %argslist94066$ae491781, %struct.ScmObj** %stackaddr$prim94392, align 8
%stackaddr$prim94393 = alloca %struct.ScmObj*, align 8
%argslist94066$ae491782 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49179, %struct.ScmObj* %argslist94066$ae491781)
store volatile %struct.ScmObj* %argslist94066$ae491782, %struct.ScmObj** %stackaddr$prim94393, align 8
%clofunc94394 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49178)
musttail call tailcc void %clofunc94394(%struct.ScmObj* %ae49178, %struct.ScmObj* %argslist94066$ae491782)
ret void
}

define tailcc void @proc_clo$ae49178(%struct.ScmObj* %env$ae49178,%struct.ScmObj* %current_45args92891) {
%stackaddr$env-ref94395 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49178, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94395
%stackaddr$env-ref94396 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49178, i64 1)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94396
%stackaddr$env-ref94397 = alloca %struct.ScmObj*, align 8
%_37drop_45right48072 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49178, i64 2)
store %struct.ScmObj* %_37drop_45right48072, %struct.ScmObj** %stackaddr$env-ref94397
%stackaddr$env-ref94398 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49178, i64 3)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94398
%stackaddr$env-ref94399 = alloca %struct.ScmObj*, align 8
%_37last48075 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49178, i64 4)
store %struct.ScmObj* %_37last48075, %struct.ScmObj** %stackaddr$env-ref94399
%stackaddr$prim94400 = alloca %struct.ScmObj*, align 8
%_95k48309 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92891)
store volatile %struct.ScmObj* %_95k48309, %struct.ScmObj** %stackaddr$prim94400, align 8
%stackaddr$prim94401 = alloca %struct.ScmObj*, align 8
%current_45args92892 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92891)
store volatile %struct.ScmObj* %current_45args92892, %struct.ScmObj** %stackaddr$prim94401, align 8
%stackaddr$prim94402 = alloca %struct.ScmObj*, align 8
%anf_45bind48205 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92892)
store volatile %struct.ScmObj* %anf_45bind48205, %struct.ScmObj** %stackaddr$prim94402, align 8
%stackaddr$makeclosure94403 = alloca %struct.ScmObj*, align 8
%fptrToInt94404 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49562 to i64
%ae49562 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt94404)
store volatile %struct.ScmObj* %ae49562, %struct.ScmObj** %stackaddr$makeclosure94403, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49562, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49562, %struct.ScmObj* %_37foldl148037, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49562, %struct.ScmObj* %_37drop_45right48072, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49562, %struct.ScmObj* %Ycmb48032, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49562, %struct.ScmObj* %_37last48075, i64 4)
%argslist94006$Ycmb480320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94405 = alloca %struct.ScmObj*, align 8
%argslist94006$Ycmb480321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48205, %struct.ScmObj* %argslist94006$Ycmb480320)
store volatile %struct.ScmObj* %argslist94006$Ycmb480321, %struct.ScmObj** %stackaddr$prim94405, align 8
%stackaddr$prim94406 = alloca %struct.ScmObj*, align 8
%argslist94006$Ycmb480322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49562, %struct.ScmObj* %argslist94006$Ycmb480321)
store volatile %struct.ScmObj* %argslist94006$Ycmb480322, %struct.ScmObj** %stackaddr$prim94406, align 8
%clofunc94407 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb48032)
musttail call tailcc void %clofunc94407(%struct.ScmObj* %Ycmb48032, %struct.ScmObj* %argslist94006$Ycmb480322)
ret void
}

define tailcc void @proc_clo$ae49562(%struct.ScmObj* %env$ae49562,%struct.ScmObj* %current_45args92894) {
%stackaddr$env-ref94408 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49562, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94408
%stackaddr$env-ref94409 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49562, i64 1)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94409
%stackaddr$env-ref94410 = alloca %struct.ScmObj*, align 8
%_37drop_45right48072 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49562, i64 2)
store %struct.ScmObj* %_37drop_45right48072, %struct.ScmObj** %stackaddr$env-ref94410
%stackaddr$env-ref94411 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49562, i64 3)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94411
%stackaddr$env-ref94412 = alloca %struct.ScmObj*, align 8
%_37last48075 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49562, i64 4)
store %struct.ScmObj* %_37last48075, %struct.ScmObj** %stackaddr$env-ref94412
%stackaddr$prim94413 = alloca %struct.ScmObj*, align 8
%_95k48310 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92894)
store volatile %struct.ScmObj* %_95k48310, %struct.ScmObj** %stackaddr$prim94413, align 8
%stackaddr$prim94414 = alloca %struct.ScmObj*, align 8
%current_45args92895 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92894)
store volatile %struct.ScmObj* %current_45args92895, %struct.ScmObj** %stackaddr$prim94414, align 8
%stackaddr$prim94415 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92895)
store volatile %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$prim94415, align 8
%stackaddr$makeclosure94416 = alloca %struct.ScmObj*, align 8
%fptrToInt94417 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49564 to i64
%ae49564 = call %struct.ScmObj* @closure_alloc(i64 6, i64 %fptrToInt94417)
store volatile %struct.ScmObj* %ae49564, %struct.ScmObj** %stackaddr$makeclosure94416, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49564, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49564, %struct.ScmObj* %_37foldl148037, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49564, %struct.ScmObj* %_37drop_45right48072, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49564, %struct.ScmObj* %Ycmb48032, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49564, %struct.ScmObj* %_37last48075, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49564, %struct.ScmObj* %_37foldr48058, i64 5)
%ae49565 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94418 = alloca %struct.ScmObj*, align 8
%fptrToInt94419 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49566 to i64
%ae49566 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94419)
store volatile %struct.ScmObj* %ae49566, %struct.ScmObj** %stackaddr$makeclosure94418, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49566, %struct.ScmObj* %_37foldr148053, i64 0)
%argslist94005$ae495640 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94420 = alloca %struct.ScmObj*, align 8
%argslist94005$ae495641 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49566, %struct.ScmObj* %argslist94005$ae495640)
store volatile %struct.ScmObj* %argslist94005$ae495641, %struct.ScmObj** %stackaddr$prim94420, align 8
%stackaddr$prim94421 = alloca %struct.ScmObj*, align 8
%argslist94005$ae495642 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49565, %struct.ScmObj* %argslist94005$ae495641)
store volatile %struct.ScmObj* %argslist94005$ae495642, %struct.ScmObj** %stackaddr$prim94421, align 8
%clofunc94422 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49564)
musttail call tailcc void %clofunc94422(%struct.ScmObj* %ae49564, %struct.ScmObj* %argslist94005$ae495642)
ret void
}

define tailcc void @proc_clo$ae49564(%struct.ScmObj* %env$ae49564,%struct.ScmObj* %current_45args92897) {
%stackaddr$env-ref94423 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49564, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94423
%stackaddr$env-ref94424 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49564, i64 1)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94424
%stackaddr$env-ref94425 = alloca %struct.ScmObj*, align 8
%_37drop_45right48072 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49564, i64 2)
store %struct.ScmObj* %_37drop_45right48072, %struct.ScmObj** %stackaddr$env-ref94425
%stackaddr$env-ref94426 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49564, i64 3)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94426
%stackaddr$env-ref94427 = alloca %struct.ScmObj*, align 8
%_37last48075 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49564, i64 4)
store %struct.ScmObj* %_37last48075, %struct.ScmObj** %stackaddr$env-ref94427
%stackaddr$env-ref94428 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49564, i64 5)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref94428
%stackaddr$prim94429 = alloca %struct.ScmObj*, align 8
%_95k48311 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92897)
store volatile %struct.ScmObj* %_95k48311, %struct.ScmObj** %stackaddr$prim94429, align 8
%stackaddr$prim94430 = alloca %struct.ScmObj*, align 8
%current_45args92898 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92897)
store volatile %struct.ScmObj* %current_45args92898, %struct.ScmObj** %stackaddr$prim94430, align 8
%stackaddr$prim94431 = alloca %struct.ScmObj*, align 8
%_37map148084 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92898)
store volatile %struct.ScmObj* %_37map148084, %struct.ScmObj** %stackaddr$prim94431, align 8
%stackaddr$makeclosure94432 = alloca %struct.ScmObj*, align 8
%fptrToInt94433 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49641 to i64
%ae49641 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt94433)
store volatile %struct.ScmObj* %ae49641, %struct.ScmObj** %stackaddr$makeclosure94432, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49641, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49641, %struct.ScmObj* %_37foldl148037, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49641, %struct.ScmObj* %_37map148084, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49641, %struct.ScmObj* %Ycmb48032, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49641, %struct.ScmObj* %_37foldr48058, i64 4)
%ae49642 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94434 = alloca %struct.ScmObj*, align 8
%fptrToInt94435 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49643 to i64
%ae49643 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt94435)
store volatile %struct.ScmObj* %ae49643, %struct.ScmObj** %stackaddr$makeclosure94434, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49643, %struct.ScmObj* %_37drop_45right48072, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49643, %struct.ScmObj* %_37last48075, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49643, %struct.ScmObj* %_37foldr48058, i64 2)
%argslist93986$ae496410 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94436 = alloca %struct.ScmObj*, align 8
%argslist93986$ae496411 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49643, %struct.ScmObj* %argslist93986$ae496410)
store volatile %struct.ScmObj* %argslist93986$ae496411, %struct.ScmObj** %stackaddr$prim94436, align 8
%stackaddr$prim94437 = alloca %struct.ScmObj*, align 8
%argslist93986$ae496412 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49642, %struct.ScmObj* %argslist93986$ae496411)
store volatile %struct.ScmObj* %argslist93986$ae496412, %struct.ScmObj** %stackaddr$prim94437, align 8
%clofunc94438 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49641)
musttail call tailcc void %clofunc94438(%struct.ScmObj* %ae49641, %struct.ScmObj* %argslist93986$ae496412)
ret void
}

define tailcc void @proc_clo$ae49641(%struct.ScmObj* %env$ae49641,%struct.ScmObj* %current_45args92900) {
%stackaddr$env-ref94439 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49641, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref94439
%stackaddr$env-ref94440 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49641, i64 1)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94440
%stackaddr$env-ref94441 = alloca %struct.ScmObj*, align 8
%_37map148084 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49641, i64 2)
store %struct.ScmObj* %_37map148084, %struct.ScmObj** %stackaddr$env-ref94441
%stackaddr$env-ref94442 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49641, i64 3)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94442
%stackaddr$env-ref94443 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49641, i64 4)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref94443
%stackaddr$prim94444 = alloca %struct.ScmObj*, align 8
%_95k48312 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92900)
store volatile %struct.ScmObj* %_95k48312, %struct.ScmObj** %stackaddr$prim94444, align 8
%stackaddr$prim94445 = alloca %struct.ScmObj*, align 8
%current_45args92901 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92900)
store volatile %struct.ScmObj* %current_45args92901, %struct.ScmObj** %stackaddr$prim94445, align 8
%stackaddr$prim94446 = alloca %struct.ScmObj*, align 8
%_37map48079 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92901)
store volatile %struct.ScmObj* %_37map48079, %struct.ScmObj** %stackaddr$prim94446, align 8
%stackaddr$makeclosure94447 = alloca %struct.ScmObj*, align 8
%fptrToInt94448 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49787 to i64
%ae49787 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94448)
store volatile %struct.ScmObj* %ae49787, %struct.ScmObj** %stackaddr$makeclosure94447, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49787, %struct.ScmObj* %_37foldl148037, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49787, %struct.ScmObj* %Ycmb48032, i64 1)
%ae49788 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94449 = alloca %struct.ScmObj*, align 8
%fptrToInt94450 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49789 to i64
%ae49789 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt94450)
store volatile %struct.ScmObj* %ae49789, %struct.ScmObj** %stackaddr$makeclosure94449, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49789, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49789, %struct.ScmObj* %_37map148084, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49789, %struct.ScmObj* %_37foldr48058, i64 2)
%argslist93969$ae497870 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94451 = alloca %struct.ScmObj*, align 8
%argslist93969$ae497871 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49789, %struct.ScmObj* %argslist93969$ae497870)
store volatile %struct.ScmObj* %argslist93969$ae497871, %struct.ScmObj** %stackaddr$prim94451, align 8
%stackaddr$prim94452 = alloca %struct.ScmObj*, align 8
%argslist93969$ae497872 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49788, %struct.ScmObj* %argslist93969$ae497871)
store volatile %struct.ScmObj* %argslist93969$ae497872, %struct.ScmObj** %stackaddr$prim94452, align 8
%clofunc94453 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49787)
musttail call tailcc void %clofunc94453(%struct.ScmObj* %ae49787, %struct.ScmObj* %argslist93969$ae497872)
ret void
}

define tailcc void @proc_clo$ae49787(%struct.ScmObj* %env$ae49787,%struct.ScmObj* %current_45args92903) {
%stackaddr$env-ref94454 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49787, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94454
%stackaddr$env-ref94455 = alloca %struct.ScmObj*, align 8
%Ycmb48032 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49787, i64 1)
store %struct.ScmObj* %Ycmb48032, %struct.ScmObj** %stackaddr$env-ref94455
%stackaddr$prim94456 = alloca %struct.ScmObj*, align 8
%_95k48313 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92903)
store volatile %struct.ScmObj* %_95k48313, %struct.ScmObj** %stackaddr$prim94456, align 8
%stackaddr$prim94457 = alloca %struct.ScmObj*, align 8
%current_45args92904 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92903)
store volatile %struct.ScmObj* %current_45args92904, %struct.ScmObj** %stackaddr$prim94457, align 8
%stackaddr$prim94458 = alloca %struct.ScmObj*, align 8
%anf_45bind48225 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92904)
store volatile %struct.ScmObj* %anf_45bind48225, %struct.ScmObj** %stackaddr$prim94458, align 8
%stackaddr$makeclosure94459 = alloca %struct.ScmObj*, align 8
%fptrToInt94460 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50179 to i64
%ae50179 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94460)
store volatile %struct.ScmObj* %ae50179, %struct.ScmObj** %stackaddr$makeclosure94459, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50179, %struct.ScmObj* %_37foldl148037, i64 0)
%argslist93909$Ycmb480320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94461 = alloca %struct.ScmObj*, align 8
%argslist93909$Ycmb480321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48225, %struct.ScmObj* %argslist93909$Ycmb480320)
store volatile %struct.ScmObj* %argslist93909$Ycmb480321, %struct.ScmObj** %stackaddr$prim94461, align 8
%stackaddr$prim94462 = alloca %struct.ScmObj*, align 8
%argslist93909$Ycmb480322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50179, %struct.ScmObj* %argslist93909$Ycmb480321)
store volatile %struct.ScmObj* %argslist93909$Ycmb480322, %struct.ScmObj** %stackaddr$prim94462, align 8
%clofunc94463 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb48032)
musttail call tailcc void %clofunc94463(%struct.ScmObj* %Ycmb48032, %struct.ScmObj* %argslist93909$Ycmb480322)
ret void
}

define tailcc void @proc_clo$ae50179(%struct.ScmObj* %env$ae50179,%struct.ScmObj* %current_45args92906) {
%stackaddr$env-ref94464 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50179, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94464
%stackaddr$prim94465 = alloca %struct.ScmObj*, align 8
%_95k48314 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92906)
store volatile %struct.ScmObj* %_95k48314, %struct.ScmObj** %stackaddr$prim94465, align 8
%stackaddr$prim94466 = alloca %struct.ScmObj*, align 8
%current_45args92907 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92906)
store volatile %struct.ScmObj* %current_45args92907, %struct.ScmObj** %stackaddr$prim94466, align 8
%stackaddr$prim94467 = alloca %struct.ScmObj*, align 8
%_37foldl48135 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92907)
store volatile %struct.ScmObj* %_37foldl48135, %struct.ScmObj** %stackaddr$prim94467, align 8
%stackaddr$makeclosure94468 = alloca %struct.ScmObj*, align 8
%fptrToInt94469 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50181 to i64
%ae50181 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94469)
store volatile %struct.ScmObj* %ae50181, %struct.ScmObj** %stackaddr$makeclosure94468, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50181, %struct.ScmObj* %_37foldl148037, i64 0)
%ae50182 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94470 = alloca %struct.ScmObj*, align 8
%fptrToInt94471 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50183 to i64
%ae50183 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94471)
store volatile %struct.ScmObj* %ae50183, %struct.ScmObj** %stackaddr$makeclosure94470, align 8
%argslist93908$ae501810 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94472 = alloca %struct.ScmObj*, align 8
%argslist93908$ae501811 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50183, %struct.ScmObj* %argslist93908$ae501810)
store volatile %struct.ScmObj* %argslist93908$ae501811, %struct.ScmObj** %stackaddr$prim94472, align 8
%stackaddr$prim94473 = alloca %struct.ScmObj*, align 8
%argslist93908$ae501812 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50182, %struct.ScmObj* %argslist93908$ae501811)
store volatile %struct.ScmObj* %argslist93908$ae501812, %struct.ScmObj** %stackaddr$prim94473, align 8
%clofunc94474 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50181)
musttail call tailcc void %clofunc94474(%struct.ScmObj* %ae50181, %struct.ScmObj* %argslist93908$ae501812)
ret void
}

define tailcc void @proc_clo$ae50181(%struct.ScmObj* %env$ae50181,%struct.ScmObj* %current_45args92909) {
%stackaddr$env-ref94475 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50181, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94475
%stackaddr$prim94476 = alloca %struct.ScmObj*, align 8
%_95k48315 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92909)
store volatile %struct.ScmObj* %_95k48315, %struct.ScmObj** %stackaddr$prim94476, align 8
%stackaddr$prim94477 = alloca %struct.ScmObj*, align 8
%current_45args92910 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92909)
store volatile %struct.ScmObj* %current_45args92910, %struct.ScmObj** %stackaddr$prim94477, align 8
%stackaddr$prim94478 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92910)
store volatile %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$prim94478, align 8
%stackaddr$makeclosure94479 = alloca %struct.ScmObj*, align 8
%fptrToInt94480 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50205 to i64
%ae50205 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94480)
store volatile %struct.ScmObj* %ae50205, %struct.ScmObj** %stackaddr$makeclosure94479, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50205, %struct.ScmObj* %_37foldl148037, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50205, %struct.ScmObj* %_37_6248132, i64 1)
%ae50206 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94481 = alloca %struct.ScmObj*, align 8
%fptrToInt94482 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50207 to i64
%ae50207 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94482)
store volatile %struct.ScmObj* %ae50207, %struct.ScmObj** %stackaddr$makeclosure94481, align 8
%argslist93902$ae502050 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94483 = alloca %struct.ScmObj*, align 8
%argslist93902$ae502051 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50207, %struct.ScmObj* %argslist93902$ae502050)
store volatile %struct.ScmObj* %argslist93902$ae502051, %struct.ScmObj** %stackaddr$prim94483, align 8
%stackaddr$prim94484 = alloca %struct.ScmObj*, align 8
%argslist93902$ae502052 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50206, %struct.ScmObj* %argslist93902$ae502051)
store volatile %struct.ScmObj* %argslist93902$ae502052, %struct.ScmObj** %stackaddr$prim94484, align 8
%clofunc94485 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50205)
musttail call tailcc void %clofunc94485(%struct.ScmObj* %ae50205, %struct.ScmObj* %argslist93902$ae502052)
ret void
}

define tailcc void @proc_clo$ae50205(%struct.ScmObj* %env$ae50205,%struct.ScmObj* %current_45args92912) {
%stackaddr$env-ref94486 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50205, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94486
%stackaddr$env-ref94487 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50205, i64 1)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94487
%stackaddr$prim94488 = alloca %struct.ScmObj*, align 8
%_95k48316 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92912)
store volatile %struct.ScmObj* %_95k48316, %struct.ScmObj** %stackaddr$prim94488, align 8
%stackaddr$prim94489 = alloca %struct.ScmObj*, align 8
%current_45args92913 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92912)
store volatile %struct.ScmObj* %current_45args92913, %struct.ScmObj** %stackaddr$prim94489, align 8
%stackaddr$prim94490 = alloca %struct.ScmObj*, align 8
%_37_62_6148129 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92913)
store volatile %struct.ScmObj* %_37_62_6148129, %struct.ScmObj** %stackaddr$prim94490, align 8
%ae50229 = call %struct.ScmObj* @const_init_int(i64 1)
%ae50230 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94491 = alloca %struct.ScmObj*, align 8
%_37append48125 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae50229, %struct.ScmObj* %ae50230)
store volatile %struct.ScmObj* %_37append48125, %struct.ScmObj** %stackaddr$prim94491, align 8
%stackaddr$makeclosure94492 = alloca %struct.ScmObj*, align 8
%fptrToInt94493 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50231 to i64
%ae50231 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt94493)
store volatile %struct.ScmObj* %ae50231, %struct.ScmObj** %stackaddr$makeclosure94492, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50231, %struct.ScmObj* %_37foldl148037, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50231, %struct.ScmObj* %_37_6248132, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae50231, %struct.ScmObj* %_37append48125, i64 2)
%ae50232 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94494 = alloca %struct.ScmObj*, align 8
%fptrToInt94495 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50233 to i64
%ae50233 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94495)
store volatile %struct.ScmObj* %ae50233, %struct.ScmObj** %stackaddr$makeclosure94494, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50233, %struct.ScmObj* %_37append48125, i64 0)
%argslist93896$ae502310 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94496 = alloca %struct.ScmObj*, align 8
%argslist93896$ae502311 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50233, %struct.ScmObj* %argslist93896$ae502310)
store volatile %struct.ScmObj* %argslist93896$ae502311, %struct.ScmObj** %stackaddr$prim94496, align 8
%stackaddr$prim94497 = alloca %struct.ScmObj*, align 8
%argslist93896$ae502312 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50232, %struct.ScmObj* %argslist93896$ae502311)
store volatile %struct.ScmObj* %argslist93896$ae502312, %struct.ScmObj** %stackaddr$prim94497, align 8
%clofunc94498 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50231)
musttail call tailcc void %clofunc94498(%struct.ScmObj* %ae50231, %struct.ScmObj* %argslist93896$ae502312)
ret void
}

define tailcc void @proc_clo$ae50231(%struct.ScmObj* %env$ae50231,%struct.ScmObj* %current_45args92915) {
%stackaddr$env-ref94499 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50231, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94499
%stackaddr$env-ref94500 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50231, i64 1)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94500
%stackaddr$env-ref94501 = alloca %struct.ScmObj*, align 8
%_37append48125 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50231, i64 2)
store %struct.ScmObj* %_37append48125, %struct.ScmObj** %stackaddr$env-ref94501
%stackaddr$prim94502 = alloca %struct.ScmObj*, align 8
%_95k48317 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92915)
store volatile %struct.ScmObj* %_95k48317, %struct.ScmObj** %stackaddr$prim94502, align 8
%stackaddr$prim94503 = alloca %struct.ScmObj*, align 8
%current_45args92916 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92915)
store volatile %struct.ScmObj* %current_45args92916, %struct.ScmObj** %stackaddr$prim94503, align 8
%stackaddr$prim94504 = alloca %struct.ScmObj*, align 8
%anf_45bind48233 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92916)
store volatile %struct.ScmObj* %anf_45bind48233, %struct.ScmObj** %stackaddr$prim94504, align 8
%ae50299 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94505 = alloca %struct.ScmObj*, align 8
%_95048126 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %_37append48125, %struct.ScmObj* %ae50299, %struct.ScmObj* %anf_45bind48233)
store volatile %struct.ScmObj* %_95048126, %struct.ScmObj** %stackaddr$prim94505, align 8
%ae50302 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94506 = alloca %struct.ScmObj*, align 8
%_37append48124 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %_37append48125, %struct.ScmObj* %ae50302)
store volatile %struct.ScmObj* %_37append48124, %struct.ScmObj** %stackaddr$prim94506, align 8
%stackaddr$makeclosure94507 = alloca %struct.ScmObj*, align 8
%fptrToInt94508 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50303 to i64
%ae50303 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94508)
store volatile %struct.ScmObj* %ae50303, %struct.ScmObj** %stackaddr$makeclosure94507, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50303, %struct.ScmObj* %_37foldl148037, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50303, %struct.ScmObj* %_37_6248132, i64 1)
%ae50304 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94509 = alloca %struct.ScmObj*, align 8
%fptrToInt94510 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50305 to i64
%ae50305 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94510)
store volatile %struct.ScmObj* %ae50305, %struct.ScmObj** %stackaddr$makeclosure94509, align 8
%argslist93885$ae503030 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94511 = alloca %struct.ScmObj*, align 8
%argslist93885$ae503031 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50305, %struct.ScmObj* %argslist93885$ae503030)
store volatile %struct.ScmObj* %argslist93885$ae503031, %struct.ScmObj** %stackaddr$prim94511, align 8
%stackaddr$prim94512 = alloca %struct.ScmObj*, align 8
%argslist93885$ae503032 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50304, %struct.ScmObj* %argslist93885$ae503031)
store volatile %struct.ScmObj* %argslist93885$ae503032, %struct.ScmObj** %stackaddr$prim94512, align 8
%clofunc94513 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50303)
musttail call tailcc void %clofunc94513(%struct.ScmObj* %ae50303, %struct.ScmObj* %argslist93885$ae503032)
ret void
}

define tailcc void @proc_clo$ae50303(%struct.ScmObj* %env$ae50303,%struct.ScmObj* %current_45args92918) {
%stackaddr$env-ref94514 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50303, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94514
%stackaddr$env-ref94515 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50303, i64 1)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94515
%stackaddr$prim94516 = alloca %struct.ScmObj*, align 8
%_95k48318 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92918)
store volatile %struct.ScmObj* %_95k48318, %struct.ScmObj** %stackaddr$prim94516, align 8
%stackaddr$prim94517 = alloca %struct.ScmObj*, align 8
%current_45args92919 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92918)
store volatile %struct.ScmObj* %current_45args92919, %struct.ScmObj** %stackaddr$prim94517, align 8
%stackaddr$prim94518 = alloca %struct.ScmObj*, align 8
%_37list_6348117 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92919)
store volatile %struct.ScmObj* %_37list_6348117, %struct.ScmObj** %stackaddr$prim94518, align 8
%stackaddr$makeclosure94519 = alloca %struct.ScmObj*, align 8
%fptrToInt94520 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50719 to i64
%ae50719 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94520)
store volatile %struct.ScmObj* %ae50719, %struct.ScmObj** %stackaddr$makeclosure94519, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50719, %struct.ScmObj* %_37foldl148037, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50719, %struct.ScmObj* %_37_6248132, i64 1)
%ae50720 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94521 = alloca %struct.ScmObj*, align 8
%fptrToInt94522 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50721 to i64
%ae50721 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94522)
store volatile %struct.ScmObj* %ae50721, %struct.ScmObj** %stackaddr$makeclosure94521, align 8
%argslist93860$ae507190 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94523 = alloca %struct.ScmObj*, align 8
%argslist93860$ae507191 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50721, %struct.ScmObj* %argslist93860$ae507190)
store volatile %struct.ScmObj* %argslist93860$ae507191, %struct.ScmObj** %stackaddr$prim94523, align 8
%stackaddr$prim94524 = alloca %struct.ScmObj*, align 8
%argslist93860$ae507192 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50720, %struct.ScmObj* %argslist93860$ae507191)
store volatile %struct.ScmObj* %argslist93860$ae507192, %struct.ScmObj** %stackaddr$prim94524, align 8
%clofunc94525 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50719)
musttail call tailcc void %clofunc94525(%struct.ScmObj* %ae50719, %struct.ScmObj* %argslist93860$ae507192)
ret void
}

define tailcc void @proc_clo$ae50719(%struct.ScmObj* %env$ae50719,%struct.ScmObj* %current_45args92921) {
%stackaddr$env-ref94526 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50719, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94526
%stackaddr$env-ref94527 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50719, i64 1)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94527
%stackaddr$prim94528 = alloca %struct.ScmObj*, align 8
%_95k48319 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92921)
store volatile %struct.ScmObj* %_95k48319, %struct.ScmObj** %stackaddr$prim94528, align 8
%stackaddr$prim94529 = alloca %struct.ScmObj*, align 8
%current_45args92922 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92921)
store volatile %struct.ScmObj* %current_45args92922, %struct.ScmObj** %stackaddr$prim94529, align 8
%stackaddr$prim94530 = alloca %struct.ScmObj*, align 8
%_37drop48108 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92922)
store volatile %struct.ScmObj* %_37drop48108, %struct.ScmObj** %stackaddr$prim94530, align 8
%stackaddr$makeclosure94531 = alloca %struct.ScmObj*, align 8
%fptrToInt94532 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51255 to i64
%ae51255 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94532)
store volatile %struct.ScmObj* %ae51255, %struct.ScmObj** %stackaddr$makeclosure94531, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51255, %struct.ScmObj* %_37foldl148037, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae51255, %struct.ScmObj* %_37_6248132, i64 1)
%ae51256 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94533 = alloca %struct.ScmObj*, align 8
%fptrToInt94534 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51257 to i64
%ae51257 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94534)
store volatile %struct.ScmObj* %ae51257, %struct.ScmObj** %stackaddr$makeclosure94533, align 8
%argslist93836$ae512550 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94535 = alloca %struct.ScmObj*, align 8
%argslist93836$ae512551 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51257, %struct.ScmObj* %argslist93836$ae512550)
store volatile %struct.ScmObj* %argslist93836$ae512551, %struct.ScmObj** %stackaddr$prim94535, align 8
%stackaddr$prim94536 = alloca %struct.ScmObj*, align 8
%argslist93836$ae512552 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51256, %struct.ScmObj* %argslist93836$ae512551)
store volatile %struct.ScmObj* %argslist93836$ae512552, %struct.ScmObj** %stackaddr$prim94536, align 8
%clofunc94537 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51255)
musttail call tailcc void %clofunc94537(%struct.ScmObj* %ae51255, %struct.ScmObj* %argslist93836$ae512552)
ret void
}

define tailcc void @proc_clo$ae51255(%struct.ScmObj* %env$ae51255,%struct.ScmObj* %current_45args92924) {
%stackaddr$env-ref94538 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51255, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref94538
%stackaddr$env-ref94539 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51255, i64 1)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94539
%stackaddr$prim94540 = alloca %struct.ScmObj*, align 8
%_95k48320 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92924)
store volatile %struct.ScmObj* %_95k48320, %struct.ScmObj** %stackaddr$prim94540, align 8
%stackaddr$prim94541 = alloca %struct.ScmObj*, align 8
%current_45args92925 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92924)
store volatile %struct.ScmObj* %current_45args92925, %struct.ScmObj** %stackaddr$prim94541, align 8
%stackaddr$prim94542 = alloca %struct.ScmObj*, align 8
%_37memv48101 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92925)
store volatile %struct.ScmObj* %_37memv48101, %struct.ScmObj** %stackaddr$prim94542, align 8
%stackaddr$makeclosure94543 = alloca %struct.ScmObj*, align 8
%fptrToInt94544 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51659 to i64
%ae51659 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94544)
store volatile %struct.ScmObj* %ae51659, %struct.ScmObj** %stackaddr$makeclosure94543, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51659, %struct.ScmObj* %_37_6248132, i64 0)
%ae51660 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94545 = alloca %struct.ScmObj*, align 8
%fptrToInt94546 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51661 to i64
%ae51661 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94546)
store volatile %struct.ScmObj* %ae51661, %struct.ScmObj** %stackaddr$makeclosure94545, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51661, %struct.ScmObj* %_37foldl148037, i64 0)
%argslist93810$ae516590 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94547 = alloca %struct.ScmObj*, align 8
%argslist93810$ae516591 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51661, %struct.ScmObj* %argslist93810$ae516590)
store volatile %struct.ScmObj* %argslist93810$ae516591, %struct.ScmObj** %stackaddr$prim94547, align 8
%stackaddr$prim94548 = alloca %struct.ScmObj*, align 8
%argslist93810$ae516592 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51660, %struct.ScmObj* %argslist93810$ae516591)
store volatile %struct.ScmObj* %argslist93810$ae516592, %struct.ScmObj** %stackaddr$prim94548, align 8
%clofunc94549 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51659)
musttail call tailcc void %clofunc94549(%struct.ScmObj* %ae51659, %struct.ScmObj* %argslist93810$ae516592)
ret void
}

define tailcc void @proc_clo$ae51659(%struct.ScmObj* %env$ae51659,%struct.ScmObj* %current_45args92927) {
%stackaddr$env-ref94550 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51659, i64 0)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94550
%stackaddr$prim94551 = alloca %struct.ScmObj*, align 8
%_95k48321 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92927)
store volatile %struct.ScmObj* %_95k48321, %struct.ScmObj** %stackaddr$prim94551, align 8
%stackaddr$prim94552 = alloca %struct.ScmObj*, align 8
%current_45args92928 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92927)
store volatile %struct.ScmObj* %current_45args92928, %struct.ScmObj** %stackaddr$prim94552, align 8
%stackaddr$prim94553 = alloca %struct.ScmObj*, align 8
%_37_4748097 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92928)
store volatile %struct.ScmObj* %_37_4748097, %struct.ScmObj** %stackaddr$prim94553, align 8
%stackaddr$makeclosure94554 = alloca %struct.ScmObj*, align 8
%fptrToInt94555 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51757 to i64
%ae51757 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94555)
store volatile %struct.ScmObj* %ae51757, %struct.ScmObj** %stackaddr$makeclosure94554, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51757, %struct.ScmObj* %_37_6248132, i64 0)
%ae51758 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94556 = alloca %struct.ScmObj*, align 8
%fptrToInt94557 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51759 to i64
%ae51759 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94557)
store volatile %struct.ScmObj* %ae51759, %struct.ScmObj** %stackaddr$makeclosure94556, align 8
%argslist93797$ae517570 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94558 = alloca %struct.ScmObj*, align 8
%argslist93797$ae517571 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51759, %struct.ScmObj* %argslist93797$ae517570)
store volatile %struct.ScmObj* %argslist93797$ae517571, %struct.ScmObj** %stackaddr$prim94558, align 8
%stackaddr$prim94559 = alloca %struct.ScmObj*, align 8
%argslist93797$ae517572 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51758, %struct.ScmObj* %argslist93797$ae517571)
store volatile %struct.ScmObj* %argslist93797$ae517572, %struct.ScmObj** %stackaddr$prim94559, align 8
%clofunc94560 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51757)
musttail call tailcc void %clofunc94560(%struct.ScmObj* %ae51757, %struct.ScmObj* %argslist93797$ae517572)
ret void
}

define tailcc void @proc_clo$ae51757(%struct.ScmObj* %env$ae51757,%struct.ScmObj* %current_45args92930) {
%stackaddr$env-ref94561 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51757, i64 0)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94561
%stackaddr$prim94562 = alloca %struct.ScmObj*, align 8
%_95k48322 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92930)
store volatile %struct.ScmObj* %_95k48322, %struct.ScmObj** %stackaddr$prim94562, align 8
%stackaddr$prim94563 = alloca %struct.ScmObj*, align 8
%current_45args92931 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92930)
store volatile %struct.ScmObj* %current_45args92931, %struct.ScmObj** %stackaddr$prim94563, align 8
%stackaddr$prim94564 = alloca %struct.ScmObj*, align 8
%_37first48095 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92931)
store volatile %struct.ScmObj* %_37first48095, %struct.ScmObj** %stackaddr$prim94564, align 8
%stackaddr$makeclosure94565 = alloca %struct.ScmObj*, align 8
%fptrToInt94566 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51777 to i64
%ae51777 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94566)
store volatile %struct.ScmObj* %ae51777, %struct.ScmObj** %stackaddr$makeclosure94565, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51777, %struct.ScmObj* %_37_6248132, i64 0)
%ae51778 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94567 = alloca %struct.ScmObj*, align 8
%fptrToInt94568 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51779 to i64
%ae51779 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94568)
store volatile %struct.ScmObj* %ae51779, %struct.ScmObj** %stackaddr$makeclosure94567, align 8
%argslist93792$ae517770 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94569 = alloca %struct.ScmObj*, align 8
%argslist93792$ae517771 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51779, %struct.ScmObj* %argslist93792$ae517770)
store volatile %struct.ScmObj* %argslist93792$ae517771, %struct.ScmObj** %stackaddr$prim94569, align 8
%stackaddr$prim94570 = alloca %struct.ScmObj*, align 8
%argslist93792$ae517772 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51778, %struct.ScmObj* %argslist93792$ae517771)
store volatile %struct.ScmObj* %argslist93792$ae517772, %struct.ScmObj** %stackaddr$prim94570, align 8
%clofunc94571 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51777)
musttail call tailcc void %clofunc94571(%struct.ScmObj* %ae51777, %struct.ScmObj* %argslist93792$ae517772)
ret void
}

define tailcc void @proc_clo$ae51777(%struct.ScmObj* %env$ae51777,%struct.ScmObj* %current_45args92933) {
%stackaddr$env-ref94572 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51777, i64 0)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94572
%stackaddr$prim94573 = alloca %struct.ScmObj*, align 8
%_95k48323 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92933)
store volatile %struct.ScmObj* %_95k48323, %struct.ScmObj** %stackaddr$prim94573, align 8
%stackaddr$prim94574 = alloca %struct.ScmObj*, align 8
%current_45args92934 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92933)
store volatile %struct.ScmObj* %current_45args92934, %struct.ScmObj** %stackaddr$prim94574, align 8
%stackaddr$prim94575 = alloca %struct.ScmObj*, align 8
%_37second48093 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92934)
store volatile %struct.ScmObj* %_37second48093, %struct.ScmObj** %stackaddr$prim94575, align 8
%stackaddr$makeclosure94576 = alloca %struct.ScmObj*, align 8
%fptrToInt94577 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51799 to i64
%ae51799 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94577)
store volatile %struct.ScmObj* %ae51799, %struct.ScmObj** %stackaddr$makeclosure94576, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51799, %struct.ScmObj* %_37_6248132, i64 0)
%ae51800 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94578 = alloca %struct.ScmObj*, align 8
%fptrToInt94579 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51801 to i64
%ae51801 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94579)
store volatile %struct.ScmObj* %ae51801, %struct.ScmObj** %stackaddr$makeclosure94578, align 8
%argslist93787$ae517990 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94580 = alloca %struct.ScmObj*, align 8
%argslist93787$ae517991 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51801, %struct.ScmObj* %argslist93787$ae517990)
store volatile %struct.ScmObj* %argslist93787$ae517991, %struct.ScmObj** %stackaddr$prim94580, align 8
%stackaddr$prim94581 = alloca %struct.ScmObj*, align 8
%argslist93787$ae517992 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51800, %struct.ScmObj* %argslist93787$ae517991)
store volatile %struct.ScmObj* %argslist93787$ae517992, %struct.ScmObj** %stackaddr$prim94581, align 8
%clofunc94582 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51799)
musttail call tailcc void %clofunc94582(%struct.ScmObj* %ae51799, %struct.ScmObj* %argslist93787$ae517992)
ret void
}

define tailcc void @proc_clo$ae51799(%struct.ScmObj* %env$ae51799,%struct.ScmObj* %current_45args92936) {
%stackaddr$env-ref94583 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51799, i64 0)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94583
%stackaddr$prim94584 = alloca %struct.ScmObj*, align 8
%_95k48324 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92936)
store volatile %struct.ScmObj* %_95k48324, %struct.ScmObj** %stackaddr$prim94584, align 8
%stackaddr$prim94585 = alloca %struct.ScmObj*, align 8
%current_45args92937 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92936)
store volatile %struct.ScmObj* %current_45args92937, %struct.ScmObj** %stackaddr$prim94585, align 8
%stackaddr$prim94586 = alloca %struct.ScmObj*, align 8
%_37third48091 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92937)
store volatile %struct.ScmObj* %_37third48091, %struct.ScmObj** %stackaddr$prim94586, align 8
%stackaddr$makeclosure94587 = alloca %struct.ScmObj*, align 8
%fptrToInt94588 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51823 to i64
%ae51823 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94588)
store volatile %struct.ScmObj* %ae51823, %struct.ScmObj** %stackaddr$makeclosure94587, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51823, %struct.ScmObj* %_37_6248132, i64 0)
%ae51824 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure94589 = alloca %struct.ScmObj*, align 8
%fptrToInt94590 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51825 to i64
%ae51825 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94590)
store volatile %struct.ScmObj* %ae51825, %struct.ScmObj** %stackaddr$makeclosure94589, align 8
%argslist93782$ae518230 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94591 = alloca %struct.ScmObj*, align 8
%argslist93782$ae518231 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51825, %struct.ScmObj* %argslist93782$ae518230)
store volatile %struct.ScmObj* %argslist93782$ae518231, %struct.ScmObj** %stackaddr$prim94591, align 8
%stackaddr$prim94592 = alloca %struct.ScmObj*, align 8
%argslist93782$ae518232 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51824, %struct.ScmObj* %argslist93782$ae518231)
store volatile %struct.ScmObj* %argslist93782$ae518232, %struct.ScmObj** %stackaddr$prim94592, align 8
%clofunc94593 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51823)
musttail call tailcc void %clofunc94593(%struct.ScmObj* %ae51823, %struct.ScmObj* %argslist93782$ae518232)
ret void
}

define tailcc void @proc_clo$ae51823(%struct.ScmObj* %env$ae51823,%struct.ScmObj* %current_45args92939) {
%stackaddr$env-ref94594 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51823, i64 0)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94594
%stackaddr$prim94595 = alloca %struct.ScmObj*, align 8
%_95k48325 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92939)
store volatile %struct.ScmObj* %_95k48325, %struct.ScmObj** %stackaddr$prim94595, align 8
%stackaddr$prim94596 = alloca %struct.ScmObj*, align 8
%current_45args92940 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92939)
store volatile %struct.ScmObj* %current_45args92940, %struct.ScmObj** %stackaddr$prim94596, align 8
%stackaddr$prim94597 = alloca %struct.ScmObj*, align 8
%_37fourth48089 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92940)
store volatile %struct.ScmObj* %_37fourth48089, %struct.ScmObj** %stackaddr$prim94597, align 8
%ae51849 = call %struct.ScmObj* @const_init_int(i64 1)
%ae51850 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim94598 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae51849, %struct.ScmObj* %ae51850)
store volatile %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$prim94598, align 8
%ae51852 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94599 = alloca %struct.ScmObj*, align 8
%anf_45bind48269 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51852)
store volatile %struct.ScmObj* %anf_45bind48269, %struct.ScmObj** %stackaddr$prim94599, align 8
%ae51854 = call %struct.ScmObj* @const_init_int(i64 3)
%stackaddr$prim94600 = alloca %struct.ScmObj*, align 8
%anf_45bind48270 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48269, %struct.ScmObj* %ae51854)
store volatile %struct.ScmObj* %anf_45bind48270, %struct.ScmObj** %stackaddr$prim94600, align 8
%ae51856 = call %struct.ScmObj* @const_init_int(i64 5)
%stackaddr$prim94601 = alloca %struct.ScmObj*, align 8
%anf_45bind48271 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48270, %struct.ScmObj* %ae51856)
store volatile %struct.ScmObj* %anf_45bind48271, %struct.ScmObj** %stackaddr$prim94601, align 8
%ae51858 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94602 = alloca %struct.ScmObj*, align 8
%t4802548151 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51858, %struct.ScmObj* %anf_45bind48271)
store volatile %struct.ScmObj* %t4802548151, %struct.ScmObj** %stackaddr$prim94602, align 8
%ae51861 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94603 = alloca %struct.ScmObj*, align 8
%anf_45bind48272 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51861)
store volatile %struct.ScmObj* %anf_45bind48272, %struct.ScmObj** %stackaddr$prim94603, align 8
%stackaddr$makeclosure94604 = alloca %struct.ScmObj*, align 8
%fptrToInt94605 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51863 to i64
%ae51863 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94605)
store volatile %struct.ScmObj* %ae51863, %struct.ScmObj** %stackaddr$makeclosure94604, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51863, %struct.ScmObj* %x48150, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae51863, %struct.ScmObj* %_37_6248132, i64 1)
%ae51865 = call %struct.ScmObj* @const_init_int(i64 2)
%argslist93777$_37_62481320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94606 = alloca %struct.ScmObj*, align 8
%argslist93777$_37_62481321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51865, %struct.ScmObj* %argslist93777$_37_62481320)
store volatile %struct.ScmObj* %argslist93777$_37_62481321, %struct.ScmObj** %stackaddr$prim94606, align 8
%stackaddr$prim94607 = alloca %struct.ScmObj*, align 8
%argslist93777$_37_62481322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48272, %struct.ScmObj* %argslist93777$_37_62481321)
store volatile %struct.ScmObj* %argslist93777$_37_62481322, %struct.ScmObj** %stackaddr$prim94607, align 8
%stackaddr$prim94608 = alloca %struct.ScmObj*, align 8
%argslist93777$_37_62481323 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51863, %struct.ScmObj* %argslist93777$_37_62481322)
store volatile %struct.ScmObj* %argslist93777$_37_62481323, %struct.ScmObj** %stackaddr$prim94608, align 8
%clofunc94609 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37_6248132)
musttail call tailcc void %clofunc94609(%struct.ScmObj* %_37_6248132, %struct.ScmObj* %argslist93777$_37_62481323)
ret void
}

define tailcc void @proc_clo$ae51863(%struct.ScmObj* %env$ae51863,%struct.ScmObj* %current_45args92942) {
%stackaddr$env-ref94610 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51863, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94610
%stackaddr$env-ref94611 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51863, i64 1)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94611
%stackaddr$prim94612 = alloca %struct.ScmObj*, align 8
%_95k48326 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92942)
store volatile %struct.ScmObj* %_95k48326, %struct.ScmObj** %stackaddr$prim94612, align 8
%stackaddr$prim94613 = alloca %struct.ScmObj*, align 8
%current_45args92943 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92942)
store volatile %struct.ScmObj* %current_45args92943, %struct.ScmObj** %stackaddr$prim94613, align 8
%stackaddr$prim94614 = alloca %struct.ScmObj*, align 8
%anf_45bind48273 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92943)
store volatile %struct.ScmObj* %anf_45bind48273, %struct.ScmObj** %stackaddr$prim94614, align 8
%truthy$cmp94615 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48273)
%cmp$cmp94615 = icmp eq i64 %truthy$cmp94615, 1
br i1 %cmp$cmp94615, label %truebranch$cmp94615, label %falsebranch$cmp94615
truebranch$cmp94615:
%ae51872 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94616 = alloca %struct.ScmObj*, align 8
%anf_45bind48274 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51872)
store volatile %struct.ScmObj* %anf_45bind48274, %struct.ScmObj** %stackaddr$prim94616, align 8
%ae51874 = call %struct.ScmObj* @const_init_int(i64 3)
%stackaddr$prim94617 = alloca %struct.ScmObj*, align 8
%anf_45bind48275 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48274, %struct.ScmObj* %ae51874)
store volatile %struct.ScmObj* %anf_45bind48275, %struct.ScmObj** %stackaddr$prim94617, align 8
%ae51876 = call %struct.ScmObj* @const_init_int(i64 5)
%stackaddr$prim94618 = alloca %struct.ScmObj*, align 8
%anf_45bind48276 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48275, %struct.ScmObj* %ae51876)
store volatile %struct.ScmObj* %anf_45bind48276, %struct.ScmObj** %stackaddr$prim94618, align 8
%ae51878 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94619 = alloca %struct.ScmObj*, align 8
%cpsprim48343 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51878, %struct.ScmObj* %anf_45bind48276)
store volatile %struct.ScmObj* %cpsprim48343, %struct.ScmObj** %stackaddr$prim94619, align 8
%stackaddr$makeclosure94620 = alloca %struct.ScmObj*, align 8
%fptrToInt94621 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51880 to i64
%ae51880 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94621)
store volatile %struct.ScmObj* %ae51880, %struct.ScmObj** %stackaddr$makeclosure94620, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51880, %struct.ScmObj* %x48150, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae51880, %struct.ScmObj* %_37_6248132, i64 1)
%ae51881 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93360$ae518800 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94622 = alloca %struct.ScmObj*, align 8
%argslist93360$ae518801 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48343, %struct.ScmObj* %argslist93360$ae518800)
store volatile %struct.ScmObj* %argslist93360$ae518801, %struct.ScmObj** %stackaddr$prim94622, align 8
%stackaddr$prim94623 = alloca %struct.ScmObj*, align 8
%argslist93360$ae518802 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51881, %struct.ScmObj* %argslist93360$ae518801)
store volatile %struct.ScmObj* %argslist93360$ae518802, %struct.ScmObj** %stackaddr$prim94623, align 8
%clofunc94624 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51880)
musttail call tailcc void %clofunc94624(%struct.ScmObj* %ae51880, %struct.ScmObj* %argslist93360$ae518802)
ret void
falsebranch$cmp94615:
%stackaddr$prim94625 = alloca %struct.ScmObj*, align 8
%cpsprim48344 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48344, %struct.ScmObj** %stackaddr$prim94625, align 8
%stackaddr$makeclosure94626 = alloca %struct.ScmObj*, align 8
%fptrToInt94627 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65109 to i64
%ae65109 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt94627)
store volatile %struct.ScmObj* %ae65109, %struct.ScmObj** %stackaddr$makeclosure94626, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65109, %struct.ScmObj* %x48150, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae65109, %struct.ScmObj* %_37_6248132, i64 1)
%ae65110 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93776$ae651090 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94628 = alloca %struct.ScmObj*, align 8
%argslist93776$ae651091 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48344, %struct.ScmObj* %argslist93776$ae651090)
store volatile %struct.ScmObj* %argslist93776$ae651091, %struct.ScmObj** %stackaddr$prim94628, align 8
%stackaddr$prim94629 = alloca %struct.ScmObj*, align 8
%argslist93776$ae651092 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65110, %struct.ScmObj* %argslist93776$ae651091)
store volatile %struct.ScmObj* %argslist93776$ae651092, %struct.ScmObj** %stackaddr$prim94629, align 8
%clofunc94630 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65109)
musttail call tailcc void %clofunc94630(%struct.ScmObj* %ae65109, %struct.ScmObj* %argslist93776$ae651092)
ret void
}

define tailcc void @proc_clo$ae51880(%struct.ScmObj* %env$ae51880,%struct.ScmObj* %current_45args92945) {
%stackaddr$env-ref94631 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51880, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94631
%stackaddr$env-ref94632 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51880, i64 1)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref94632
%stackaddr$prim94633 = alloca %struct.ScmObj*, align 8
%_95k48327 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92945)
store volatile %struct.ScmObj* %_95k48327, %struct.ScmObj** %stackaddr$prim94633, align 8
%stackaddr$prim94634 = alloca %struct.ScmObj*, align 8
%current_45args92946 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92945)
store volatile %struct.ScmObj* %current_45args92946, %struct.ScmObj** %stackaddr$prim94634, align 8
%stackaddr$prim94635 = alloca %struct.ScmObj*, align 8
%t4802648152 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92946)
store volatile %struct.ScmObj* %t4802648152, %struct.ScmObj** %stackaddr$prim94635, align 8
%ae51887 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94636 = alloca %struct.ScmObj*, align 8
%anf_45bind48277 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51887)
store volatile %struct.ScmObj* %anf_45bind48277, %struct.ScmObj** %stackaddr$prim94636, align 8
%stackaddr$makeclosure94637 = alloca %struct.ScmObj*, align 8
%fptrToInt94638 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51889 to i64
%ae51889 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94638)
store volatile %struct.ScmObj* %ae51889, %struct.ScmObj** %stackaddr$makeclosure94637, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51889, %struct.ScmObj* %x48150, i64 0)
%ae51891 = call %struct.ScmObj* @const_init_int(i64 2)
%argslist93359$_37_62481320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94639 = alloca %struct.ScmObj*, align 8
%argslist93359$_37_62481321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51891, %struct.ScmObj* %argslist93359$_37_62481320)
store volatile %struct.ScmObj* %argslist93359$_37_62481321, %struct.ScmObj** %stackaddr$prim94639, align 8
%stackaddr$prim94640 = alloca %struct.ScmObj*, align 8
%argslist93359$_37_62481322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48277, %struct.ScmObj* %argslist93359$_37_62481321)
store volatile %struct.ScmObj* %argslist93359$_37_62481322, %struct.ScmObj** %stackaddr$prim94640, align 8
%stackaddr$prim94641 = alloca %struct.ScmObj*, align 8
%argslist93359$_37_62481323 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51889, %struct.ScmObj* %argslist93359$_37_62481322)
store volatile %struct.ScmObj* %argslist93359$_37_62481323, %struct.ScmObj** %stackaddr$prim94641, align 8
%clofunc94642 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37_6248132)
musttail call tailcc void %clofunc94642(%struct.ScmObj* %_37_6248132, %struct.ScmObj* %argslist93359$_37_62481323)
ret void
}

define tailcc void @proc_clo$ae51889(%struct.ScmObj* %env$ae51889,%struct.ScmObj* %current_45args92948) {
%stackaddr$env-ref94643 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51889, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94643
%stackaddr$prim94644 = alloca %struct.ScmObj*, align 8
%_95k48328 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92948)
store volatile %struct.ScmObj* %_95k48328, %struct.ScmObj** %stackaddr$prim94644, align 8
%stackaddr$prim94645 = alloca %struct.ScmObj*, align 8
%current_45args92949 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92948)
store volatile %struct.ScmObj* %current_45args92949, %struct.ScmObj** %stackaddr$prim94645, align 8
%stackaddr$prim94646 = alloca %struct.ScmObj*, align 8
%anf_45bind48278 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92949)
store volatile %struct.ScmObj* %anf_45bind48278, %struct.ScmObj** %stackaddr$prim94646, align 8
%truthy$cmp94647 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48278)
%cmp$cmp94647 = icmp eq i64 %truthy$cmp94647, 1
br i1 %cmp$cmp94647, label %truebranch$cmp94647, label %falsebranch$cmp94647
truebranch$cmp94647:
%stackaddr$prim94648 = alloca %struct.ScmObj*, align 8
%cpsprim48341 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48341, %struct.ScmObj** %stackaddr$prim94648, align 8
%stackaddr$makeclosure94649 = alloca %struct.ScmObj*, align 8
%fptrToInt94650 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51897 to i64
%ae51897 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94650)
store volatile %struct.ScmObj* %ae51897, %struct.ScmObj** %stackaddr$makeclosure94649, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51897, %struct.ScmObj* %x48150, i64 0)
%ae51898 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93154$ae518970 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94651 = alloca %struct.ScmObj*, align 8
%argslist93154$ae518971 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48341, %struct.ScmObj* %argslist93154$ae518970)
store volatile %struct.ScmObj* %argslist93154$ae518971, %struct.ScmObj** %stackaddr$prim94651, align 8
%stackaddr$prim94652 = alloca %struct.ScmObj*, align 8
%argslist93154$ae518972 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51898, %struct.ScmObj* %argslist93154$ae518971)
store volatile %struct.ScmObj* %argslist93154$ae518972, %struct.ScmObj** %stackaddr$prim94652, align 8
%clofunc94653 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51897)
musttail call tailcc void %clofunc94653(%struct.ScmObj* %ae51897, %struct.ScmObj* %argslist93154$ae518972)
ret void
falsebranch$cmp94647:
%ae56081 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94654 = alloca %struct.ScmObj*, align 8
%anf_45bind48279 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56081)
store volatile %struct.ScmObj* %anf_45bind48279, %struct.ScmObj** %stackaddr$prim94654, align 8
%ae56083 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim94655 = alloca %struct.ScmObj*, align 8
%anf_45bind48280 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48279, %struct.ScmObj* %ae56083)
store volatile %struct.ScmObj* %anf_45bind48280, %struct.ScmObj** %stackaddr$prim94655, align 8
%ae56085 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim94656 = alloca %struct.ScmObj*, align 8
%anf_45bind48281 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48280, %struct.ScmObj* %ae56085)
store volatile %struct.ScmObj* %anf_45bind48281, %struct.ScmObj** %stackaddr$prim94656, align 8
%ae56087 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94657 = alloca %struct.ScmObj*, align 8
%cpsprim48342 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56087, %struct.ScmObj* %anf_45bind48281)
store volatile %struct.ScmObj* %cpsprim48342, %struct.ScmObj** %stackaddr$prim94657, align 8
%stackaddr$makeclosure94658 = alloca %struct.ScmObj*, align 8
%fptrToInt94659 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56089 to i64
%ae56089 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94659)
store volatile %struct.ScmObj* %ae56089, %struct.ScmObj** %stackaddr$makeclosure94658, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56089, %struct.ScmObj* %x48150, i64 0)
%ae56090 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93358$ae560890 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94660 = alloca %struct.ScmObj*, align 8
%argslist93358$ae560891 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48342, %struct.ScmObj* %argslist93358$ae560890)
store volatile %struct.ScmObj* %argslist93358$ae560891, %struct.ScmObj** %stackaddr$prim94660, align 8
%stackaddr$prim94661 = alloca %struct.ScmObj*, align 8
%argslist93358$ae560892 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56090, %struct.ScmObj* %argslist93358$ae560891)
store volatile %struct.ScmObj* %argslist93358$ae560892, %struct.ScmObj** %stackaddr$prim94661, align 8
%clofunc94662 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56089)
musttail call tailcc void %clofunc94662(%struct.ScmObj* %ae56089, %struct.ScmObj* %argslist93358$ae560892)
ret void
}

define tailcc void @proc_clo$ae51897(%struct.ScmObj* %env$ae51897,%struct.ScmObj* %current_45args92951) {
%stackaddr$env-ref94663 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51897, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94663
%stackaddr$prim94664 = alloca %struct.ScmObj*, align 8
%_95k48329 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92951)
store volatile %struct.ScmObj* %_95k48329, %struct.ScmObj** %stackaddr$prim94664, align 8
%stackaddr$prim94665 = alloca %struct.ScmObj*, align 8
%current_45args92952 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92951)
store volatile %struct.ScmObj* %current_45args92952, %struct.ScmObj** %stackaddr$prim94665, align 8
%stackaddr$prim94666 = alloca %struct.ScmObj*, align 8
%t4802748153 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92952)
store volatile %struct.ScmObj* %t4802748153, %struct.ScmObj** %stackaddr$prim94666, align 8
%ae51904 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94667 = alloca %struct.ScmObj*, align 8
%anf_45bind48282 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51904)
store volatile %struct.ScmObj* %anf_45bind48282, %struct.ScmObj** %stackaddr$prim94667, align 8
%ae51906 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim94668 = alloca %struct.ScmObj*, align 8
%anf_45bind48283 = call %struct.ScmObj* @prim__60(%struct.ScmObj* %anf_45bind48282, %struct.ScmObj* %ae51906)
store volatile %struct.ScmObj* %anf_45bind48283, %struct.ScmObj** %stackaddr$prim94668, align 8
%truthy$cmp94669 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48283)
%cmp$cmp94669 = icmp eq i64 %truthy$cmp94669, 1
br i1 %cmp$cmp94669, label %truebranch$cmp94669, label %falsebranch$cmp94669
truebranch$cmp94669:
%ae51909 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94670 = alloca %struct.ScmObj*, align 8
%anf_45bind48284 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51909)
store volatile %struct.ScmObj* %anf_45bind48284, %struct.ScmObj** %stackaddr$prim94670, align 8
%ae51911 = call %struct.ScmObj* @const_init_int(i64 9)
%stackaddr$prim94671 = alloca %struct.ScmObj*, align 8
%anf_45bind48285 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48284, %struct.ScmObj* %ae51911)
store volatile %struct.ScmObj* %anf_45bind48285, %struct.ScmObj** %stackaddr$prim94671, align 8
%ae51913 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim94672 = alloca %struct.ScmObj*, align 8
%anf_45bind48286 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48285, %struct.ScmObj* %ae51913)
store volatile %struct.ScmObj* %anf_45bind48286, %struct.ScmObj** %stackaddr$prim94672, align 8
%ae51915 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94673 = alloca %struct.ScmObj*, align 8
%cpsprim48339 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51915, %struct.ScmObj* %anf_45bind48286)
store volatile %struct.ScmObj* %cpsprim48339, %struct.ScmObj** %stackaddr$prim94673, align 8
%stackaddr$makeclosure94674 = alloca %struct.ScmObj*, align 8
%fptrToInt94675 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51917 to i64
%ae51917 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94675)
store volatile %struct.ScmObj* %ae51917, %struct.ScmObj** %stackaddr$makeclosure94674, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51917, %struct.ScmObj* %x48150, i64 0)
%ae51918 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93053$ae519170 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94676 = alloca %struct.ScmObj*, align 8
%argslist93053$ae519171 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48339, %struct.ScmObj* %argslist93053$ae519170)
store volatile %struct.ScmObj* %argslist93053$ae519171, %struct.ScmObj** %stackaddr$prim94676, align 8
%stackaddr$prim94677 = alloca %struct.ScmObj*, align 8
%argslist93053$ae519172 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51918, %struct.ScmObj* %argslist93053$ae519171)
store volatile %struct.ScmObj* %argslist93053$ae519172, %struct.ScmObj** %stackaddr$prim94677, align 8
%clofunc94678 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51917)
musttail call tailcc void %clofunc94678(%struct.ScmObj* %ae51917, %struct.ScmObj* %argslist93053$ae519172)
ret void
falsebranch$cmp94669:
%stackaddr$prim94679 = alloca %struct.ScmObj*, align 8
%cpsprim48340 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48340, %struct.ScmObj** %stackaddr$prim94679, align 8
%stackaddr$makeclosure94680 = alloca %struct.ScmObj*, align 8
%fptrToInt94681 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae53996 to i64
%ae53996 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94681)
store volatile %struct.ScmObj* %ae53996, %struct.ScmObj** %stackaddr$makeclosure94680, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae53996, %struct.ScmObj* %x48150, i64 0)
%ae53997 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93153$ae539960 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94682 = alloca %struct.ScmObj*, align 8
%argslist93153$ae539961 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48340, %struct.ScmObj* %argslist93153$ae539960)
store volatile %struct.ScmObj* %argslist93153$ae539961, %struct.ScmObj** %stackaddr$prim94682, align 8
%stackaddr$prim94683 = alloca %struct.ScmObj*, align 8
%argslist93153$ae539962 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae53997, %struct.ScmObj* %argslist93153$ae539961)
store volatile %struct.ScmObj* %argslist93153$ae539962, %struct.ScmObj** %stackaddr$prim94683, align 8
%clofunc94684 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae53996)
musttail call tailcc void %clofunc94684(%struct.ScmObj* %ae53996, %struct.ScmObj* %argslist93153$ae539962)
ret void
}

define tailcc void @proc_clo$ae51917(%struct.ScmObj* %env$ae51917,%struct.ScmObj* %current_45args92954) {
%stackaddr$env-ref94685 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51917, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94685
%stackaddr$prim94686 = alloca %struct.ScmObj*, align 8
%_95k48330 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92954)
store volatile %struct.ScmObj* %_95k48330, %struct.ScmObj** %stackaddr$prim94686, align 8
%stackaddr$prim94687 = alloca %struct.ScmObj*, align 8
%current_45args92955 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92954)
store volatile %struct.ScmObj* %current_45args92955, %struct.ScmObj** %stackaddr$prim94687, align 8
%stackaddr$prim94688 = alloca %struct.ScmObj*, align 8
%t4802848154 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92955)
store volatile %struct.ScmObj* %t4802848154, %struct.ScmObj** %stackaddr$prim94688, align 8
%ae51923 = call %struct.ScmObj* @const_init_false()
%truthy$cmp94689 = call i64 @is_truthy_value(%struct.ScmObj* %ae51923)
%cmp$cmp94689 = icmp eq i64 %truthy$cmp94689, 1
br i1 %cmp$cmp94689, label %truebranch$cmp94689, label %falsebranch$cmp94689
truebranch$cmp94689:
%stackaddr$prim94690 = alloca %struct.ScmObj*, align 8
%cpsprim48337 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48337, %struct.ScmObj** %stackaddr$prim94690, align 8
%stackaddr$makeclosure94691 = alloca %struct.ScmObj*, align 8
%fptrToInt94692 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51924 to i64
%ae51924 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94692)
store volatile %struct.ScmObj* %ae51924, %struct.ScmObj** %stackaddr$makeclosure94691, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51924, %struct.ScmObj* %x48150, i64 0)
%ae51925 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93004$ae519240 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94693 = alloca %struct.ScmObj*, align 8
%argslist93004$ae519241 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48337, %struct.ScmObj* %argslist93004$ae519240)
store volatile %struct.ScmObj* %argslist93004$ae519241, %struct.ScmObj** %stackaddr$prim94693, align 8
%stackaddr$prim94694 = alloca %struct.ScmObj*, align 8
%argslist93004$ae519242 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51925, %struct.ScmObj* %argslist93004$ae519241)
store volatile %struct.ScmObj* %argslist93004$ae519242, %struct.ScmObj** %stackaddr$prim94694, align 8
%clofunc94695 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51924)
musttail call tailcc void %clofunc94695(%struct.ScmObj* %ae51924, %struct.ScmObj* %argslist93004$ae519242)
ret void
falsebranch$cmp94689:
%ae52389 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94696 = alloca %struct.ScmObj*, align 8
%anf_45bind48287 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52389)
store volatile %struct.ScmObj* %anf_45bind48287, %struct.ScmObj** %stackaddr$prim94696, align 8
%ae52391 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim94697 = alloca %struct.ScmObj*, align 8
%anf_45bind48288 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48287, %struct.ScmObj* %ae52391)
store volatile %struct.ScmObj* %anf_45bind48288, %struct.ScmObj** %stackaddr$prim94697, align 8
%ae52393 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim94698 = alloca %struct.ScmObj*, align 8
%anf_45bind48289 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48288, %struct.ScmObj* %ae52393)
store volatile %struct.ScmObj* %anf_45bind48289, %struct.ScmObj** %stackaddr$prim94698, align 8
%ae52395 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94699 = alloca %struct.ScmObj*, align 8
%cpsprim48338 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52395, %struct.ScmObj* %anf_45bind48289)
store volatile %struct.ScmObj* %cpsprim48338, %struct.ScmObj** %stackaddr$prim94699, align 8
%stackaddr$makeclosure94700 = alloca %struct.ScmObj*, align 8
%fptrToInt94701 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52397 to i64
%ae52397 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94701)
store volatile %struct.ScmObj* %ae52397, %struct.ScmObj** %stackaddr$makeclosure94700, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52397, %struct.ScmObj* %x48150, i64 0)
%ae52398 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93052$ae523970 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94702 = alloca %struct.ScmObj*, align 8
%argslist93052$ae523971 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48338, %struct.ScmObj* %argslist93052$ae523970)
store volatile %struct.ScmObj* %argslist93052$ae523971, %struct.ScmObj** %stackaddr$prim94702, align 8
%stackaddr$prim94703 = alloca %struct.ScmObj*, align 8
%argslist93052$ae523972 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52398, %struct.ScmObj* %argslist93052$ae523971)
store volatile %struct.ScmObj* %argslist93052$ae523972, %struct.ScmObj** %stackaddr$prim94703, align 8
%clofunc94704 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52397)
musttail call tailcc void %clofunc94704(%struct.ScmObj* %ae52397, %struct.ScmObj* %argslist93052$ae523972)
ret void
}

define tailcc void @proc_clo$ae51924(%struct.ScmObj* %env$ae51924,%struct.ScmObj* %current_45args92957) {
%stackaddr$env-ref94705 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51924, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94705
%stackaddr$prim94706 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92957)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim94706, align 8
%stackaddr$prim94707 = alloca %struct.ScmObj*, align 8
%current_45args92958 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92957)
store volatile %struct.ScmObj* %current_45args92958, %struct.ScmObj** %stackaddr$prim94707, align 8
%stackaddr$prim94708 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92958)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim94708, align 8
%ae51931 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94709 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51931)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim94709, align 8
%truthy$cmp94710 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp94710 = icmp eq i64 %truthy$cmp94710, 1
br i1 %cmp$cmp94710, label %truebranch$cmp94710, label %falsebranch$cmp94710
truebranch$cmp94710:
%ae51934 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94711 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51934)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim94711, align 8
%ae51936 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94712 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51936)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim94712, align 8
%stackaddr$prim94713 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim94713, align 8
%ae51940 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94714 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51940, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim94714, align 8
%stackaddr$makeclosure94715 = alloca %struct.ScmObj*, align 8
%fptrToInt94716 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51942 to i64
%ae51942 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94716)
store volatile %struct.ScmObj* %ae51942, %struct.ScmObj** %stackaddr$makeclosure94715, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51942, %struct.ScmObj* %x48150, i64 0)
%ae51943 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist92981$ae519420 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94717 = alloca %struct.ScmObj*, align 8
%argslist92981$ae519421 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist92981$ae519420)
store volatile %struct.ScmObj* %argslist92981$ae519421, %struct.ScmObj** %stackaddr$prim94717, align 8
%stackaddr$prim94718 = alloca %struct.ScmObj*, align 8
%argslist92981$ae519422 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51943, %struct.ScmObj* %argslist92981$ae519421)
store volatile %struct.ScmObj* %argslist92981$ae519422, %struct.ScmObj** %stackaddr$prim94718, align 8
%clofunc94719 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51942)
musttail call tailcc void %clofunc94719(%struct.ScmObj* %ae51942, %struct.ScmObj* %argslist92981$ae519422)
ret void
falsebranch$cmp94710:
%stackaddr$makeclosure94720 = alloca %struct.ScmObj*, align 8
%fptrToInt94721 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52180 to i64
%ae52180 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94721)
store volatile %struct.ScmObj* %ae52180, %struct.ScmObj** %stackaddr$makeclosure94720, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52180, %struct.ScmObj* %x48150, i64 0)
%ae52181 = call %struct.ScmObj* @const_init_int(i64 0)
%ae52182 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93003$ae521800 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94722 = alloca %struct.ScmObj*, align 8
%argslist93003$ae521801 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52182, %struct.ScmObj* %argslist93003$ae521800)
store volatile %struct.ScmObj* %argslist93003$ae521801, %struct.ScmObj** %stackaddr$prim94722, align 8
%stackaddr$prim94723 = alloca %struct.ScmObj*, align 8
%argslist93003$ae521802 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52181, %struct.ScmObj* %argslist93003$ae521801)
store volatile %struct.ScmObj* %argslist93003$ae521802, %struct.ScmObj** %stackaddr$prim94723, align 8
%clofunc94724 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52180)
musttail call tailcc void %clofunc94724(%struct.ScmObj* %ae52180, %struct.ScmObj* %argslist93003$ae521802)
ret void
}

define tailcc void @proc_clo$ae51942(%struct.ScmObj* %env$ae51942,%struct.ScmObj* %current_45args92960) {
%stackaddr$env-ref94725 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51942, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94725
%stackaddr$prim94726 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92960)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim94726, align 8
%stackaddr$prim94727 = alloca %struct.ScmObj*, align 8
%current_45args92961 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92960)
store volatile %struct.ScmObj* %current_45args92961, %struct.ScmObj** %stackaddr$prim94727, align 8
%stackaddr$prim94728 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92961)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim94728, align 8
%ae51948 = call %struct.ScmObj* @const_init_false()
%truthy$cmp94729 = call i64 @is_truthy_value(%struct.ScmObj* %ae51948)
%cmp$cmp94729 = icmp eq i64 %truthy$cmp94729, 1
br i1 %cmp$cmp94729, label %truebranch$cmp94729, label %falsebranch$cmp94729
truebranch$cmp94729:
%ae51950 = call %struct.ScmObj* @const_init_int(i64 0)
%ae51951 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94730 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51950, %struct.ScmObj* %ae51951)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim94730, align 8
%stackaddr$makeclosure94731 = alloca %struct.ScmObj*, align 8
%fptrToInt94732 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51952 to i64
%ae51952 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94732)
store volatile %struct.ScmObj* %ae51952, %struct.ScmObj** %stackaddr$makeclosure94731, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51952, %struct.ScmObj* %x48150, i64 0)
%ae51953 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist92971$ae519520 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94733 = alloca %struct.ScmObj*, align 8
%argslist92971$ae519521 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist92971$ae519520)
store volatile %struct.ScmObj* %argslist92971$ae519521, %struct.ScmObj** %stackaddr$prim94733, align 8
%stackaddr$prim94734 = alloca %struct.ScmObj*, align 8
%argslist92971$ae519522 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51953, %struct.ScmObj* %argslist92971$ae519521)
store volatile %struct.ScmObj* %argslist92971$ae519522, %struct.ScmObj** %stackaddr$prim94734, align 8
%clofunc94735 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51952)
musttail call tailcc void %clofunc94735(%struct.ScmObj* %ae51952, %struct.ScmObj* %argslist92971$ae519522)
ret void
falsebranch$cmp94729:
%stackaddr$makeclosure94736 = alloca %struct.ScmObj*, align 8
%fptrToInt94737 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52011 to i64
%ae52011 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94737)
store volatile %struct.ScmObj* %ae52011, %struct.ScmObj** %stackaddr$makeclosure94736, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52011, %struct.ScmObj* %x48150, i64 0)
%ae52012 = call %struct.ScmObj* @const_init_int(i64 0)
%ae52013 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist92980$ae520110 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94738 = alloca %struct.ScmObj*, align 8
%argslist92980$ae520111 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52013, %struct.ScmObj* %argslist92980$ae520110)
store volatile %struct.ScmObj* %argslist92980$ae520111, %struct.ScmObj** %stackaddr$prim94738, align 8
%stackaddr$prim94739 = alloca %struct.ScmObj*, align 8
%argslist92980$ae520112 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52012, %struct.ScmObj* %argslist92980$ae520111)
store volatile %struct.ScmObj* %argslist92980$ae520112, %struct.ScmObj** %stackaddr$prim94739, align 8
%clofunc94740 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52011)
musttail call tailcc void %clofunc94740(%struct.ScmObj* %ae52011, %struct.ScmObj* %argslist92980$ae520112)
ret void
}

define tailcc void @proc_clo$ae51952(%struct.ScmObj* %env$ae51952,%struct.ScmObj* %current_45args92963) {
%stackaddr$env-ref94741 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51952, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94741
%stackaddr$prim94742 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92963)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim94742, align 8
%stackaddr$prim94743 = alloca %struct.ScmObj*, align 8
%current_45args92964 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92963)
store volatile %struct.ScmObj* %current_45args92964, %struct.ScmObj** %stackaddr$prim94743, align 8
%stackaddr$prim94744 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92964)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim94744, align 8
%ae51959 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94745 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae51959)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim94745, align 8
%stackaddr$makeclosure94746 = alloca %struct.ScmObj*, align 8
%fptrToInt94747 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51960 to i64
%ae51960 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94747)
store volatile %struct.ScmObj* %ae51960, %struct.ScmObj** %stackaddr$makeclosure94746, align 8
%ae51961 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist92970$ae519600 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94748 = alloca %struct.ScmObj*, align 8
%argslist92970$ae519601 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist92970$ae519600)
store volatile %struct.ScmObj* %argslist92970$ae519601, %struct.ScmObj** %stackaddr$prim94748, align 8
%stackaddr$prim94749 = alloca %struct.ScmObj*, align 8
%argslist92970$ae519602 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51961, %struct.ScmObj* %argslist92970$ae519601)
store volatile %struct.ScmObj* %argslist92970$ae519602, %struct.ScmObj** %stackaddr$prim94749, align 8
%clofunc94750 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51960)
musttail call tailcc void %clofunc94750(%struct.ScmObj* %ae51960, %struct.ScmObj* %argslist92970$ae519602)
ret void
}

define tailcc void @proc_clo$ae51960(%struct.ScmObj* %env$ae51960,%struct.ScmObj* %current_45args92966) {
%stackaddr$prim94751 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92966)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim94751, align 8
%stackaddr$prim94752 = alloca %struct.ScmObj*, align 8
%current_45args92967 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92966)
store volatile %struct.ScmObj* %current_45args92967, %struct.ScmObj** %stackaddr$prim94752, align 8
%stackaddr$prim94753 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92967)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim94753, align 8
%stackaddr$prim94754 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim94754, align 8
%argslist92969$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94755 = alloca %struct.ScmObj*, align 8
%argslist92969$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist92969$k0)
store volatile %struct.ScmObj* %argslist92969$k1, %struct.ScmObj** %stackaddr$prim94755, align 8
%clofunc94756 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc94756(%struct.ScmObj* %k, %struct.ScmObj* %argslist92969$k1)
ret void
}

define tailcc void @proc_clo$ae52011(%struct.ScmObj* %env$ae52011,%struct.ScmObj* %current_45args92972) {
%stackaddr$env-ref94757 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52011, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94757
%stackaddr$prim94758 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92972)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim94758, align 8
%stackaddr$prim94759 = alloca %struct.ScmObj*, align 8
%current_45args92973 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92972)
store volatile %struct.ScmObj* %current_45args92973, %struct.ScmObj** %stackaddr$prim94759, align 8
%stackaddr$prim94760 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92973)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim94760, align 8
%ae52021 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94761 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52021)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim94761, align 8
%stackaddr$makeclosure94762 = alloca %struct.ScmObj*, align 8
%fptrToInt94763 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52022 to i64
%ae52022 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94763)
store volatile %struct.ScmObj* %ae52022, %struct.ScmObj** %stackaddr$makeclosure94762, align 8
%ae52023 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist92979$ae520220 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94764 = alloca %struct.ScmObj*, align 8
%argslist92979$ae520221 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist92979$ae520220)
store volatile %struct.ScmObj* %argslist92979$ae520221, %struct.ScmObj** %stackaddr$prim94764, align 8
%stackaddr$prim94765 = alloca %struct.ScmObj*, align 8
%argslist92979$ae520222 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52023, %struct.ScmObj* %argslist92979$ae520221)
store volatile %struct.ScmObj* %argslist92979$ae520222, %struct.ScmObj** %stackaddr$prim94765, align 8
%clofunc94766 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52022)
musttail call tailcc void %clofunc94766(%struct.ScmObj* %ae52022, %struct.ScmObj* %argslist92979$ae520222)
ret void
}

define tailcc void @proc_clo$ae52022(%struct.ScmObj* %env$ae52022,%struct.ScmObj* %current_45args92975) {
%stackaddr$prim94767 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92975)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim94767, align 8
%stackaddr$prim94768 = alloca %struct.ScmObj*, align 8
%current_45args92976 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92975)
store volatile %struct.ScmObj* %current_45args92976, %struct.ScmObj** %stackaddr$prim94768, align 8
%stackaddr$prim94769 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92976)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim94769, align 8
%stackaddr$prim94770 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim94770, align 8
%argslist92978$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94771 = alloca %struct.ScmObj*, align 8
%argslist92978$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist92978$k0)
store volatile %struct.ScmObj* %argslist92978$k1, %struct.ScmObj** %stackaddr$prim94771, align 8
%clofunc94772 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc94772(%struct.ScmObj* %k, %struct.ScmObj* %argslist92978$k1)
ret void
}

define tailcc void @proc_clo$ae52180(%struct.ScmObj* %env$ae52180,%struct.ScmObj* %current_45args92982) {
%stackaddr$env-ref94773 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52180, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94773
%stackaddr$prim94774 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92982)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim94774, align 8
%stackaddr$prim94775 = alloca %struct.ScmObj*, align 8
%current_45args92983 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92982)
store volatile %struct.ScmObj* %current_45args92983, %struct.ScmObj** %stackaddr$prim94775, align 8
%stackaddr$prim94776 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92983)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim94776, align 8
%ae52189 = call %struct.ScmObj* @const_init_false()
%truthy$cmp94777 = call i64 @is_truthy_value(%struct.ScmObj* %ae52189)
%cmp$cmp94777 = icmp eq i64 %truthy$cmp94777, 1
br i1 %cmp$cmp94777, label %truebranch$cmp94777, label %falsebranch$cmp94777
truebranch$cmp94777:
%ae52191 = call %struct.ScmObj* @const_init_int(i64 0)
%ae52192 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94778 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52191, %struct.ScmObj* %ae52192)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim94778, align 8
%stackaddr$makeclosure94779 = alloca %struct.ScmObj*, align 8
%fptrToInt94780 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52193 to i64
%ae52193 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94780)
store volatile %struct.ScmObj* %ae52193, %struct.ScmObj** %stackaddr$makeclosure94779, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52193, %struct.ScmObj* %x48150, i64 0)
%ae52194 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist92993$ae521930 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94781 = alloca %struct.ScmObj*, align 8
%argslist92993$ae521931 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist92993$ae521930)
store volatile %struct.ScmObj* %argslist92993$ae521931, %struct.ScmObj** %stackaddr$prim94781, align 8
%stackaddr$prim94782 = alloca %struct.ScmObj*, align 8
%argslist92993$ae521932 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52194, %struct.ScmObj* %argslist92993$ae521931)
store volatile %struct.ScmObj* %argslist92993$ae521932, %struct.ScmObj** %stackaddr$prim94782, align 8
%clofunc94783 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52193)
musttail call tailcc void %clofunc94783(%struct.ScmObj* %ae52193, %struct.ScmObj* %argslist92993$ae521932)
ret void
falsebranch$cmp94777:
%stackaddr$makeclosure94784 = alloca %struct.ScmObj*, align 8
%fptrToInt94785 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52252 to i64
%ae52252 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94785)
store volatile %struct.ScmObj* %ae52252, %struct.ScmObj** %stackaddr$makeclosure94784, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52252, %struct.ScmObj* %x48150, i64 0)
%ae52253 = call %struct.ScmObj* @const_init_int(i64 0)
%ae52254 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93002$ae522520 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94786 = alloca %struct.ScmObj*, align 8
%argslist93002$ae522521 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52254, %struct.ScmObj* %argslist93002$ae522520)
store volatile %struct.ScmObj* %argslist93002$ae522521, %struct.ScmObj** %stackaddr$prim94786, align 8
%stackaddr$prim94787 = alloca %struct.ScmObj*, align 8
%argslist93002$ae522522 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52253, %struct.ScmObj* %argslist93002$ae522521)
store volatile %struct.ScmObj* %argslist93002$ae522522, %struct.ScmObj** %stackaddr$prim94787, align 8
%clofunc94788 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52252)
musttail call tailcc void %clofunc94788(%struct.ScmObj* %ae52252, %struct.ScmObj* %argslist93002$ae522522)
ret void
}

define tailcc void @proc_clo$ae52193(%struct.ScmObj* %env$ae52193,%struct.ScmObj* %current_45args92985) {
%stackaddr$env-ref94789 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52193, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94789
%stackaddr$prim94790 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92985)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim94790, align 8
%stackaddr$prim94791 = alloca %struct.ScmObj*, align 8
%current_45args92986 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92985)
store volatile %struct.ScmObj* %current_45args92986, %struct.ScmObj** %stackaddr$prim94791, align 8
%stackaddr$prim94792 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92986)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim94792, align 8
%ae52200 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94793 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52200)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim94793, align 8
%stackaddr$makeclosure94794 = alloca %struct.ScmObj*, align 8
%fptrToInt94795 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52201 to i64
%ae52201 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94795)
store volatile %struct.ScmObj* %ae52201, %struct.ScmObj** %stackaddr$makeclosure94794, align 8
%ae52202 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist92992$ae522010 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94796 = alloca %struct.ScmObj*, align 8
%argslist92992$ae522011 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist92992$ae522010)
store volatile %struct.ScmObj* %argslist92992$ae522011, %struct.ScmObj** %stackaddr$prim94796, align 8
%stackaddr$prim94797 = alloca %struct.ScmObj*, align 8
%argslist92992$ae522012 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52202, %struct.ScmObj* %argslist92992$ae522011)
store volatile %struct.ScmObj* %argslist92992$ae522012, %struct.ScmObj** %stackaddr$prim94797, align 8
%clofunc94798 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52201)
musttail call tailcc void %clofunc94798(%struct.ScmObj* %ae52201, %struct.ScmObj* %argslist92992$ae522012)
ret void
}

define tailcc void @proc_clo$ae52201(%struct.ScmObj* %env$ae52201,%struct.ScmObj* %current_45args92988) {
%stackaddr$prim94799 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92988)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim94799, align 8
%stackaddr$prim94800 = alloca %struct.ScmObj*, align 8
%current_45args92989 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92988)
store volatile %struct.ScmObj* %current_45args92989, %struct.ScmObj** %stackaddr$prim94800, align 8
%stackaddr$prim94801 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92989)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim94801, align 8
%stackaddr$prim94802 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim94802, align 8
%argslist92991$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94803 = alloca %struct.ScmObj*, align 8
%argslist92991$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist92991$k0)
store volatile %struct.ScmObj* %argslist92991$k1, %struct.ScmObj** %stackaddr$prim94803, align 8
%clofunc94804 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc94804(%struct.ScmObj* %k, %struct.ScmObj* %argslist92991$k1)
ret void
}

define tailcc void @proc_clo$ae52252(%struct.ScmObj* %env$ae52252,%struct.ScmObj* %current_45args92994) {
%stackaddr$env-ref94805 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52252, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94805
%stackaddr$prim94806 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92994)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim94806, align 8
%stackaddr$prim94807 = alloca %struct.ScmObj*, align 8
%current_45args92995 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92994)
store volatile %struct.ScmObj* %current_45args92995, %struct.ScmObj** %stackaddr$prim94807, align 8
%stackaddr$prim94808 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92995)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim94808, align 8
%ae52262 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94809 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52262)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim94809, align 8
%stackaddr$makeclosure94810 = alloca %struct.ScmObj*, align 8
%fptrToInt94811 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52263 to i64
%ae52263 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94811)
store volatile %struct.ScmObj* %ae52263, %struct.ScmObj** %stackaddr$makeclosure94810, align 8
%ae52264 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93001$ae522630 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94812 = alloca %struct.ScmObj*, align 8
%argslist93001$ae522631 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93001$ae522630)
store volatile %struct.ScmObj* %argslist93001$ae522631, %struct.ScmObj** %stackaddr$prim94812, align 8
%stackaddr$prim94813 = alloca %struct.ScmObj*, align 8
%argslist93001$ae522632 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52264, %struct.ScmObj* %argslist93001$ae522631)
store volatile %struct.ScmObj* %argslist93001$ae522632, %struct.ScmObj** %stackaddr$prim94813, align 8
%clofunc94814 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52263)
musttail call tailcc void %clofunc94814(%struct.ScmObj* %ae52263, %struct.ScmObj* %argslist93001$ae522632)
ret void
}

define tailcc void @proc_clo$ae52263(%struct.ScmObj* %env$ae52263,%struct.ScmObj* %current_45args92997) {
%stackaddr$prim94815 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92997)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim94815, align 8
%stackaddr$prim94816 = alloca %struct.ScmObj*, align 8
%current_45args92998 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args92997)
store volatile %struct.ScmObj* %current_45args92998, %struct.ScmObj** %stackaddr$prim94816, align 8
%stackaddr$prim94817 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args92998)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim94817, align 8
%stackaddr$prim94818 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim94818, align 8
%argslist93000$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94819 = alloca %struct.ScmObj*, align 8
%argslist93000$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93000$k0)
store volatile %struct.ScmObj* %argslist93000$k1, %struct.ScmObj** %stackaddr$prim94819, align 8
%clofunc94820 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc94820(%struct.ScmObj* %k, %struct.ScmObj* %argslist93000$k1)
ret void
}

define tailcc void @proc_clo$ae52397(%struct.ScmObj* %env$ae52397,%struct.ScmObj* %current_45args93005) {
%stackaddr$env-ref94821 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52397, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94821
%stackaddr$prim94822 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93005)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim94822, align 8
%stackaddr$prim94823 = alloca %struct.ScmObj*, align 8
%current_45args93006 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93005)
store volatile %struct.ScmObj* %current_45args93006, %struct.ScmObj** %stackaddr$prim94823, align 8
%stackaddr$prim94824 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93006)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim94824, align 8
%ae52404 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94825 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52404)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim94825, align 8
%truthy$cmp94826 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp94826 = icmp eq i64 %truthy$cmp94826, 1
br i1 %cmp$cmp94826, label %truebranch$cmp94826, label %falsebranch$cmp94826
truebranch$cmp94826:
%ae52407 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94827 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52407)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim94827, align 8
%ae52409 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94828 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52409)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim94828, align 8
%stackaddr$prim94829 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim94829, align 8
%ae52413 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94830 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52413, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim94830, align 8
%stackaddr$makeclosure94831 = alloca %struct.ScmObj*, align 8
%fptrToInt94832 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52415 to i64
%ae52415 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94832)
store volatile %struct.ScmObj* %ae52415, %struct.ScmObj** %stackaddr$makeclosure94831, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52415, %struct.ScmObj* %x48150, i64 0)
%ae52416 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93029$ae524150 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94833 = alloca %struct.ScmObj*, align 8
%argslist93029$ae524151 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93029$ae524150)
store volatile %struct.ScmObj* %argslist93029$ae524151, %struct.ScmObj** %stackaddr$prim94833, align 8
%stackaddr$prim94834 = alloca %struct.ScmObj*, align 8
%argslist93029$ae524152 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52416, %struct.ScmObj* %argslist93029$ae524151)
store volatile %struct.ScmObj* %argslist93029$ae524152, %struct.ScmObj** %stackaddr$prim94834, align 8
%clofunc94835 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52415)
musttail call tailcc void %clofunc94835(%struct.ScmObj* %ae52415, %struct.ScmObj* %argslist93029$ae524152)
ret void
falsebranch$cmp94826:
%stackaddr$makeclosure94836 = alloca %struct.ScmObj*, align 8
%fptrToInt94837 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52653 to i64
%ae52653 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94837)
store volatile %struct.ScmObj* %ae52653, %struct.ScmObj** %stackaddr$makeclosure94836, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52653, %struct.ScmObj* %x48150, i64 0)
%ae52654 = call %struct.ScmObj* @const_init_int(i64 0)
%ae52655 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93051$ae526530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94838 = alloca %struct.ScmObj*, align 8
%argslist93051$ae526531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52655, %struct.ScmObj* %argslist93051$ae526530)
store volatile %struct.ScmObj* %argslist93051$ae526531, %struct.ScmObj** %stackaddr$prim94838, align 8
%stackaddr$prim94839 = alloca %struct.ScmObj*, align 8
%argslist93051$ae526532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52654, %struct.ScmObj* %argslist93051$ae526531)
store volatile %struct.ScmObj* %argslist93051$ae526532, %struct.ScmObj** %stackaddr$prim94839, align 8
%clofunc94840 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52653)
musttail call tailcc void %clofunc94840(%struct.ScmObj* %ae52653, %struct.ScmObj* %argslist93051$ae526532)
ret void
}

define tailcc void @proc_clo$ae52415(%struct.ScmObj* %env$ae52415,%struct.ScmObj* %current_45args93008) {
%stackaddr$env-ref94841 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52415, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94841
%stackaddr$prim94842 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93008)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim94842, align 8
%stackaddr$prim94843 = alloca %struct.ScmObj*, align 8
%current_45args93009 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93008)
store volatile %struct.ScmObj* %current_45args93009, %struct.ScmObj** %stackaddr$prim94843, align 8
%stackaddr$prim94844 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93009)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim94844, align 8
%ae52421 = call %struct.ScmObj* @const_init_false()
%truthy$cmp94845 = call i64 @is_truthy_value(%struct.ScmObj* %ae52421)
%cmp$cmp94845 = icmp eq i64 %truthy$cmp94845, 1
br i1 %cmp$cmp94845, label %truebranch$cmp94845, label %falsebranch$cmp94845
truebranch$cmp94845:
%ae52423 = call %struct.ScmObj* @const_init_int(i64 0)
%ae52424 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94846 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52423, %struct.ScmObj* %ae52424)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim94846, align 8
%stackaddr$makeclosure94847 = alloca %struct.ScmObj*, align 8
%fptrToInt94848 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52425 to i64
%ae52425 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94848)
store volatile %struct.ScmObj* %ae52425, %struct.ScmObj** %stackaddr$makeclosure94847, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52425, %struct.ScmObj* %x48150, i64 0)
%ae52426 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93019$ae524250 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94849 = alloca %struct.ScmObj*, align 8
%argslist93019$ae524251 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93019$ae524250)
store volatile %struct.ScmObj* %argslist93019$ae524251, %struct.ScmObj** %stackaddr$prim94849, align 8
%stackaddr$prim94850 = alloca %struct.ScmObj*, align 8
%argslist93019$ae524252 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52426, %struct.ScmObj* %argslist93019$ae524251)
store volatile %struct.ScmObj* %argslist93019$ae524252, %struct.ScmObj** %stackaddr$prim94850, align 8
%clofunc94851 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52425)
musttail call tailcc void %clofunc94851(%struct.ScmObj* %ae52425, %struct.ScmObj* %argslist93019$ae524252)
ret void
falsebranch$cmp94845:
%stackaddr$makeclosure94852 = alloca %struct.ScmObj*, align 8
%fptrToInt94853 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52484 to i64
%ae52484 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94853)
store volatile %struct.ScmObj* %ae52484, %struct.ScmObj** %stackaddr$makeclosure94852, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52484, %struct.ScmObj* %x48150, i64 0)
%ae52485 = call %struct.ScmObj* @const_init_int(i64 0)
%ae52486 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93028$ae524840 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94854 = alloca %struct.ScmObj*, align 8
%argslist93028$ae524841 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52486, %struct.ScmObj* %argslist93028$ae524840)
store volatile %struct.ScmObj* %argslist93028$ae524841, %struct.ScmObj** %stackaddr$prim94854, align 8
%stackaddr$prim94855 = alloca %struct.ScmObj*, align 8
%argslist93028$ae524842 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52485, %struct.ScmObj* %argslist93028$ae524841)
store volatile %struct.ScmObj* %argslist93028$ae524842, %struct.ScmObj** %stackaddr$prim94855, align 8
%clofunc94856 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52484)
musttail call tailcc void %clofunc94856(%struct.ScmObj* %ae52484, %struct.ScmObj* %argslist93028$ae524842)
ret void
}

define tailcc void @proc_clo$ae52425(%struct.ScmObj* %env$ae52425,%struct.ScmObj* %current_45args93011) {
%stackaddr$env-ref94857 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52425, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94857
%stackaddr$prim94858 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93011)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim94858, align 8
%stackaddr$prim94859 = alloca %struct.ScmObj*, align 8
%current_45args93012 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93011)
store volatile %struct.ScmObj* %current_45args93012, %struct.ScmObj** %stackaddr$prim94859, align 8
%stackaddr$prim94860 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93012)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim94860, align 8
%ae52432 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94861 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52432)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim94861, align 8
%stackaddr$makeclosure94862 = alloca %struct.ScmObj*, align 8
%fptrToInt94863 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52433 to i64
%ae52433 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94863)
store volatile %struct.ScmObj* %ae52433, %struct.ScmObj** %stackaddr$makeclosure94862, align 8
%ae52434 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93018$ae524330 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94864 = alloca %struct.ScmObj*, align 8
%argslist93018$ae524331 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93018$ae524330)
store volatile %struct.ScmObj* %argslist93018$ae524331, %struct.ScmObj** %stackaddr$prim94864, align 8
%stackaddr$prim94865 = alloca %struct.ScmObj*, align 8
%argslist93018$ae524332 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52434, %struct.ScmObj* %argslist93018$ae524331)
store volatile %struct.ScmObj* %argslist93018$ae524332, %struct.ScmObj** %stackaddr$prim94865, align 8
%clofunc94866 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52433)
musttail call tailcc void %clofunc94866(%struct.ScmObj* %ae52433, %struct.ScmObj* %argslist93018$ae524332)
ret void
}

define tailcc void @proc_clo$ae52433(%struct.ScmObj* %env$ae52433,%struct.ScmObj* %current_45args93014) {
%stackaddr$prim94867 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93014)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim94867, align 8
%stackaddr$prim94868 = alloca %struct.ScmObj*, align 8
%current_45args93015 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93014)
store volatile %struct.ScmObj* %current_45args93015, %struct.ScmObj** %stackaddr$prim94868, align 8
%stackaddr$prim94869 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93015)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim94869, align 8
%stackaddr$prim94870 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim94870, align 8
%argslist93017$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94871 = alloca %struct.ScmObj*, align 8
%argslist93017$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93017$k0)
store volatile %struct.ScmObj* %argslist93017$k1, %struct.ScmObj** %stackaddr$prim94871, align 8
%clofunc94872 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc94872(%struct.ScmObj* %k, %struct.ScmObj* %argslist93017$k1)
ret void
}

define tailcc void @proc_clo$ae52484(%struct.ScmObj* %env$ae52484,%struct.ScmObj* %current_45args93020) {
%stackaddr$env-ref94873 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52484, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94873
%stackaddr$prim94874 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93020)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim94874, align 8
%stackaddr$prim94875 = alloca %struct.ScmObj*, align 8
%current_45args93021 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93020)
store volatile %struct.ScmObj* %current_45args93021, %struct.ScmObj** %stackaddr$prim94875, align 8
%stackaddr$prim94876 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93021)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim94876, align 8
%ae52494 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94877 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52494)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim94877, align 8
%stackaddr$makeclosure94878 = alloca %struct.ScmObj*, align 8
%fptrToInt94879 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52495 to i64
%ae52495 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94879)
store volatile %struct.ScmObj* %ae52495, %struct.ScmObj** %stackaddr$makeclosure94878, align 8
%ae52496 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93027$ae524950 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94880 = alloca %struct.ScmObj*, align 8
%argslist93027$ae524951 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93027$ae524950)
store volatile %struct.ScmObj* %argslist93027$ae524951, %struct.ScmObj** %stackaddr$prim94880, align 8
%stackaddr$prim94881 = alloca %struct.ScmObj*, align 8
%argslist93027$ae524952 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52496, %struct.ScmObj* %argslist93027$ae524951)
store volatile %struct.ScmObj* %argslist93027$ae524952, %struct.ScmObj** %stackaddr$prim94881, align 8
%clofunc94882 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52495)
musttail call tailcc void %clofunc94882(%struct.ScmObj* %ae52495, %struct.ScmObj* %argslist93027$ae524952)
ret void
}

define tailcc void @proc_clo$ae52495(%struct.ScmObj* %env$ae52495,%struct.ScmObj* %current_45args93023) {
%stackaddr$prim94883 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93023)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim94883, align 8
%stackaddr$prim94884 = alloca %struct.ScmObj*, align 8
%current_45args93024 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93023)
store volatile %struct.ScmObj* %current_45args93024, %struct.ScmObj** %stackaddr$prim94884, align 8
%stackaddr$prim94885 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93024)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim94885, align 8
%stackaddr$prim94886 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim94886, align 8
%argslist93026$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94887 = alloca %struct.ScmObj*, align 8
%argslist93026$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93026$k0)
store volatile %struct.ScmObj* %argslist93026$k1, %struct.ScmObj** %stackaddr$prim94887, align 8
%clofunc94888 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc94888(%struct.ScmObj* %k, %struct.ScmObj* %argslist93026$k1)
ret void
}

define tailcc void @proc_clo$ae52653(%struct.ScmObj* %env$ae52653,%struct.ScmObj* %current_45args93030) {
%stackaddr$env-ref94889 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52653, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94889
%stackaddr$prim94890 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93030)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim94890, align 8
%stackaddr$prim94891 = alloca %struct.ScmObj*, align 8
%current_45args93031 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93030)
store volatile %struct.ScmObj* %current_45args93031, %struct.ScmObj** %stackaddr$prim94891, align 8
%stackaddr$prim94892 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93031)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim94892, align 8
%ae52662 = call %struct.ScmObj* @const_init_false()
%truthy$cmp94893 = call i64 @is_truthy_value(%struct.ScmObj* %ae52662)
%cmp$cmp94893 = icmp eq i64 %truthy$cmp94893, 1
br i1 %cmp$cmp94893, label %truebranch$cmp94893, label %falsebranch$cmp94893
truebranch$cmp94893:
%ae52664 = call %struct.ScmObj* @const_init_int(i64 0)
%ae52665 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94894 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52664, %struct.ScmObj* %ae52665)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim94894, align 8
%stackaddr$makeclosure94895 = alloca %struct.ScmObj*, align 8
%fptrToInt94896 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52666 to i64
%ae52666 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94896)
store volatile %struct.ScmObj* %ae52666, %struct.ScmObj** %stackaddr$makeclosure94895, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52666, %struct.ScmObj* %x48150, i64 0)
%ae52667 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93041$ae526660 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94897 = alloca %struct.ScmObj*, align 8
%argslist93041$ae526661 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93041$ae526660)
store volatile %struct.ScmObj* %argslist93041$ae526661, %struct.ScmObj** %stackaddr$prim94897, align 8
%stackaddr$prim94898 = alloca %struct.ScmObj*, align 8
%argslist93041$ae526662 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52667, %struct.ScmObj* %argslist93041$ae526661)
store volatile %struct.ScmObj* %argslist93041$ae526662, %struct.ScmObj** %stackaddr$prim94898, align 8
%clofunc94899 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52666)
musttail call tailcc void %clofunc94899(%struct.ScmObj* %ae52666, %struct.ScmObj* %argslist93041$ae526662)
ret void
falsebranch$cmp94893:
%stackaddr$makeclosure94900 = alloca %struct.ScmObj*, align 8
%fptrToInt94901 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52725 to i64
%ae52725 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94901)
store volatile %struct.ScmObj* %ae52725, %struct.ScmObj** %stackaddr$makeclosure94900, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae52725, %struct.ScmObj* %x48150, i64 0)
%ae52726 = call %struct.ScmObj* @const_init_int(i64 0)
%ae52727 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93050$ae527250 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94902 = alloca %struct.ScmObj*, align 8
%argslist93050$ae527251 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52727, %struct.ScmObj* %argslist93050$ae527250)
store volatile %struct.ScmObj* %argslist93050$ae527251, %struct.ScmObj** %stackaddr$prim94902, align 8
%stackaddr$prim94903 = alloca %struct.ScmObj*, align 8
%argslist93050$ae527252 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52726, %struct.ScmObj* %argslist93050$ae527251)
store volatile %struct.ScmObj* %argslist93050$ae527252, %struct.ScmObj** %stackaddr$prim94903, align 8
%clofunc94904 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52725)
musttail call tailcc void %clofunc94904(%struct.ScmObj* %ae52725, %struct.ScmObj* %argslist93050$ae527252)
ret void
}

define tailcc void @proc_clo$ae52666(%struct.ScmObj* %env$ae52666,%struct.ScmObj* %current_45args93033) {
%stackaddr$env-ref94905 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52666, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94905
%stackaddr$prim94906 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93033)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim94906, align 8
%stackaddr$prim94907 = alloca %struct.ScmObj*, align 8
%current_45args93034 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93033)
store volatile %struct.ScmObj* %current_45args93034, %struct.ScmObj** %stackaddr$prim94907, align 8
%stackaddr$prim94908 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93034)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim94908, align 8
%ae52673 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94909 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52673)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim94909, align 8
%stackaddr$makeclosure94910 = alloca %struct.ScmObj*, align 8
%fptrToInt94911 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52674 to i64
%ae52674 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94911)
store volatile %struct.ScmObj* %ae52674, %struct.ScmObj** %stackaddr$makeclosure94910, align 8
%ae52675 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93040$ae526740 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94912 = alloca %struct.ScmObj*, align 8
%argslist93040$ae526741 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93040$ae526740)
store volatile %struct.ScmObj* %argslist93040$ae526741, %struct.ScmObj** %stackaddr$prim94912, align 8
%stackaddr$prim94913 = alloca %struct.ScmObj*, align 8
%argslist93040$ae526742 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52675, %struct.ScmObj* %argslist93040$ae526741)
store volatile %struct.ScmObj* %argslist93040$ae526742, %struct.ScmObj** %stackaddr$prim94913, align 8
%clofunc94914 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52674)
musttail call tailcc void %clofunc94914(%struct.ScmObj* %ae52674, %struct.ScmObj* %argslist93040$ae526742)
ret void
}

define tailcc void @proc_clo$ae52674(%struct.ScmObj* %env$ae52674,%struct.ScmObj* %current_45args93036) {
%stackaddr$prim94915 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93036)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim94915, align 8
%stackaddr$prim94916 = alloca %struct.ScmObj*, align 8
%current_45args93037 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93036)
store volatile %struct.ScmObj* %current_45args93037, %struct.ScmObj** %stackaddr$prim94916, align 8
%stackaddr$prim94917 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93037)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim94917, align 8
%stackaddr$prim94918 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim94918, align 8
%argslist93039$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94919 = alloca %struct.ScmObj*, align 8
%argslist93039$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93039$k0)
store volatile %struct.ScmObj* %argslist93039$k1, %struct.ScmObj** %stackaddr$prim94919, align 8
%clofunc94920 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc94920(%struct.ScmObj* %k, %struct.ScmObj* %argslist93039$k1)
ret void
}

define tailcc void @proc_clo$ae52725(%struct.ScmObj* %env$ae52725,%struct.ScmObj* %current_45args93042) {
%stackaddr$env-ref94921 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae52725, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94921
%stackaddr$prim94922 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93042)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim94922, align 8
%stackaddr$prim94923 = alloca %struct.ScmObj*, align 8
%current_45args93043 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93042)
store volatile %struct.ScmObj* %current_45args93043, %struct.ScmObj** %stackaddr$prim94923, align 8
%stackaddr$prim94924 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93043)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim94924, align 8
%ae52735 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94925 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae52735)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim94925, align 8
%stackaddr$makeclosure94926 = alloca %struct.ScmObj*, align 8
%fptrToInt94927 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae52736 to i64
%ae52736 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94927)
store volatile %struct.ScmObj* %ae52736, %struct.ScmObj** %stackaddr$makeclosure94926, align 8
%ae52737 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93049$ae527360 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94928 = alloca %struct.ScmObj*, align 8
%argslist93049$ae527361 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93049$ae527360)
store volatile %struct.ScmObj* %argslist93049$ae527361, %struct.ScmObj** %stackaddr$prim94928, align 8
%stackaddr$prim94929 = alloca %struct.ScmObj*, align 8
%argslist93049$ae527362 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae52737, %struct.ScmObj* %argslist93049$ae527361)
store volatile %struct.ScmObj* %argslist93049$ae527362, %struct.ScmObj** %stackaddr$prim94929, align 8
%clofunc94930 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae52736)
musttail call tailcc void %clofunc94930(%struct.ScmObj* %ae52736, %struct.ScmObj* %argslist93049$ae527362)
ret void
}

define tailcc void @proc_clo$ae52736(%struct.ScmObj* %env$ae52736,%struct.ScmObj* %current_45args93045) {
%stackaddr$prim94931 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93045)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim94931, align 8
%stackaddr$prim94932 = alloca %struct.ScmObj*, align 8
%current_45args93046 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93045)
store volatile %struct.ScmObj* %current_45args93046, %struct.ScmObj** %stackaddr$prim94932, align 8
%stackaddr$prim94933 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93046)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim94933, align 8
%stackaddr$prim94934 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim94934, align 8
%argslist93048$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94935 = alloca %struct.ScmObj*, align 8
%argslist93048$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93048$k0)
store volatile %struct.ScmObj* %argslist93048$k1, %struct.ScmObj** %stackaddr$prim94935, align 8
%clofunc94936 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc94936(%struct.ScmObj* %k, %struct.ScmObj* %argslist93048$k1)
ret void
}

define tailcc void @proc_clo$ae53996(%struct.ScmObj* %env$ae53996,%struct.ScmObj* %current_45args93054) {
%stackaddr$env-ref94937 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae53996, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94937
%stackaddr$prim94938 = alloca %struct.ScmObj*, align 8
%_95k48330 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93054)
store volatile %struct.ScmObj* %_95k48330, %struct.ScmObj** %stackaddr$prim94938, align 8
%stackaddr$prim94939 = alloca %struct.ScmObj*, align 8
%current_45args93055 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93054)
store volatile %struct.ScmObj* %current_45args93055, %struct.ScmObj** %stackaddr$prim94939, align 8
%stackaddr$prim94940 = alloca %struct.ScmObj*, align 8
%t4802848154 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93055)
store volatile %struct.ScmObj* %t4802848154, %struct.ScmObj** %stackaddr$prim94940, align 8
%ae54002 = call %struct.ScmObj* @const_init_false()
%truthy$cmp94941 = call i64 @is_truthy_value(%struct.ScmObj* %ae54002)
%cmp$cmp94941 = icmp eq i64 %truthy$cmp94941, 1
br i1 %cmp$cmp94941, label %truebranch$cmp94941, label %falsebranch$cmp94941
truebranch$cmp94941:
%stackaddr$prim94942 = alloca %struct.ScmObj*, align 8
%cpsprim48337 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48337, %struct.ScmObj** %stackaddr$prim94942, align 8
%stackaddr$makeclosure94943 = alloca %struct.ScmObj*, align 8
%fptrToInt94944 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54003 to i64
%ae54003 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94944)
store volatile %struct.ScmObj* %ae54003, %struct.ScmObj** %stackaddr$makeclosure94943, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54003, %struct.ScmObj* %x48150, i64 0)
%ae54004 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93104$ae540030 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94945 = alloca %struct.ScmObj*, align 8
%argslist93104$ae540031 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48337, %struct.ScmObj* %argslist93104$ae540030)
store volatile %struct.ScmObj* %argslist93104$ae540031, %struct.ScmObj** %stackaddr$prim94945, align 8
%stackaddr$prim94946 = alloca %struct.ScmObj*, align 8
%argslist93104$ae540032 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54004, %struct.ScmObj* %argslist93104$ae540031)
store volatile %struct.ScmObj* %argslist93104$ae540032, %struct.ScmObj** %stackaddr$prim94946, align 8
%clofunc94947 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54003)
musttail call tailcc void %clofunc94947(%struct.ScmObj* %ae54003, %struct.ScmObj* %argslist93104$ae540032)
ret void
falsebranch$cmp94941:
%ae54468 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94948 = alloca %struct.ScmObj*, align 8
%anf_45bind48287 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54468)
store volatile %struct.ScmObj* %anf_45bind48287, %struct.ScmObj** %stackaddr$prim94948, align 8
%ae54470 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim94949 = alloca %struct.ScmObj*, align 8
%anf_45bind48288 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48287, %struct.ScmObj* %ae54470)
store volatile %struct.ScmObj* %anf_45bind48288, %struct.ScmObj** %stackaddr$prim94949, align 8
%ae54472 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim94950 = alloca %struct.ScmObj*, align 8
%anf_45bind48289 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48288, %struct.ScmObj* %ae54472)
store volatile %struct.ScmObj* %anf_45bind48289, %struct.ScmObj** %stackaddr$prim94950, align 8
%ae54474 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94951 = alloca %struct.ScmObj*, align 8
%cpsprim48338 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54474, %struct.ScmObj* %anf_45bind48289)
store volatile %struct.ScmObj* %cpsprim48338, %struct.ScmObj** %stackaddr$prim94951, align 8
%stackaddr$makeclosure94952 = alloca %struct.ScmObj*, align 8
%fptrToInt94953 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54476 to i64
%ae54476 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94953)
store volatile %struct.ScmObj* %ae54476, %struct.ScmObj** %stackaddr$makeclosure94952, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54476, %struct.ScmObj* %x48150, i64 0)
%ae54477 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93152$ae544760 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94954 = alloca %struct.ScmObj*, align 8
%argslist93152$ae544761 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48338, %struct.ScmObj* %argslist93152$ae544760)
store volatile %struct.ScmObj* %argslist93152$ae544761, %struct.ScmObj** %stackaddr$prim94954, align 8
%stackaddr$prim94955 = alloca %struct.ScmObj*, align 8
%argslist93152$ae544762 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54477, %struct.ScmObj* %argslist93152$ae544761)
store volatile %struct.ScmObj* %argslist93152$ae544762, %struct.ScmObj** %stackaddr$prim94955, align 8
%clofunc94956 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54476)
musttail call tailcc void %clofunc94956(%struct.ScmObj* %ae54476, %struct.ScmObj* %argslist93152$ae544762)
ret void
}

define tailcc void @proc_clo$ae54003(%struct.ScmObj* %env$ae54003,%struct.ScmObj* %current_45args93057) {
%stackaddr$env-ref94957 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54003, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94957
%stackaddr$prim94958 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93057)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim94958, align 8
%stackaddr$prim94959 = alloca %struct.ScmObj*, align 8
%current_45args93058 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93057)
store volatile %struct.ScmObj* %current_45args93058, %struct.ScmObj** %stackaddr$prim94959, align 8
%stackaddr$prim94960 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93058)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim94960, align 8
%ae54010 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94961 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54010)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim94961, align 8
%truthy$cmp94962 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp94962 = icmp eq i64 %truthy$cmp94962, 1
br i1 %cmp$cmp94962, label %truebranch$cmp94962, label %falsebranch$cmp94962
truebranch$cmp94962:
%ae54013 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94963 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54013)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim94963, align 8
%ae54015 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94964 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54015)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim94964, align 8
%stackaddr$prim94965 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim94965, align 8
%ae54019 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94966 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54019, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim94966, align 8
%stackaddr$makeclosure94967 = alloca %struct.ScmObj*, align 8
%fptrToInt94968 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54021 to i64
%ae54021 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94968)
store volatile %struct.ScmObj* %ae54021, %struct.ScmObj** %stackaddr$makeclosure94967, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54021, %struct.ScmObj* %x48150, i64 0)
%ae54022 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93081$ae540210 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94969 = alloca %struct.ScmObj*, align 8
%argslist93081$ae540211 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93081$ae540210)
store volatile %struct.ScmObj* %argslist93081$ae540211, %struct.ScmObj** %stackaddr$prim94969, align 8
%stackaddr$prim94970 = alloca %struct.ScmObj*, align 8
%argslist93081$ae540212 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54022, %struct.ScmObj* %argslist93081$ae540211)
store volatile %struct.ScmObj* %argslist93081$ae540212, %struct.ScmObj** %stackaddr$prim94970, align 8
%clofunc94971 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54021)
musttail call tailcc void %clofunc94971(%struct.ScmObj* %ae54021, %struct.ScmObj* %argslist93081$ae540212)
ret void
falsebranch$cmp94962:
%stackaddr$makeclosure94972 = alloca %struct.ScmObj*, align 8
%fptrToInt94973 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54259 to i64
%ae54259 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94973)
store volatile %struct.ScmObj* %ae54259, %struct.ScmObj** %stackaddr$makeclosure94972, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54259, %struct.ScmObj* %x48150, i64 0)
%ae54260 = call %struct.ScmObj* @const_init_int(i64 0)
%ae54261 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93103$ae542590 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94974 = alloca %struct.ScmObj*, align 8
%argslist93103$ae542591 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54261, %struct.ScmObj* %argslist93103$ae542590)
store volatile %struct.ScmObj* %argslist93103$ae542591, %struct.ScmObj** %stackaddr$prim94974, align 8
%stackaddr$prim94975 = alloca %struct.ScmObj*, align 8
%argslist93103$ae542592 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54260, %struct.ScmObj* %argslist93103$ae542591)
store volatile %struct.ScmObj* %argslist93103$ae542592, %struct.ScmObj** %stackaddr$prim94975, align 8
%clofunc94976 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54259)
musttail call tailcc void %clofunc94976(%struct.ScmObj* %ae54259, %struct.ScmObj* %argslist93103$ae542592)
ret void
}

define tailcc void @proc_clo$ae54021(%struct.ScmObj* %env$ae54021,%struct.ScmObj* %current_45args93060) {
%stackaddr$env-ref94977 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54021, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94977
%stackaddr$prim94978 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93060)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim94978, align 8
%stackaddr$prim94979 = alloca %struct.ScmObj*, align 8
%current_45args93061 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93060)
store volatile %struct.ScmObj* %current_45args93061, %struct.ScmObj** %stackaddr$prim94979, align 8
%stackaddr$prim94980 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93061)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim94980, align 8
%ae54027 = call %struct.ScmObj* @const_init_false()
%truthy$cmp94981 = call i64 @is_truthy_value(%struct.ScmObj* %ae54027)
%cmp$cmp94981 = icmp eq i64 %truthy$cmp94981, 1
br i1 %cmp$cmp94981, label %truebranch$cmp94981, label %falsebranch$cmp94981
truebranch$cmp94981:
%ae54029 = call %struct.ScmObj* @const_init_int(i64 0)
%ae54030 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94982 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54029, %struct.ScmObj* %ae54030)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim94982, align 8
%stackaddr$makeclosure94983 = alloca %struct.ScmObj*, align 8
%fptrToInt94984 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54031 to i64
%ae54031 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94984)
store volatile %struct.ScmObj* %ae54031, %struct.ScmObj** %stackaddr$makeclosure94983, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54031, %struct.ScmObj* %x48150, i64 0)
%ae54032 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93071$ae540310 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94985 = alloca %struct.ScmObj*, align 8
%argslist93071$ae540311 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93071$ae540310)
store volatile %struct.ScmObj* %argslist93071$ae540311, %struct.ScmObj** %stackaddr$prim94985, align 8
%stackaddr$prim94986 = alloca %struct.ScmObj*, align 8
%argslist93071$ae540312 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54032, %struct.ScmObj* %argslist93071$ae540311)
store volatile %struct.ScmObj* %argslist93071$ae540312, %struct.ScmObj** %stackaddr$prim94986, align 8
%clofunc94987 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54031)
musttail call tailcc void %clofunc94987(%struct.ScmObj* %ae54031, %struct.ScmObj* %argslist93071$ae540312)
ret void
falsebranch$cmp94981:
%stackaddr$makeclosure94988 = alloca %struct.ScmObj*, align 8
%fptrToInt94989 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54090 to i64
%ae54090 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt94989)
store volatile %struct.ScmObj* %ae54090, %struct.ScmObj** %stackaddr$makeclosure94988, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54090, %struct.ScmObj* %x48150, i64 0)
%ae54091 = call %struct.ScmObj* @const_init_int(i64 0)
%ae54092 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93080$ae540900 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim94990 = alloca %struct.ScmObj*, align 8
%argslist93080$ae540901 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54092, %struct.ScmObj* %argslist93080$ae540900)
store volatile %struct.ScmObj* %argslist93080$ae540901, %struct.ScmObj** %stackaddr$prim94990, align 8
%stackaddr$prim94991 = alloca %struct.ScmObj*, align 8
%argslist93080$ae540902 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54091, %struct.ScmObj* %argslist93080$ae540901)
store volatile %struct.ScmObj* %argslist93080$ae540902, %struct.ScmObj** %stackaddr$prim94991, align 8
%clofunc94992 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54090)
musttail call tailcc void %clofunc94992(%struct.ScmObj* %ae54090, %struct.ScmObj* %argslist93080$ae540902)
ret void
}

define tailcc void @proc_clo$ae54031(%struct.ScmObj* %env$ae54031,%struct.ScmObj* %current_45args93063) {
%stackaddr$env-ref94993 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54031, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref94993
%stackaddr$prim94994 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93063)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim94994, align 8
%stackaddr$prim94995 = alloca %struct.ScmObj*, align 8
%current_45args93064 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93063)
store volatile %struct.ScmObj* %current_45args93064, %struct.ScmObj** %stackaddr$prim94995, align 8
%stackaddr$prim94996 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93064)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim94996, align 8
%ae54038 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim94997 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54038)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim94997, align 8
%stackaddr$makeclosure94998 = alloca %struct.ScmObj*, align 8
%fptrToInt94999 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54039 to i64
%ae54039 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt94999)
store volatile %struct.ScmObj* %ae54039, %struct.ScmObj** %stackaddr$makeclosure94998, align 8
%ae54040 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93070$ae540390 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95000 = alloca %struct.ScmObj*, align 8
%argslist93070$ae540391 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93070$ae540390)
store volatile %struct.ScmObj* %argslist93070$ae540391, %struct.ScmObj** %stackaddr$prim95000, align 8
%stackaddr$prim95001 = alloca %struct.ScmObj*, align 8
%argslist93070$ae540392 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54040, %struct.ScmObj* %argslist93070$ae540391)
store volatile %struct.ScmObj* %argslist93070$ae540392, %struct.ScmObj** %stackaddr$prim95001, align 8
%clofunc95002 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54039)
musttail call tailcc void %clofunc95002(%struct.ScmObj* %ae54039, %struct.ScmObj* %argslist93070$ae540392)
ret void
}

define tailcc void @proc_clo$ae54039(%struct.ScmObj* %env$ae54039,%struct.ScmObj* %current_45args93066) {
%stackaddr$prim95003 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93066)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95003, align 8
%stackaddr$prim95004 = alloca %struct.ScmObj*, align 8
%current_45args93067 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93066)
store volatile %struct.ScmObj* %current_45args93067, %struct.ScmObj** %stackaddr$prim95004, align 8
%stackaddr$prim95005 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93067)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95005, align 8
%stackaddr$prim95006 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95006, align 8
%argslist93069$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95007 = alloca %struct.ScmObj*, align 8
%argslist93069$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93069$k0)
store volatile %struct.ScmObj* %argslist93069$k1, %struct.ScmObj** %stackaddr$prim95007, align 8
%clofunc95008 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95008(%struct.ScmObj* %k, %struct.ScmObj* %argslist93069$k1)
ret void
}

define tailcc void @proc_clo$ae54090(%struct.ScmObj* %env$ae54090,%struct.ScmObj* %current_45args93072) {
%stackaddr$env-ref95009 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54090, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95009
%stackaddr$prim95010 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93072)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95010, align 8
%stackaddr$prim95011 = alloca %struct.ScmObj*, align 8
%current_45args93073 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93072)
store volatile %struct.ScmObj* %current_45args93073, %struct.ScmObj** %stackaddr$prim95011, align 8
%stackaddr$prim95012 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93073)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95012, align 8
%ae54100 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95013 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54100)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95013, align 8
%stackaddr$makeclosure95014 = alloca %struct.ScmObj*, align 8
%fptrToInt95015 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54101 to i64
%ae54101 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95015)
store volatile %struct.ScmObj* %ae54101, %struct.ScmObj** %stackaddr$makeclosure95014, align 8
%ae54102 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93079$ae541010 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95016 = alloca %struct.ScmObj*, align 8
%argslist93079$ae541011 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93079$ae541010)
store volatile %struct.ScmObj* %argslist93079$ae541011, %struct.ScmObj** %stackaddr$prim95016, align 8
%stackaddr$prim95017 = alloca %struct.ScmObj*, align 8
%argslist93079$ae541012 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54102, %struct.ScmObj* %argslist93079$ae541011)
store volatile %struct.ScmObj* %argslist93079$ae541012, %struct.ScmObj** %stackaddr$prim95017, align 8
%clofunc95018 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54101)
musttail call tailcc void %clofunc95018(%struct.ScmObj* %ae54101, %struct.ScmObj* %argslist93079$ae541012)
ret void
}

define tailcc void @proc_clo$ae54101(%struct.ScmObj* %env$ae54101,%struct.ScmObj* %current_45args93075) {
%stackaddr$prim95019 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93075)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95019, align 8
%stackaddr$prim95020 = alloca %struct.ScmObj*, align 8
%current_45args93076 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93075)
store volatile %struct.ScmObj* %current_45args93076, %struct.ScmObj** %stackaddr$prim95020, align 8
%stackaddr$prim95021 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93076)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95021, align 8
%stackaddr$prim95022 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95022, align 8
%argslist93078$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95023 = alloca %struct.ScmObj*, align 8
%argslist93078$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93078$k0)
store volatile %struct.ScmObj* %argslist93078$k1, %struct.ScmObj** %stackaddr$prim95023, align 8
%clofunc95024 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95024(%struct.ScmObj* %k, %struct.ScmObj* %argslist93078$k1)
ret void
}

define tailcc void @proc_clo$ae54259(%struct.ScmObj* %env$ae54259,%struct.ScmObj* %current_45args93082) {
%stackaddr$env-ref95025 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54259, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95025
%stackaddr$prim95026 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93082)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95026, align 8
%stackaddr$prim95027 = alloca %struct.ScmObj*, align 8
%current_45args93083 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93082)
store volatile %struct.ScmObj* %current_45args93083, %struct.ScmObj** %stackaddr$prim95027, align 8
%stackaddr$prim95028 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93083)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95028, align 8
%ae54268 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95029 = call i64 @is_truthy_value(%struct.ScmObj* %ae54268)
%cmp$cmp95029 = icmp eq i64 %truthy$cmp95029, 1
br i1 %cmp$cmp95029, label %truebranch$cmp95029, label %falsebranch$cmp95029
truebranch$cmp95029:
%ae54270 = call %struct.ScmObj* @const_init_int(i64 0)
%ae54271 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95030 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54270, %struct.ScmObj* %ae54271)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95030, align 8
%stackaddr$makeclosure95031 = alloca %struct.ScmObj*, align 8
%fptrToInt95032 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54272 to i64
%ae54272 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95032)
store volatile %struct.ScmObj* %ae54272, %struct.ScmObj** %stackaddr$makeclosure95031, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54272, %struct.ScmObj* %x48150, i64 0)
%ae54273 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93093$ae542720 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95033 = alloca %struct.ScmObj*, align 8
%argslist93093$ae542721 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93093$ae542720)
store volatile %struct.ScmObj* %argslist93093$ae542721, %struct.ScmObj** %stackaddr$prim95033, align 8
%stackaddr$prim95034 = alloca %struct.ScmObj*, align 8
%argslist93093$ae542722 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54273, %struct.ScmObj* %argslist93093$ae542721)
store volatile %struct.ScmObj* %argslist93093$ae542722, %struct.ScmObj** %stackaddr$prim95034, align 8
%clofunc95035 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54272)
musttail call tailcc void %clofunc95035(%struct.ScmObj* %ae54272, %struct.ScmObj* %argslist93093$ae542722)
ret void
falsebranch$cmp95029:
%stackaddr$makeclosure95036 = alloca %struct.ScmObj*, align 8
%fptrToInt95037 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54331 to i64
%ae54331 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95037)
store volatile %struct.ScmObj* %ae54331, %struct.ScmObj** %stackaddr$makeclosure95036, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54331, %struct.ScmObj* %x48150, i64 0)
%ae54332 = call %struct.ScmObj* @const_init_int(i64 0)
%ae54333 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93102$ae543310 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95038 = alloca %struct.ScmObj*, align 8
%argslist93102$ae543311 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54333, %struct.ScmObj* %argslist93102$ae543310)
store volatile %struct.ScmObj* %argslist93102$ae543311, %struct.ScmObj** %stackaddr$prim95038, align 8
%stackaddr$prim95039 = alloca %struct.ScmObj*, align 8
%argslist93102$ae543312 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54332, %struct.ScmObj* %argslist93102$ae543311)
store volatile %struct.ScmObj* %argslist93102$ae543312, %struct.ScmObj** %stackaddr$prim95039, align 8
%clofunc95040 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54331)
musttail call tailcc void %clofunc95040(%struct.ScmObj* %ae54331, %struct.ScmObj* %argslist93102$ae543312)
ret void
}

define tailcc void @proc_clo$ae54272(%struct.ScmObj* %env$ae54272,%struct.ScmObj* %current_45args93085) {
%stackaddr$env-ref95041 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54272, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95041
%stackaddr$prim95042 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93085)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95042, align 8
%stackaddr$prim95043 = alloca %struct.ScmObj*, align 8
%current_45args93086 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93085)
store volatile %struct.ScmObj* %current_45args93086, %struct.ScmObj** %stackaddr$prim95043, align 8
%stackaddr$prim95044 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93086)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95044, align 8
%ae54279 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95045 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54279)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95045, align 8
%stackaddr$makeclosure95046 = alloca %struct.ScmObj*, align 8
%fptrToInt95047 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54280 to i64
%ae54280 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95047)
store volatile %struct.ScmObj* %ae54280, %struct.ScmObj** %stackaddr$makeclosure95046, align 8
%ae54281 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93092$ae542800 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95048 = alloca %struct.ScmObj*, align 8
%argslist93092$ae542801 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93092$ae542800)
store volatile %struct.ScmObj* %argslist93092$ae542801, %struct.ScmObj** %stackaddr$prim95048, align 8
%stackaddr$prim95049 = alloca %struct.ScmObj*, align 8
%argslist93092$ae542802 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54281, %struct.ScmObj* %argslist93092$ae542801)
store volatile %struct.ScmObj* %argslist93092$ae542802, %struct.ScmObj** %stackaddr$prim95049, align 8
%clofunc95050 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54280)
musttail call tailcc void %clofunc95050(%struct.ScmObj* %ae54280, %struct.ScmObj* %argslist93092$ae542802)
ret void
}

define tailcc void @proc_clo$ae54280(%struct.ScmObj* %env$ae54280,%struct.ScmObj* %current_45args93088) {
%stackaddr$prim95051 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93088)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95051, align 8
%stackaddr$prim95052 = alloca %struct.ScmObj*, align 8
%current_45args93089 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93088)
store volatile %struct.ScmObj* %current_45args93089, %struct.ScmObj** %stackaddr$prim95052, align 8
%stackaddr$prim95053 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93089)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95053, align 8
%stackaddr$prim95054 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95054, align 8
%argslist93091$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95055 = alloca %struct.ScmObj*, align 8
%argslist93091$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93091$k0)
store volatile %struct.ScmObj* %argslist93091$k1, %struct.ScmObj** %stackaddr$prim95055, align 8
%clofunc95056 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95056(%struct.ScmObj* %k, %struct.ScmObj* %argslist93091$k1)
ret void
}

define tailcc void @proc_clo$ae54331(%struct.ScmObj* %env$ae54331,%struct.ScmObj* %current_45args93094) {
%stackaddr$env-ref95057 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54331, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95057
%stackaddr$prim95058 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93094)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95058, align 8
%stackaddr$prim95059 = alloca %struct.ScmObj*, align 8
%current_45args93095 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93094)
store volatile %struct.ScmObj* %current_45args93095, %struct.ScmObj** %stackaddr$prim95059, align 8
%stackaddr$prim95060 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93095)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95060, align 8
%ae54341 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95061 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54341)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95061, align 8
%stackaddr$makeclosure95062 = alloca %struct.ScmObj*, align 8
%fptrToInt95063 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54342 to i64
%ae54342 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95063)
store volatile %struct.ScmObj* %ae54342, %struct.ScmObj** %stackaddr$makeclosure95062, align 8
%ae54343 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93101$ae543420 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95064 = alloca %struct.ScmObj*, align 8
%argslist93101$ae543421 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93101$ae543420)
store volatile %struct.ScmObj* %argslist93101$ae543421, %struct.ScmObj** %stackaddr$prim95064, align 8
%stackaddr$prim95065 = alloca %struct.ScmObj*, align 8
%argslist93101$ae543422 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54343, %struct.ScmObj* %argslist93101$ae543421)
store volatile %struct.ScmObj* %argslist93101$ae543422, %struct.ScmObj** %stackaddr$prim95065, align 8
%clofunc95066 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54342)
musttail call tailcc void %clofunc95066(%struct.ScmObj* %ae54342, %struct.ScmObj* %argslist93101$ae543422)
ret void
}

define tailcc void @proc_clo$ae54342(%struct.ScmObj* %env$ae54342,%struct.ScmObj* %current_45args93097) {
%stackaddr$prim95067 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93097)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95067, align 8
%stackaddr$prim95068 = alloca %struct.ScmObj*, align 8
%current_45args93098 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93097)
store volatile %struct.ScmObj* %current_45args93098, %struct.ScmObj** %stackaddr$prim95068, align 8
%stackaddr$prim95069 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93098)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95069, align 8
%stackaddr$prim95070 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95070, align 8
%argslist93100$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95071 = alloca %struct.ScmObj*, align 8
%argslist93100$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93100$k0)
store volatile %struct.ScmObj* %argslist93100$k1, %struct.ScmObj** %stackaddr$prim95071, align 8
%clofunc95072 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95072(%struct.ScmObj* %k, %struct.ScmObj* %argslist93100$k1)
ret void
}

define tailcc void @proc_clo$ae54476(%struct.ScmObj* %env$ae54476,%struct.ScmObj* %current_45args93105) {
%stackaddr$env-ref95073 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54476, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95073
%stackaddr$prim95074 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93105)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim95074, align 8
%stackaddr$prim95075 = alloca %struct.ScmObj*, align 8
%current_45args93106 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93105)
store volatile %struct.ScmObj* %current_45args93106, %struct.ScmObj** %stackaddr$prim95075, align 8
%stackaddr$prim95076 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93106)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim95076, align 8
%ae54483 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95077 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54483)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim95077, align 8
%truthy$cmp95078 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp95078 = icmp eq i64 %truthy$cmp95078, 1
br i1 %cmp$cmp95078, label %truebranch$cmp95078, label %falsebranch$cmp95078
truebranch$cmp95078:
%ae54486 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95079 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54486)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim95079, align 8
%ae54488 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95080 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54488)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim95080, align 8
%stackaddr$prim95081 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim95081, align 8
%ae54492 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95082 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54492, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim95082, align 8
%stackaddr$makeclosure95083 = alloca %struct.ScmObj*, align 8
%fptrToInt95084 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54494 to i64
%ae54494 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95084)
store volatile %struct.ScmObj* %ae54494, %struct.ScmObj** %stackaddr$makeclosure95083, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54494, %struct.ScmObj* %x48150, i64 0)
%ae54495 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93129$ae544940 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95085 = alloca %struct.ScmObj*, align 8
%argslist93129$ae544941 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93129$ae544940)
store volatile %struct.ScmObj* %argslist93129$ae544941, %struct.ScmObj** %stackaddr$prim95085, align 8
%stackaddr$prim95086 = alloca %struct.ScmObj*, align 8
%argslist93129$ae544942 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54495, %struct.ScmObj* %argslist93129$ae544941)
store volatile %struct.ScmObj* %argslist93129$ae544942, %struct.ScmObj** %stackaddr$prim95086, align 8
%clofunc95087 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54494)
musttail call tailcc void %clofunc95087(%struct.ScmObj* %ae54494, %struct.ScmObj* %argslist93129$ae544942)
ret void
falsebranch$cmp95078:
%stackaddr$makeclosure95088 = alloca %struct.ScmObj*, align 8
%fptrToInt95089 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54732 to i64
%ae54732 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95089)
store volatile %struct.ScmObj* %ae54732, %struct.ScmObj** %stackaddr$makeclosure95088, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54732, %struct.ScmObj* %x48150, i64 0)
%ae54733 = call %struct.ScmObj* @const_init_int(i64 0)
%ae54734 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93151$ae547320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95090 = alloca %struct.ScmObj*, align 8
%argslist93151$ae547321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54734, %struct.ScmObj* %argslist93151$ae547320)
store volatile %struct.ScmObj* %argslist93151$ae547321, %struct.ScmObj** %stackaddr$prim95090, align 8
%stackaddr$prim95091 = alloca %struct.ScmObj*, align 8
%argslist93151$ae547322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54733, %struct.ScmObj* %argslist93151$ae547321)
store volatile %struct.ScmObj* %argslist93151$ae547322, %struct.ScmObj** %stackaddr$prim95091, align 8
%clofunc95092 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54732)
musttail call tailcc void %clofunc95092(%struct.ScmObj* %ae54732, %struct.ScmObj* %argslist93151$ae547322)
ret void
}

define tailcc void @proc_clo$ae54494(%struct.ScmObj* %env$ae54494,%struct.ScmObj* %current_45args93108) {
%stackaddr$env-ref95093 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54494, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95093
%stackaddr$prim95094 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93108)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95094, align 8
%stackaddr$prim95095 = alloca %struct.ScmObj*, align 8
%current_45args93109 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93108)
store volatile %struct.ScmObj* %current_45args93109, %struct.ScmObj** %stackaddr$prim95095, align 8
%stackaddr$prim95096 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93109)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95096, align 8
%ae54500 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95097 = call i64 @is_truthy_value(%struct.ScmObj* %ae54500)
%cmp$cmp95097 = icmp eq i64 %truthy$cmp95097, 1
br i1 %cmp$cmp95097, label %truebranch$cmp95097, label %falsebranch$cmp95097
truebranch$cmp95097:
%ae54502 = call %struct.ScmObj* @const_init_int(i64 0)
%ae54503 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95098 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54502, %struct.ScmObj* %ae54503)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95098, align 8
%stackaddr$makeclosure95099 = alloca %struct.ScmObj*, align 8
%fptrToInt95100 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54504 to i64
%ae54504 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95100)
store volatile %struct.ScmObj* %ae54504, %struct.ScmObj** %stackaddr$makeclosure95099, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54504, %struct.ScmObj* %x48150, i64 0)
%ae54505 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93119$ae545040 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95101 = alloca %struct.ScmObj*, align 8
%argslist93119$ae545041 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93119$ae545040)
store volatile %struct.ScmObj* %argslist93119$ae545041, %struct.ScmObj** %stackaddr$prim95101, align 8
%stackaddr$prim95102 = alloca %struct.ScmObj*, align 8
%argslist93119$ae545042 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54505, %struct.ScmObj* %argslist93119$ae545041)
store volatile %struct.ScmObj* %argslist93119$ae545042, %struct.ScmObj** %stackaddr$prim95102, align 8
%clofunc95103 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54504)
musttail call tailcc void %clofunc95103(%struct.ScmObj* %ae54504, %struct.ScmObj* %argslist93119$ae545042)
ret void
falsebranch$cmp95097:
%stackaddr$makeclosure95104 = alloca %struct.ScmObj*, align 8
%fptrToInt95105 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54563 to i64
%ae54563 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95105)
store volatile %struct.ScmObj* %ae54563, %struct.ScmObj** %stackaddr$makeclosure95104, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54563, %struct.ScmObj* %x48150, i64 0)
%ae54564 = call %struct.ScmObj* @const_init_int(i64 0)
%ae54565 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93128$ae545630 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95106 = alloca %struct.ScmObj*, align 8
%argslist93128$ae545631 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54565, %struct.ScmObj* %argslist93128$ae545630)
store volatile %struct.ScmObj* %argslist93128$ae545631, %struct.ScmObj** %stackaddr$prim95106, align 8
%stackaddr$prim95107 = alloca %struct.ScmObj*, align 8
%argslist93128$ae545632 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54564, %struct.ScmObj* %argslist93128$ae545631)
store volatile %struct.ScmObj* %argslist93128$ae545632, %struct.ScmObj** %stackaddr$prim95107, align 8
%clofunc95108 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54563)
musttail call tailcc void %clofunc95108(%struct.ScmObj* %ae54563, %struct.ScmObj* %argslist93128$ae545632)
ret void
}

define tailcc void @proc_clo$ae54504(%struct.ScmObj* %env$ae54504,%struct.ScmObj* %current_45args93111) {
%stackaddr$env-ref95109 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54504, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95109
%stackaddr$prim95110 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93111)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95110, align 8
%stackaddr$prim95111 = alloca %struct.ScmObj*, align 8
%current_45args93112 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93111)
store volatile %struct.ScmObj* %current_45args93112, %struct.ScmObj** %stackaddr$prim95111, align 8
%stackaddr$prim95112 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93112)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95112, align 8
%ae54511 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95113 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54511)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95113, align 8
%stackaddr$makeclosure95114 = alloca %struct.ScmObj*, align 8
%fptrToInt95115 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54512 to i64
%ae54512 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95115)
store volatile %struct.ScmObj* %ae54512, %struct.ScmObj** %stackaddr$makeclosure95114, align 8
%ae54513 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93118$ae545120 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95116 = alloca %struct.ScmObj*, align 8
%argslist93118$ae545121 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93118$ae545120)
store volatile %struct.ScmObj* %argslist93118$ae545121, %struct.ScmObj** %stackaddr$prim95116, align 8
%stackaddr$prim95117 = alloca %struct.ScmObj*, align 8
%argslist93118$ae545122 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54513, %struct.ScmObj* %argslist93118$ae545121)
store volatile %struct.ScmObj* %argslist93118$ae545122, %struct.ScmObj** %stackaddr$prim95117, align 8
%clofunc95118 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54512)
musttail call tailcc void %clofunc95118(%struct.ScmObj* %ae54512, %struct.ScmObj* %argslist93118$ae545122)
ret void
}

define tailcc void @proc_clo$ae54512(%struct.ScmObj* %env$ae54512,%struct.ScmObj* %current_45args93114) {
%stackaddr$prim95119 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93114)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95119, align 8
%stackaddr$prim95120 = alloca %struct.ScmObj*, align 8
%current_45args93115 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93114)
store volatile %struct.ScmObj* %current_45args93115, %struct.ScmObj** %stackaddr$prim95120, align 8
%stackaddr$prim95121 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93115)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95121, align 8
%stackaddr$prim95122 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95122, align 8
%argslist93117$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95123 = alloca %struct.ScmObj*, align 8
%argslist93117$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93117$k0)
store volatile %struct.ScmObj* %argslist93117$k1, %struct.ScmObj** %stackaddr$prim95123, align 8
%clofunc95124 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95124(%struct.ScmObj* %k, %struct.ScmObj* %argslist93117$k1)
ret void
}

define tailcc void @proc_clo$ae54563(%struct.ScmObj* %env$ae54563,%struct.ScmObj* %current_45args93120) {
%stackaddr$env-ref95125 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54563, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95125
%stackaddr$prim95126 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93120)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95126, align 8
%stackaddr$prim95127 = alloca %struct.ScmObj*, align 8
%current_45args93121 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93120)
store volatile %struct.ScmObj* %current_45args93121, %struct.ScmObj** %stackaddr$prim95127, align 8
%stackaddr$prim95128 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93121)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95128, align 8
%ae54573 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95129 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54573)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95129, align 8
%stackaddr$makeclosure95130 = alloca %struct.ScmObj*, align 8
%fptrToInt95131 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54574 to i64
%ae54574 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95131)
store volatile %struct.ScmObj* %ae54574, %struct.ScmObj** %stackaddr$makeclosure95130, align 8
%ae54575 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93127$ae545740 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95132 = alloca %struct.ScmObj*, align 8
%argslist93127$ae545741 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93127$ae545740)
store volatile %struct.ScmObj* %argslist93127$ae545741, %struct.ScmObj** %stackaddr$prim95132, align 8
%stackaddr$prim95133 = alloca %struct.ScmObj*, align 8
%argslist93127$ae545742 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54575, %struct.ScmObj* %argslist93127$ae545741)
store volatile %struct.ScmObj* %argslist93127$ae545742, %struct.ScmObj** %stackaddr$prim95133, align 8
%clofunc95134 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54574)
musttail call tailcc void %clofunc95134(%struct.ScmObj* %ae54574, %struct.ScmObj* %argslist93127$ae545742)
ret void
}

define tailcc void @proc_clo$ae54574(%struct.ScmObj* %env$ae54574,%struct.ScmObj* %current_45args93123) {
%stackaddr$prim95135 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93123)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95135, align 8
%stackaddr$prim95136 = alloca %struct.ScmObj*, align 8
%current_45args93124 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93123)
store volatile %struct.ScmObj* %current_45args93124, %struct.ScmObj** %stackaddr$prim95136, align 8
%stackaddr$prim95137 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93124)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95137, align 8
%stackaddr$prim95138 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95138, align 8
%argslist93126$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95139 = alloca %struct.ScmObj*, align 8
%argslist93126$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93126$k0)
store volatile %struct.ScmObj* %argslist93126$k1, %struct.ScmObj** %stackaddr$prim95139, align 8
%clofunc95140 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95140(%struct.ScmObj* %k, %struct.ScmObj* %argslist93126$k1)
ret void
}

define tailcc void @proc_clo$ae54732(%struct.ScmObj* %env$ae54732,%struct.ScmObj* %current_45args93130) {
%stackaddr$env-ref95141 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54732, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95141
%stackaddr$prim95142 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93130)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95142, align 8
%stackaddr$prim95143 = alloca %struct.ScmObj*, align 8
%current_45args93131 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93130)
store volatile %struct.ScmObj* %current_45args93131, %struct.ScmObj** %stackaddr$prim95143, align 8
%stackaddr$prim95144 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93131)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95144, align 8
%ae54741 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95145 = call i64 @is_truthy_value(%struct.ScmObj* %ae54741)
%cmp$cmp95145 = icmp eq i64 %truthy$cmp95145, 1
br i1 %cmp$cmp95145, label %truebranch$cmp95145, label %falsebranch$cmp95145
truebranch$cmp95145:
%ae54743 = call %struct.ScmObj* @const_init_int(i64 0)
%ae54744 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95146 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54743, %struct.ScmObj* %ae54744)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95146, align 8
%stackaddr$makeclosure95147 = alloca %struct.ScmObj*, align 8
%fptrToInt95148 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54745 to i64
%ae54745 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95148)
store volatile %struct.ScmObj* %ae54745, %struct.ScmObj** %stackaddr$makeclosure95147, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54745, %struct.ScmObj* %x48150, i64 0)
%ae54746 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93141$ae547450 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95149 = alloca %struct.ScmObj*, align 8
%argslist93141$ae547451 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93141$ae547450)
store volatile %struct.ScmObj* %argslist93141$ae547451, %struct.ScmObj** %stackaddr$prim95149, align 8
%stackaddr$prim95150 = alloca %struct.ScmObj*, align 8
%argslist93141$ae547452 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54746, %struct.ScmObj* %argslist93141$ae547451)
store volatile %struct.ScmObj* %argslist93141$ae547452, %struct.ScmObj** %stackaddr$prim95150, align 8
%clofunc95151 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54745)
musttail call tailcc void %clofunc95151(%struct.ScmObj* %ae54745, %struct.ScmObj* %argslist93141$ae547452)
ret void
falsebranch$cmp95145:
%stackaddr$makeclosure95152 = alloca %struct.ScmObj*, align 8
%fptrToInt95153 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54804 to i64
%ae54804 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95153)
store volatile %struct.ScmObj* %ae54804, %struct.ScmObj** %stackaddr$makeclosure95152, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae54804, %struct.ScmObj* %x48150, i64 0)
%ae54805 = call %struct.ScmObj* @const_init_int(i64 0)
%ae54806 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93150$ae548040 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95154 = alloca %struct.ScmObj*, align 8
%argslist93150$ae548041 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54806, %struct.ScmObj* %argslist93150$ae548040)
store volatile %struct.ScmObj* %argslist93150$ae548041, %struct.ScmObj** %stackaddr$prim95154, align 8
%stackaddr$prim95155 = alloca %struct.ScmObj*, align 8
%argslist93150$ae548042 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54805, %struct.ScmObj* %argslist93150$ae548041)
store volatile %struct.ScmObj* %argslist93150$ae548042, %struct.ScmObj** %stackaddr$prim95155, align 8
%clofunc95156 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54804)
musttail call tailcc void %clofunc95156(%struct.ScmObj* %ae54804, %struct.ScmObj* %argslist93150$ae548042)
ret void
}

define tailcc void @proc_clo$ae54745(%struct.ScmObj* %env$ae54745,%struct.ScmObj* %current_45args93133) {
%stackaddr$env-ref95157 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54745, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95157
%stackaddr$prim95158 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93133)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95158, align 8
%stackaddr$prim95159 = alloca %struct.ScmObj*, align 8
%current_45args93134 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93133)
store volatile %struct.ScmObj* %current_45args93134, %struct.ScmObj** %stackaddr$prim95159, align 8
%stackaddr$prim95160 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93134)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95160, align 8
%ae54752 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95161 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54752)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95161, align 8
%stackaddr$makeclosure95162 = alloca %struct.ScmObj*, align 8
%fptrToInt95163 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54753 to i64
%ae54753 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95163)
store volatile %struct.ScmObj* %ae54753, %struct.ScmObj** %stackaddr$makeclosure95162, align 8
%ae54754 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93140$ae547530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95164 = alloca %struct.ScmObj*, align 8
%argslist93140$ae547531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93140$ae547530)
store volatile %struct.ScmObj* %argslist93140$ae547531, %struct.ScmObj** %stackaddr$prim95164, align 8
%stackaddr$prim95165 = alloca %struct.ScmObj*, align 8
%argslist93140$ae547532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54754, %struct.ScmObj* %argslist93140$ae547531)
store volatile %struct.ScmObj* %argslist93140$ae547532, %struct.ScmObj** %stackaddr$prim95165, align 8
%clofunc95166 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54753)
musttail call tailcc void %clofunc95166(%struct.ScmObj* %ae54753, %struct.ScmObj* %argslist93140$ae547532)
ret void
}

define tailcc void @proc_clo$ae54753(%struct.ScmObj* %env$ae54753,%struct.ScmObj* %current_45args93136) {
%stackaddr$prim95167 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93136)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95167, align 8
%stackaddr$prim95168 = alloca %struct.ScmObj*, align 8
%current_45args93137 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93136)
store volatile %struct.ScmObj* %current_45args93137, %struct.ScmObj** %stackaddr$prim95168, align 8
%stackaddr$prim95169 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93137)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95169, align 8
%stackaddr$prim95170 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95170, align 8
%argslist93139$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95171 = alloca %struct.ScmObj*, align 8
%argslist93139$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93139$k0)
store volatile %struct.ScmObj* %argslist93139$k1, %struct.ScmObj** %stackaddr$prim95171, align 8
%clofunc95172 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95172(%struct.ScmObj* %k, %struct.ScmObj* %argslist93139$k1)
ret void
}

define tailcc void @proc_clo$ae54804(%struct.ScmObj* %env$ae54804,%struct.ScmObj* %current_45args93142) {
%stackaddr$env-ref95173 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae54804, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95173
%stackaddr$prim95174 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93142)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95174, align 8
%stackaddr$prim95175 = alloca %struct.ScmObj*, align 8
%current_45args93143 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93142)
store volatile %struct.ScmObj* %current_45args93143, %struct.ScmObj** %stackaddr$prim95175, align 8
%stackaddr$prim95176 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93143)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95176, align 8
%ae54814 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95177 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae54814)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95177, align 8
%stackaddr$makeclosure95178 = alloca %struct.ScmObj*, align 8
%fptrToInt95179 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae54815 to i64
%ae54815 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95179)
store volatile %struct.ScmObj* %ae54815, %struct.ScmObj** %stackaddr$makeclosure95178, align 8
%ae54816 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93149$ae548150 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95180 = alloca %struct.ScmObj*, align 8
%argslist93149$ae548151 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93149$ae548150)
store volatile %struct.ScmObj* %argslist93149$ae548151, %struct.ScmObj** %stackaddr$prim95180, align 8
%stackaddr$prim95181 = alloca %struct.ScmObj*, align 8
%argslist93149$ae548152 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae54816, %struct.ScmObj* %argslist93149$ae548151)
store volatile %struct.ScmObj* %argslist93149$ae548152, %struct.ScmObj** %stackaddr$prim95181, align 8
%clofunc95182 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae54815)
musttail call tailcc void %clofunc95182(%struct.ScmObj* %ae54815, %struct.ScmObj* %argslist93149$ae548152)
ret void
}

define tailcc void @proc_clo$ae54815(%struct.ScmObj* %env$ae54815,%struct.ScmObj* %current_45args93145) {
%stackaddr$prim95183 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93145)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95183, align 8
%stackaddr$prim95184 = alloca %struct.ScmObj*, align 8
%current_45args93146 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93145)
store volatile %struct.ScmObj* %current_45args93146, %struct.ScmObj** %stackaddr$prim95184, align 8
%stackaddr$prim95185 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93146)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95185, align 8
%stackaddr$prim95186 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95186, align 8
%argslist93148$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95187 = alloca %struct.ScmObj*, align 8
%argslist93148$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93148$k0)
store volatile %struct.ScmObj* %argslist93148$k1, %struct.ScmObj** %stackaddr$prim95187, align 8
%clofunc95188 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95188(%struct.ScmObj* %k, %struct.ScmObj* %argslist93148$k1)
ret void
}

define tailcc void @proc_clo$ae56089(%struct.ScmObj* %env$ae56089,%struct.ScmObj* %current_45args93155) {
%stackaddr$env-ref95189 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56089, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95189
%stackaddr$prim95190 = alloca %struct.ScmObj*, align 8
%_95k48329 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93155)
store volatile %struct.ScmObj* %_95k48329, %struct.ScmObj** %stackaddr$prim95190, align 8
%stackaddr$prim95191 = alloca %struct.ScmObj*, align 8
%current_45args93156 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93155)
store volatile %struct.ScmObj* %current_45args93156, %struct.ScmObj** %stackaddr$prim95191, align 8
%stackaddr$prim95192 = alloca %struct.ScmObj*, align 8
%t4802748153 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93156)
store volatile %struct.ScmObj* %t4802748153, %struct.ScmObj** %stackaddr$prim95192, align 8
%ae56096 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95193 = alloca %struct.ScmObj*, align 8
%anf_45bind48282 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56096)
store volatile %struct.ScmObj* %anf_45bind48282, %struct.ScmObj** %stackaddr$prim95193, align 8
%ae56098 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim95194 = alloca %struct.ScmObj*, align 8
%anf_45bind48283 = call %struct.ScmObj* @prim__60(%struct.ScmObj* %anf_45bind48282, %struct.ScmObj* %ae56098)
store volatile %struct.ScmObj* %anf_45bind48283, %struct.ScmObj** %stackaddr$prim95194, align 8
%truthy$cmp95195 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48283)
%cmp$cmp95195 = icmp eq i64 %truthy$cmp95195, 1
br i1 %cmp$cmp95195, label %truebranch$cmp95195, label %falsebranch$cmp95195
truebranch$cmp95195:
%ae56101 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95196 = alloca %struct.ScmObj*, align 8
%anf_45bind48284 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56101)
store volatile %struct.ScmObj* %anf_45bind48284, %struct.ScmObj** %stackaddr$prim95196, align 8
%ae56103 = call %struct.ScmObj* @const_init_int(i64 9)
%stackaddr$prim95197 = alloca %struct.ScmObj*, align 8
%anf_45bind48285 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48284, %struct.ScmObj* %ae56103)
store volatile %struct.ScmObj* %anf_45bind48285, %struct.ScmObj** %stackaddr$prim95197, align 8
%ae56105 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim95198 = alloca %struct.ScmObj*, align 8
%anf_45bind48286 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48285, %struct.ScmObj* %ae56105)
store volatile %struct.ScmObj* %anf_45bind48286, %struct.ScmObj** %stackaddr$prim95198, align 8
%ae56107 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95199 = alloca %struct.ScmObj*, align 8
%cpsprim48339 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56107, %struct.ScmObj* %anf_45bind48286)
store volatile %struct.ScmObj* %cpsprim48339, %struct.ScmObj** %stackaddr$prim95199, align 8
%stackaddr$makeclosure95200 = alloca %struct.ScmObj*, align 8
%fptrToInt95201 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56109 to i64
%ae56109 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95201)
store volatile %struct.ScmObj* %ae56109, %struct.ScmObj** %stackaddr$makeclosure95200, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56109, %struct.ScmObj* %x48150, i64 0)
%ae56110 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93257$ae561090 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95202 = alloca %struct.ScmObj*, align 8
%argslist93257$ae561091 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48339, %struct.ScmObj* %argslist93257$ae561090)
store volatile %struct.ScmObj* %argslist93257$ae561091, %struct.ScmObj** %stackaddr$prim95202, align 8
%stackaddr$prim95203 = alloca %struct.ScmObj*, align 8
%argslist93257$ae561092 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56110, %struct.ScmObj* %argslist93257$ae561091)
store volatile %struct.ScmObj* %argslist93257$ae561092, %struct.ScmObj** %stackaddr$prim95203, align 8
%clofunc95204 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56109)
musttail call tailcc void %clofunc95204(%struct.ScmObj* %ae56109, %struct.ScmObj* %argslist93257$ae561092)
ret void
falsebranch$cmp95195:
%stackaddr$prim95205 = alloca %struct.ScmObj*, align 8
%cpsprim48340 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48340, %struct.ScmObj** %stackaddr$prim95205, align 8
%stackaddr$makeclosure95206 = alloca %struct.ScmObj*, align 8
%fptrToInt95207 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58188 to i64
%ae58188 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95207)
store volatile %struct.ScmObj* %ae58188, %struct.ScmObj** %stackaddr$makeclosure95206, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58188, %struct.ScmObj* %x48150, i64 0)
%ae58189 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93357$ae581880 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95208 = alloca %struct.ScmObj*, align 8
%argslist93357$ae581881 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48340, %struct.ScmObj* %argslist93357$ae581880)
store volatile %struct.ScmObj* %argslist93357$ae581881, %struct.ScmObj** %stackaddr$prim95208, align 8
%stackaddr$prim95209 = alloca %struct.ScmObj*, align 8
%argslist93357$ae581882 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58189, %struct.ScmObj* %argslist93357$ae581881)
store volatile %struct.ScmObj* %argslist93357$ae581882, %struct.ScmObj** %stackaddr$prim95209, align 8
%clofunc95210 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58188)
musttail call tailcc void %clofunc95210(%struct.ScmObj* %ae58188, %struct.ScmObj* %argslist93357$ae581882)
ret void
}

define tailcc void @proc_clo$ae56109(%struct.ScmObj* %env$ae56109,%struct.ScmObj* %current_45args93158) {
%stackaddr$env-ref95211 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56109, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95211
%stackaddr$prim95212 = alloca %struct.ScmObj*, align 8
%_95k48330 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93158)
store volatile %struct.ScmObj* %_95k48330, %struct.ScmObj** %stackaddr$prim95212, align 8
%stackaddr$prim95213 = alloca %struct.ScmObj*, align 8
%current_45args93159 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93158)
store volatile %struct.ScmObj* %current_45args93159, %struct.ScmObj** %stackaddr$prim95213, align 8
%stackaddr$prim95214 = alloca %struct.ScmObj*, align 8
%t4802848154 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93159)
store volatile %struct.ScmObj* %t4802848154, %struct.ScmObj** %stackaddr$prim95214, align 8
%ae56115 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95215 = call i64 @is_truthy_value(%struct.ScmObj* %ae56115)
%cmp$cmp95215 = icmp eq i64 %truthy$cmp95215, 1
br i1 %cmp$cmp95215, label %truebranch$cmp95215, label %falsebranch$cmp95215
truebranch$cmp95215:
%stackaddr$prim95216 = alloca %struct.ScmObj*, align 8
%cpsprim48337 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48337, %struct.ScmObj** %stackaddr$prim95216, align 8
%stackaddr$makeclosure95217 = alloca %struct.ScmObj*, align 8
%fptrToInt95218 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56116 to i64
%ae56116 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95218)
store volatile %struct.ScmObj* %ae56116, %struct.ScmObj** %stackaddr$makeclosure95217, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56116, %struct.ScmObj* %x48150, i64 0)
%ae56117 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93208$ae561160 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95219 = alloca %struct.ScmObj*, align 8
%argslist93208$ae561161 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48337, %struct.ScmObj* %argslist93208$ae561160)
store volatile %struct.ScmObj* %argslist93208$ae561161, %struct.ScmObj** %stackaddr$prim95219, align 8
%stackaddr$prim95220 = alloca %struct.ScmObj*, align 8
%argslist93208$ae561162 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56117, %struct.ScmObj* %argslist93208$ae561161)
store volatile %struct.ScmObj* %argslist93208$ae561162, %struct.ScmObj** %stackaddr$prim95220, align 8
%clofunc95221 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56116)
musttail call tailcc void %clofunc95221(%struct.ScmObj* %ae56116, %struct.ScmObj* %argslist93208$ae561162)
ret void
falsebranch$cmp95215:
%ae56581 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95222 = alloca %struct.ScmObj*, align 8
%anf_45bind48287 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56581)
store volatile %struct.ScmObj* %anf_45bind48287, %struct.ScmObj** %stackaddr$prim95222, align 8
%ae56583 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim95223 = alloca %struct.ScmObj*, align 8
%anf_45bind48288 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48287, %struct.ScmObj* %ae56583)
store volatile %struct.ScmObj* %anf_45bind48288, %struct.ScmObj** %stackaddr$prim95223, align 8
%ae56585 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim95224 = alloca %struct.ScmObj*, align 8
%anf_45bind48289 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48288, %struct.ScmObj* %ae56585)
store volatile %struct.ScmObj* %anf_45bind48289, %struct.ScmObj** %stackaddr$prim95224, align 8
%ae56587 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95225 = alloca %struct.ScmObj*, align 8
%cpsprim48338 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56587, %struct.ScmObj* %anf_45bind48289)
store volatile %struct.ScmObj* %cpsprim48338, %struct.ScmObj** %stackaddr$prim95225, align 8
%stackaddr$makeclosure95226 = alloca %struct.ScmObj*, align 8
%fptrToInt95227 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56589 to i64
%ae56589 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95227)
store volatile %struct.ScmObj* %ae56589, %struct.ScmObj** %stackaddr$makeclosure95226, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56589, %struct.ScmObj* %x48150, i64 0)
%ae56590 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93256$ae565890 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95228 = alloca %struct.ScmObj*, align 8
%argslist93256$ae565891 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48338, %struct.ScmObj* %argslist93256$ae565890)
store volatile %struct.ScmObj* %argslist93256$ae565891, %struct.ScmObj** %stackaddr$prim95228, align 8
%stackaddr$prim95229 = alloca %struct.ScmObj*, align 8
%argslist93256$ae565892 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56590, %struct.ScmObj* %argslist93256$ae565891)
store volatile %struct.ScmObj* %argslist93256$ae565892, %struct.ScmObj** %stackaddr$prim95229, align 8
%clofunc95230 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56589)
musttail call tailcc void %clofunc95230(%struct.ScmObj* %ae56589, %struct.ScmObj* %argslist93256$ae565892)
ret void
}

define tailcc void @proc_clo$ae56116(%struct.ScmObj* %env$ae56116,%struct.ScmObj* %current_45args93161) {
%stackaddr$env-ref95231 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56116, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95231
%stackaddr$prim95232 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93161)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim95232, align 8
%stackaddr$prim95233 = alloca %struct.ScmObj*, align 8
%current_45args93162 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93161)
store volatile %struct.ScmObj* %current_45args93162, %struct.ScmObj** %stackaddr$prim95233, align 8
%stackaddr$prim95234 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93162)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim95234, align 8
%ae56123 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95235 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56123)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim95235, align 8
%truthy$cmp95236 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp95236 = icmp eq i64 %truthy$cmp95236, 1
br i1 %cmp$cmp95236, label %truebranch$cmp95236, label %falsebranch$cmp95236
truebranch$cmp95236:
%ae56126 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95237 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56126)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim95237, align 8
%ae56128 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95238 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56128)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim95238, align 8
%stackaddr$prim95239 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim95239, align 8
%ae56132 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95240 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56132, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim95240, align 8
%stackaddr$makeclosure95241 = alloca %struct.ScmObj*, align 8
%fptrToInt95242 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56134 to i64
%ae56134 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95242)
store volatile %struct.ScmObj* %ae56134, %struct.ScmObj** %stackaddr$makeclosure95241, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56134, %struct.ScmObj* %x48150, i64 0)
%ae56135 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93185$ae561340 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95243 = alloca %struct.ScmObj*, align 8
%argslist93185$ae561341 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93185$ae561340)
store volatile %struct.ScmObj* %argslist93185$ae561341, %struct.ScmObj** %stackaddr$prim95243, align 8
%stackaddr$prim95244 = alloca %struct.ScmObj*, align 8
%argslist93185$ae561342 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56135, %struct.ScmObj* %argslist93185$ae561341)
store volatile %struct.ScmObj* %argslist93185$ae561342, %struct.ScmObj** %stackaddr$prim95244, align 8
%clofunc95245 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56134)
musttail call tailcc void %clofunc95245(%struct.ScmObj* %ae56134, %struct.ScmObj* %argslist93185$ae561342)
ret void
falsebranch$cmp95236:
%stackaddr$makeclosure95246 = alloca %struct.ScmObj*, align 8
%fptrToInt95247 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56372 to i64
%ae56372 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95247)
store volatile %struct.ScmObj* %ae56372, %struct.ScmObj** %stackaddr$makeclosure95246, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56372, %struct.ScmObj* %x48150, i64 0)
%ae56373 = call %struct.ScmObj* @const_init_int(i64 0)
%ae56374 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93207$ae563720 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95248 = alloca %struct.ScmObj*, align 8
%argslist93207$ae563721 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56374, %struct.ScmObj* %argslist93207$ae563720)
store volatile %struct.ScmObj* %argslist93207$ae563721, %struct.ScmObj** %stackaddr$prim95248, align 8
%stackaddr$prim95249 = alloca %struct.ScmObj*, align 8
%argslist93207$ae563722 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56373, %struct.ScmObj* %argslist93207$ae563721)
store volatile %struct.ScmObj* %argslist93207$ae563722, %struct.ScmObj** %stackaddr$prim95249, align 8
%clofunc95250 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56372)
musttail call tailcc void %clofunc95250(%struct.ScmObj* %ae56372, %struct.ScmObj* %argslist93207$ae563722)
ret void
}

define tailcc void @proc_clo$ae56134(%struct.ScmObj* %env$ae56134,%struct.ScmObj* %current_45args93164) {
%stackaddr$env-ref95251 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56134, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95251
%stackaddr$prim95252 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93164)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95252, align 8
%stackaddr$prim95253 = alloca %struct.ScmObj*, align 8
%current_45args93165 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93164)
store volatile %struct.ScmObj* %current_45args93165, %struct.ScmObj** %stackaddr$prim95253, align 8
%stackaddr$prim95254 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93165)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95254, align 8
%ae56140 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95255 = call i64 @is_truthy_value(%struct.ScmObj* %ae56140)
%cmp$cmp95255 = icmp eq i64 %truthy$cmp95255, 1
br i1 %cmp$cmp95255, label %truebranch$cmp95255, label %falsebranch$cmp95255
truebranch$cmp95255:
%ae56142 = call %struct.ScmObj* @const_init_int(i64 0)
%ae56143 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95256 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56142, %struct.ScmObj* %ae56143)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95256, align 8
%stackaddr$makeclosure95257 = alloca %struct.ScmObj*, align 8
%fptrToInt95258 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56144 to i64
%ae56144 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95258)
store volatile %struct.ScmObj* %ae56144, %struct.ScmObj** %stackaddr$makeclosure95257, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56144, %struct.ScmObj* %x48150, i64 0)
%ae56145 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93175$ae561440 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95259 = alloca %struct.ScmObj*, align 8
%argslist93175$ae561441 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93175$ae561440)
store volatile %struct.ScmObj* %argslist93175$ae561441, %struct.ScmObj** %stackaddr$prim95259, align 8
%stackaddr$prim95260 = alloca %struct.ScmObj*, align 8
%argslist93175$ae561442 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56145, %struct.ScmObj* %argslist93175$ae561441)
store volatile %struct.ScmObj* %argslist93175$ae561442, %struct.ScmObj** %stackaddr$prim95260, align 8
%clofunc95261 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56144)
musttail call tailcc void %clofunc95261(%struct.ScmObj* %ae56144, %struct.ScmObj* %argslist93175$ae561442)
ret void
falsebranch$cmp95255:
%stackaddr$makeclosure95262 = alloca %struct.ScmObj*, align 8
%fptrToInt95263 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56203 to i64
%ae56203 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95263)
store volatile %struct.ScmObj* %ae56203, %struct.ScmObj** %stackaddr$makeclosure95262, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56203, %struct.ScmObj* %x48150, i64 0)
%ae56204 = call %struct.ScmObj* @const_init_int(i64 0)
%ae56205 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93184$ae562030 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95264 = alloca %struct.ScmObj*, align 8
%argslist93184$ae562031 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56205, %struct.ScmObj* %argslist93184$ae562030)
store volatile %struct.ScmObj* %argslist93184$ae562031, %struct.ScmObj** %stackaddr$prim95264, align 8
%stackaddr$prim95265 = alloca %struct.ScmObj*, align 8
%argslist93184$ae562032 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56204, %struct.ScmObj* %argslist93184$ae562031)
store volatile %struct.ScmObj* %argslist93184$ae562032, %struct.ScmObj** %stackaddr$prim95265, align 8
%clofunc95266 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56203)
musttail call tailcc void %clofunc95266(%struct.ScmObj* %ae56203, %struct.ScmObj* %argslist93184$ae562032)
ret void
}

define tailcc void @proc_clo$ae56144(%struct.ScmObj* %env$ae56144,%struct.ScmObj* %current_45args93167) {
%stackaddr$env-ref95267 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56144, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95267
%stackaddr$prim95268 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93167)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95268, align 8
%stackaddr$prim95269 = alloca %struct.ScmObj*, align 8
%current_45args93168 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93167)
store volatile %struct.ScmObj* %current_45args93168, %struct.ScmObj** %stackaddr$prim95269, align 8
%stackaddr$prim95270 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93168)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95270, align 8
%ae56151 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95271 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56151)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95271, align 8
%stackaddr$makeclosure95272 = alloca %struct.ScmObj*, align 8
%fptrToInt95273 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56152 to i64
%ae56152 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95273)
store volatile %struct.ScmObj* %ae56152, %struct.ScmObj** %stackaddr$makeclosure95272, align 8
%ae56153 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93174$ae561520 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95274 = alloca %struct.ScmObj*, align 8
%argslist93174$ae561521 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93174$ae561520)
store volatile %struct.ScmObj* %argslist93174$ae561521, %struct.ScmObj** %stackaddr$prim95274, align 8
%stackaddr$prim95275 = alloca %struct.ScmObj*, align 8
%argslist93174$ae561522 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56153, %struct.ScmObj* %argslist93174$ae561521)
store volatile %struct.ScmObj* %argslist93174$ae561522, %struct.ScmObj** %stackaddr$prim95275, align 8
%clofunc95276 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56152)
musttail call tailcc void %clofunc95276(%struct.ScmObj* %ae56152, %struct.ScmObj* %argslist93174$ae561522)
ret void
}

define tailcc void @proc_clo$ae56152(%struct.ScmObj* %env$ae56152,%struct.ScmObj* %current_45args93170) {
%stackaddr$prim95277 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93170)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95277, align 8
%stackaddr$prim95278 = alloca %struct.ScmObj*, align 8
%current_45args93171 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93170)
store volatile %struct.ScmObj* %current_45args93171, %struct.ScmObj** %stackaddr$prim95278, align 8
%stackaddr$prim95279 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93171)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95279, align 8
%stackaddr$prim95280 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95280, align 8
%argslist93173$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95281 = alloca %struct.ScmObj*, align 8
%argslist93173$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93173$k0)
store volatile %struct.ScmObj* %argslist93173$k1, %struct.ScmObj** %stackaddr$prim95281, align 8
%clofunc95282 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95282(%struct.ScmObj* %k, %struct.ScmObj* %argslist93173$k1)
ret void
}

define tailcc void @proc_clo$ae56203(%struct.ScmObj* %env$ae56203,%struct.ScmObj* %current_45args93176) {
%stackaddr$env-ref95283 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56203, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95283
%stackaddr$prim95284 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93176)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95284, align 8
%stackaddr$prim95285 = alloca %struct.ScmObj*, align 8
%current_45args93177 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93176)
store volatile %struct.ScmObj* %current_45args93177, %struct.ScmObj** %stackaddr$prim95285, align 8
%stackaddr$prim95286 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93177)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95286, align 8
%ae56213 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95287 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56213)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95287, align 8
%stackaddr$makeclosure95288 = alloca %struct.ScmObj*, align 8
%fptrToInt95289 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56214 to i64
%ae56214 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95289)
store volatile %struct.ScmObj* %ae56214, %struct.ScmObj** %stackaddr$makeclosure95288, align 8
%ae56215 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93183$ae562140 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95290 = alloca %struct.ScmObj*, align 8
%argslist93183$ae562141 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93183$ae562140)
store volatile %struct.ScmObj* %argslist93183$ae562141, %struct.ScmObj** %stackaddr$prim95290, align 8
%stackaddr$prim95291 = alloca %struct.ScmObj*, align 8
%argslist93183$ae562142 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56215, %struct.ScmObj* %argslist93183$ae562141)
store volatile %struct.ScmObj* %argslist93183$ae562142, %struct.ScmObj** %stackaddr$prim95291, align 8
%clofunc95292 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56214)
musttail call tailcc void %clofunc95292(%struct.ScmObj* %ae56214, %struct.ScmObj* %argslist93183$ae562142)
ret void
}

define tailcc void @proc_clo$ae56214(%struct.ScmObj* %env$ae56214,%struct.ScmObj* %current_45args93179) {
%stackaddr$prim95293 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93179)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95293, align 8
%stackaddr$prim95294 = alloca %struct.ScmObj*, align 8
%current_45args93180 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93179)
store volatile %struct.ScmObj* %current_45args93180, %struct.ScmObj** %stackaddr$prim95294, align 8
%stackaddr$prim95295 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93180)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95295, align 8
%stackaddr$prim95296 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95296, align 8
%argslist93182$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95297 = alloca %struct.ScmObj*, align 8
%argslist93182$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93182$k0)
store volatile %struct.ScmObj* %argslist93182$k1, %struct.ScmObj** %stackaddr$prim95297, align 8
%clofunc95298 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95298(%struct.ScmObj* %k, %struct.ScmObj* %argslist93182$k1)
ret void
}

define tailcc void @proc_clo$ae56372(%struct.ScmObj* %env$ae56372,%struct.ScmObj* %current_45args93186) {
%stackaddr$env-ref95299 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56372, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95299
%stackaddr$prim95300 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93186)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95300, align 8
%stackaddr$prim95301 = alloca %struct.ScmObj*, align 8
%current_45args93187 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93186)
store volatile %struct.ScmObj* %current_45args93187, %struct.ScmObj** %stackaddr$prim95301, align 8
%stackaddr$prim95302 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93187)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95302, align 8
%ae56381 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95303 = call i64 @is_truthy_value(%struct.ScmObj* %ae56381)
%cmp$cmp95303 = icmp eq i64 %truthy$cmp95303, 1
br i1 %cmp$cmp95303, label %truebranch$cmp95303, label %falsebranch$cmp95303
truebranch$cmp95303:
%ae56383 = call %struct.ScmObj* @const_init_int(i64 0)
%ae56384 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95304 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56383, %struct.ScmObj* %ae56384)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95304, align 8
%stackaddr$makeclosure95305 = alloca %struct.ScmObj*, align 8
%fptrToInt95306 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56385 to i64
%ae56385 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95306)
store volatile %struct.ScmObj* %ae56385, %struct.ScmObj** %stackaddr$makeclosure95305, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56385, %struct.ScmObj* %x48150, i64 0)
%ae56386 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93197$ae563850 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95307 = alloca %struct.ScmObj*, align 8
%argslist93197$ae563851 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93197$ae563850)
store volatile %struct.ScmObj* %argslist93197$ae563851, %struct.ScmObj** %stackaddr$prim95307, align 8
%stackaddr$prim95308 = alloca %struct.ScmObj*, align 8
%argslist93197$ae563852 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56386, %struct.ScmObj* %argslist93197$ae563851)
store volatile %struct.ScmObj* %argslist93197$ae563852, %struct.ScmObj** %stackaddr$prim95308, align 8
%clofunc95309 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56385)
musttail call tailcc void %clofunc95309(%struct.ScmObj* %ae56385, %struct.ScmObj* %argslist93197$ae563852)
ret void
falsebranch$cmp95303:
%stackaddr$makeclosure95310 = alloca %struct.ScmObj*, align 8
%fptrToInt95311 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56444 to i64
%ae56444 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95311)
store volatile %struct.ScmObj* %ae56444, %struct.ScmObj** %stackaddr$makeclosure95310, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56444, %struct.ScmObj* %x48150, i64 0)
%ae56445 = call %struct.ScmObj* @const_init_int(i64 0)
%ae56446 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93206$ae564440 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95312 = alloca %struct.ScmObj*, align 8
%argslist93206$ae564441 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56446, %struct.ScmObj* %argslist93206$ae564440)
store volatile %struct.ScmObj* %argslist93206$ae564441, %struct.ScmObj** %stackaddr$prim95312, align 8
%stackaddr$prim95313 = alloca %struct.ScmObj*, align 8
%argslist93206$ae564442 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56445, %struct.ScmObj* %argslist93206$ae564441)
store volatile %struct.ScmObj* %argslist93206$ae564442, %struct.ScmObj** %stackaddr$prim95313, align 8
%clofunc95314 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56444)
musttail call tailcc void %clofunc95314(%struct.ScmObj* %ae56444, %struct.ScmObj* %argslist93206$ae564442)
ret void
}

define tailcc void @proc_clo$ae56385(%struct.ScmObj* %env$ae56385,%struct.ScmObj* %current_45args93189) {
%stackaddr$env-ref95315 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56385, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95315
%stackaddr$prim95316 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93189)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95316, align 8
%stackaddr$prim95317 = alloca %struct.ScmObj*, align 8
%current_45args93190 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93189)
store volatile %struct.ScmObj* %current_45args93190, %struct.ScmObj** %stackaddr$prim95317, align 8
%stackaddr$prim95318 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93190)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95318, align 8
%ae56392 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95319 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56392)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95319, align 8
%stackaddr$makeclosure95320 = alloca %struct.ScmObj*, align 8
%fptrToInt95321 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56393 to i64
%ae56393 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95321)
store volatile %struct.ScmObj* %ae56393, %struct.ScmObj** %stackaddr$makeclosure95320, align 8
%ae56394 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93196$ae563930 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95322 = alloca %struct.ScmObj*, align 8
%argslist93196$ae563931 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93196$ae563930)
store volatile %struct.ScmObj* %argslist93196$ae563931, %struct.ScmObj** %stackaddr$prim95322, align 8
%stackaddr$prim95323 = alloca %struct.ScmObj*, align 8
%argslist93196$ae563932 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56394, %struct.ScmObj* %argslist93196$ae563931)
store volatile %struct.ScmObj* %argslist93196$ae563932, %struct.ScmObj** %stackaddr$prim95323, align 8
%clofunc95324 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56393)
musttail call tailcc void %clofunc95324(%struct.ScmObj* %ae56393, %struct.ScmObj* %argslist93196$ae563932)
ret void
}

define tailcc void @proc_clo$ae56393(%struct.ScmObj* %env$ae56393,%struct.ScmObj* %current_45args93192) {
%stackaddr$prim95325 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93192)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95325, align 8
%stackaddr$prim95326 = alloca %struct.ScmObj*, align 8
%current_45args93193 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93192)
store volatile %struct.ScmObj* %current_45args93193, %struct.ScmObj** %stackaddr$prim95326, align 8
%stackaddr$prim95327 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93193)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95327, align 8
%stackaddr$prim95328 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95328, align 8
%argslist93195$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95329 = alloca %struct.ScmObj*, align 8
%argslist93195$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93195$k0)
store volatile %struct.ScmObj* %argslist93195$k1, %struct.ScmObj** %stackaddr$prim95329, align 8
%clofunc95330 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95330(%struct.ScmObj* %k, %struct.ScmObj* %argslist93195$k1)
ret void
}

define tailcc void @proc_clo$ae56444(%struct.ScmObj* %env$ae56444,%struct.ScmObj* %current_45args93198) {
%stackaddr$env-ref95331 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56444, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95331
%stackaddr$prim95332 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93198)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95332, align 8
%stackaddr$prim95333 = alloca %struct.ScmObj*, align 8
%current_45args93199 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93198)
store volatile %struct.ScmObj* %current_45args93199, %struct.ScmObj** %stackaddr$prim95333, align 8
%stackaddr$prim95334 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93199)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95334, align 8
%ae56454 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95335 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56454)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95335, align 8
%stackaddr$makeclosure95336 = alloca %struct.ScmObj*, align 8
%fptrToInt95337 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56455 to i64
%ae56455 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95337)
store volatile %struct.ScmObj* %ae56455, %struct.ScmObj** %stackaddr$makeclosure95336, align 8
%ae56456 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93205$ae564550 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95338 = alloca %struct.ScmObj*, align 8
%argslist93205$ae564551 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93205$ae564550)
store volatile %struct.ScmObj* %argslist93205$ae564551, %struct.ScmObj** %stackaddr$prim95338, align 8
%stackaddr$prim95339 = alloca %struct.ScmObj*, align 8
%argslist93205$ae564552 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56456, %struct.ScmObj* %argslist93205$ae564551)
store volatile %struct.ScmObj* %argslist93205$ae564552, %struct.ScmObj** %stackaddr$prim95339, align 8
%clofunc95340 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56455)
musttail call tailcc void %clofunc95340(%struct.ScmObj* %ae56455, %struct.ScmObj* %argslist93205$ae564552)
ret void
}

define tailcc void @proc_clo$ae56455(%struct.ScmObj* %env$ae56455,%struct.ScmObj* %current_45args93201) {
%stackaddr$prim95341 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93201)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95341, align 8
%stackaddr$prim95342 = alloca %struct.ScmObj*, align 8
%current_45args93202 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93201)
store volatile %struct.ScmObj* %current_45args93202, %struct.ScmObj** %stackaddr$prim95342, align 8
%stackaddr$prim95343 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93202)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95343, align 8
%stackaddr$prim95344 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95344, align 8
%argslist93204$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95345 = alloca %struct.ScmObj*, align 8
%argslist93204$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93204$k0)
store volatile %struct.ScmObj* %argslist93204$k1, %struct.ScmObj** %stackaddr$prim95345, align 8
%clofunc95346 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95346(%struct.ScmObj* %k, %struct.ScmObj* %argslist93204$k1)
ret void
}

define tailcc void @proc_clo$ae56589(%struct.ScmObj* %env$ae56589,%struct.ScmObj* %current_45args93209) {
%stackaddr$env-ref95347 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56589, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95347
%stackaddr$prim95348 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93209)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim95348, align 8
%stackaddr$prim95349 = alloca %struct.ScmObj*, align 8
%current_45args93210 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93209)
store volatile %struct.ScmObj* %current_45args93210, %struct.ScmObj** %stackaddr$prim95349, align 8
%stackaddr$prim95350 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93210)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim95350, align 8
%ae56596 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95351 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56596)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim95351, align 8
%truthy$cmp95352 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp95352 = icmp eq i64 %truthy$cmp95352, 1
br i1 %cmp$cmp95352, label %truebranch$cmp95352, label %falsebranch$cmp95352
truebranch$cmp95352:
%ae56599 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95353 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56599)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim95353, align 8
%ae56601 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95354 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56601)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim95354, align 8
%stackaddr$prim95355 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim95355, align 8
%ae56605 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95356 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56605, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim95356, align 8
%stackaddr$makeclosure95357 = alloca %struct.ScmObj*, align 8
%fptrToInt95358 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56607 to i64
%ae56607 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95358)
store volatile %struct.ScmObj* %ae56607, %struct.ScmObj** %stackaddr$makeclosure95357, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56607, %struct.ScmObj* %x48150, i64 0)
%ae56608 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93233$ae566070 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95359 = alloca %struct.ScmObj*, align 8
%argslist93233$ae566071 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93233$ae566070)
store volatile %struct.ScmObj* %argslist93233$ae566071, %struct.ScmObj** %stackaddr$prim95359, align 8
%stackaddr$prim95360 = alloca %struct.ScmObj*, align 8
%argslist93233$ae566072 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56608, %struct.ScmObj* %argslist93233$ae566071)
store volatile %struct.ScmObj* %argslist93233$ae566072, %struct.ScmObj** %stackaddr$prim95360, align 8
%clofunc95361 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56607)
musttail call tailcc void %clofunc95361(%struct.ScmObj* %ae56607, %struct.ScmObj* %argslist93233$ae566072)
ret void
falsebranch$cmp95352:
%stackaddr$makeclosure95362 = alloca %struct.ScmObj*, align 8
%fptrToInt95363 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56845 to i64
%ae56845 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95363)
store volatile %struct.ScmObj* %ae56845, %struct.ScmObj** %stackaddr$makeclosure95362, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56845, %struct.ScmObj* %x48150, i64 0)
%ae56846 = call %struct.ScmObj* @const_init_int(i64 0)
%ae56847 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93255$ae568450 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95364 = alloca %struct.ScmObj*, align 8
%argslist93255$ae568451 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56847, %struct.ScmObj* %argslist93255$ae568450)
store volatile %struct.ScmObj* %argslist93255$ae568451, %struct.ScmObj** %stackaddr$prim95364, align 8
%stackaddr$prim95365 = alloca %struct.ScmObj*, align 8
%argslist93255$ae568452 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56846, %struct.ScmObj* %argslist93255$ae568451)
store volatile %struct.ScmObj* %argslist93255$ae568452, %struct.ScmObj** %stackaddr$prim95365, align 8
%clofunc95366 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56845)
musttail call tailcc void %clofunc95366(%struct.ScmObj* %ae56845, %struct.ScmObj* %argslist93255$ae568452)
ret void
}

define tailcc void @proc_clo$ae56607(%struct.ScmObj* %env$ae56607,%struct.ScmObj* %current_45args93212) {
%stackaddr$env-ref95367 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56607, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95367
%stackaddr$prim95368 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93212)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95368, align 8
%stackaddr$prim95369 = alloca %struct.ScmObj*, align 8
%current_45args93213 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93212)
store volatile %struct.ScmObj* %current_45args93213, %struct.ScmObj** %stackaddr$prim95369, align 8
%stackaddr$prim95370 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93213)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95370, align 8
%ae56613 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95371 = call i64 @is_truthy_value(%struct.ScmObj* %ae56613)
%cmp$cmp95371 = icmp eq i64 %truthy$cmp95371, 1
br i1 %cmp$cmp95371, label %truebranch$cmp95371, label %falsebranch$cmp95371
truebranch$cmp95371:
%ae56615 = call %struct.ScmObj* @const_init_int(i64 0)
%ae56616 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95372 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56615, %struct.ScmObj* %ae56616)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95372, align 8
%stackaddr$makeclosure95373 = alloca %struct.ScmObj*, align 8
%fptrToInt95374 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56617 to i64
%ae56617 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95374)
store volatile %struct.ScmObj* %ae56617, %struct.ScmObj** %stackaddr$makeclosure95373, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56617, %struct.ScmObj* %x48150, i64 0)
%ae56618 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93223$ae566170 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95375 = alloca %struct.ScmObj*, align 8
%argslist93223$ae566171 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93223$ae566170)
store volatile %struct.ScmObj* %argslist93223$ae566171, %struct.ScmObj** %stackaddr$prim95375, align 8
%stackaddr$prim95376 = alloca %struct.ScmObj*, align 8
%argslist93223$ae566172 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56618, %struct.ScmObj* %argslist93223$ae566171)
store volatile %struct.ScmObj* %argslist93223$ae566172, %struct.ScmObj** %stackaddr$prim95376, align 8
%clofunc95377 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56617)
musttail call tailcc void %clofunc95377(%struct.ScmObj* %ae56617, %struct.ScmObj* %argslist93223$ae566172)
ret void
falsebranch$cmp95371:
%stackaddr$makeclosure95378 = alloca %struct.ScmObj*, align 8
%fptrToInt95379 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56676 to i64
%ae56676 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95379)
store volatile %struct.ScmObj* %ae56676, %struct.ScmObj** %stackaddr$makeclosure95378, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56676, %struct.ScmObj* %x48150, i64 0)
%ae56677 = call %struct.ScmObj* @const_init_int(i64 0)
%ae56678 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93232$ae566760 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95380 = alloca %struct.ScmObj*, align 8
%argslist93232$ae566761 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56678, %struct.ScmObj* %argslist93232$ae566760)
store volatile %struct.ScmObj* %argslist93232$ae566761, %struct.ScmObj** %stackaddr$prim95380, align 8
%stackaddr$prim95381 = alloca %struct.ScmObj*, align 8
%argslist93232$ae566762 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56677, %struct.ScmObj* %argslist93232$ae566761)
store volatile %struct.ScmObj* %argslist93232$ae566762, %struct.ScmObj** %stackaddr$prim95381, align 8
%clofunc95382 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56676)
musttail call tailcc void %clofunc95382(%struct.ScmObj* %ae56676, %struct.ScmObj* %argslist93232$ae566762)
ret void
}

define tailcc void @proc_clo$ae56617(%struct.ScmObj* %env$ae56617,%struct.ScmObj* %current_45args93215) {
%stackaddr$env-ref95383 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56617, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95383
%stackaddr$prim95384 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93215)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95384, align 8
%stackaddr$prim95385 = alloca %struct.ScmObj*, align 8
%current_45args93216 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93215)
store volatile %struct.ScmObj* %current_45args93216, %struct.ScmObj** %stackaddr$prim95385, align 8
%stackaddr$prim95386 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93216)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95386, align 8
%ae56624 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95387 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56624)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95387, align 8
%stackaddr$makeclosure95388 = alloca %struct.ScmObj*, align 8
%fptrToInt95389 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56625 to i64
%ae56625 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95389)
store volatile %struct.ScmObj* %ae56625, %struct.ScmObj** %stackaddr$makeclosure95388, align 8
%ae56626 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93222$ae566250 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95390 = alloca %struct.ScmObj*, align 8
%argslist93222$ae566251 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93222$ae566250)
store volatile %struct.ScmObj* %argslist93222$ae566251, %struct.ScmObj** %stackaddr$prim95390, align 8
%stackaddr$prim95391 = alloca %struct.ScmObj*, align 8
%argslist93222$ae566252 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56626, %struct.ScmObj* %argslist93222$ae566251)
store volatile %struct.ScmObj* %argslist93222$ae566252, %struct.ScmObj** %stackaddr$prim95391, align 8
%clofunc95392 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56625)
musttail call tailcc void %clofunc95392(%struct.ScmObj* %ae56625, %struct.ScmObj* %argslist93222$ae566252)
ret void
}

define tailcc void @proc_clo$ae56625(%struct.ScmObj* %env$ae56625,%struct.ScmObj* %current_45args93218) {
%stackaddr$prim95393 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93218)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95393, align 8
%stackaddr$prim95394 = alloca %struct.ScmObj*, align 8
%current_45args93219 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93218)
store volatile %struct.ScmObj* %current_45args93219, %struct.ScmObj** %stackaddr$prim95394, align 8
%stackaddr$prim95395 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93219)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95395, align 8
%stackaddr$prim95396 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95396, align 8
%argslist93221$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95397 = alloca %struct.ScmObj*, align 8
%argslist93221$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93221$k0)
store volatile %struct.ScmObj* %argslist93221$k1, %struct.ScmObj** %stackaddr$prim95397, align 8
%clofunc95398 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95398(%struct.ScmObj* %k, %struct.ScmObj* %argslist93221$k1)
ret void
}

define tailcc void @proc_clo$ae56676(%struct.ScmObj* %env$ae56676,%struct.ScmObj* %current_45args93224) {
%stackaddr$env-ref95399 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56676, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95399
%stackaddr$prim95400 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93224)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95400, align 8
%stackaddr$prim95401 = alloca %struct.ScmObj*, align 8
%current_45args93225 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93224)
store volatile %struct.ScmObj* %current_45args93225, %struct.ScmObj** %stackaddr$prim95401, align 8
%stackaddr$prim95402 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93225)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95402, align 8
%ae56686 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95403 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56686)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95403, align 8
%stackaddr$makeclosure95404 = alloca %struct.ScmObj*, align 8
%fptrToInt95405 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56687 to i64
%ae56687 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95405)
store volatile %struct.ScmObj* %ae56687, %struct.ScmObj** %stackaddr$makeclosure95404, align 8
%ae56688 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93231$ae566870 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95406 = alloca %struct.ScmObj*, align 8
%argslist93231$ae566871 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93231$ae566870)
store volatile %struct.ScmObj* %argslist93231$ae566871, %struct.ScmObj** %stackaddr$prim95406, align 8
%stackaddr$prim95407 = alloca %struct.ScmObj*, align 8
%argslist93231$ae566872 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56688, %struct.ScmObj* %argslist93231$ae566871)
store volatile %struct.ScmObj* %argslist93231$ae566872, %struct.ScmObj** %stackaddr$prim95407, align 8
%clofunc95408 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56687)
musttail call tailcc void %clofunc95408(%struct.ScmObj* %ae56687, %struct.ScmObj* %argslist93231$ae566872)
ret void
}

define tailcc void @proc_clo$ae56687(%struct.ScmObj* %env$ae56687,%struct.ScmObj* %current_45args93227) {
%stackaddr$prim95409 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93227)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95409, align 8
%stackaddr$prim95410 = alloca %struct.ScmObj*, align 8
%current_45args93228 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93227)
store volatile %struct.ScmObj* %current_45args93228, %struct.ScmObj** %stackaddr$prim95410, align 8
%stackaddr$prim95411 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93228)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95411, align 8
%stackaddr$prim95412 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95412, align 8
%argslist93230$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95413 = alloca %struct.ScmObj*, align 8
%argslist93230$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93230$k0)
store volatile %struct.ScmObj* %argslist93230$k1, %struct.ScmObj** %stackaddr$prim95413, align 8
%clofunc95414 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95414(%struct.ScmObj* %k, %struct.ScmObj* %argslist93230$k1)
ret void
}

define tailcc void @proc_clo$ae56845(%struct.ScmObj* %env$ae56845,%struct.ScmObj* %current_45args93234) {
%stackaddr$env-ref95415 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56845, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95415
%stackaddr$prim95416 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93234)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95416, align 8
%stackaddr$prim95417 = alloca %struct.ScmObj*, align 8
%current_45args93235 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93234)
store volatile %struct.ScmObj* %current_45args93235, %struct.ScmObj** %stackaddr$prim95417, align 8
%stackaddr$prim95418 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93235)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95418, align 8
%ae56854 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95419 = call i64 @is_truthy_value(%struct.ScmObj* %ae56854)
%cmp$cmp95419 = icmp eq i64 %truthy$cmp95419, 1
br i1 %cmp$cmp95419, label %truebranch$cmp95419, label %falsebranch$cmp95419
truebranch$cmp95419:
%ae56856 = call %struct.ScmObj* @const_init_int(i64 0)
%ae56857 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95420 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56856, %struct.ScmObj* %ae56857)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95420, align 8
%stackaddr$makeclosure95421 = alloca %struct.ScmObj*, align 8
%fptrToInt95422 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56858 to i64
%ae56858 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95422)
store volatile %struct.ScmObj* %ae56858, %struct.ScmObj** %stackaddr$makeclosure95421, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56858, %struct.ScmObj* %x48150, i64 0)
%ae56859 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93245$ae568580 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95423 = alloca %struct.ScmObj*, align 8
%argslist93245$ae568581 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93245$ae568580)
store volatile %struct.ScmObj* %argslist93245$ae568581, %struct.ScmObj** %stackaddr$prim95423, align 8
%stackaddr$prim95424 = alloca %struct.ScmObj*, align 8
%argslist93245$ae568582 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56859, %struct.ScmObj* %argslist93245$ae568581)
store volatile %struct.ScmObj* %argslist93245$ae568582, %struct.ScmObj** %stackaddr$prim95424, align 8
%clofunc95425 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56858)
musttail call tailcc void %clofunc95425(%struct.ScmObj* %ae56858, %struct.ScmObj* %argslist93245$ae568582)
ret void
falsebranch$cmp95419:
%stackaddr$makeclosure95426 = alloca %struct.ScmObj*, align 8
%fptrToInt95427 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56917 to i64
%ae56917 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95427)
store volatile %struct.ScmObj* %ae56917, %struct.ScmObj** %stackaddr$makeclosure95426, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae56917, %struct.ScmObj* %x48150, i64 0)
%ae56918 = call %struct.ScmObj* @const_init_int(i64 0)
%ae56919 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93254$ae569170 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95428 = alloca %struct.ScmObj*, align 8
%argslist93254$ae569171 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56919, %struct.ScmObj* %argslist93254$ae569170)
store volatile %struct.ScmObj* %argslist93254$ae569171, %struct.ScmObj** %stackaddr$prim95428, align 8
%stackaddr$prim95429 = alloca %struct.ScmObj*, align 8
%argslist93254$ae569172 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56918, %struct.ScmObj* %argslist93254$ae569171)
store volatile %struct.ScmObj* %argslist93254$ae569172, %struct.ScmObj** %stackaddr$prim95429, align 8
%clofunc95430 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56917)
musttail call tailcc void %clofunc95430(%struct.ScmObj* %ae56917, %struct.ScmObj* %argslist93254$ae569172)
ret void
}

define tailcc void @proc_clo$ae56858(%struct.ScmObj* %env$ae56858,%struct.ScmObj* %current_45args93237) {
%stackaddr$env-ref95431 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56858, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95431
%stackaddr$prim95432 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93237)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95432, align 8
%stackaddr$prim95433 = alloca %struct.ScmObj*, align 8
%current_45args93238 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93237)
store volatile %struct.ScmObj* %current_45args93238, %struct.ScmObj** %stackaddr$prim95433, align 8
%stackaddr$prim95434 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93238)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95434, align 8
%ae56865 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95435 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56865)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95435, align 8
%stackaddr$makeclosure95436 = alloca %struct.ScmObj*, align 8
%fptrToInt95437 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56866 to i64
%ae56866 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95437)
store volatile %struct.ScmObj* %ae56866, %struct.ScmObj** %stackaddr$makeclosure95436, align 8
%ae56867 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93244$ae568660 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95438 = alloca %struct.ScmObj*, align 8
%argslist93244$ae568661 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93244$ae568660)
store volatile %struct.ScmObj* %argslist93244$ae568661, %struct.ScmObj** %stackaddr$prim95438, align 8
%stackaddr$prim95439 = alloca %struct.ScmObj*, align 8
%argslist93244$ae568662 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56867, %struct.ScmObj* %argslist93244$ae568661)
store volatile %struct.ScmObj* %argslist93244$ae568662, %struct.ScmObj** %stackaddr$prim95439, align 8
%clofunc95440 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56866)
musttail call tailcc void %clofunc95440(%struct.ScmObj* %ae56866, %struct.ScmObj* %argslist93244$ae568662)
ret void
}

define tailcc void @proc_clo$ae56866(%struct.ScmObj* %env$ae56866,%struct.ScmObj* %current_45args93240) {
%stackaddr$prim95441 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93240)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95441, align 8
%stackaddr$prim95442 = alloca %struct.ScmObj*, align 8
%current_45args93241 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93240)
store volatile %struct.ScmObj* %current_45args93241, %struct.ScmObj** %stackaddr$prim95442, align 8
%stackaddr$prim95443 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93241)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95443, align 8
%stackaddr$prim95444 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95444, align 8
%argslist93243$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95445 = alloca %struct.ScmObj*, align 8
%argslist93243$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93243$k0)
store volatile %struct.ScmObj* %argslist93243$k1, %struct.ScmObj** %stackaddr$prim95445, align 8
%clofunc95446 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95446(%struct.ScmObj* %k, %struct.ScmObj* %argslist93243$k1)
ret void
}

define tailcc void @proc_clo$ae56917(%struct.ScmObj* %env$ae56917,%struct.ScmObj* %current_45args93246) {
%stackaddr$env-ref95447 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae56917, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95447
%stackaddr$prim95448 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93246)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95448, align 8
%stackaddr$prim95449 = alloca %struct.ScmObj*, align 8
%current_45args93247 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93246)
store volatile %struct.ScmObj* %current_45args93247, %struct.ScmObj** %stackaddr$prim95449, align 8
%stackaddr$prim95450 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93247)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95450, align 8
%ae56927 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95451 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae56927)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95451, align 8
%stackaddr$makeclosure95452 = alloca %struct.ScmObj*, align 8
%fptrToInt95453 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae56928 to i64
%ae56928 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95453)
store volatile %struct.ScmObj* %ae56928, %struct.ScmObj** %stackaddr$makeclosure95452, align 8
%ae56929 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93253$ae569280 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95454 = alloca %struct.ScmObj*, align 8
%argslist93253$ae569281 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93253$ae569280)
store volatile %struct.ScmObj* %argslist93253$ae569281, %struct.ScmObj** %stackaddr$prim95454, align 8
%stackaddr$prim95455 = alloca %struct.ScmObj*, align 8
%argslist93253$ae569282 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae56929, %struct.ScmObj* %argslist93253$ae569281)
store volatile %struct.ScmObj* %argslist93253$ae569282, %struct.ScmObj** %stackaddr$prim95455, align 8
%clofunc95456 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae56928)
musttail call tailcc void %clofunc95456(%struct.ScmObj* %ae56928, %struct.ScmObj* %argslist93253$ae569282)
ret void
}

define tailcc void @proc_clo$ae56928(%struct.ScmObj* %env$ae56928,%struct.ScmObj* %current_45args93249) {
%stackaddr$prim95457 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93249)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95457, align 8
%stackaddr$prim95458 = alloca %struct.ScmObj*, align 8
%current_45args93250 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93249)
store volatile %struct.ScmObj* %current_45args93250, %struct.ScmObj** %stackaddr$prim95458, align 8
%stackaddr$prim95459 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93250)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95459, align 8
%stackaddr$prim95460 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95460, align 8
%argslist93252$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95461 = alloca %struct.ScmObj*, align 8
%argslist93252$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93252$k0)
store volatile %struct.ScmObj* %argslist93252$k1, %struct.ScmObj** %stackaddr$prim95461, align 8
%clofunc95462 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95462(%struct.ScmObj* %k, %struct.ScmObj* %argslist93252$k1)
ret void
}

define tailcc void @proc_clo$ae58188(%struct.ScmObj* %env$ae58188,%struct.ScmObj* %current_45args93258) {
%stackaddr$env-ref95463 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58188, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95463
%stackaddr$prim95464 = alloca %struct.ScmObj*, align 8
%_95k48330 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93258)
store volatile %struct.ScmObj* %_95k48330, %struct.ScmObj** %stackaddr$prim95464, align 8
%stackaddr$prim95465 = alloca %struct.ScmObj*, align 8
%current_45args93259 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93258)
store volatile %struct.ScmObj* %current_45args93259, %struct.ScmObj** %stackaddr$prim95465, align 8
%stackaddr$prim95466 = alloca %struct.ScmObj*, align 8
%t4802848154 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93259)
store volatile %struct.ScmObj* %t4802848154, %struct.ScmObj** %stackaddr$prim95466, align 8
%ae58194 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95467 = call i64 @is_truthy_value(%struct.ScmObj* %ae58194)
%cmp$cmp95467 = icmp eq i64 %truthy$cmp95467, 1
br i1 %cmp$cmp95467, label %truebranch$cmp95467, label %falsebranch$cmp95467
truebranch$cmp95467:
%stackaddr$prim95468 = alloca %struct.ScmObj*, align 8
%cpsprim48337 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48337, %struct.ScmObj** %stackaddr$prim95468, align 8
%stackaddr$makeclosure95469 = alloca %struct.ScmObj*, align 8
%fptrToInt95470 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58195 to i64
%ae58195 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95470)
store volatile %struct.ScmObj* %ae58195, %struct.ScmObj** %stackaddr$makeclosure95469, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58195, %struct.ScmObj* %x48150, i64 0)
%ae58196 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93308$ae581950 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95471 = alloca %struct.ScmObj*, align 8
%argslist93308$ae581951 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48337, %struct.ScmObj* %argslist93308$ae581950)
store volatile %struct.ScmObj* %argslist93308$ae581951, %struct.ScmObj** %stackaddr$prim95471, align 8
%stackaddr$prim95472 = alloca %struct.ScmObj*, align 8
%argslist93308$ae581952 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58196, %struct.ScmObj* %argslist93308$ae581951)
store volatile %struct.ScmObj* %argslist93308$ae581952, %struct.ScmObj** %stackaddr$prim95472, align 8
%clofunc95473 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58195)
musttail call tailcc void %clofunc95473(%struct.ScmObj* %ae58195, %struct.ScmObj* %argslist93308$ae581952)
ret void
falsebranch$cmp95467:
%ae58660 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95474 = alloca %struct.ScmObj*, align 8
%anf_45bind48287 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58660)
store volatile %struct.ScmObj* %anf_45bind48287, %struct.ScmObj** %stackaddr$prim95474, align 8
%ae58662 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim95475 = alloca %struct.ScmObj*, align 8
%anf_45bind48288 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48287, %struct.ScmObj* %ae58662)
store volatile %struct.ScmObj* %anf_45bind48288, %struct.ScmObj** %stackaddr$prim95475, align 8
%ae58664 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim95476 = alloca %struct.ScmObj*, align 8
%anf_45bind48289 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48288, %struct.ScmObj* %ae58664)
store volatile %struct.ScmObj* %anf_45bind48289, %struct.ScmObj** %stackaddr$prim95476, align 8
%ae58666 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95477 = alloca %struct.ScmObj*, align 8
%cpsprim48338 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58666, %struct.ScmObj* %anf_45bind48289)
store volatile %struct.ScmObj* %cpsprim48338, %struct.ScmObj** %stackaddr$prim95477, align 8
%stackaddr$makeclosure95478 = alloca %struct.ScmObj*, align 8
%fptrToInt95479 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58668 to i64
%ae58668 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95479)
store volatile %struct.ScmObj* %ae58668, %struct.ScmObj** %stackaddr$makeclosure95478, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58668, %struct.ScmObj* %x48150, i64 0)
%ae58669 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93356$ae586680 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95480 = alloca %struct.ScmObj*, align 8
%argslist93356$ae586681 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48338, %struct.ScmObj* %argslist93356$ae586680)
store volatile %struct.ScmObj* %argslist93356$ae586681, %struct.ScmObj** %stackaddr$prim95480, align 8
%stackaddr$prim95481 = alloca %struct.ScmObj*, align 8
%argslist93356$ae586682 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58669, %struct.ScmObj* %argslist93356$ae586681)
store volatile %struct.ScmObj* %argslist93356$ae586682, %struct.ScmObj** %stackaddr$prim95481, align 8
%clofunc95482 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58668)
musttail call tailcc void %clofunc95482(%struct.ScmObj* %ae58668, %struct.ScmObj* %argslist93356$ae586682)
ret void
}

define tailcc void @proc_clo$ae58195(%struct.ScmObj* %env$ae58195,%struct.ScmObj* %current_45args93261) {
%stackaddr$env-ref95483 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58195, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95483
%stackaddr$prim95484 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93261)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim95484, align 8
%stackaddr$prim95485 = alloca %struct.ScmObj*, align 8
%current_45args93262 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93261)
store volatile %struct.ScmObj* %current_45args93262, %struct.ScmObj** %stackaddr$prim95485, align 8
%stackaddr$prim95486 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93262)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim95486, align 8
%ae58202 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95487 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58202)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim95487, align 8
%truthy$cmp95488 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp95488 = icmp eq i64 %truthy$cmp95488, 1
br i1 %cmp$cmp95488, label %truebranch$cmp95488, label %falsebranch$cmp95488
truebranch$cmp95488:
%ae58205 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95489 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58205)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim95489, align 8
%ae58207 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95490 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58207)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim95490, align 8
%stackaddr$prim95491 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim95491, align 8
%ae58211 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95492 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58211, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim95492, align 8
%stackaddr$makeclosure95493 = alloca %struct.ScmObj*, align 8
%fptrToInt95494 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58213 to i64
%ae58213 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95494)
store volatile %struct.ScmObj* %ae58213, %struct.ScmObj** %stackaddr$makeclosure95493, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58213, %struct.ScmObj* %x48150, i64 0)
%ae58214 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93285$ae582130 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95495 = alloca %struct.ScmObj*, align 8
%argslist93285$ae582131 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93285$ae582130)
store volatile %struct.ScmObj* %argslist93285$ae582131, %struct.ScmObj** %stackaddr$prim95495, align 8
%stackaddr$prim95496 = alloca %struct.ScmObj*, align 8
%argslist93285$ae582132 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58214, %struct.ScmObj* %argslist93285$ae582131)
store volatile %struct.ScmObj* %argslist93285$ae582132, %struct.ScmObj** %stackaddr$prim95496, align 8
%clofunc95497 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58213)
musttail call tailcc void %clofunc95497(%struct.ScmObj* %ae58213, %struct.ScmObj* %argslist93285$ae582132)
ret void
falsebranch$cmp95488:
%stackaddr$makeclosure95498 = alloca %struct.ScmObj*, align 8
%fptrToInt95499 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58451 to i64
%ae58451 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95499)
store volatile %struct.ScmObj* %ae58451, %struct.ScmObj** %stackaddr$makeclosure95498, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58451, %struct.ScmObj* %x48150, i64 0)
%ae58452 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58453 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93307$ae584510 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95500 = alloca %struct.ScmObj*, align 8
%argslist93307$ae584511 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58453, %struct.ScmObj* %argslist93307$ae584510)
store volatile %struct.ScmObj* %argslist93307$ae584511, %struct.ScmObj** %stackaddr$prim95500, align 8
%stackaddr$prim95501 = alloca %struct.ScmObj*, align 8
%argslist93307$ae584512 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58452, %struct.ScmObj* %argslist93307$ae584511)
store volatile %struct.ScmObj* %argslist93307$ae584512, %struct.ScmObj** %stackaddr$prim95501, align 8
%clofunc95502 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58451)
musttail call tailcc void %clofunc95502(%struct.ScmObj* %ae58451, %struct.ScmObj* %argslist93307$ae584512)
ret void
}

define tailcc void @proc_clo$ae58213(%struct.ScmObj* %env$ae58213,%struct.ScmObj* %current_45args93264) {
%stackaddr$env-ref95503 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58213, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95503
%stackaddr$prim95504 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93264)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95504, align 8
%stackaddr$prim95505 = alloca %struct.ScmObj*, align 8
%current_45args93265 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93264)
store volatile %struct.ScmObj* %current_45args93265, %struct.ScmObj** %stackaddr$prim95505, align 8
%stackaddr$prim95506 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93265)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95506, align 8
%ae58219 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95507 = call i64 @is_truthy_value(%struct.ScmObj* %ae58219)
%cmp$cmp95507 = icmp eq i64 %truthy$cmp95507, 1
br i1 %cmp$cmp95507, label %truebranch$cmp95507, label %falsebranch$cmp95507
truebranch$cmp95507:
%ae58221 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58222 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95508 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58221, %struct.ScmObj* %ae58222)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95508, align 8
%stackaddr$makeclosure95509 = alloca %struct.ScmObj*, align 8
%fptrToInt95510 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58223 to i64
%ae58223 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95510)
store volatile %struct.ScmObj* %ae58223, %struct.ScmObj** %stackaddr$makeclosure95509, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58223, %struct.ScmObj* %x48150, i64 0)
%ae58224 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93275$ae582230 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95511 = alloca %struct.ScmObj*, align 8
%argslist93275$ae582231 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93275$ae582230)
store volatile %struct.ScmObj* %argslist93275$ae582231, %struct.ScmObj** %stackaddr$prim95511, align 8
%stackaddr$prim95512 = alloca %struct.ScmObj*, align 8
%argslist93275$ae582232 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58224, %struct.ScmObj* %argslist93275$ae582231)
store volatile %struct.ScmObj* %argslist93275$ae582232, %struct.ScmObj** %stackaddr$prim95512, align 8
%clofunc95513 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58223)
musttail call tailcc void %clofunc95513(%struct.ScmObj* %ae58223, %struct.ScmObj* %argslist93275$ae582232)
ret void
falsebranch$cmp95507:
%stackaddr$makeclosure95514 = alloca %struct.ScmObj*, align 8
%fptrToInt95515 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58282 to i64
%ae58282 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95515)
store volatile %struct.ScmObj* %ae58282, %struct.ScmObj** %stackaddr$makeclosure95514, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58282, %struct.ScmObj* %x48150, i64 0)
%ae58283 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58284 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93284$ae582820 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95516 = alloca %struct.ScmObj*, align 8
%argslist93284$ae582821 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58284, %struct.ScmObj* %argslist93284$ae582820)
store volatile %struct.ScmObj* %argslist93284$ae582821, %struct.ScmObj** %stackaddr$prim95516, align 8
%stackaddr$prim95517 = alloca %struct.ScmObj*, align 8
%argslist93284$ae582822 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58283, %struct.ScmObj* %argslist93284$ae582821)
store volatile %struct.ScmObj* %argslist93284$ae582822, %struct.ScmObj** %stackaddr$prim95517, align 8
%clofunc95518 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58282)
musttail call tailcc void %clofunc95518(%struct.ScmObj* %ae58282, %struct.ScmObj* %argslist93284$ae582822)
ret void
}

define tailcc void @proc_clo$ae58223(%struct.ScmObj* %env$ae58223,%struct.ScmObj* %current_45args93267) {
%stackaddr$env-ref95519 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58223, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95519
%stackaddr$prim95520 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93267)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95520, align 8
%stackaddr$prim95521 = alloca %struct.ScmObj*, align 8
%current_45args93268 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93267)
store volatile %struct.ScmObj* %current_45args93268, %struct.ScmObj** %stackaddr$prim95521, align 8
%stackaddr$prim95522 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93268)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95522, align 8
%ae58230 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95523 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58230)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95523, align 8
%stackaddr$makeclosure95524 = alloca %struct.ScmObj*, align 8
%fptrToInt95525 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58231 to i64
%ae58231 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95525)
store volatile %struct.ScmObj* %ae58231, %struct.ScmObj** %stackaddr$makeclosure95524, align 8
%ae58232 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93274$ae582310 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95526 = alloca %struct.ScmObj*, align 8
%argslist93274$ae582311 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93274$ae582310)
store volatile %struct.ScmObj* %argslist93274$ae582311, %struct.ScmObj** %stackaddr$prim95526, align 8
%stackaddr$prim95527 = alloca %struct.ScmObj*, align 8
%argslist93274$ae582312 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58232, %struct.ScmObj* %argslist93274$ae582311)
store volatile %struct.ScmObj* %argslist93274$ae582312, %struct.ScmObj** %stackaddr$prim95527, align 8
%clofunc95528 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58231)
musttail call tailcc void %clofunc95528(%struct.ScmObj* %ae58231, %struct.ScmObj* %argslist93274$ae582312)
ret void
}

define tailcc void @proc_clo$ae58231(%struct.ScmObj* %env$ae58231,%struct.ScmObj* %current_45args93270) {
%stackaddr$prim95529 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93270)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95529, align 8
%stackaddr$prim95530 = alloca %struct.ScmObj*, align 8
%current_45args93271 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93270)
store volatile %struct.ScmObj* %current_45args93271, %struct.ScmObj** %stackaddr$prim95530, align 8
%stackaddr$prim95531 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93271)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95531, align 8
%stackaddr$prim95532 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95532, align 8
%argslist93273$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95533 = alloca %struct.ScmObj*, align 8
%argslist93273$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93273$k0)
store volatile %struct.ScmObj* %argslist93273$k1, %struct.ScmObj** %stackaddr$prim95533, align 8
%clofunc95534 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95534(%struct.ScmObj* %k, %struct.ScmObj* %argslist93273$k1)
ret void
}

define tailcc void @proc_clo$ae58282(%struct.ScmObj* %env$ae58282,%struct.ScmObj* %current_45args93276) {
%stackaddr$env-ref95535 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58282, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95535
%stackaddr$prim95536 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93276)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95536, align 8
%stackaddr$prim95537 = alloca %struct.ScmObj*, align 8
%current_45args93277 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93276)
store volatile %struct.ScmObj* %current_45args93277, %struct.ScmObj** %stackaddr$prim95537, align 8
%stackaddr$prim95538 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93277)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95538, align 8
%ae58292 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95539 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58292)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95539, align 8
%stackaddr$makeclosure95540 = alloca %struct.ScmObj*, align 8
%fptrToInt95541 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58293 to i64
%ae58293 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95541)
store volatile %struct.ScmObj* %ae58293, %struct.ScmObj** %stackaddr$makeclosure95540, align 8
%ae58294 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93283$ae582930 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95542 = alloca %struct.ScmObj*, align 8
%argslist93283$ae582931 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93283$ae582930)
store volatile %struct.ScmObj* %argslist93283$ae582931, %struct.ScmObj** %stackaddr$prim95542, align 8
%stackaddr$prim95543 = alloca %struct.ScmObj*, align 8
%argslist93283$ae582932 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58294, %struct.ScmObj* %argslist93283$ae582931)
store volatile %struct.ScmObj* %argslist93283$ae582932, %struct.ScmObj** %stackaddr$prim95543, align 8
%clofunc95544 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58293)
musttail call tailcc void %clofunc95544(%struct.ScmObj* %ae58293, %struct.ScmObj* %argslist93283$ae582932)
ret void
}

define tailcc void @proc_clo$ae58293(%struct.ScmObj* %env$ae58293,%struct.ScmObj* %current_45args93279) {
%stackaddr$prim95545 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93279)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95545, align 8
%stackaddr$prim95546 = alloca %struct.ScmObj*, align 8
%current_45args93280 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93279)
store volatile %struct.ScmObj* %current_45args93280, %struct.ScmObj** %stackaddr$prim95546, align 8
%stackaddr$prim95547 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93280)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95547, align 8
%stackaddr$prim95548 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95548, align 8
%argslist93282$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95549 = alloca %struct.ScmObj*, align 8
%argslist93282$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93282$k0)
store volatile %struct.ScmObj* %argslist93282$k1, %struct.ScmObj** %stackaddr$prim95549, align 8
%clofunc95550 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95550(%struct.ScmObj* %k, %struct.ScmObj* %argslist93282$k1)
ret void
}

define tailcc void @proc_clo$ae58451(%struct.ScmObj* %env$ae58451,%struct.ScmObj* %current_45args93286) {
%stackaddr$env-ref95551 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58451, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95551
%stackaddr$prim95552 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93286)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95552, align 8
%stackaddr$prim95553 = alloca %struct.ScmObj*, align 8
%current_45args93287 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93286)
store volatile %struct.ScmObj* %current_45args93287, %struct.ScmObj** %stackaddr$prim95553, align 8
%stackaddr$prim95554 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93287)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95554, align 8
%ae58460 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95555 = call i64 @is_truthy_value(%struct.ScmObj* %ae58460)
%cmp$cmp95555 = icmp eq i64 %truthy$cmp95555, 1
br i1 %cmp$cmp95555, label %truebranch$cmp95555, label %falsebranch$cmp95555
truebranch$cmp95555:
%ae58462 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58463 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95556 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58462, %struct.ScmObj* %ae58463)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95556, align 8
%stackaddr$makeclosure95557 = alloca %struct.ScmObj*, align 8
%fptrToInt95558 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58464 to i64
%ae58464 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95558)
store volatile %struct.ScmObj* %ae58464, %struct.ScmObj** %stackaddr$makeclosure95557, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58464, %struct.ScmObj* %x48150, i64 0)
%ae58465 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93297$ae584640 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95559 = alloca %struct.ScmObj*, align 8
%argslist93297$ae584641 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93297$ae584640)
store volatile %struct.ScmObj* %argslist93297$ae584641, %struct.ScmObj** %stackaddr$prim95559, align 8
%stackaddr$prim95560 = alloca %struct.ScmObj*, align 8
%argslist93297$ae584642 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58465, %struct.ScmObj* %argslist93297$ae584641)
store volatile %struct.ScmObj* %argslist93297$ae584642, %struct.ScmObj** %stackaddr$prim95560, align 8
%clofunc95561 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58464)
musttail call tailcc void %clofunc95561(%struct.ScmObj* %ae58464, %struct.ScmObj* %argslist93297$ae584642)
ret void
falsebranch$cmp95555:
%stackaddr$makeclosure95562 = alloca %struct.ScmObj*, align 8
%fptrToInt95563 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58523 to i64
%ae58523 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95563)
store volatile %struct.ScmObj* %ae58523, %struct.ScmObj** %stackaddr$makeclosure95562, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58523, %struct.ScmObj* %x48150, i64 0)
%ae58524 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58525 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93306$ae585230 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95564 = alloca %struct.ScmObj*, align 8
%argslist93306$ae585231 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58525, %struct.ScmObj* %argslist93306$ae585230)
store volatile %struct.ScmObj* %argslist93306$ae585231, %struct.ScmObj** %stackaddr$prim95564, align 8
%stackaddr$prim95565 = alloca %struct.ScmObj*, align 8
%argslist93306$ae585232 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58524, %struct.ScmObj* %argslist93306$ae585231)
store volatile %struct.ScmObj* %argslist93306$ae585232, %struct.ScmObj** %stackaddr$prim95565, align 8
%clofunc95566 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58523)
musttail call tailcc void %clofunc95566(%struct.ScmObj* %ae58523, %struct.ScmObj* %argslist93306$ae585232)
ret void
}

define tailcc void @proc_clo$ae58464(%struct.ScmObj* %env$ae58464,%struct.ScmObj* %current_45args93289) {
%stackaddr$env-ref95567 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58464, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95567
%stackaddr$prim95568 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93289)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95568, align 8
%stackaddr$prim95569 = alloca %struct.ScmObj*, align 8
%current_45args93290 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93289)
store volatile %struct.ScmObj* %current_45args93290, %struct.ScmObj** %stackaddr$prim95569, align 8
%stackaddr$prim95570 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93290)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95570, align 8
%ae58471 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95571 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58471)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95571, align 8
%stackaddr$makeclosure95572 = alloca %struct.ScmObj*, align 8
%fptrToInt95573 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58472 to i64
%ae58472 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95573)
store volatile %struct.ScmObj* %ae58472, %struct.ScmObj** %stackaddr$makeclosure95572, align 8
%ae58473 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93296$ae584720 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95574 = alloca %struct.ScmObj*, align 8
%argslist93296$ae584721 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93296$ae584720)
store volatile %struct.ScmObj* %argslist93296$ae584721, %struct.ScmObj** %stackaddr$prim95574, align 8
%stackaddr$prim95575 = alloca %struct.ScmObj*, align 8
%argslist93296$ae584722 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58473, %struct.ScmObj* %argslist93296$ae584721)
store volatile %struct.ScmObj* %argslist93296$ae584722, %struct.ScmObj** %stackaddr$prim95575, align 8
%clofunc95576 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58472)
musttail call tailcc void %clofunc95576(%struct.ScmObj* %ae58472, %struct.ScmObj* %argslist93296$ae584722)
ret void
}

define tailcc void @proc_clo$ae58472(%struct.ScmObj* %env$ae58472,%struct.ScmObj* %current_45args93292) {
%stackaddr$prim95577 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93292)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95577, align 8
%stackaddr$prim95578 = alloca %struct.ScmObj*, align 8
%current_45args93293 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93292)
store volatile %struct.ScmObj* %current_45args93293, %struct.ScmObj** %stackaddr$prim95578, align 8
%stackaddr$prim95579 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93293)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95579, align 8
%stackaddr$prim95580 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95580, align 8
%argslist93295$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95581 = alloca %struct.ScmObj*, align 8
%argslist93295$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93295$k0)
store volatile %struct.ScmObj* %argslist93295$k1, %struct.ScmObj** %stackaddr$prim95581, align 8
%clofunc95582 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95582(%struct.ScmObj* %k, %struct.ScmObj* %argslist93295$k1)
ret void
}

define tailcc void @proc_clo$ae58523(%struct.ScmObj* %env$ae58523,%struct.ScmObj* %current_45args93298) {
%stackaddr$env-ref95583 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58523, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95583
%stackaddr$prim95584 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93298)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95584, align 8
%stackaddr$prim95585 = alloca %struct.ScmObj*, align 8
%current_45args93299 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93298)
store volatile %struct.ScmObj* %current_45args93299, %struct.ScmObj** %stackaddr$prim95585, align 8
%stackaddr$prim95586 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93299)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95586, align 8
%ae58533 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95587 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58533)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95587, align 8
%stackaddr$makeclosure95588 = alloca %struct.ScmObj*, align 8
%fptrToInt95589 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58534 to i64
%ae58534 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95589)
store volatile %struct.ScmObj* %ae58534, %struct.ScmObj** %stackaddr$makeclosure95588, align 8
%ae58535 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93305$ae585340 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95590 = alloca %struct.ScmObj*, align 8
%argslist93305$ae585341 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93305$ae585340)
store volatile %struct.ScmObj* %argslist93305$ae585341, %struct.ScmObj** %stackaddr$prim95590, align 8
%stackaddr$prim95591 = alloca %struct.ScmObj*, align 8
%argslist93305$ae585342 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58535, %struct.ScmObj* %argslist93305$ae585341)
store volatile %struct.ScmObj* %argslist93305$ae585342, %struct.ScmObj** %stackaddr$prim95591, align 8
%clofunc95592 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58534)
musttail call tailcc void %clofunc95592(%struct.ScmObj* %ae58534, %struct.ScmObj* %argslist93305$ae585342)
ret void
}

define tailcc void @proc_clo$ae58534(%struct.ScmObj* %env$ae58534,%struct.ScmObj* %current_45args93301) {
%stackaddr$prim95593 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93301)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95593, align 8
%stackaddr$prim95594 = alloca %struct.ScmObj*, align 8
%current_45args93302 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93301)
store volatile %struct.ScmObj* %current_45args93302, %struct.ScmObj** %stackaddr$prim95594, align 8
%stackaddr$prim95595 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93302)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95595, align 8
%stackaddr$prim95596 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95596, align 8
%argslist93304$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95597 = alloca %struct.ScmObj*, align 8
%argslist93304$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93304$k0)
store volatile %struct.ScmObj* %argslist93304$k1, %struct.ScmObj** %stackaddr$prim95597, align 8
%clofunc95598 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95598(%struct.ScmObj* %k, %struct.ScmObj* %argslist93304$k1)
ret void
}

define tailcc void @proc_clo$ae58668(%struct.ScmObj* %env$ae58668,%struct.ScmObj* %current_45args93309) {
%stackaddr$env-ref95599 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58668, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95599
%stackaddr$prim95600 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93309)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim95600, align 8
%stackaddr$prim95601 = alloca %struct.ScmObj*, align 8
%current_45args93310 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93309)
store volatile %struct.ScmObj* %current_45args93310, %struct.ScmObj** %stackaddr$prim95601, align 8
%stackaddr$prim95602 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93310)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim95602, align 8
%ae58675 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95603 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58675)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim95603, align 8
%truthy$cmp95604 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp95604 = icmp eq i64 %truthy$cmp95604, 1
br i1 %cmp$cmp95604, label %truebranch$cmp95604, label %falsebranch$cmp95604
truebranch$cmp95604:
%ae58678 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95605 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58678)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim95605, align 8
%ae58680 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95606 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58680)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim95606, align 8
%stackaddr$prim95607 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim95607, align 8
%ae58684 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95608 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58684, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim95608, align 8
%stackaddr$makeclosure95609 = alloca %struct.ScmObj*, align 8
%fptrToInt95610 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58686 to i64
%ae58686 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95610)
store volatile %struct.ScmObj* %ae58686, %struct.ScmObj** %stackaddr$makeclosure95609, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58686, %struct.ScmObj* %x48150, i64 0)
%ae58687 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93333$ae586860 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95611 = alloca %struct.ScmObj*, align 8
%argslist93333$ae586861 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93333$ae586860)
store volatile %struct.ScmObj* %argslist93333$ae586861, %struct.ScmObj** %stackaddr$prim95611, align 8
%stackaddr$prim95612 = alloca %struct.ScmObj*, align 8
%argslist93333$ae586862 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58687, %struct.ScmObj* %argslist93333$ae586861)
store volatile %struct.ScmObj* %argslist93333$ae586862, %struct.ScmObj** %stackaddr$prim95612, align 8
%clofunc95613 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58686)
musttail call tailcc void %clofunc95613(%struct.ScmObj* %ae58686, %struct.ScmObj* %argslist93333$ae586862)
ret void
falsebranch$cmp95604:
%stackaddr$makeclosure95614 = alloca %struct.ScmObj*, align 8
%fptrToInt95615 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58924 to i64
%ae58924 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95615)
store volatile %struct.ScmObj* %ae58924, %struct.ScmObj** %stackaddr$makeclosure95614, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58924, %struct.ScmObj* %x48150, i64 0)
%ae58925 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58926 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93355$ae589240 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95616 = alloca %struct.ScmObj*, align 8
%argslist93355$ae589241 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58926, %struct.ScmObj* %argslist93355$ae589240)
store volatile %struct.ScmObj* %argslist93355$ae589241, %struct.ScmObj** %stackaddr$prim95616, align 8
%stackaddr$prim95617 = alloca %struct.ScmObj*, align 8
%argslist93355$ae589242 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58925, %struct.ScmObj* %argslist93355$ae589241)
store volatile %struct.ScmObj* %argslist93355$ae589242, %struct.ScmObj** %stackaddr$prim95617, align 8
%clofunc95618 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58924)
musttail call tailcc void %clofunc95618(%struct.ScmObj* %ae58924, %struct.ScmObj* %argslist93355$ae589242)
ret void
}

define tailcc void @proc_clo$ae58686(%struct.ScmObj* %env$ae58686,%struct.ScmObj* %current_45args93312) {
%stackaddr$env-ref95619 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58686, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95619
%stackaddr$prim95620 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93312)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95620, align 8
%stackaddr$prim95621 = alloca %struct.ScmObj*, align 8
%current_45args93313 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93312)
store volatile %struct.ScmObj* %current_45args93313, %struct.ScmObj** %stackaddr$prim95621, align 8
%stackaddr$prim95622 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93313)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95622, align 8
%ae58692 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95623 = call i64 @is_truthy_value(%struct.ScmObj* %ae58692)
%cmp$cmp95623 = icmp eq i64 %truthy$cmp95623, 1
br i1 %cmp$cmp95623, label %truebranch$cmp95623, label %falsebranch$cmp95623
truebranch$cmp95623:
%ae58694 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58695 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95624 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58694, %struct.ScmObj* %ae58695)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95624, align 8
%stackaddr$makeclosure95625 = alloca %struct.ScmObj*, align 8
%fptrToInt95626 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58696 to i64
%ae58696 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95626)
store volatile %struct.ScmObj* %ae58696, %struct.ScmObj** %stackaddr$makeclosure95625, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58696, %struct.ScmObj* %x48150, i64 0)
%ae58697 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93323$ae586960 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95627 = alloca %struct.ScmObj*, align 8
%argslist93323$ae586961 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93323$ae586960)
store volatile %struct.ScmObj* %argslist93323$ae586961, %struct.ScmObj** %stackaddr$prim95627, align 8
%stackaddr$prim95628 = alloca %struct.ScmObj*, align 8
%argslist93323$ae586962 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58697, %struct.ScmObj* %argslist93323$ae586961)
store volatile %struct.ScmObj* %argslist93323$ae586962, %struct.ScmObj** %stackaddr$prim95628, align 8
%clofunc95629 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58696)
musttail call tailcc void %clofunc95629(%struct.ScmObj* %ae58696, %struct.ScmObj* %argslist93323$ae586962)
ret void
falsebranch$cmp95623:
%stackaddr$makeclosure95630 = alloca %struct.ScmObj*, align 8
%fptrToInt95631 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58755 to i64
%ae58755 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95631)
store volatile %struct.ScmObj* %ae58755, %struct.ScmObj** %stackaddr$makeclosure95630, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58755, %struct.ScmObj* %x48150, i64 0)
%ae58756 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58757 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93332$ae587550 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95632 = alloca %struct.ScmObj*, align 8
%argslist93332$ae587551 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58757, %struct.ScmObj* %argslist93332$ae587550)
store volatile %struct.ScmObj* %argslist93332$ae587551, %struct.ScmObj** %stackaddr$prim95632, align 8
%stackaddr$prim95633 = alloca %struct.ScmObj*, align 8
%argslist93332$ae587552 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58756, %struct.ScmObj* %argslist93332$ae587551)
store volatile %struct.ScmObj* %argslist93332$ae587552, %struct.ScmObj** %stackaddr$prim95633, align 8
%clofunc95634 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58755)
musttail call tailcc void %clofunc95634(%struct.ScmObj* %ae58755, %struct.ScmObj* %argslist93332$ae587552)
ret void
}

define tailcc void @proc_clo$ae58696(%struct.ScmObj* %env$ae58696,%struct.ScmObj* %current_45args93315) {
%stackaddr$env-ref95635 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58696, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95635
%stackaddr$prim95636 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93315)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95636, align 8
%stackaddr$prim95637 = alloca %struct.ScmObj*, align 8
%current_45args93316 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93315)
store volatile %struct.ScmObj* %current_45args93316, %struct.ScmObj** %stackaddr$prim95637, align 8
%stackaddr$prim95638 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93316)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95638, align 8
%ae58703 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95639 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58703)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95639, align 8
%stackaddr$makeclosure95640 = alloca %struct.ScmObj*, align 8
%fptrToInt95641 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58704 to i64
%ae58704 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95641)
store volatile %struct.ScmObj* %ae58704, %struct.ScmObj** %stackaddr$makeclosure95640, align 8
%ae58705 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93322$ae587040 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95642 = alloca %struct.ScmObj*, align 8
%argslist93322$ae587041 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93322$ae587040)
store volatile %struct.ScmObj* %argslist93322$ae587041, %struct.ScmObj** %stackaddr$prim95642, align 8
%stackaddr$prim95643 = alloca %struct.ScmObj*, align 8
%argslist93322$ae587042 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58705, %struct.ScmObj* %argslist93322$ae587041)
store volatile %struct.ScmObj* %argslist93322$ae587042, %struct.ScmObj** %stackaddr$prim95643, align 8
%clofunc95644 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58704)
musttail call tailcc void %clofunc95644(%struct.ScmObj* %ae58704, %struct.ScmObj* %argslist93322$ae587042)
ret void
}

define tailcc void @proc_clo$ae58704(%struct.ScmObj* %env$ae58704,%struct.ScmObj* %current_45args93318) {
%stackaddr$prim95645 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93318)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95645, align 8
%stackaddr$prim95646 = alloca %struct.ScmObj*, align 8
%current_45args93319 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93318)
store volatile %struct.ScmObj* %current_45args93319, %struct.ScmObj** %stackaddr$prim95646, align 8
%stackaddr$prim95647 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93319)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95647, align 8
%stackaddr$prim95648 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95648, align 8
%argslist93321$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95649 = alloca %struct.ScmObj*, align 8
%argslist93321$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93321$k0)
store volatile %struct.ScmObj* %argslist93321$k1, %struct.ScmObj** %stackaddr$prim95649, align 8
%clofunc95650 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95650(%struct.ScmObj* %k, %struct.ScmObj* %argslist93321$k1)
ret void
}

define tailcc void @proc_clo$ae58755(%struct.ScmObj* %env$ae58755,%struct.ScmObj* %current_45args93324) {
%stackaddr$env-ref95651 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58755, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95651
%stackaddr$prim95652 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93324)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95652, align 8
%stackaddr$prim95653 = alloca %struct.ScmObj*, align 8
%current_45args93325 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93324)
store volatile %struct.ScmObj* %current_45args93325, %struct.ScmObj** %stackaddr$prim95653, align 8
%stackaddr$prim95654 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93325)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95654, align 8
%ae58765 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95655 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58765)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95655, align 8
%stackaddr$makeclosure95656 = alloca %struct.ScmObj*, align 8
%fptrToInt95657 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58766 to i64
%ae58766 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95657)
store volatile %struct.ScmObj* %ae58766, %struct.ScmObj** %stackaddr$makeclosure95656, align 8
%ae58767 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93331$ae587660 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95658 = alloca %struct.ScmObj*, align 8
%argslist93331$ae587661 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93331$ae587660)
store volatile %struct.ScmObj* %argslist93331$ae587661, %struct.ScmObj** %stackaddr$prim95658, align 8
%stackaddr$prim95659 = alloca %struct.ScmObj*, align 8
%argslist93331$ae587662 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58767, %struct.ScmObj* %argslist93331$ae587661)
store volatile %struct.ScmObj* %argslist93331$ae587662, %struct.ScmObj** %stackaddr$prim95659, align 8
%clofunc95660 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58766)
musttail call tailcc void %clofunc95660(%struct.ScmObj* %ae58766, %struct.ScmObj* %argslist93331$ae587662)
ret void
}

define tailcc void @proc_clo$ae58766(%struct.ScmObj* %env$ae58766,%struct.ScmObj* %current_45args93327) {
%stackaddr$prim95661 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93327)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95661, align 8
%stackaddr$prim95662 = alloca %struct.ScmObj*, align 8
%current_45args93328 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93327)
store volatile %struct.ScmObj* %current_45args93328, %struct.ScmObj** %stackaddr$prim95662, align 8
%stackaddr$prim95663 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93328)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95663, align 8
%stackaddr$prim95664 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95664, align 8
%argslist93330$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95665 = alloca %struct.ScmObj*, align 8
%argslist93330$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93330$k0)
store volatile %struct.ScmObj* %argslist93330$k1, %struct.ScmObj** %stackaddr$prim95665, align 8
%clofunc95666 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95666(%struct.ScmObj* %k, %struct.ScmObj* %argslist93330$k1)
ret void
}

define tailcc void @proc_clo$ae58924(%struct.ScmObj* %env$ae58924,%struct.ScmObj* %current_45args93334) {
%stackaddr$env-ref95667 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58924, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95667
%stackaddr$prim95668 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93334)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95668, align 8
%stackaddr$prim95669 = alloca %struct.ScmObj*, align 8
%current_45args93335 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93334)
store volatile %struct.ScmObj* %current_45args93335, %struct.ScmObj** %stackaddr$prim95669, align 8
%stackaddr$prim95670 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93335)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95670, align 8
%ae58933 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95671 = call i64 @is_truthy_value(%struct.ScmObj* %ae58933)
%cmp$cmp95671 = icmp eq i64 %truthy$cmp95671, 1
br i1 %cmp$cmp95671, label %truebranch$cmp95671, label %falsebranch$cmp95671
truebranch$cmp95671:
%ae58935 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58936 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95672 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58935, %struct.ScmObj* %ae58936)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95672, align 8
%stackaddr$makeclosure95673 = alloca %struct.ScmObj*, align 8
%fptrToInt95674 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58937 to i64
%ae58937 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95674)
store volatile %struct.ScmObj* %ae58937, %struct.ScmObj** %stackaddr$makeclosure95673, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58937, %struct.ScmObj* %x48150, i64 0)
%ae58938 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93345$ae589370 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95675 = alloca %struct.ScmObj*, align 8
%argslist93345$ae589371 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93345$ae589370)
store volatile %struct.ScmObj* %argslist93345$ae589371, %struct.ScmObj** %stackaddr$prim95675, align 8
%stackaddr$prim95676 = alloca %struct.ScmObj*, align 8
%argslist93345$ae589372 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58938, %struct.ScmObj* %argslist93345$ae589371)
store volatile %struct.ScmObj* %argslist93345$ae589372, %struct.ScmObj** %stackaddr$prim95676, align 8
%clofunc95677 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58937)
musttail call tailcc void %clofunc95677(%struct.ScmObj* %ae58937, %struct.ScmObj* %argslist93345$ae589372)
ret void
falsebranch$cmp95671:
%stackaddr$makeclosure95678 = alloca %struct.ScmObj*, align 8
%fptrToInt95679 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58996 to i64
%ae58996 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95679)
store volatile %struct.ScmObj* %ae58996, %struct.ScmObj** %stackaddr$makeclosure95678, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58996, %struct.ScmObj* %x48150, i64 0)
%ae58997 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58998 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93354$ae589960 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95680 = alloca %struct.ScmObj*, align 8
%argslist93354$ae589961 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58998, %struct.ScmObj* %argslist93354$ae589960)
store volatile %struct.ScmObj* %argslist93354$ae589961, %struct.ScmObj** %stackaddr$prim95680, align 8
%stackaddr$prim95681 = alloca %struct.ScmObj*, align 8
%argslist93354$ae589962 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58997, %struct.ScmObj* %argslist93354$ae589961)
store volatile %struct.ScmObj* %argslist93354$ae589962, %struct.ScmObj** %stackaddr$prim95681, align 8
%clofunc95682 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58996)
musttail call tailcc void %clofunc95682(%struct.ScmObj* %ae58996, %struct.ScmObj* %argslist93354$ae589962)
ret void
}

define tailcc void @proc_clo$ae58937(%struct.ScmObj* %env$ae58937,%struct.ScmObj* %current_45args93337) {
%stackaddr$env-ref95683 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58937, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95683
%stackaddr$prim95684 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93337)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95684, align 8
%stackaddr$prim95685 = alloca %struct.ScmObj*, align 8
%current_45args93338 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93337)
store volatile %struct.ScmObj* %current_45args93338, %struct.ScmObj** %stackaddr$prim95685, align 8
%stackaddr$prim95686 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93338)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95686, align 8
%ae58944 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95687 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae58944)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95687, align 8
%stackaddr$makeclosure95688 = alloca %struct.ScmObj*, align 8
%fptrToInt95689 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58945 to i64
%ae58945 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95689)
store volatile %struct.ScmObj* %ae58945, %struct.ScmObj** %stackaddr$makeclosure95688, align 8
%ae58946 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93344$ae589450 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95690 = alloca %struct.ScmObj*, align 8
%argslist93344$ae589451 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93344$ae589450)
store volatile %struct.ScmObj* %argslist93344$ae589451, %struct.ScmObj** %stackaddr$prim95690, align 8
%stackaddr$prim95691 = alloca %struct.ScmObj*, align 8
%argslist93344$ae589452 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58946, %struct.ScmObj* %argslist93344$ae589451)
store volatile %struct.ScmObj* %argslist93344$ae589452, %struct.ScmObj** %stackaddr$prim95691, align 8
%clofunc95692 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58945)
musttail call tailcc void %clofunc95692(%struct.ScmObj* %ae58945, %struct.ScmObj* %argslist93344$ae589452)
ret void
}

define tailcc void @proc_clo$ae58945(%struct.ScmObj* %env$ae58945,%struct.ScmObj* %current_45args93340) {
%stackaddr$prim95693 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93340)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95693, align 8
%stackaddr$prim95694 = alloca %struct.ScmObj*, align 8
%current_45args93341 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93340)
store volatile %struct.ScmObj* %current_45args93341, %struct.ScmObj** %stackaddr$prim95694, align 8
%stackaddr$prim95695 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93341)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95695, align 8
%stackaddr$prim95696 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95696, align 8
%argslist93343$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95697 = alloca %struct.ScmObj*, align 8
%argslist93343$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93343$k0)
store volatile %struct.ScmObj* %argslist93343$k1, %struct.ScmObj** %stackaddr$prim95697, align 8
%clofunc95698 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95698(%struct.ScmObj* %k, %struct.ScmObj* %argslist93343$k1)
ret void
}

define tailcc void @proc_clo$ae58996(%struct.ScmObj* %env$ae58996,%struct.ScmObj* %current_45args93346) {
%stackaddr$env-ref95699 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58996, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95699
%stackaddr$prim95700 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93346)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95700, align 8
%stackaddr$prim95701 = alloca %struct.ScmObj*, align 8
%current_45args93347 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93346)
store volatile %struct.ScmObj* %current_45args93347, %struct.ScmObj** %stackaddr$prim95701, align 8
%stackaddr$prim95702 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93347)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95702, align 8
%ae59006 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95703 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae59006)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95703, align 8
%stackaddr$makeclosure95704 = alloca %struct.ScmObj*, align 8
%fptrToInt95705 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59007 to i64
%ae59007 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95705)
store volatile %struct.ScmObj* %ae59007, %struct.ScmObj** %stackaddr$makeclosure95704, align 8
%ae59008 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93353$ae590070 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95706 = alloca %struct.ScmObj*, align 8
%argslist93353$ae590071 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93353$ae590070)
store volatile %struct.ScmObj* %argslist93353$ae590071, %struct.ScmObj** %stackaddr$prim95706, align 8
%stackaddr$prim95707 = alloca %struct.ScmObj*, align 8
%argslist93353$ae590072 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59008, %struct.ScmObj* %argslist93353$ae590071)
store volatile %struct.ScmObj* %argslist93353$ae590072, %struct.ScmObj** %stackaddr$prim95707, align 8
%clofunc95708 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59007)
musttail call tailcc void %clofunc95708(%struct.ScmObj* %ae59007, %struct.ScmObj* %argslist93353$ae590072)
ret void
}

define tailcc void @proc_clo$ae59007(%struct.ScmObj* %env$ae59007,%struct.ScmObj* %current_45args93349) {
%stackaddr$prim95709 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93349)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95709, align 8
%stackaddr$prim95710 = alloca %struct.ScmObj*, align 8
%current_45args93350 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93349)
store volatile %struct.ScmObj* %current_45args93350, %struct.ScmObj** %stackaddr$prim95710, align 8
%stackaddr$prim95711 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93350)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95711, align 8
%stackaddr$prim95712 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95712, align 8
%argslist93352$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95713 = alloca %struct.ScmObj*, align 8
%argslist93352$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93352$k0)
store volatile %struct.ScmObj* %argslist93352$k1, %struct.ScmObj** %stackaddr$prim95713, align 8
%clofunc95714 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95714(%struct.ScmObj* %k, %struct.ScmObj* %argslist93352$k1)
ret void
}

define tailcc void @proc_clo$ae65109(%struct.ScmObj* %env$ae65109,%struct.ScmObj* %current_45args93361) {
%stackaddr$env-ref95715 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65109, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95715
%stackaddr$env-ref95716 = alloca %struct.ScmObj*, align 8
%_37_6248132 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65109, i64 1)
store %struct.ScmObj* %_37_6248132, %struct.ScmObj** %stackaddr$env-ref95716
%stackaddr$prim95717 = alloca %struct.ScmObj*, align 8
%_95k48327 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93361)
store volatile %struct.ScmObj* %_95k48327, %struct.ScmObj** %stackaddr$prim95717, align 8
%stackaddr$prim95718 = alloca %struct.ScmObj*, align 8
%current_45args93362 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93361)
store volatile %struct.ScmObj* %current_45args93362, %struct.ScmObj** %stackaddr$prim95718, align 8
%stackaddr$prim95719 = alloca %struct.ScmObj*, align 8
%t4802648152 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93362)
store volatile %struct.ScmObj* %t4802648152, %struct.ScmObj** %stackaddr$prim95719, align 8
%ae65116 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95720 = alloca %struct.ScmObj*, align 8
%anf_45bind48277 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65116)
store volatile %struct.ScmObj* %anf_45bind48277, %struct.ScmObj** %stackaddr$prim95720, align 8
%stackaddr$makeclosure95721 = alloca %struct.ScmObj*, align 8
%fptrToInt95722 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65118 to i64
%ae65118 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95722)
store volatile %struct.ScmObj* %ae65118, %struct.ScmObj** %stackaddr$makeclosure95721, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65118, %struct.ScmObj* %x48150, i64 0)
%ae65120 = call %struct.ScmObj* @const_init_int(i64 2)
%argslist93775$_37_62481320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95723 = alloca %struct.ScmObj*, align 8
%argslist93775$_37_62481321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65120, %struct.ScmObj* %argslist93775$_37_62481320)
store volatile %struct.ScmObj* %argslist93775$_37_62481321, %struct.ScmObj** %stackaddr$prim95723, align 8
%stackaddr$prim95724 = alloca %struct.ScmObj*, align 8
%argslist93775$_37_62481322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48277, %struct.ScmObj* %argslist93775$_37_62481321)
store volatile %struct.ScmObj* %argslist93775$_37_62481322, %struct.ScmObj** %stackaddr$prim95724, align 8
%stackaddr$prim95725 = alloca %struct.ScmObj*, align 8
%argslist93775$_37_62481323 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65118, %struct.ScmObj* %argslist93775$_37_62481322)
store volatile %struct.ScmObj* %argslist93775$_37_62481323, %struct.ScmObj** %stackaddr$prim95725, align 8
%clofunc95726 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37_6248132)
musttail call tailcc void %clofunc95726(%struct.ScmObj* %_37_6248132, %struct.ScmObj* %argslist93775$_37_62481323)
ret void
}

define tailcc void @proc_clo$ae65118(%struct.ScmObj* %env$ae65118,%struct.ScmObj* %current_45args93364) {
%stackaddr$env-ref95727 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65118, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95727
%stackaddr$prim95728 = alloca %struct.ScmObj*, align 8
%_95k48328 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93364)
store volatile %struct.ScmObj* %_95k48328, %struct.ScmObj** %stackaddr$prim95728, align 8
%stackaddr$prim95729 = alloca %struct.ScmObj*, align 8
%current_45args93365 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93364)
store volatile %struct.ScmObj* %current_45args93365, %struct.ScmObj** %stackaddr$prim95729, align 8
%stackaddr$prim95730 = alloca %struct.ScmObj*, align 8
%anf_45bind48278 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93365)
store volatile %struct.ScmObj* %anf_45bind48278, %struct.ScmObj** %stackaddr$prim95730, align 8
%truthy$cmp95731 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48278)
%cmp$cmp95731 = icmp eq i64 %truthy$cmp95731, 1
br i1 %cmp$cmp95731, label %truebranch$cmp95731, label %falsebranch$cmp95731
truebranch$cmp95731:
%stackaddr$prim95732 = alloca %struct.ScmObj*, align 8
%cpsprim48341 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48341, %struct.ScmObj** %stackaddr$prim95732, align 8
%stackaddr$makeclosure95733 = alloca %struct.ScmObj*, align 8
%fptrToInt95734 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65126 to i64
%ae65126 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95734)
store volatile %struct.ScmObj* %ae65126, %struct.ScmObj** %stackaddr$makeclosure95733, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65126, %struct.ScmObj* %x48150, i64 0)
%ae65127 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93570$ae651260 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95735 = alloca %struct.ScmObj*, align 8
%argslist93570$ae651261 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48341, %struct.ScmObj* %argslist93570$ae651260)
store volatile %struct.ScmObj* %argslist93570$ae651261, %struct.ScmObj** %stackaddr$prim95735, align 8
%stackaddr$prim95736 = alloca %struct.ScmObj*, align 8
%argslist93570$ae651262 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65127, %struct.ScmObj* %argslist93570$ae651261)
store volatile %struct.ScmObj* %argslist93570$ae651262, %struct.ScmObj** %stackaddr$prim95736, align 8
%clofunc95737 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65126)
musttail call tailcc void %clofunc95737(%struct.ScmObj* %ae65126, %struct.ScmObj* %argslist93570$ae651262)
ret void
falsebranch$cmp95731:
%ae69310 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95738 = alloca %struct.ScmObj*, align 8
%anf_45bind48279 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69310)
store volatile %struct.ScmObj* %anf_45bind48279, %struct.ScmObj** %stackaddr$prim95738, align 8
%ae69312 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim95739 = alloca %struct.ScmObj*, align 8
%anf_45bind48280 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48279, %struct.ScmObj* %ae69312)
store volatile %struct.ScmObj* %anf_45bind48280, %struct.ScmObj** %stackaddr$prim95739, align 8
%ae69314 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim95740 = alloca %struct.ScmObj*, align 8
%anf_45bind48281 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48280, %struct.ScmObj* %ae69314)
store volatile %struct.ScmObj* %anf_45bind48281, %struct.ScmObj** %stackaddr$prim95740, align 8
%ae69316 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95741 = alloca %struct.ScmObj*, align 8
%cpsprim48342 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69316, %struct.ScmObj* %anf_45bind48281)
store volatile %struct.ScmObj* %cpsprim48342, %struct.ScmObj** %stackaddr$prim95741, align 8
%stackaddr$makeclosure95742 = alloca %struct.ScmObj*, align 8
%fptrToInt95743 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69318 to i64
%ae69318 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95743)
store volatile %struct.ScmObj* %ae69318, %struct.ScmObj** %stackaddr$makeclosure95742, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69318, %struct.ScmObj* %x48150, i64 0)
%ae69319 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93774$ae693180 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95744 = alloca %struct.ScmObj*, align 8
%argslist93774$ae693181 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48342, %struct.ScmObj* %argslist93774$ae693180)
store volatile %struct.ScmObj* %argslist93774$ae693181, %struct.ScmObj** %stackaddr$prim95744, align 8
%stackaddr$prim95745 = alloca %struct.ScmObj*, align 8
%argslist93774$ae693182 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69319, %struct.ScmObj* %argslist93774$ae693181)
store volatile %struct.ScmObj* %argslist93774$ae693182, %struct.ScmObj** %stackaddr$prim95745, align 8
%clofunc95746 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69318)
musttail call tailcc void %clofunc95746(%struct.ScmObj* %ae69318, %struct.ScmObj* %argslist93774$ae693182)
ret void
}

define tailcc void @proc_clo$ae65126(%struct.ScmObj* %env$ae65126,%struct.ScmObj* %current_45args93367) {
%stackaddr$env-ref95747 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65126, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95747
%stackaddr$prim95748 = alloca %struct.ScmObj*, align 8
%_95k48329 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93367)
store volatile %struct.ScmObj* %_95k48329, %struct.ScmObj** %stackaddr$prim95748, align 8
%stackaddr$prim95749 = alloca %struct.ScmObj*, align 8
%current_45args93368 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93367)
store volatile %struct.ScmObj* %current_45args93368, %struct.ScmObj** %stackaddr$prim95749, align 8
%stackaddr$prim95750 = alloca %struct.ScmObj*, align 8
%t4802748153 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93368)
store volatile %struct.ScmObj* %t4802748153, %struct.ScmObj** %stackaddr$prim95750, align 8
%ae65133 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95751 = alloca %struct.ScmObj*, align 8
%anf_45bind48282 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65133)
store volatile %struct.ScmObj* %anf_45bind48282, %struct.ScmObj** %stackaddr$prim95751, align 8
%ae65135 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim95752 = alloca %struct.ScmObj*, align 8
%anf_45bind48283 = call %struct.ScmObj* @prim__60(%struct.ScmObj* %anf_45bind48282, %struct.ScmObj* %ae65135)
store volatile %struct.ScmObj* %anf_45bind48283, %struct.ScmObj** %stackaddr$prim95752, align 8
%truthy$cmp95753 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48283)
%cmp$cmp95753 = icmp eq i64 %truthy$cmp95753, 1
br i1 %cmp$cmp95753, label %truebranch$cmp95753, label %falsebranch$cmp95753
truebranch$cmp95753:
%ae65138 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95754 = alloca %struct.ScmObj*, align 8
%anf_45bind48284 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65138)
store volatile %struct.ScmObj* %anf_45bind48284, %struct.ScmObj** %stackaddr$prim95754, align 8
%ae65140 = call %struct.ScmObj* @const_init_int(i64 9)
%stackaddr$prim95755 = alloca %struct.ScmObj*, align 8
%anf_45bind48285 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48284, %struct.ScmObj* %ae65140)
store volatile %struct.ScmObj* %anf_45bind48285, %struct.ScmObj** %stackaddr$prim95755, align 8
%ae65142 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim95756 = alloca %struct.ScmObj*, align 8
%anf_45bind48286 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48285, %struct.ScmObj* %ae65142)
store volatile %struct.ScmObj* %anf_45bind48286, %struct.ScmObj** %stackaddr$prim95756, align 8
%ae65144 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95757 = alloca %struct.ScmObj*, align 8
%cpsprim48339 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65144, %struct.ScmObj* %anf_45bind48286)
store volatile %struct.ScmObj* %cpsprim48339, %struct.ScmObj** %stackaddr$prim95757, align 8
%stackaddr$makeclosure95758 = alloca %struct.ScmObj*, align 8
%fptrToInt95759 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65146 to i64
%ae65146 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95759)
store volatile %struct.ScmObj* %ae65146, %struct.ScmObj** %stackaddr$makeclosure95758, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65146, %struct.ScmObj* %x48150, i64 0)
%ae65147 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93469$ae651460 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95760 = alloca %struct.ScmObj*, align 8
%argslist93469$ae651461 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48339, %struct.ScmObj* %argslist93469$ae651460)
store volatile %struct.ScmObj* %argslist93469$ae651461, %struct.ScmObj** %stackaddr$prim95760, align 8
%stackaddr$prim95761 = alloca %struct.ScmObj*, align 8
%argslist93469$ae651462 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65147, %struct.ScmObj* %argslist93469$ae651461)
store volatile %struct.ScmObj* %argslist93469$ae651462, %struct.ScmObj** %stackaddr$prim95761, align 8
%clofunc95762 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65146)
musttail call tailcc void %clofunc95762(%struct.ScmObj* %ae65146, %struct.ScmObj* %argslist93469$ae651462)
ret void
falsebranch$cmp95753:
%stackaddr$prim95763 = alloca %struct.ScmObj*, align 8
%cpsprim48340 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48340, %struct.ScmObj** %stackaddr$prim95763, align 8
%stackaddr$makeclosure95764 = alloca %struct.ScmObj*, align 8
%fptrToInt95765 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67225 to i64
%ae67225 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95765)
store volatile %struct.ScmObj* %ae67225, %struct.ScmObj** %stackaddr$makeclosure95764, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67225, %struct.ScmObj* %x48150, i64 0)
%ae67226 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93569$ae672250 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95766 = alloca %struct.ScmObj*, align 8
%argslist93569$ae672251 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48340, %struct.ScmObj* %argslist93569$ae672250)
store volatile %struct.ScmObj* %argslist93569$ae672251, %struct.ScmObj** %stackaddr$prim95766, align 8
%stackaddr$prim95767 = alloca %struct.ScmObj*, align 8
%argslist93569$ae672252 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67226, %struct.ScmObj* %argslist93569$ae672251)
store volatile %struct.ScmObj* %argslist93569$ae672252, %struct.ScmObj** %stackaddr$prim95767, align 8
%clofunc95768 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67225)
musttail call tailcc void %clofunc95768(%struct.ScmObj* %ae67225, %struct.ScmObj* %argslist93569$ae672252)
ret void
}

define tailcc void @proc_clo$ae65146(%struct.ScmObj* %env$ae65146,%struct.ScmObj* %current_45args93370) {
%stackaddr$env-ref95769 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65146, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95769
%stackaddr$prim95770 = alloca %struct.ScmObj*, align 8
%_95k48330 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93370)
store volatile %struct.ScmObj* %_95k48330, %struct.ScmObj** %stackaddr$prim95770, align 8
%stackaddr$prim95771 = alloca %struct.ScmObj*, align 8
%current_45args93371 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93370)
store volatile %struct.ScmObj* %current_45args93371, %struct.ScmObj** %stackaddr$prim95771, align 8
%stackaddr$prim95772 = alloca %struct.ScmObj*, align 8
%t4802848154 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93371)
store volatile %struct.ScmObj* %t4802848154, %struct.ScmObj** %stackaddr$prim95772, align 8
%ae65152 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95773 = call i64 @is_truthy_value(%struct.ScmObj* %ae65152)
%cmp$cmp95773 = icmp eq i64 %truthy$cmp95773, 1
br i1 %cmp$cmp95773, label %truebranch$cmp95773, label %falsebranch$cmp95773
truebranch$cmp95773:
%stackaddr$prim95774 = alloca %struct.ScmObj*, align 8
%cpsprim48337 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48337, %struct.ScmObj** %stackaddr$prim95774, align 8
%stackaddr$makeclosure95775 = alloca %struct.ScmObj*, align 8
%fptrToInt95776 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65153 to i64
%ae65153 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95776)
store volatile %struct.ScmObj* %ae65153, %struct.ScmObj** %stackaddr$makeclosure95775, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65153, %struct.ScmObj* %x48150, i64 0)
%ae65154 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93420$ae651530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95777 = alloca %struct.ScmObj*, align 8
%argslist93420$ae651531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48337, %struct.ScmObj* %argslist93420$ae651530)
store volatile %struct.ScmObj* %argslist93420$ae651531, %struct.ScmObj** %stackaddr$prim95777, align 8
%stackaddr$prim95778 = alloca %struct.ScmObj*, align 8
%argslist93420$ae651532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65154, %struct.ScmObj* %argslist93420$ae651531)
store volatile %struct.ScmObj* %argslist93420$ae651532, %struct.ScmObj** %stackaddr$prim95778, align 8
%clofunc95779 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65153)
musttail call tailcc void %clofunc95779(%struct.ScmObj* %ae65153, %struct.ScmObj* %argslist93420$ae651532)
ret void
falsebranch$cmp95773:
%ae65618 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95780 = alloca %struct.ScmObj*, align 8
%anf_45bind48287 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65618)
store volatile %struct.ScmObj* %anf_45bind48287, %struct.ScmObj** %stackaddr$prim95780, align 8
%ae65620 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim95781 = alloca %struct.ScmObj*, align 8
%anf_45bind48288 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48287, %struct.ScmObj* %ae65620)
store volatile %struct.ScmObj* %anf_45bind48288, %struct.ScmObj** %stackaddr$prim95781, align 8
%ae65622 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim95782 = alloca %struct.ScmObj*, align 8
%anf_45bind48289 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48288, %struct.ScmObj* %ae65622)
store volatile %struct.ScmObj* %anf_45bind48289, %struct.ScmObj** %stackaddr$prim95782, align 8
%ae65624 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95783 = alloca %struct.ScmObj*, align 8
%cpsprim48338 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65624, %struct.ScmObj* %anf_45bind48289)
store volatile %struct.ScmObj* %cpsprim48338, %struct.ScmObj** %stackaddr$prim95783, align 8
%stackaddr$makeclosure95784 = alloca %struct.ScmObj*, align 8
%fptrToInt95785 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65626 to i64
%ae65626 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95785)
store volatile %struct.ScmObj* %ae65626, %struct.ScmObj** %stackaddr$makeclosure95784, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65626, %struct.ScmObj* %x48150, i64 0)
%ae65627 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93468$ae656260 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95786 = alloca %struct.ScmObj*, align 8
%argslist93468$ae656261 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48338, %struct.ScmObj* %argslist93468$ae656260)
store volatile %struct.ScmObj* %argslist93468$ae656261, %struct.ScmObj** %stackaddr$prim95786, align 8
%stackaddr$prim95787 = alloca %struct.ScmObj*, align 8
%argslist93468$ae656262 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65627, %struct.ScmObj* %argslist93468$ae656261)
store volatile %struct.ScmObj* %argslist93468$ae656262, %struct.ScmObj** %stackaddr$prim95787, align 8
%clofunc95788 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65626)
musttail call tailcc void %clofunc95788(%struct.ScmObj* %ae65626, %struct.ScmObj* %argslist93468$ae656262)
ret void
}

define tailcc void @proc_clo$ae65153(%struct.ScmObj* %env$ae65153,%struct.ScmObj* %current_45args93373) {
%stackaddr$env-ref95789 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65153, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95789
%stackaddr$prim95790 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93373)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim95790, align 8
%stackaddr$prim95791 = alloca %struct.ScmObj*, align 8
%current_45args93374 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93373)
store volatile %struct.ScmObj* %current_45args93374, %struct.ScmObj** %stackaddr$prim95791, align 8
%stackaddr$prim95792 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93374)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim95792, align 8
%ae65160 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95793 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65160)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim95793, align 8
%truthy$cmp95794 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp95794 = icmp eq i64 %truthy$cmp95794, 1
br i1 %cmp$cmp95794, label %truebranch$cmp95794, label %falsebranch$cmp95794
truebranch$cmp95794:
%ae65163 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95795 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65163)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim95795, align 8
%ae65165 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95796 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65165)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim95796, align 8
%stackaddr$prim95797 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim95797, align 8
%ae65169 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95798 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65169, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim95798, align 8
%stackaddr$makeclosure95799 = alloca %struct.ScmObj*, align 8
%fptrToInt95800 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65171 to i64
%ae65171 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95800)
store volatile %struct.ScmObj* %ae65171, %struct.ScmObj** %stackaddr$makeclosure95799, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65171, %struct.ScmObj* %x48150, i64 0)
%ae65172 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93397$ae651710 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95801 = alloca %struct.ScmObj*, align 8
%argslist93397$ae651711 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93397$ae651710)
store volatile %struct.ScmObj* %argslist93397$ae651711, %struct.ScmObj** %stackaddr$prim95801, align 8
%stackaddr$prim95802 = alloca %struct.ScmObj*, align 8
%argslist93397$ae651712 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65172, %struct.ScmObj* %argslist93397$ae651711)
store volatile %struct.ScmObj* %argslist93397$ae651712, %struct.ScmObj** %stackaddr$prim95802, align 8
%clofunc95803 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65171)
musttail call tailcc void %clofunc95803(%struct.ScmObj* %ae65171, %struct.ScmObj* %argslist93397$ae651712)
ret void
falsebranch$cmp95794:
%stackaddr$makeclosure95804 = alloca %struct.ScmObj*, align 8
%fptrToInt95805 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65409 to i64
%ae65409 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95805)
store volatile %struct.ScmObj* %ae65409, %struct.ScmObj** %stackaddr$makeclosure95804, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65409, %struct.ScmObj* %x48150, i64 0)
%ae65410 = call %struct.ScmObj* @const_init_int(i64 0)
%ae65411 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93419$ae654090 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95806 = alloca %struct.ScmObj*, align 8
%argslist93419$ae654091 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65411, %struct.ScmObj* %argslist93419$ae654090)
store volatile %struct.ScmObj* %argslist93419$ae654091, %struct.ScmObj** %stackaddr$prim95806, align 8
%stackaddr$prim95807 = alloca %struct.ScmObj*, align 8
%argslist93419$ae654092 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65410, %struct.ScmObj* %argslist93419$ae654091)
store volatile %struct.ScmObj* %argslist93419$ae654092, %struct.ScmObj** %stackaddr$prim95807, align 8
%clofunc95808 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65409)
musttail call tailcc void %clofunc95808(%struct.ScmObj* %ae65409, %struct.ScmObj* %argslist93419$ae654092)
ret void
}

define tailcc void @proc_clo$ae65171(%struct.ScmObj* %env$ae65171,%struct.ScmObj* %current_45args93376) {
%stackaddr$env-ref95809 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65171, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95809
%stackaddr$prim95810 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93376)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95810, align 8
%stackaddr$prim95811 = alloca %struct.ScmObj*, align 8
%current_45args93377 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93376)
store volatile %struct.ScmObj* %current_45args93377, %struct.ScmObj** %stackaddr$prim95811, align 8
%stackaddr$prim95812 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93377)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95812, align 8
%ae65177 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95813 = call i64 @is_truthy_value(%struct.ScmObj* %ae65177)
%cmp$cmp95813 = icmp eq i64 %truthy$cmp95813, 1
br i1 %cmp$cmp95813, label %truebranch$cmp95813, label %falsebranch$cmp95813
truebranch$cmp95813:
%ae65179 = call %struct.ScmObj* @const_init_int(i64 0)
%ae65180 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95814 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65179, %struct.ScmObj* %ae65180)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95814, align 8
%stackaddr$makeclosure95815 = alloca %struct.ScmObj*, align 8
%fptrToInt95816 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65181 to i64
%ae65181 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95816)
store volatile %struct.ScmObj* %ae65181, %struct.ScmObj** %stackaddr$makeclosure95815, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65181, %struct.ScmObj* %x48150, i64 0)
%ae65182 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93387$ae651810 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95817 = alloca %struct.ScmObj*, align 8
%argslist93387$ae651811 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93387$ae651810)
store volatile %struct.ScmObj* %argslist93387$ae651811, %struct.ScmObj** %stackaddr$prim95817, align 8
%stackaddr$prim95818 = alloca %struct.ScmObj*, align 8
%argslist93387$ae651812 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65182, %struct.ScmObj* %argslist93387$ae651811)
store volatile %struct.ScmObj* %argslist93387$ae651812, %struct.ScmObj** %stackaddr$prim95818, align 8
%clofunc95819 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65181)
musttail call tailcc void %clofunc95819(%struct.ScmObj* %ae65181, %struct.ScmObj* %argslist93387$ae651812)
ret void
falsebranch$cmp95813:
%stackaddr$makeclosure95820 = alloca %struct.ScmObj*, align 8
%fptrToInt95821 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65240 to i64
%ae65240 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95821)
store volatile %struct.ScmObj* %ae65240, %struct.ScmObj** %stackaddr$makeclosure95820, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65240, %struct.ScmObj* %x48150, i64 0)
%ae65241 = call %struct.ScmObj* @const_init_int(i64 0)
%ae65242 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93396$ae652400 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95822 = alloca %struct.ScmObj*, align 8
%argslist93396$ae652401 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65242, %struct.ScmObj* %argslist93396$ae652400)
store volatile %struct.ScmObj* %argslist93396$ae652401, %struct.ScmObj** %stackaddr$prim95822, align 8
%stackaddr$prim95823 = alloca %struct.ScmObj*, align 8
%argslist93396$ae652402 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65241, %struct.ScmObj* %argslist93396$ae652401)
store volatile %struct.ScmObj* %argslist93396$ae652402, %struct.ScmObj** %stackaddr$prim95823, align 8
%clofunc95824 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65240)
musttail call tailcc void %clofunc95824(%struct.ScmObj* %ae65240, %struct.ScmObj* %argslist93396$ae652402)
ret void
}

define tailcc void @proc_clo$ae65181(%struct.ScmObj* %env$ae65181,%struct.ScmObj* %current_45args93379) {
%stackaddr$env-ref95825 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65181, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95825
%stackaddr$prim95826 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93379)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95826, align 8
%stackaddr$prim95827 = alloca %struct.ScmObj*, align 8
%current_45args93380 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93379)
store volatile %struct.ScmObj* %current_45args93380, %struct.ScmObj** %stackaddr$prim95827, align 8
%stackaddr$prim95828 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93380)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95828, align 8
%ae65188 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95829 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65188)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95829, align 8
%stackaddr$makeclosure95830 = alloca %struct.ScmObj*, align 8
%fptrToInt95831 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65189 to i64
%ae65189 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95831)
store volatile %struct.ScmObj* %ae65189, %struct.ScmObj** %stackaddr$makeclosure95830, align 8
%ae65190 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93386$ae651890 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95832 = alloca %struct.ScmObj*, align 8
%argslist93386$ae651891 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93386$ae651890)
store volatile %struct.ScmObj* %argslist93386$ae651891, %struct.ScmObj** %stackaddr$prim95832, align 8
%stackaddr$prim95833 = alloca %struct.ScmObj*, align 8
%argslist93386$ae651892 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65190, %struct.ScmObj* %argslist93386$ae651891)
store volatile %struct.ScmObj* %argslist93386$ae651892, %struct.ScmObj** %stackaddr$prim95833, align 8
%clofunc95834 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65189)
musttail call tailcc void %clofunc95834(%struct.ScmObj* %ae65189, %struct.ScmObj* %argslist93386$ae651892)
ret void
}

define tailcc void @proc_clo$ae65189(%struct.ScmObj* %env$ae65189,%struct.ScmObj* %current_45args93382) {
%stackaddr$prim95835 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93382)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95835, align 8
%stackaddr$prim95836 = alloca %struct.ScmObj*, align 8
%current_45args93383 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93382)
store volatile %struct.ScmObj* %current_45args93383, %struct.ScmObj** %stackaddr$prim95836, align 8
%stackaddr$prim95837 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93383)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95837, align 8
%stackaddr$prim95838 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95838, align 8
%argslist93385$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95839 = alloca %struct.ScmObj*, align 8
%argslist93385$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93385$k0)
store volatile %struct.ScmObj* %argslist93385$k1, %struct.ScmObj** %stackaddr$prim95839, align 8
%clofunc95840 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95840(%struct.ScmObj* %k, %struct.ScmObj* %argslist93385$k1)
ret void
}

define tailcc void @proc_clo$ae65240(%struct.ScmObj* %env$ae65240,%struct.ScmObj* %current_45args93388) {
%stackaddr$env-ref95841 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65240, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95841
%stackaddr$prim95842 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93388)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95842, align 8
%stackaddr$prim95843 = alloca %struct.ScmObj*, align 8
%current_45args93389 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93388)
store volatile %struct.ScmObj* %current_45args93389, %struct.ScmObj** %stackaddr$prim95843, align 8
%stackaddr$prim95844 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93389)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95844, align 8
%ae65250 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95845 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65250)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95845, align 8
%stackaddr$makeclosure95846 = alloca %struct.ScmObj*, align 8
%fptrToInt95847 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65251 to i64
%ae65251 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95847)
store volatile %struct.ScmObj* %ae65251, %struct.ScmObj** %stackaddr$makeclosure95846, align 8
%ae65252 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93395$ae652510 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95848 = alloca %struct.ScmObj*, align 8
%argslist93395$ae652511 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93395$ae652510)
store volatile %struct.ScmObj* %argslist93395$ae652511, %struct.ScmObj** %stackaddr$prim95848, align 8
%stackaddr$prim95849 = alloca %struct.ScmObj*, align 8
%argslist93395$ae652512 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65252, %struct.ScmObj* %argslist93395$ae652511)
store volatile %struct.ScmObj* %argslist93395$ae652512, %struct.ScmObj** %stackaddr$prim95849, align 8
%clofunc95850 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65251)
musttail call tailcc void %clofunc95850(%struct.ScmObj* %ae65251, %struct.ScmObj* %argslist93395$ae652512)
ret void
}

define tailcc void @proc_clo$ae65251(%struct.ScmObj* %env$ae65251,%struct.ScmObj* %current_45args93391) {
%stackaddr$prim95851 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93391)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95851, align 8
%stackaddr$prim95852 = alloca %struct.ScmObj*, align 8
%current_45args93392 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93391)
store volatile %struct.ScmObj* %current_45args93392, %struct.ScmObj** %stackaddr$prim95852, align 8
%stackaddr$prim95853 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93392)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95853, align 8
%stackaddr$prim95854 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95854, align 8
%argslist93394$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95855 = alloca %struct.ScmObj*, align 8
%argslist93394$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93394$k0)
store volatile %struct.ScmObj* %argslist93394$k1, %struct.ScmObj** %stackaddr$prim95855, align 8
%clofunc95856 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95856(%struct.ScmObj* %k, %struct.ScmObj* %argslist93394$k1)
ret void
}

define tailcc void @proc_clo$ae65409(%struct.ScmObj* %env$ae65409,%struct.ScmObj* %current_45args93398) {
%stackaddr$env-ref95857 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65409, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95857
%stackaddr$prim95858 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93398)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95858, align 8
%stackaddr$prim95859 = alloca %struct.ScmObj*, align 8
%current_45args93399 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93398)
store volatile %struct.ScmObj* %current_45args93399, %struct.ScmObj** %stackaddr$prim95859, align 8
%stackaddr$prim95860 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93399)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95860, align 8
%ae65418 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95861 = call i64 @is_truthy_value(%struct.ScmObj* %ae65418)
%cmp$cmp95861 = icmp eq i64 %truthy$cmp95861, 1
br i1 %cmp$cmp95861, label %truebranch$cmp95861, label %falsebranch$cmp95861
truebranch$cmp95861:
%ae65420 = call %struct.ScmObj* @const_init_int(i64 0)
%ae65421 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95862 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65420, %struct.ScmObj* %ae65421)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95862, align 8
%stackaddr$makeclosure95863 = alloca %struct.ScmObj*, align 8
%fptrToInt95864 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65422 to i64
%ae65422 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95864)
store volatile %struct.ScmObj* %ae65422, %struct.ScmObj** %stackaddr$makeclosure95863, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65422, %struct.ScmObj* %x48150, i64 0)
%ae65423 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93409$ae654220 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95865 = alloca %struct.ScmObj*, align 8
%argslist93409$ae654221 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93409$ae654220)
store volatile %struct.ScmObj* %argslist93409$ae654221, %struct.ScmObj** %stackaddr$prim95865, align 8
%stackaddr$prim95866 = alloca %struct.ScmObj*, align 8
%argslist93409$ae654222 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65423, %struct.ScmObj* %argslist93409$ae654221)
store volatile %struct.ScmObj* %argslist93409$ae654222, %struct.ScmObj** %stackaddr$prim95866, align 8
%clofunc95867 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65422)
musttail call tailcc void %clofunc95867(%struct.ScmObj* %ae65422, %struct.ScmObj* %argslist93409$ae654222)
ret void
falsebranch$cmp95861:
%stackaddr$makeclosure95868 = alloca %struct.ScmObj*, align 8
%fptrToInt95869 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65481 to i64
%ae65481 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95869)
store volatile %struct.ScmObj* %ae65481, %struct.ScmObj** %stackaddr$makeclosure95868, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65481, %struct.ScmObj* %x48150, i64 0)
%ae65482 = call %struct.ScmObj* @const_init_int(i64 0)
%ae65483 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93418$ae654810 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95870 = alloca %struct.ScmObj*, align 8
%argslist93418$ae654811 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65483, %struct.ScmObj* %argslist93418$ae654810)
store volatile %struct.ScmObj* %argslist93418$ae654811, %struct.ScmObj** %stackaddr$prim95870, align 8
%stackaddr$prim95871 = alloca %struct.ScmObj*, align 8
%argslist93418$ae654812 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65482, %struct.ScmObj* %argslist93418$ae654811)
store volatile %struct.ScmObj* %argslist93418$ae654812, %struct.ScmObj** %stackaddr$prim95871, align 8
%clofunc95872 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65481)
musttail call tailcc void %clofunc95872(%struct.ScmObj* %ae65481, %struct.ScmObj* %argslist93418$ae654812)
ret void
}

define tailcc void @proc_clo$ae65422(%struct.ScmObj* %env$ae65422,%struct.ScmObj* %current_45args93401) {
%stackaddr$env-ref95873 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65422, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95873
%stackaddr$prim95874 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93401)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95874, align 8
%stackaddr$prim95875 = alloca %struct.ScmObj*, align 8
%current_45args93402 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93401)
store volatile %struct.ScmObj* %current_45args93402, %struct.ScmObj** %stackaddr$prim95875, align 8
%stackaddr$prim95876 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93402)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95876, align 8
%ae65429 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95877 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65429)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95877, align 8
%stackaddr$makeclosure95878 = alloca %struct.ScmObj*, align 8
%fptrToInt95879 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65430 to i64
%ae65430 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95879)
store volatile %struct.ScmObj* %ae65430, %struct.ScmObj** %stackaddr$makeclosure95878, align 8
%ae65431 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93408$ae654300 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95880 = alloca %struct.ScmObj*, align 8
%argslist93408$ae654301 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93408$ae654300)
store volatile %struct.ScmObj* %argslist93408$ae654301, %struct.ScmObj** %stackaddr$prim95880, align 8
%stackaddr$prim95881 = alloca %struct.ScmObj*, align 8
%argslist93408$ae654302 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65431, %struct.ScmObj* %argslist93408$ae654301)
store volatile %struct.ScmObj* %argslist93408$ae654302, %struct.ScmObj** %stackaddr$prim95881, align 8
%clofunc95882 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65430)
musttail call tailcc void %clofunc95882(%struct.ScmObj* %ae65430, %struct.ScmObj* %argslist93408$ae654302)
ret void
}

define tailcc void @proc_clo$ae65430(%struct.ScmObj* %env$ae65430,%struct.ScmObj* %current_45args93404) {
%stackaddr$prim95883 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93404)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95883, align 8
%stackaddr$prim95884 = alloca %struct.ScmObj*, align 8
%current_45args93405 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93404)
store volatile %struct.ScmObj* %current_45args93405, %struct.ScmObj** %stackaddr$prim95884, align 8
%stackaddr$prim95885 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93405)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95885, align 8
%stackaddr$prim95886 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95886, align 8
%argslist93407$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95887 = alloca %struct.ScmObj*, align 8
%argslist93407$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93407$k0)
store volatile %struct.ScmObj* %argslist93407$k1, %struct.ScmObj** %stackaddr$prim95887, align 8
%clofunc95888 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95888(%struct.ScmObj* %k, %struct.ScmObj* %argslist93407$k1)
ret void
}

define tailcc void @proc_clo$ae65481(%struct.ScmObj* %env$ae65481,%struct.ScmObj* %current_45args93410) {
%stackaddr$env-ref95889 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65481, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95889
%stackaddr$prim95890 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93410)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95890, align 8
%stackaddr$prim95891 = alloca %struct.ScmObj*, align 8
%current_45args93411 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93410)
store volatile %struct.ScmObj* %current_45args93411, %struct.ScmObj** %stackaddr$prim95891, align 8
%stackaddr$prim95892 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93411)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95892, align 8
%ae65491 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95893 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65491)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95893, align 8
%stackaddr$makeclosure95894 = alloca %struct.ScmObj*, align 8
%fptrToInt95895 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65492 to i64
%ae65492 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95895)
store volatile %struct.ScmObj* %ae65492, %struct.ScmObj** %stackaddr$makeclosure95894, align 8
%ae65493 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93417$ae654920 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95896 = alloca %struct.ScmObj*, align 8
%argslist93417$ae654921 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93417$ae654920)
store volatile %struct.ScmObj* %argslist93417$ae654921, %struct.ScmObj** %stackaddr$prim95896, align 8
%stackaddr$prim95897 = alloca %struct.ScmObj*, align 8
%argslist93417$ae654922 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65493, %struct.ScmObj* %argslist93417$ae654921)
store volatile %struct.ScmObj* %argslist93417$ae654922, %struct.ScmObj** %stackaddr$prim95897, align 8
%clofunc95898 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65492)
musttail call tailcc void %clofunc95898(%struct.ScmObj* %ae65492, %struct.ScmObj* %argslist93417$ae654922)
ret void
}

define tailcc void @proc_clo$ae65492(%struct.ScmObj* %env$ae65492,%struct.ScmObj* %current_45args93413) {
%stackaddr$prim95899 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93413)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95899, align 8
%stackaddr$prim95900 = alloca %struct.ScmObj*, align 8
%current_45args93414 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93413)
store volatile %struct.ScmObj* %current_45args93414, %struct.ScmObj** %stackaddr$prim95900, align 8
%stackaddr$prim95901 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93414)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95901, align 8
%stackaddr$prim95902 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95902, align 8
%argslist93416$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95903 = alloca %struct.ScmObj*, align 8
%argslist93416$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93416$k0)
store volatile %struct.ScmObj* %argslist93416$k1, %struct.ScmObj** %stackaddr$prim95903, align 8
%clofunc95904 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95904(%struct.ScmObj* %k, %struct.ScmObj* %argslist93416$k1)
ret void
}

define tailcc void @proc_clo$ae65626(%struct.ScmObj* %env$ae65626,%struct.ScmObj* %current_45args93421) {
%stackaddr$env-ref95905 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65626, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95905
%stackaddr$prim95906 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93421)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim95906, align 8
%stackaddr$prim95907 = alloca %struct.ScmObj*, align 8
%current_45args93422 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93421)
store volatile %struct.ScmObj* %current_45args93422, %struct.ScmObj** %stackaddr$prim95907, align 8
%stackaddr$prim95908 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93422)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim95908, align 8
%ae65633 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95909 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65633)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim95909, align 8
%truthy$cmp95910 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp95910 = icmp eq i64 %truthy$cmp95910, 1
br i1 %cmp$cmp95910, label %truebranch$cmp95910, label %falsebranch$cmp95910
truebranch$cmp95910:
%ae65636 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95911 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65636)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim95911, align 8
%ae65638 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95912 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65638)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim95912, align 8
%stackaddr$prim95913 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim95913, align 8
%ae65642 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95914 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65642, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim95914, align 8
%stackaddr$makeclosure95915 = alloca %struct.ScmObj*, align 8
%fptrToInt95916 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65644 to i64
%ae65644 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95916)
store volatile %struct.ScmObj* %ae65644, %struct.ScmObj** %stackaddr$makeclosure95915, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65644, %struct.ScmObj* %x48150, i64 0)
%ae65645 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93445$ae656440 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95917 = alloca %struct.ScmObj*, align 8
%argslist93445$ae656441 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93445$ae656440)
store volatile %struct.ScmObj* %argslist93445$ae656441, %struct.ScmObj** %stackaddr$prim95917, align 8
%stackaddr$prim95918 = alloca %struct.ScmObj*, align 8
%argslist93445$ae656442 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65645, %struct.ScmObj* %argslist93445$ae656441)
store volatile %struct.ScmObj* %argslist93445$ae656442, %struct.ScmObj** %stackaddr$prim95918, align 8
%clofunc95919 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65644)
musttail call tailcc void %clofunc95919(%struct.ScmObj* %ae65644, %struct.ScmObj* %argslist93445$ae656442)
ret void
falsebranch$cmp95910:
%stackaddr$makeclosure95920 = alloca %struct.ScmObj*, align 8
%fptrToInt95921 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65882 to i64
%ae65882 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95921)
store volatile %struct.ScmObj* %ae65882, %struct.ScmObj** %stackaddr$makeclosure95920, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65882, %struct.ScmObj* %x48150, i64 0)
%ae65883 = call %struct.ScmObj* @const_init_int(i64 0)
%ae65884 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93467$ae658820 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95922 = alloca %struct.ScmObj*, align 8
%argslist93467$ae658821 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65884, %struct.ScmObj* %argslist93467$ae658820)
store volatile %struct.ScmObj* %argslist93467$ae658821, %struct.ScmObj** %stackaddr$prim95922, align 8
%stackaddr$prim95923 = alloca %struct.ScmObj*, align 8
%argslist93467$ae658822 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65883, %struct.ScmObj* %argslist93467$ae658821)
store volatile %struct.ScmObj* %argslist93467$ae658822, %struct.ScmObj** %stackaddr$prim95923, align 8
%clofunc95924 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65882)
musttail call tailcc void %clofunc95924(%struct.ScmObj* %ae65882, %struct.ScmObj* %argslist93467$ae658822)
ret void
}

define tailcc void @proc_clo$ae65644(%struct.ScmObj* %env$ae65644,%struct.ScmObj* %current_45args93424) {
%stackaddr$env-ref95925 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65644, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95925
%stackaddr$prim95926 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93424)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95926, align 8
%stackaddr$prim95927 = alloca %struct.ScmObj*, align 8
%current_45args93425 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93424)
store volatile %struct.ScmObj* %current_45args93425, %struct.ScmObj** %stackaddr$prim95927, align 8
%stackaddr$prim95928 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93425)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95928, align 8
%ae65650 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95929 = call i64 @is_truthy_value(%struct.ScmObj* %ae65650)
%cmp$cmp95929 = icmp eq i64 %truthy$cmp95929, 1
br i1 %cmp$cmp95929, label %truebranch$cmp95929, label %falsebranch$cmp95929
truebranch$cmp95929:
%ae65652 = call %struct.ScmObj* @const_init_int(i64 0)
%ae65653 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95930 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65652, %struct.ScmObj* %ae65653)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95930, align 8
%stackaddr$makeclosure95931 = alloca %struct.ScmObj*, align 8
%fptrToInt95932 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65654 to i64
%ae65654 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95932)
store volatile %struct.ScmObj* %ae65654, %struct.ScmObj** %stackaddr$makeclosure95931, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65654, %struct.ScmObj* %x48150, i64 0)
%ae65655 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93435$ae656540 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95933 = alloca %struct.ScmObj*, align 8
%argslist93435$ae656541 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93435$ae656540)
store volatile %struct.ScmObj* %argslist93435$ae656541, %struct.ScmObj** %stackaddr$prim95933, align 8
%stackaddr$prim95934 = alloca %struct.ScmObj*, align 8
%argslist93435$ae656542 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65655, %struct.ScmObj* %argslist93435$ae656541)
store volatile %struct.ScmObj* %argslist93435$ae656542, %struct.ScmObj** %stackaddr$prim95934, align 8
%clofunc95935 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65654)
musttail call tailcc void %clofunc95935(%struct.ScmObj* %ae65654, %struct.ScmObj* %argslist93435$ae656542)
ret void
falsebranch$cmp95929:
%stackaddr$makeclosure95936 = alloca %struct.ScmObj*, align 8
%fptrToInt95937 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65713 to i64
%ae65713 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95937)
store volatile %struct.ScmObj* %ae65713, %struct.ScmObj** %stackaddr$makeclosure95936, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65713, %struct.ScmObj* %x48150, i64 0)
%ae65714 = call %struct.ScmObj* @const_init_int(i64 0)
%ae65715 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93444$ae657130 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95938 = alloca %struct.ScmObj*, align 8
%argslist93444$ae657131 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65715, %struct.ScmObj* %argslist93444$ae657130)
store volatile %struct.ScmObj* %argslist93444$ae657131, %struct.ScmObj** %stackaddr$prim95938, align 8
%stackaddr$prim95939 = alloca %struct.ScmObj*, align 8
%argslist93444$ae657132 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65714, %struct.ScmObj* %argslist93444$ae657131)
store volatile %struct.ScmObj* %argslist93444$ae657132, %struct.ScmObj** %stackaddr$prim95939, align 8
%clofunc95940 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65713)
musttail call tailcc void %clofunc95940(%struct.ScmObj* %ae65713, %struct.ScmObj* %argslist93444$ae657132)
ret void
}

define tailcc void @proc_clo$ae65654(%struct.ScmObj* %env$ae65654,%struct.ScmObj* %current_45args93427) {
%stackaddr$env-ref95941 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65654, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95941
%stackaddr$prim95942 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93427)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95942, align 8
%stackaddr$prim95943 = alloca %struct.ScmObj*, align 8
%current_45args93428 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93427)
store volatile %struct.ScmObj* %current_45args93428, %struct.ScmObj** %stackaddr$prim95943, align 8
%stackaddr$prim95944 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93428)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95944, align 8
%ae65661 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95945 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65661)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95945, align 8
%stackaddr$makeclosure95946 = alloca %struct.ScmObj*, align 8
%fptrToInt95947 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65662 to i64
%ae65662 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95947)
store volatile %struct.ScmObj* %ae65662, %struct.ScmObj** %stackaddr$makeclosure95946, align 8
%ae65663 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93434$ae656620 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95948 = alloca %struct.ScmObj*, align 8
%argslist93434$ae656621 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93434$ae656620)
store volatile %struct.ScmObj* %argslist93434$ae656621, %struct.ScmObj** %stackaddr$prim95948, align 8
%stackaddr$prim95949 = alloca %struct.ScmObj*, align 8
%argslist93434$ae656622 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65663, %struct.ScmObj* %argslist93434$ae656621)
store volatile %struct.ScmObj* %argslist93434$ae656622, %struct.ScmObj** %stackaddr$prim95949, align 8
%clofunc95950 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65662)
musttail call tailcc void %clofunc95950(%struct.ScmObj* %ae65662, %struct.ScmObj* %argslist93434$ae656622)
ret void
}

define tailcc void @proc_clo$ae65662(%struct.ScmObj* %env$ae65662,%struct.ScmObj* %current_45args93430) {
%stackaddr$prim95951 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93430)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95951, align 8
%stackaddr$prim95952 = alloca %struct.ScmObj*, align 8
%current_45args93431 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93430)
store volatile %struct.ScmObj* %current_45args93431, %struct.ScmObj** %stackaddr$prim95952, align 8
%stackaddr$prim95953 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93431)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95953, align 8
%stackaddr$prim95954 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95954, align 8
%argslist93433$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95955 = alloca %struct.ScmObj*, align 8
%argslist93433$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93433$k0)
store volatile %struct.ScmObj* %argslist93433$k1, %struct.ScmObj** %stackaddr$prim95955, align 8
%clofunc95956 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95956(%struct.ScmObj* %k, %struct.ScmObj* %argslist93433$k1)
ret void
}

define tailcc void @proc_clo$ae65713(%struct.ScmObj* %env$ae65713,%struct.ScmObj* %current_45args93436) {
%stackaddr$env-ref95957 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65713, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95957
%stackaddr$prim95958 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93436)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95958, align 8
%stackaddr$prim95959 = alloca %struct.ScmObj*, align 8
%current_45args93437 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93436)
store volatile %struct.ScmObj* %current_45args93437, %struct.ScmObj** %stackaddr$prim95959, align 8
%stackaddr$prim95960 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93437)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95960, align 8
%ae65723 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95961 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65723)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95961, align 8
%stackaddr$makeclosure95962 = alloca %struct.ScmObj*, align 8
%fptrToInt95963 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65724 to i64
%ae65724 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95963)
store volatile %struct.ScmObj* %ae65724, %struct.ScmObj** %stackaddr$makeclosure95962, align 8
%ae65725 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93443$ae657240 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95964 = alloca %struct.ScmObj*, align 8
%argslist93443$ae657241 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93443$ae657240)
store volatile %struct.ScmObj* %argslist93443$ae657241, %struct.ScmObj** %stackaddr$prim95964, align 8
%stackaddr$prim95965 = alloca %struct.ScmObj*, align 8
%argslist93443$ae657242 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65725, %struct.ScmObj* %argslist93443$ae657241)
store volatile %struct.ScmObj* %argslist93443$ae657242, %struct.ScmObj** %stackaddr$prim95965, align 8
%clofunc95966 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65724)
musttail call tailcc void %clofunc95966(%struct.ScmObj* %ae65724, %struct.ScmObj* %argslist93443$ae657242)
ret void
}

define tailcc void @proc_clo$ae65724(%struct.ScmObj* %env$ae65724,%struct.ScmObj* %current_45args93439) {
%stackaddr$prim95967 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93439)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95967, align 8
%stackaddr$prim95968 = alloca %struct.ScmObj*, align 8
%current_45args93440 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93439)
store volatile %struct.ScmObj* %current_45args93440, %struct.ScmObj** %stackaddr$prim95968, align 8
%stackaddr$prim95969 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93440)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim95969, align 8
%stackaddr$prim95970 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim95970, align 8
%argslist93442$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95971 = alloca %struct.ScmObj*, align 8
%argslist93442$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93442$k0)
store volatile %struct.ScmObj* %argslist93442$k1, %struct.ScmObj** %stackaddr$prim95971, align 8
%clofunc95972 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc95972(%struct.ScmObj* %k, %struct.ScmObj* %argslist93442$k1)
ret void
}

define tailcc void @proc_clo$ae65882(%struct.ScmObj* %env$ae65882,%struct.ScmObj* %current_45args93446) {
%stackaddr$env-ref95973 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65882, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95973
%stackaddr$prim95974 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93446)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim95974, align 8
%stackaddr$prim95975 = alloca %struct.ScmObj*, align 8
%current_45args93447 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93446)
store volatile %struct.ScmObj* %current_45args93447, %struct.ScmObj** %stackaddr$prim95975, align 8
%stackaddr$prim95976 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93447)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim95976, align 8
%ae65891 = call %struct.ScmObj* @const_init_false()
%truthy$cmp95977 = call i64 @is_truthy_value(%struct.ScmObj* %ae65891)
%cmp$cmp95977 = icmp eq i64 %truthy$cmp95977, 1
br i1 %cmp$cmp95977, label %truebranch$cmp95977, label %falsebranch$cmp95977
truebranch$cmp95977:
%ae65893 = call %struct.ScmObj* @const_init_int(i64 0)
%ae65894 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95978 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65893, %struct.ScmObj* %ae65894)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim95978, align 8
%stackaddr$makeclosure95979 = alloca %struct.ScmObj*, align 8
%fptrToInt95980 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65895 to i64
%ae65895 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95980)
store volatile %struct.ScmObj* %ae65895, %struct.ScmObj** %stackaddr$makeclosure95979, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65895, %struct.ScmObj* %x48150, i64 0)
%ae65896 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93457$ae658950 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95981 = alloca %struct.ScmObj*, align 8
%argslist93457$ae658951 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93457$ae658950)
store volatile %struct.ScmObj* %argslist93457$ae658951, %struct.ScmObj** %stackaddr$prim95981, align 8
%stackaddr$prim95982 = alloca %struct.ScmObj*, align 8
%argslist93457$ae658952 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65896, %struct.ScmObj* %argslist93457$ae658951)
store volatile %struct.ScmObj* %argslist93457$ae658952, %struct.ScmObj** %stackaddr$prim95982, align 8
%clofunc95983 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65895)
musttail call tailcc void %clofunc95983(%struct.ScmObj* %ae65895, %struct.ScmObj* %argslist93457$ae658952)
ret void
falsebranch$cmp95977:
%stackaddr$makeclosure95984 = alloca %struct.ScmObj*, align 8
%fptrToInt95985 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65954 to i64
%ae65954 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt95985)
store volatile %struct.ScmObj* %ae65954, %struct.ScmObj** %stackaddr$makeclosure95984, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae65954, %struct.ScmObj* %x48150, i64 0)
%ae65955 = call %struct.ScmObj* @const_init_int(i64 0)
%ae65956 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93466$ae659540 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95986 = alloca %struct.ScmObj*, align 8
%argslist93466$ae659541 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65956, %struct.ScmObj* %argslist93466$ae659540)
store volatile %struct.ScmObj* %argslist93466$ae659541, %struct.ScmObj** %stackaddr$prim95986, align 8
%stackaddr$prim95987 = alloca %struct.ScmObj*, align 8
%argslist93466$ae659542 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65955, %struct.ScmObj* %argslist93466$ae659541)
store volatile %struct.ScmObj* %argslist93466$ae659542, %struct.ScmObj** %stackaddr$prim95987, align 8
%clofunc95988 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65954)
musttail call tailcc void %clofunc95988(%struct.ScmObj* %ae65954, %struct.ScmObj* %argslist93466$ae659542)
ret void
}

define tailcc void @proc_clo$ae65895(%struct.ScmObj* %env$ae65895,%struct.ScmObj* %current_45args93449) {
%stackaddr$env-ref95989 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65895, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref95989
%stackaddr$prim95990 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93449)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim95990, align 8
%stackaddr$prim95991 = alloca %struct.ScmObj*, align 8
%current_45args93450 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93449)
store volatile %struct.ScmObj* %current_45args93450, %struct.ScmObj** %stackaddr$prim95991, align 8
%stackaddr$prim95992 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93450)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim95992, align 8
%ae65902 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim95993 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65902)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim95993, align 8
%stackaddr$makeclosure95994 = alloca %struct.ScmObj*, align 8
%fptrToInt95995 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65903 to i64
%ae65903 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt95995)
store volatile %struct.ScmObj* %ae65903, %struct.ScmObj** %stackaddr$makeclosure95994, align 8
%ae65904 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93456$ae659030 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim95996 = alloca %struct.ScmObj*, align 8
%argslist93456$ae659031 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93456$ae659030)
store volatile %struct.ScmObj* %argslist93456$ae659031, %struct.ScmObj** %stackaddr$prim95996, align 8
%stackaddr$prim95997 = alloca %struct.ScmObj*, align 8
%argslist93456$ae659032 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65904, %struct.ScmObj* %argslist93456$ae659031)
store volatile %struct.ScmObj* %argslist93456$ae659032, %struct.ScmObj** %stackaddr$prim95997, align 8
%clofunc95998 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65903)
musttail call tailcc void %clofunc95998(%struct.ScmObj* %ae65903, %struct.ScmObj* %argslist93456$ae659032)
ret void
}

define tailcc void @proc_clo$ae65903(%struct.ScmObj* %env$ae65903,%struct.ScmObj* %current_45args93452) {
%stackaddr$prim95999 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93452)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim95999, align 8
%stackaddr$prim96000 = alloca %struct.ScmObj*, align 8
%current_45args93453 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93452)
store volatile %struct.ScmObj* %current_45args93453, %struct.ScmObj** %stackaddr$prim96000, align 8
%stackaddr$prim96001 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93453)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96001, align 8
%stackaddr$prim96002 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96002, align 8
%argslist93455$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96003 = alloca %struct.ScmObj*, align 8
%argslist93455$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93455$k0)
store volatile %struct.ScmObj* %argslist93455$k1, %struct.ScmObj** %stackaddr$prim96003, align 8
%clofunc96004 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96004(%struct.ScmObj* %k, %struct.ScmObj* %argslist93455$k1)
ret void
}

define tailcc void @proc_clo$ae65954(%struct.ScmObj* %env$ae65954,%struct.ScmObj* %current_45args93458) {
%stackaddr$env-ref96005 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae65954, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96005
%stackaddr$prim96006 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93458)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96006, align 8
%stackaddr$prim96007 = alloca %struct.ScmObj*, align 8
%current_45args93459 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93458)
store volatile %struct.ScmObj* %current_45args93459, %struct.ScmObj** %stackaddr$prim96007, align 8
%stackaddr$prim96008 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93459)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96008, align 8
%ae65964 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96009 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae65964)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96009, align 8
%stackaddr$makeclosure96010 = alloca %struct.ScmObj*, align 8
%fptrToInt96011 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae65965 to i64
%ae65965 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96011)
store volatile %struct.ScmObj* %ae65965, %struct.ScmObj** %stackaddr$makeclosure96010, align 8
%ae65966 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93465$ae659650 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96012 = alloca %struct.ScmObj*, align 8
%argslist93465$ae659651 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93465$ae659650)
store volatile %struct.ScmObj* %argslist93465$ae659651, %struct.ScmObj** %stackaddr$prim96012, align 8
%stackaddr$prim96013 = alloca %struct.ScmObj*, align 8
%argslist93465$ae659652 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae65966, %struct.ScmObj* %argslist93465$ae659651)
store volatile %struct.ScmObj* %argslist93465$ae659652, %struct.ScmObj** %stackaddr$prim96013, align 8
%clofunc96014 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae65965)
musttail call tailcc void %clofunc96014(%struct.ScmObj* %ae65965, %struct.ScmObj* %argslist93465$ae659652)
ret void
}

define tailcc void @proc_clo$ae65965(%struct.ScmObj* %env$ae65965,%struct.ScmObj* %current_45args93461) {
%stackaddr$prim96015 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93461)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96015, align 8
%stackaddr$prim96016 = alloca %struct.ScmObj*, align 8
%current_45args93462 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93461)
store volatile %struct.ScmObj* %current_45args93462, %struct.ScmObj** %stackaddr$prim96016, align 8
%stackaddr$prim96017 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93462)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96017, align 8
%stackaddr$prim96018 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96018, align 8
%argslist93464$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96019 = alloca %struct.ScmObj*, align 8
%argslist93464$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93464$k0)
store volatile %struct.ScmObj* %argslist93464$k1, %struct.ScmObj** %stackaddr$prim96019, align 8
%clofunc96020 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96020(%struct.ScmObj* %k, %struct.ScmObj* %argslist93464$k1)
ret void
}

define tailcc void @proc_clo$ae67225(%struct.ScmObj* %env$ae67225,%struct.ScmObj* %current_45args93470) {
%stackaddr$env-ref96021 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67225, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96021
%stackaddr$prim96022 = alloca %struct.ScmObj*, align 8
%_95k48330 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93470)
store volatile %struct.ScmObj* %_95k48330, %struct.ScmObj** %stackaddr$prim96022, align 8
%stackaddr$prim96023 = alloca %struct.ScmObj*, align 8
%current_45args93471 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93470)
store volatile %struct.ScmObj* %current_45args93471, %struct.ScmObj** %stackaddr$prim96023, align 8
%stackaddr$prim96024 = alloca %struct.ScmObj*, align 8
%t4802848154 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93471)
store volatile %struct.ScmObj* %t4802848154, %struct.ScmObj** %stackaddr$prim96024, align 8
%ae67231 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96025 = call i64 @is_truthy_value(%struct.ScmObj* %ae67231)
%cmp$cmp96025 = icmp eq i64 %truthy$cmp96025, 1
br i1 %cmp$cmp96025, label %truebranch$cmp96025, label %falsebranch$cmp96025
truebranch$cmp96025:
%stackaddr$prim96026 = alloca %struct.ScmObj*, align 8
%cpsprim48337 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48337, %struct.ScmObj** %stackaddr$prim96026, align 8
%stackaddr$makeclosure96027 = alloca %struct.ScmObj*, align 8
%fptrToInt96028 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67232 to i64
%ae67232 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96028)
store volatile %struct.ScmObj* %ae67232, %struct.ScmObj** %stackaddr$makeclosure96027, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67232, %struct.ScmObj* %x48150, i64 0)
%ae67233 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93520$ae672320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96029 = alloca %struct.ScmObj*, align 8
%argslist93520$ae672321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48337, %struct.ScmObj* %argslist93520$ae672320)
store volatile %struct.ScmObj* %argslist93520$ae672321, %struct.ScmObj** %stackaddr$prim96029, align 8
%stackaddr$prim96030 = alloca %struct.ScmObj*, align 8
%argslist93520$ae672322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67233, %struct.ScmObj* %argslist93520$ae672321)
store volatile %struct.ScmObj* %argslist93520$ae672322, %struct.ScmObj** %stackaddr$prim96030, align 8
%clofunc96031 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67232)
musttail call tailcc void %clofunc96031(%struct.ScmObj* %ae67232, %struct.ScmObj* %argslist93520$ae672322)
ret void
falsebranch$cmp96025:
%ae67697 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96032 = alloca %struct.ScmObj*, align 8
%anf_45bind48287 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67697)
store volatile %struct.ScmObj* %anf_45bind48287, %struct.ScmObj** %stackaddr$prim96032, align 8
%ae67699 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim96033 = alloca %struct.ScmObj*, align 8
%anf_45bind48288 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48287, %struct.ScmObj* %ae67699)
store volatile %struct.ScmObj* %anf_45bind48288, %struct.ScmObj** %stackaddr$prim96033, align 8
%ae67701 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim96034 = alloca %struct.ScmObj*, align 8
%anf_45bind48289 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48288, %struct.ScmObj* %ae67701)
store volatile %struct.ScmObj* %anf_45bind48289, %struct.ScmObj** %stackaddr$prim96034, align 8
%ae67703 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96035 = alloca %struct.ScmObj*, align 8
%cpsprim48338 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67703, %struct.ScmObj* %anf_45bind48289)
store volatile %struct.ScmObj* %cpsprim48338, %struct.ScmObj** %stackaddr$prim96035, align 8
%stackaddr$makeclosure96036 = alloca %struct.ScmObj*, align 8
%fptrToInt96037 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67705 to i64
%ae67705 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96037)
store volatile %struct.ScmObj* %ae67705, %struct.ScmObj** %stackaddr$makeclosure96036, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67705, %struct.ScmObj* %x48150, i64 0)
%ae67706 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93568$ae677050 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96038 = alloca %struct.ScmObj*, align 8
%argslist93568$ae677051 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48338, %struct.ScmObj* %argslist93568$ae677050)
store volatile %struct.ScmObj* %argslist93568$ae677051, %struct.ScmObj** %stackaddr$prim96038, align 8
%stackaddr$prim96039 = alloca %struct.ScmObj*, align 8
%argslist93568$ae677052 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67706, %struct.ScmObj* %argslist93568$ae677051)
store volatile %struct.ScmObj* %argslist93568$ae677052, %struct.ScmObj** %stackaddr$prim96039, align 8
%clofunc96040 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67705)
musttail call tailcc void %clofunc96040(%struct.ScmObj* %ae67705, %struct.ScmObj* %argslist93568$ae677052)
ret void
}

define tailcc void @proc_clo$ae67232(%struct.ScmObj* %env$ae67232,%struct.ScmObj* %current_45args93473) {
%stackaddr$env-ref96041 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67232, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96041
%stackaddr$prim96042 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93473)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim96042, align 8
%stackaddr$prim96043 = alloca %struct.ScmObj*, align 8
%current_45args93474 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93473)
store volatile %struct.ScmObj* %current_45args93474, %struct.ScmObj** %stackaddr$prim96043, align 8
%stackaddr$prim96044 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93474)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim96044, align 8
%ae67239 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96045 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67239)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim96045, align 8
%truthy$cmp96046 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp96046 = icmp eq i64 %truthy$cmp96046, 1
br i1 %cmp$cmp96046, label %truebranch$cmp96046, label %falsebranch$cmp96046
truebranch$cmp96046:
%ae67242 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96047 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67242)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim96047, align 8
%ae67244 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96048 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67244)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim96048, align 8
%stackaddr$prim96049 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim96049, align 8
%ae67248 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96050 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67248, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim96050, align 8
%stackaddr$makeclosure96051 = alloca %struct.ScmObj*, align 8
%fptrToInt96052 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67250 to i64
%ae67250 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96052)
store volatile %struct.ScmObj* %ae67250, %struct.ScmObj** %stackaddr$makeclosure96051, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67250, %struct.ScmObj* %x48150, i64 0)
%ae67251 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93497$ae672500 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96053 = alloca %struct.ScmObj*, align 8
%argslist93497$ae672501 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93497$ae672500)
store volatile %struct.ScmObj* %argslist93497$ae672501, %struct.ScmObj** %stackaddr$prim96053, align 8
%stackaddr$prim96054 = alloca %struct.ScmObj*, align 8
%argslist93497$ae672502 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67251, %struct.ScmObj* %argslist93497$ae672501)
store volatile %struct.ScmObj* %argslist93497$ae672502, %struct.ScmObj** %stackaddr$prim96054, align 8
%clofunc96055 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67250)
musttail call tailcc void %clofunc96055(%struct.ScmObj* %ae67250, %struct.ScmObj* %argslist93497$ae672502)
ret void
falsebranch$cmp96046:
%stackaddr$makeclosure96056 = alloca %struct.ScmObj*, align 8
%fptrToInt96057 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67488 to i64
%ae67488 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96057)
store volatile %struct.ScmObj* %ae67488, %struct.ScmObj** %stackaddr$makeclosure96056, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67488, %struct.ScmObj* %x48150, i64 0)
%ae67489 = call %struct.ScmObj* @const_init_int(i64 0)
%ae67490 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93519$ae674880 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96058 = alloca %struct.ScmObj*, align 8
%argslist93519$ae674881 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67490, %struct.ScmObj* %argslist93519$ae674880)
store volatile %struct.ScmObj* %argslist93519$ae674881, %struct.ScmObj** %stackaddr$prim96058, align 8
%stackaddr$prim96059 = alloca %struct.ScmObj*, align 8
%argslist93519$ae674882 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67489, %struct.ScmObj* %argslist93519$ae674881)
store volatile %struct.ScmObj* %argslist93519$ae674882, %struct.ScmObj** %stackaddr$prim96059, align 8
%clofunc96060 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67488)
musttail call tailcc void %clofunc96060(%struct.ScmObj* %ae67488, %struct.ScmObj* %argslist93519$ae674882)
ret void
}

define tailcc void @proc_clo$ae67250(%struct.ScmObj* %env$ae67250,%struct.ScmObj* %current_45args93476) {
%stackaddr$env-ref96061 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67250, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96061
%stackaddr$prim96062 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93476)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96062, align 8
%stackaddr$prim96063 = alloca %struct.ScmObj*, align 8
%current_45args93477 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93476)
store volatile %struct.ScmObj* %current_45args93477, %struct.ScmObj** %stackaddr$prim96063, align 8
%stackaddr$prim96064 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93477)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96064, align 8
%ae67256 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96065 = call i64 @is_truthy_value(%struct.ScmObj* %ae67256)
%cmp$cmp96065 = icmp eq i64 %truthy$cmp96065, 1
br i1 %cmp$cmp96065, label %truebranch$cmp96065, label %falsebranch$cmp96065
truebranch$cmp96065:
%ae67258 = call %struct.ScmObj* @const_init_int(i64 0)
%ae67259 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96066 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67258, %struct.ScmObj* %ae67259)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96066, align 8
%stackaddr$makeclosure96067 = alloca %struct.ScmObj*, align 8
%fptrToInt96068 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67260 to i64
%ae67260 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96068)
store volatile %struct.ScmObj* %ae67260, %struct.ScmObj** %stackaddr$makeclosure96067, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67260, %struct.ScmObj* %x48150, i64 0)
%ae67261 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93487$ae672600 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96069 = alloca %struct.ScmObj*, align 8
%argslist93487$ae672601 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93487$ae672600)
store volatile %struct.ScmObj* %argslist93487$ae672601, %struct.ScmObj** %stackaddr$prim96069, align 8
%stackaddr$prim96070 = alloca %struct.ScmObj*, align 8
%argslist93487$ae672602 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67261, %struct.ScmObj* %argslist93487$ae672601)
store volatile %struct.ScmObj* %argslist93487$ae672602, %struct.ScmObj** %stackaddr$prim96070, align 8
%clofunc96071 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67260)
musttail call tailcc void %clofunc96071(%struct.ScmObj* %ae67260, %struct.ScmObj* %argslist93487$ae672602)
ret void
falsebranch$cmp96065:
%stackaddr$makeclosure96072 = alloca %struct.ScmObj*, align 8
%fptrToInt96073 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67319 to i64
%ae67319 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96073)
store volatile %struct.ScmObj* %ae67319, %struct.ScmObj** %stackaddr$makeclosure96072, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67319, %struct.ScmObj* %x48150, i64 0)
%ae67320 = call %struct.ScmObj* @const_init_int(i64 0)
%ae67321 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93496$ae673190 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96074 = alloca %struct.ScmObj*, align 8
%argslist93496$ae673191 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67321, %struct.ScmObj* %argslist93496$ae673190)
store volatile %struct.ScmObj* %argslist93496$ae673191, %struct.ScmObj** %stackaddr$prim96074, align 8
%stackaddr$prim96075 = alloca %struct.ScmObj*, align 8
%argslist93496$ae673192 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67320, %struct.ScmObj* %argslist93496$ae673191)
store volatile %struct.ScmObj* %argslist93496$ae673192, %struct.ScmObj** %stackaddr$prim96075, align 8
%clofunc96076 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67319)
musttail call tailcc void %clofunc96076(%struct.ScmObj* %ae67319, %struct.ScmObj* %argslist93496$ae673192)
ret void
}

define tailcc void @proc_clo$ae67260(%struct.ScmObj* %env$ae67260,%struct.ScmObj* %current_45args93479) {
%stackaddr$env-ref96077 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67260, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96077
%stackaddr$prim96078 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93479)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96078, align 8
%stackaddr$prim96079 = alloca %struct.ScmObj*, align 8
%current_45args93480 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93479)
store volatile %struct.ScmObj* %current_45args93480, %struct.ScmObj** %stackaddr$prim96079, align 8
%stackaddr$prim96080 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93480)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96080, align 8
%ae67267 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96081 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67267)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96081, align 8
%stackaddr$makeclosure96082 = alloca %struct.ScmObj*, align 8
%fptrToInt96083 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67268 to i64
%ae67268 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96083)
store volatile %struct.ScmObj* %ae67268, %struct.ScmObj** %stackaddr$makeclosure96082, align 8
%ae67269 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93486$ae672680 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96084 = alloca %struct.ScmObj*, align 8
%argslist93486$ae672681 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93486$ae672680)
store volatile %struct.ScmObj* %argslist93486$ae672681, %struct.ScmObj** %stackaddr$prim96084, align 8
%stackaddr$prim96085 = alloca %struct.ScmObj*, align 8
%argslist93486$ae672682 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67269, %struct.ScmObj* %argslist93486$ae672681)
store volatile %struct.ScmObj* %argslist93486$ae672682, %struct.ScmObj** %stackaddr$prim96085, align 8
%clofunc96086 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67268)
musttail call tailcc void %clofunc96086(%struct.ScmObj* %ae67268, %struct.ScmObj* %argslist93486$ae672682)
ret void
}

define tailcc void @proc_clo$ae67268(%struct.ScmObj* %env$ae67268,%struct.ScmObj* %current_45args93482) {
%stackaddr$prim96087 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93482)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96087, align 8
%stackaddr$prim96088 = alloca %struct.ScmObj*, align 8
%current_45args93483 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93482)
store volatile %struct.ScmObj* %current_45args93483, %struct.ScmObj** %stackaddr$prim96088, align 8
%stackaddr$prim96089 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93483)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96089, align 8
%stackaddr$prim96090 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96090, align 8
%argslist93485$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96091 = alloca %struct.ScmObj*, align 8
%argslist93485$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93485$k0)
store volatile %struct.ScmObj* %argslist93485$k1, %struct.ScmObj** %stackaddr$prim96091, align 8
%clofunc96092 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96092(%struct.ScmObj* %k, %struct.ScmObj* %argslist93485$k1)
ret void
}

define tailcc void @proc_clo$ae67319(%struct.ScmObj* %env$ae67319,%struct.ScmObj* %current_45args93488) {
%stackaddr$env-ref96093 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67319, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96093
%stackaddr$prim96094 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93488)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96094, align 8
%stackaddr$prim96095 = alloca %struct.ScmObj*, align 8
%current_45args93489 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93488)
store volatile %struct.ScmObj* %current_45args93489, %struct.ScmObj** %stackaddr$prim96095, align 8
%stackaddr$prim96096 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93489)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96096, align 8
%ae67329 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96097 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67329)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96097, align 8
%stackaddr$makeclosure96098 = alloca %struct.ScmObj*, align 8
%fptrToInt96099 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67330 to i64
%ae67330 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96099)
store volatile %struct.ScmObj* %ae67330, %struct.ScmObj** %stackaddr$makeclosure96098, align 8
%ae67331 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93495$ae673300 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96100 = alloca %struct.ScmObj*, align 8
%argslist93495$ae673301 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93495$ae673300)
store volatile %struct.ScmObj* %argslist93495$ae673301, %struct.ScmObj** %stackaddr$prim96100, align 8
%stackaddr$prim96101 = alloca %struct.ScmObj*, align 8
%argslist93495$ae673302 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67331, %struct.ScmObj* %argslist93495$ae673301)
store volatile %struct.ScmObj* %argslist93495$ae673302, %struct.ScmObj** %stackaddr$prim96101, align 8
%clofunc96102 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67330)
musttail call tailcc void %clofunc96102(%struct.ScmObj* %ae67330, %struct.ScmObj* %argslist93495$ae673302)
ret void
}

define tailcc void @proc_clo$ae67330(%struct.ScmObj* %env$ae67330,%struct.ScmObj* %current_45args93491) {
%stackaddr$prim96103 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93491)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96103, align 8
%stackaddr$prim96104 = alloca %struct.ScmObj*, align 8
%current_45args93492 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93491)
store volatile %struct.ScmObj* %current_45args93492, %struct.ScmObj** %stackaddr$prim96104, align 8
%stackaddr$prim96105 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93492)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96105, align 8
%stackaddr$prim96106 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96106, align 8
%argslist93494$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96107 = alloca %struct.ScmObj*, align 8
%argslist93494$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93494$k0)
store volatile %struct.ScmObj* %argslist93494$k1, %struct.ScmObj** %stackaddr$prim96107, align 8
%clofunc96108 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96108(%struct.ScmObj* %k, %struct.ScmObj* %argslist93494$k1)
ret void
}

define tailcc void @proc_clo$ae67488(%struct.ScmObj* %env$ae67488,%struct.ScmObj* %current_45args93498) {
%stackaddr$env-ref96109 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67488, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96109
%stackaddr$prim96110 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93498)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96110, align 8
%stackaddr$prim96111 = alloca %struct.ScmObj*, align 8
%current_45args93499 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93498)
store volatile %struct.ScmObj* %current_45args93499, %struct.ScmObj** %stackaddr$prim96111, align 8
%stackaddr$prim96112 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93499)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96112, align 8
%ae67497 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96113 = call i64 @is_truthy_value(%struct.ScmObj* %ae67497)
%cmp$cmp96113 = icmp eq i64 %truthy$cmp96113, 1
br i1 %cmp$cmp96113, label %truebranch$cmp96113, label %falsebranch$cmp96113
truebranch$cmp96113:
%ae67499 = call %struct.ScmObj* @const_init_int(i64 0)
%ae67500 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96114 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67499, %struct.ScmObj* %ae67500)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96114, align 8
%stackaddr$makeclosure96115 = alloca %struct.ScmObj*, align 8
%fptrToInt96116 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67501 to i64
%ae67501 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96116)
store volatile %struct.ScmObj* %ae67501, %struct.ScmObj** %stackaddr$makeclosure96115, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67501, %struct.ScmObj* %x48150, i64 0)
%ae67502 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93509$ae675010 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96117 = alloca %struct.ScmObj*, align 8
%argslist93509$ae675011 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93509$ae675010)
store volatile %struct.ScmObj* %argslist93509$ae675011, %struct.ScmObj** %stackaddr$prim96117, align 8
%stackaddr$prim96118 = alloca %struct.ScmObj*, align 8
%argslist93509$ae675012 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67502, %struct.ScmObj* %argslist93509$ae675011)
store volatile %struct.ScmObj* %argslist93509$ae675012, %struct.ScmObj** %stackaddr$prim96118, align 8
%clofunc96119 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67501)
musttail call tailcc void %clofunc96119(%struct.ScmObj* %ae67501, %struct.ScmObj* %argslist93509$ae675012)
ret void
falsebranch$cmp96113:
%stackaddr$makeclosure96120 = alloca %struct.ScmObj*, align 8
%fptrToInt96121 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67560 to i64
%ae67560 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96121)
store volatile %struct.ScmObj* %ae67560, %struct.ScmObj** %stackaddr$makeclosure96120, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67560, %struct.ScmObj* %x48150, i64 0)
%ae67561 = call %struct.ScmObj* @const_init_int(i64 0)
%ae67562 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93518$ae675600 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96122 = alloca %struct.ScmObj*, align 8
%argslist93518$ae675601 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67562, %struct.ScmObj* %argslist93518$ae675600)
store volatile %struct.ScmObj* %argslist93518$ae675601, %struct.ScmObj** %stackaddr$prim96122, align 8
%stackaddr$prim96123 = alloca %struct.ScmObj*, align 8
%argslist93518$ae675602 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67561, %struct.ScmObj* %argslist93518$ae675601)
store volatile %struct.ScmObj* %argslist93518$ae675602, %struct.ScmObj** %stackaddr$prim96123, align 8
%clofunc96124 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67560)
musttail call tailcc void %clofunc96124(%struct.ScmObj* %ae67560, %struct.ScmObj* %argslist93518$ae675602)
ret void
}

define tailcc void @proc_clo$ae67501(%struct.ScmObj* %env$ae67501,%struct.ScmObj* %current_45args93501) {
%stackaddr$env-ref96125 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67501, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96125
%stackaddr$prim96126 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93501)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96126, align 8
%stackaddr$prim96127 = alloca %struct.ScmObj*, align 8
%current_45args93502 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93501)
store volatile %struct.ScmObj* %current_45args93502, %struct.ScmObj** %stackaddr$prim96127, align 8
%stackaddr$prim96128 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93502)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96128, align 8
%ae67508 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96129 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67508)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96129, align 8
%stackaddr$makeclosure96130 = alloca %struct.ScmObj*, align 8
%fptrToInt96131 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67509 to i64
%ae67509 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96131)
store volatile %struct.ScmObj* %ae67509, %struct.ScmObj** %stackaddr$makeclosure96130, align 8
%ae67510 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93508$ae675090 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96132 = alloca %struct.ScmObj*, align 8
%argslist93508$ae675091 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93508$ae675090)
store volatile %struct.ScmObj* %argslist93508$ae675091, %struct.ScmObj** %stackaddr$prim96132, align 8
%stackaddr$prim96133 = alloca %struct.ScmObj*, align 8
%argslist93508$ae675092 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67510, %struct.ScmObj* %argslist93508$ae675091)
store volatile %struct.ScmObj* %argslist93508$ae675092, %struct.ScmObj** %stackaddr$prim96133, align 8
%clofunc96134 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67509)
musttail call tailcc void %clofunc96134(%struct.ScmObj* %ae67509, %struct.ScmObj* %argslist93508$ae675092)
ret void
}

define tailcc void @proc_clo$ae67509(%struct.ScmObj* %env$ae67509,%struct.ScmObj* %current_45args93504) {
%stackaddr$prim96135 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93504)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96135, align 8
%stackaddr$prim96136 = alloca %struct.ScmObj*, align 8
%current_45args93505 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93504)
store volatile %struct.ScmObj* %current_45args93505, %struct.ScmObj** %stackaddr$prim96136, align 8
%stackaddr$prim96137 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93505)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96137, align 8
%stackaddr$prim96138 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96138, align 8
%argslist93507$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96139 = alloca %struct.ScmObj*, align 8
%argslist93507$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93507$k0)
store volatile %struct.ScmObj* %argslist93507$k1, %struct.ScmObj** %stackaddr$prim96139, align 8
%clofunc96140 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96140(%struct.ScmObj* %k, %struct.ScmObj* %argslist93507$k1)
ret void
}

define tailcc void @proc_clo$ae67560(%struct.ScmObj* %env$ae67560,%struct.ScmObj* %current_45args93510) {
%stackaddr$env-ref96141 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67560, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96141
%stackaddr$prim96142 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93510)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96142, align 8
%stackaddr$prim96143 = alloca %struct.ScmObj*, align 8
%current_45args93511 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93510)
store volatile %struct.ScmObj* %current_45args93511, %struct.ScmObj** %stackaddr$prim96143, align 8
%stackaddr$prim96144 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93511)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96144, align 8
%ae67570 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96145 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67570)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96145, align 8
%stackaddr$makeclosure96146 = alloca %struct.ScmObj*, align 8
%fptrToInt96147 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67571 to i64
%ae67571 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96147)
store volatile %struct.ScmObj* %ae67571, %struct.ScmObj** %stackaddr$makeclosure96146, align 8
%ae67572 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93517$ae675710 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96148 = alloca %struct.ScmObj*, align 8
%argslist93517$ae675711 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93517$ae675710)
store volatile %struct.ScmObj* %argslist93517$ae675711, %struct.ScmObj** %stackaddr$prim96148, align 8
%stackaddr$prim96149 = alloca %struct.ScmObj*, align 8
%argslist93517$ae675712 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67572, %struct.ScmObj* %argslist93517$ae675711)
store volatile %struct.ScmObj* %argslist93517$ae675712, %struct.ScmObj** %stackaddr$prim96149, align 8
%clofunc96150 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67571)
musttail call tailcc void %clofunc96150(%struct.ScmObj* %ae67571, %struct.ScmObj* %argslist93517$ae675712)
ret void
}

define tailcc void @proc_clo$ae67571(%struct.ScmObj* %env$ae67571,%struct.ScmObj* %current_45args93513) {
%stackaddr$prim96151 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93513)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96151, align 8
%stackaddr$prim96152 = alloca %struct.ScmObj*, align 8
%current_45args93514 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93513)
store volatile %struct.ScmObj* %current_45args93514, %struct.ScmObj** %stackaddr$prim96152, align 8
%stackaddr$prim96153 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93514)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96153, align 8
%stackaddr$prim96154 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96154, align 8
%argslist93516$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96155 = alloca %struct.ScmObj*, align 8
%argslist93516$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93516$k0)
store volatile %struct.ScmObj* %argslist93516$k1, %struct.ScmObj** %stackaddr$prim96155, align 8
%clofunc96156 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96156(%struct.ScmObj* %k, %struct.ScmObj* %argslist93516$k1)
ret void
}

define tailcc void @proc_clo$ae67705(%struct.ScmObj* %env$ae67705,%struct.ScmObj* %current_45args93521) {
%stackaddr$env-ref96157 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67705, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96157
%stackaddr$prim96158 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93521)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim96158, align 8
%stackaddr$prim96159 = alloca %struct.ScmObj*, align 8
%current_45args93522 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93521)
store volatile %struct.ScmObj* %current_45args93522, %struct.ScmObj** %stackaddr$prim96159, align 8
%stackaddr$prim96160 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93522)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim96160, align 8
%ae67712 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96161 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67712)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim96161, align 8
%truthy$cmp96162 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp96162 = icmp eq i64 %truthy$cmp96162, 1
br i1 %cmp$cmp96162, label %truebranch$cmp96162, label %falsebranch$cmp96162
truebranch$cmp96162:
%ae67715 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96163 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67715)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim96163, align 8
%ae67717 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96164 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67717)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim96164, align 8
%stackaddr$prim96165 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim96165, align 8
%ae67721 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96166 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67721, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim96166, align 8
%stackaddr$makeclosure96167 = alloca %struct.ScmObj*, align 8
%fptrToInt96168 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67723 to i64
%ae67723 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96168)
store volatile %struct.ScmObj* %ae67723, %struct.ScmObj** %stackaddr$makeclosure96167, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67723, %struct.ScmObj* %x48150, i64 0)
%ae67724 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93545$ae677230 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96169 = alloca %struct.ScmObj*, align 8
%argslist93545$ae677231 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93545$ae677230)
store volatile %struct.ScmObj* %argslist93545$ae677231, %struct.ScmObj** %stackaddr$prim96169, align 8
%stackaddr$prim96170 = alloca %struct.ScmObj*, align 8
%argslist93545$ae677232 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67724, %struct.ScmObj* %argslist93545$ae677231)
store volatile %struct.ScmObj* %argslist93545$ae677232, %struct.ScmObj** %stackaddr$prim96170, align 8
%clofunc96171 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67723)
musttail call tailcc void %clofunc96171(%struct.ScmObj* %ae67723, %struct.ScmObj* %argslist93545$ae677232)
ret void
falsebranch$cmp96162:
%stackaddr$makeclosure96172 = alloca %struct.ScmObj*, align 8
%fptrToInt96173 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67961 to i64
%ae67961 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96173)
store volatile %struct.ScmObj* %ae67961, %struct.ScmObj** %stackaddr$makeclosure96172, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67961, %struct.ScmObj* %x48150, i64 0)
%ae67962 = call %struct.ScmObj* @const_init_int(i64 0)
%ae67963 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93567$ae679610 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96174 = alloca %struct.ScmObj*, align 8
%argslist93567$ae679611 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67963, %struct.ScmObj* %argslist93567$ae679610)
store volatile %struct.ScmObj* %argslist93567$ae679611, %struct.ScmObj** %stackaddr$prim96174, align 8
%stackaddr$prim96175 = alloca %struct.ScmObj*, align 8
%argslist93567$ae679612 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67962, %struct.ScmObj* %argslist93567$ae679611)
store volatile %struct.ScmObj* %argslist93567$ae679612, %struct.ScmObj** %stackaddr$prim96175, align 8
%clofunc96176 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67961)
musttail call tailcc void %clofunc96176(%struct.ScmObj* %ae67961, %struct.ScmObj* %argslist93567$ae679612)
ret void
}

define tailcc void @proc_clo$ae67723(%struct.ScmObj* %env$ae67723,%struct.ScmObj* %current_45args93524) {
%stackaddr$env-ref96177 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67723, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96177
%stackaddr$prim96178 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93524)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96178, align 8
%stackaddr$prim96179 = alloca %struct.ScmObj*, align 8
%current_45args93525 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93524)
store volatile %struct.ScmObj* %current_45args93525, %struct.ScmObj** %stackaddr$prim96179, align 8
%stackaddr$prim96180 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93525)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96180, align 8
%ae67729 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96181 = call i64 @is_truthy_value(%struct.ScmObj* %ae67729)
%cmp$cmp96181 = icmp eq i64 %truthy$cmp96181, 1
br i1 %cmp$cmp96181, label %truebranch$cmp96181, label %falsebranch$cmp96181
truebranch$cmp96181:
%ae67731 = call %struct.ScmObj* @const_init_int(i64 0)
%ae67732 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96182 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67731, %struct.ScmObj* %ae67732)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96182, align 8
%stackaddr$makeclosure96183 = alloca %struct.ScmObj*, align 8
%fptrToInt96184 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67733 to i64
%ae67733 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96184)
store volatile %struct.ScmObj* %ae67733, %struct.ScmObj** %stackaddr$makeclosure96183, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67733, %struct.ScmObj* %x48150, i64 0)
%ae67734 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93535$ae677330 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96185 = alloca %struct.ScmObj*, align 8
%argslist93535$ae677331 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93535$ae677330)
store volatile %struct.ScmObj* %argslist93535$ae677331, %struct.ScmObj** %stackaddr$prim96185, align 8
%stackaddr$prim96186 = alloca %struct.ScmObj*, align 8
%argslist93535$ae677332 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67734, %struct.ScmObj* %argslist93535$ae677331)
store volatile %struct.ScmObj* %argslist93535$ae677332, %struct.ScmObj** %stackaddr$prim96186, align 8
%clofunc96187 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67733)
musttail call tailcc void %clofunc96187(%struct.ScmObj* %ae67733, %struct.ScmObj* %argslist93535$ae677332)
ret void
falsebranch$cmp96181:
%stackaddr$makeclosure96188 = alloca %struct.ScmObj*, align 8
%fptrToInt96189 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67792 to i64
%ae67792 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96189)
store volatile %struct.ScmObj* %ae67792, %struct.ScmObj** %stackaddr$makeclosure96188, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67792, %struct.ScmObj* %x48150, i64 0)
%ae67793 = call %struct.ScmObj* @const_init_int(i64 0)
%ae67794 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93544$ae677920 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96190 = alloca %struct.ScmObj*, align 8
%argslist93544$ae677921 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67794, %struct.ScmObj* %argslist93544$ae677920)
store volatile %struct.ScmObj* %argslist93544$ae677921, %struct.ScmObj** %stackaddr$prim96190, align 8
%stackaddr$prim96191 = alloca %struct.ScmObj*, align 8
%argslist93544$ae677922 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67793, %struct.ScmObj* %argslist93544$ae677921)
store volatile %struct.ScmObj* %argslist93544$ae677922, %struct.ScmObj** %stackaddr$prim96191, align 8
%clofunc96192 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67792)
musttail call tailcc void %clofunc96192(%struct.ScmObj* %ae67792, %struct.ScmObj* %argslist93544$ae677922)
ret void
}

define tailcc void @proc_clo$ae67733(%struct.ScmObj* %env$ae67733,%struct.ScmObj* %current_45args93527) {
%stackaddr$env-ref96193 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67733, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96193
%stackaddr$prim96194 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93527)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96194, align 8
%stackaddr$prim96195 = alloca %struct.ScmObj*, align 8
%current_45args93528 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93527)
store volatile %struct.ScmObj* %current_45args93528, %struct.ScmObj** %stackaddr$prim96195, align 8
%stackaddr$prim96196 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93528)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96196, align 8
%ae67740 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96197 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67740)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96197, align 8
%stackaddr$makeclosure96198 = alloca %struct.ScmObj*, align 8
%fptrToInt96199 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67741 to i64
%ae67741 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96199)
store volatile %struct.ScmObj* %ae67741, %struct.ScmObj** %stackaddr$makeclosure96198, align 8
%ae67742 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93534$ae677410 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96200 = alloca %struct.ScmObj*, align 8
%argslist93534$ae677411 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93534$ae677410)
store volatile %struct.ScmObj* %argslist93534$ae677411, %struct.ScmObj** %stackaddr$prim96200, align 8
%stackaddr$prim96201 = alloca %struct.ScmObj*, align 8
%argslist93534$ae677412 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67742, %struct.ScmObj* %argslist93534$ae677411)
store volatile %struct.ScmObj* %argslist93534$ae677412, %struct.ScmObj** %stackaddr$prim96201, align 8
%clofunc96202 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67741)
musttail call tailcc void %clofunc96202(%struct.ScmObj* %ae67741, %struct.ScmObj* %argslist93534$ae677412)
ret void
}

define tailcc void @proc_clo$ae67741(%struct.ScmObj* %env$ae67741,%struct.ScmObj* %current_45args93530) {
%stackaddr$prim96203 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93530)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96203, align 8
%stackaddr$prim96204 = alloca %struct.ScmObj*, align 8
%current_45args93531 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93530)
store volatile %struct.ScmObj* %current_45args93531, %struct.ScmObj** %stackaddr$prim96204, align 8
%stackaddr$prim96205 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93531)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96205, align 8
%stackaddr$prim96206 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96206, align 8
%argslist93533$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96207 = alloca %struct.ScmObj*, align 8
%argslist93533$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93533$k0)
store volatile %struct.ScmObj* %argslist93533$k1, %struct.ScmObj** %stackaddr$prim96207, align 8
%clofunc96208 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96208(%struct.ScmObj* %k, %struct.ScmObj* %argslist93533$k1)
ret void
}

define tailcc void @proc_clo$ae67792(%struct.ScmObj* %env$ae67792,%struct.ScmObj* %current_45args93536) {
%stackaddr$env-ref96209 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67792, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96209
%stackaddr$prim96210 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93536)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96210, align 8
%stackaddr$prim96211 = alloca %struct.ScmObj*, align 8
%current_45args93537 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93536)
store volatile %struct.ScmObj* %current_45args93537, %struct.ScmObj** %stackaddr$prim96211, align 8
%stackaddr$prim96212 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93537)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96212, align 8
%ae67802 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96213 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67802)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96213, align 8
%stackaddr$makeclosure96214 = alloca %struct.ScmObj*, align 8
%fptrToInt96215 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67803 to i64
%ae67803 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96215)
store volatile %struct.ScmObj* %ae67803, %struct.ScmObj** %stackaddr$makeclosure96214, align 8
%ae67804 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93543$ae678030 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96216 = alloca %struct.ScmObj*, align 8
%argslist93543$ae678031 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93543$ae678030)
store volatile %struct.ScmObj* %argslist93543$ae678031, %struct.ScmObj** %stackaddr$prim96216, align 8
%stackaddr$prim96217 = alloca %struct.ScmObj*, align 8
%argslist93543$ae678032 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67804, %struct.ScmObj* %argslist93543$ae678031)
store volatile %struct.ScmObj* %argslist93543$ae678032, %struct.ScmObj** %stackaddr$prim96217, align 8
%clofunc96218 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67803)
musttail call tailcc void %clofunc96218(%struct.ScmObj* %ae67803, %struct.ScmObj* %argslist93543$ae678032)
ret void
}

define tailcc void @proc_clo$ae67803(%struct.ScmObj* %env$ae67803,%struct.ScmObj* %current_45args93539) {
%stackaddr$prim96219 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93539)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96219, align 8
%stackaddr$prim96220 = alloca %struct.ScmObj*, align 8
%current_45args93540 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93539)
store volatile %struct.ScmObj* %current_45args93540, %struct.ScmObj** %stackaddr$prim96220, align 8
%stackaddr$prim96221 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93540)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96221, align 8
%stackaddr$prim96222 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96222, align 8
%argslist93542$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96223 = alloca %struct.ScmObj*, align 8
%argslist93542$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93542$k0)
store volatile %struct.ScmObj* %argslist93542$k1, %struct.ScmObj** %stackaddr$prim96223, align 8
%clofunc96224 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96224(%struct.ScmObj* %k, %struct.ScmObj* %argslist93542$k1)
ret void
}

define tailcc void @proc_clo$ae67961(%struct.ScmObj* %env$ae67961,%struct.ScmObj* %current_45args93546) {
%stackaddr$env-ref96225 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67961, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96225
%stackaddr$prim96226 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93546)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96226, align 8
%stackaddr$prim96227 = alloca %struct.ScmObj*, align 8
%current_45args93547 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93546)
store volatile %struct.ScmObj* %current_45args93547, %struct.ScmObj** %stackaddr$prim96227, align 8
%stackaddr$prim96228 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93547)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96228, align 8
%ae67970 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96229 = call i64 @is_truthy_value(%struct.ScmObj* %ae67970)
%cmp$cmp96229 = icmp eq i64 %truthy$cmp96229, 1
br i1 %cmp$cmp96229, label %truebranch$cmp96229, label %falsebranch$cmp96229
truebranch$cmp96229:
%ae67972 = call %struct.ScmObj* @const_init_int(i64 0)
%ae67973 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96230 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67972, %struct.ScmObj* %ae67973)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96230, align 8
%stackaddr$makeclosure96231 = alloca %struct.ScmObj*, align 8
%fptrToInt96232 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67974 to i64
%ae67974 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96232)
store volatile %struct.ScmObj* %ae67974, %struct.ScmObj** %stackaddr$makeclosure96231, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae67974, %struct.ScmObj* %x48150, i64 0)
%ae67975 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93557$ae679740 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96233 = alloca %struct.ScmObj*, align 8
%argslist93557$ae679741 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93557$ae679740)
store volatile %struct.ScmObj* %argslist93557$ae679741, %struct.ScmObj** %stackaddr$prim96233, align 8
%stackaddr$prim96234 = alloca %struct.ScmObj*, align 8
%argslist93557$ae679742 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67975, %struct.ScmObj* %argslist93557$ae679741)
store volatile %struct.ScmObj* %argslist93557$ae679742, %struct.ScmObj** %stackaddr$prim96234, align 8
%clofunc96235 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67974)
musttail call tailcc void %clofunc96235(%struct.ScmObj* %ae67974, %struct.ScmObj* %argslist93557$ae679742)
ret void
falsebranch$cmp96229:
%stackaddr$makeclosure96236 = alloca %struct.ScmObj*, align 8
%fptrToInt96237 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae68033 to i64
%ae68033 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96237)
store volatile %struct.ScmObj* %ae68033, %struct.ScmObj** %stackaddr$makeclosure96236, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae68033, %struct.ScmObj* %x48150, i64 0)
%ae68034 = call %struct.ScmObj* @const_init_int(i64 0)
%ae68035 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93566$ae680330 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96238 = alloca %struct.ScmObj*, align 8
%argslist93566$ae680331 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae68035, %struct.ScmObj* %argslist93566$ae680330)
store volatile %struct.ScmObj* %argslist93566$ae680331, %struct.ScmObj** %stackaddr$prim96238, align 8
%stackaddr$prim96239 = alloca %struct.ScmObj*, align 8
%argslist93566$ae680332 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae68034, %struct.ScmObj* %argslist93566$ae680331)
store volatile %struct.ScmObj* %argslist93566$ae680332, %struct.ScmObj** %stackaddr$prim96239, align 8
%clofunc96240 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae68033)
musttail call tailcc void %clofunc96240(%struct.ScmObj* %ae68033, %struct.ScmObj* %argslist93566$ae680332)
ret void
}

define tailcc void @proc_clo$ae67974(%struct.ScmObj* %env$ae67974,%struct.ScmObj* %current_45args93549) {
%stackaddr$env-ref96241 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae67974, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96241
%stackaddr$prim96242 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93549)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96242, align 8
%stackaddr$prim96243 = alloca %struct.ScmObj*, align 8
%current_45args93550 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93549)
store volatile %struct.ScmObj* %current_45args93550, %struct.ScmObj** %stackaddr$prim96243, align 8
%stackaddr$prim96244 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93550)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96244, align 8
%ae67981 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96245 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae67981)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96245, align 8
%stackaddr$makeclosure96246 = alloca %struct.ScmObj*, align 8
%fptrToInt96247 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae67982 to i64
%ae67982 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96247)
store volatile %struct.ScmObj* %ae67982, %struct.ScmObj** %stackaddr$makeclosure96246, align 8
%ae67983 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93556$ae679820 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96248 = alloca %struct.ScmObj*, align 8
%argslist93556$ae679821 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93556$ae679820)
store volatile %struct.ScmObj* %argslist93556$ae679821, %struct.ScmObj** %stackaddr$prim96248, align 8
%stackaddr$prim96249 = alloca %struct.ScmObj*, align 8
%argslist93556$ae679822 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae67983, %struct.ScmObj* %argslist93556$ae679821)
store volatile %struct.ScmObj* %argslist93556$ae679822, %struct.ScmObj** %stackaddr$prim96249, align 8
%clofunc96250 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae67982)
musttail call tailcc void %clofunc96250(%struct.ScmObj* %ae67982, %struct.ScmObj* %argslist93556$ae679822)
ret void
}

define tailcc void @proc_clo$ae67982(%struct.ScmObj* %env$ae67982,%struct.ScmObj* %current_45args93552) {
%stackaddr$prim96251 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93552)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96251, align 8
%stackaddr$prim96252 = alloca %struct.ScmObj*, align 8
%current_45args93553 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93552)
store volatile %struct.ScmObj* %current_45args93553, %struct.ScmObj** %stackaddr$prim96252, align 8
%stackaddr$prim96253 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93553)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96253, align 8
%stackaddr$prim96254 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96254, align 8
%argslist93555$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96255 = alloca %struct.ScmObj*, align 8
%argslist93555$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93555$k0)
store volatile %struct.ScmObj* %argslist93555$k1, %struct.ScmObj** %stackaddr$prim96255, align 8
%clofunc96256 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96256(%struct.ScmObj* %k, %struct.ScmObj* %argslist93555$k1)
ret void
}

define tailcc void @proc_clo$ae68033(%struct.ScmObj* %env$ae68033,%struct.ScmObj* %current_45args93558) {
%stackaddr$env-ref96257 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae68033, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96257
%stackaddr$prim96258 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93558)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96258, align 8
%stackaddr$prim96259 = alloca %struct.ScmObj*, align 8
%current_45args93559 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93558)
store volatile %struct.ScmObj* %current_45args93559, %struct.ScmObj** %stackaddr$prim96259, align 8
%stackaddr$prim96260 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93559)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96260, align 8
%ae68043 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96261 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae68043)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96261, align 8
%stackaddr$makeclosure96262 = alloca %struct.ScmObj*, align 8
%fptrToInt96263 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae68044 to i64
%ae68044 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96263)
store volatile %struct.ScmObj* %ae68044, %struct.ScmObj** %stackaddr$makeclosure96262, align 8
%ae68045 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93565$ae680440 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96264 = alloca %struct.ScmObj*, align 8
%argslist93565$ae680441 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93565$ae680440)
store volatile %struct.ScmObj* %argslist93565$ae680441, %struct.ScmObj** %stackaddr$prim96264, align 8
%stackaddr$prim96265 = alloca %struct.ScmObj*, align 8
%argslist93565$ae680442 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae68045, %struct.ScmObj* %argslist93565$ae680441)
store volatile %struct.ScmObj* %argslist93565$ae680442, %struct.ScmObj** %stackaddr$prim96265, align 8
%clofunc96266 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae68044)
musttail call tailcc void %clofunc96266(%struct.ScmObj* %ae68044, %struct.ScmObj* %argslist93565$ae680442)
ret void
}

define tailcc void @proc_clo$ae68044(%struct.ScmObj* %env$ae68044,%struct.ScmObj* %current_45args93561) {
%stackaddr$prim96267 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93561)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96267, align 8
%stackaddr$prim96268 = alloca %struct.ScmObj*, align 8
%current_45args93562 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93561)
store volatile %struct.ScmObj* %current_45args93562, %struct.ScmObj** %stackaddr$prim96268, align 8
%stackaddr$prim96269 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93562)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96269, align 8
%stackaddr$prim96270 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96270, align 8
%argslist93564$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96271 = alloca %struct.ScmObj*, align 8
%argslist93564$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93564$k0)
store volatile %struct.ScmObj* %argslist93564$k1, %struct.ScmObj** %stackaddr$prim96271, align 8
%clofunc96272 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96272(%struct.ScmObj* %k, %struct.ScmObj* %argslist93564$k1)
ret void
}

define tailcc void @proc_clo$ae69318(%struct.ScmObj* %env$ae69318,%struct.ScmObj* %current_45args93571) {
%stackaddr$env-ref96273 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69318, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96273
%stackaddr$prim96274 = alloca %struct.ScmObj*, align 8
%_95k48329 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93571)
store volatile %struct.ScmObj* %_95k48329, %struct.ScmObj** %stackaddr$prim96274, align 8
%stackaddr$prim96275 = alloca %struct.ScmObj*, align 8
%current_45args93572 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93571)
store volatile %struct.ScmObj* %current_45args93572, %struct.ScmObj** %stackaddr$prim96275, align 8
%stackaddr$prim96276 = alloca %struct.ScmObj*, align 8
%t4802748153 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93572)
store volatile %struct.ScmObj* %t4802748153, %struct.ScmObj** %stackaddr$prim96276, align 8
%ae69325 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96277 = alloca %struct.ScmObj*, align 8
%anf_45bind48282 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69325)
store volatile %struct.ScmObj* %anf_45bind48282, %struct.ScmObj** %stackaddr$prim96277, align 8
%ae69327 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim96278 = alloca %struct.ScmObj*, align 8
%anf_45bind48283 = call %struct.ScmObj* @prim__60(%struct.ScmObj* %anf_45bind48282, %struct.ScmObj* %ae69327)
store volatile %struct.ScmObj* %anf_45bind48283, %struct.ScmObj** %stackaddr$prim96278, align 8
%truthy$cmp96279 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48283)
%cmp$cmp96279 = icmp eq i64 %truthy$cmp96279, 1
br i1 %cmp$cmp96279, label %truebranch$cmp96279, label %falsebranch$cmp96279
truebranch$cmp96279:
%ae69330 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96280 = alloca %struct.ScmObj*, align 8
%anf_45bind48284 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69330)
store volatile %struct.ScmObj* %anf_45bind48284, %struct.ScmObj** %stackaddr$prim96280, align 8
%ae69332 = call %struct.ScmObj* @const_init_int(i64 9)
%stackaddr$prim96281 = alloca %struct.ScmObj*, align 8
%anf_45bind48285 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48284, %struct.ScmObj* %ae69332)
store volatile %struct.ScmObj* %anf_45bind48285, %struct.ScmObj** %stackaddr$prim96281, align 8
%ae69334 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim96282 = alloca %struct.ScmObj*, align 8
%anf_45bind48286 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48285, %struct.ScmObj* %ae69334)
store volatile %struct.ScmObj* %anf_45bind48286, %struct.ScmObj** %stackaddr$prim96282, align 8
%ae69336 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96283 = alloca %struct.ScmObj*, align 8
%cpsprim48339 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69336, %struct.ScmObj* %anf_45bind48286)
store volatile %struct.ScmObj* %cpsprim48339, %struct.ScmObj** %stackaddr$prim96283, align 8
%stackaddr$makeclosure96284 = alloca %struct.ScmObj*, align 8
%fptrToInt96285 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69338 to i64
%ae69338 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96285)
store volatile %struct.ScmObj* %ae69338, %struct.ScmObj** %stackaddr$makeclosure96284, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69338, %struct.ScmObj* %x48150, i64 0)
%ae69339 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93673$ae693380 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96286 = alloca %struct.ScmObj*, align 8
%argslist93673$ae693381 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48339, %struct.ScmObj* %argslist93673$ae693380)
store volatile %struct.ScmObj* %argslist93673$ae693381, %struct.ScmObj** %stackaddr$prim96286, align 8
%stackaddr$prim96287 = alloca %struct.ScmObj*, align 8
%argslist93673$ae693382 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69339, %struct.ScmObj* %argslist93673$ae693381)
store volatile %struct.ScmObj* %argslist93673$ae693382, %struct.ScmObj** %stackaddr$prim96287, align 8
%clofunc96288 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69338)
musttail call tailcc void %clofunc96288(%struct.ScmObj* %ae69338, %struct.ScmObj* %argslist93673$ae693382)
ret void
falsebranch$cmp96279:
%stackaddr$prim96289 = alloca %struct.ScmObj*, align 8
%cpsprim48340 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48340, %struct.ScmObj** %stackaddr$prim96289, align 8
%stackaddr$makeclosure96290 = alloca %struct.ScmObj*, align 8
%fptrToInt96291 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71417 to i64
%ae71417 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96291)
store volatile %struct.ScmObj* %ae71417, %struct.ScmObj** %stackaddr$makeclosure96290, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71417, %struct.ScmObj* %x48150, i64 0)
%ae71418 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93773$ae714170 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96292 = alloca %struct.ScmObj*, align 8
%argslist93773$ae714171 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48340, %struct.ScmObj* %argslist93773$ae714170)
store volatile %struct.ScmObj* %argslist93773$ae714171, %struct.ScmObj** %stackaddr$prim96292, align 8
%stackaddr$prim96293 = alloca %struct.ScmObj*, align 8
%argslist93773$ae714172 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71418, %struct.ScmObj* %argslist93773$ae714171)
store volatile %struct.ScmObj* %argslist93773$ae714172, %struct.ScmObj** %stackaddr$prim96293, align 8
%clofunc96294 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71417)
musttail call tailcc void %clofunc96294(%struct.ScmObj* %ae71417, %struct.ScmObj* %argslist93773$ae714172)
ret void
}

define tailcc void @proc_clo$ae69338(%struct.ScmObj* %env$ae69338,%struct.ScmObj* %current_45args93574) {
%stackaddr$env-ref96295 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69338, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96295
%stackaddr$prim96296 = alloca %struct.ScmObj*, align 8
%_95k48330 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93574)
store volatile %struct.ScmObj* %_95k48330, %struct.ScmObj** %stackaddr$prim96296, align 8
%stackaddr$prim96297 = alloca %struct.ScmObj*, align 8
%current_45args93575 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93574)
store volatile %struct.ScmObj* %current_45args93575, %struct.ScmObj** %stackaddr$prim96297, align 8
%stackaddr$prim96298 = alloca %struct.ScmObj*, align 8
%t4802848154 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93575)
store volatile %struct.ScmObj* %t4802848154, %struct.ScmObj** %stackaddr$prim96298, align 8
%ae69344 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96299 = call i64 @is_truthy_value(%struct.ScmObj* %ae69344)
%cmp$cmp96299 = icmp eq i64 %truthy$cmp96299, 1
br i1 %cmp$cmp96299, label %truebranch$cmp96299, label %falsebranch$cmp96299
truebranch$cmp96299:
%stackaddr$prim96300 = alloca %struct.ScmObj*, align 8
%cpsprim48337 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48337, %struct.ScmObj** %stackaddr$prim96300, align 8
%stackaddr$makeclosure96301 = alloca %struct.ScmObj*, align 8
%fptrToInt96302 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69345 to i64
%ae69345 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96302)
store volatile %struct.ScmObj* %ae69345, %struct.ScmObj** %stackaddr$makeclosure96301, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69345, %struct.ScmObj* %x48150, i64 0)
%ae69346 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93624$ae693450 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96303 = alloca %struct.ScmObj*, align 8
%argslist93624$ae693451 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48337, %struct.ScmObj* %argslist93624$ae693450)
store volatile %struct.ScmObj* %argslist93624$ae693451, %struct.ScmObj** %stackaddr$prim96303, align 8
%stackaddr$prim96304 = alloca %struct.ScmObj*, align 8
%argslist93624$ae693452 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69346, %struct.ScmObj* %argslist93624$ae693451)
store volatile %struct.ScmObj* %argslist93624$ae693452, %struct.ScmObj** %stackaddr$prim96304, align 8
%clofunc96305 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69345)
musttail call tailcc void %clofunc96305(%struct.ScmObj* %ae69345, %struct.ScmObj* %argslist93624$ae693452)
ret void
falsebranch$cmp96299:
%ae69810 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96306 = alloca %struct.ScmObj*, align 8
%anf_45bind48287 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69810)
store volatile %struct.ScmObj* %anf_45bind48287, %struct.ScmObj** %stackaddr$prim96306, align 8
%ae69812 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim96307 = alloca %struct.ScmObj*, align 8
%anf_45bind48288 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48287, %struct.ScmObj* %ae69812)
store volatile %struct.ScmObj* %anf_45bind48288, %struct.ScmObj** %stackaddr$prim96307, align 8
%ae69814 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim96308 = alloca %struct.ScmObj*, align 8
%anf_45bind48289 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48288, %struct.ScmObj* %ae69814)
store volatile %struct.ScmObj* %anf_45bind48289, %struct.ScmObj** %stackaddr$prim96308, align 8
%ae69816 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96309 = alloca %struct.ScmObj*, align 8
%cpsprim48338 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69816, %struct.ScmObj* %anf_45bind48289)
store volatile %struct.ScmObj* %cpsprim48338, %struct.ScmObj** %stackaddr$prim96309, align 8
%stackaddr$makeclosure96310 = alloca %struct.ScmObj*, align 8
%fptrToInt96311 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69818 to i64
%ae69818 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96311)
store volatile %struct.ScmObj* %ae69818, %struct.ScmObj** %stackaddr$makeclosure96310, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69818, %struct.ScmObj* %x48150, i64 0)
%ae69819 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93672$ae698180 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96312 = alloca %struct.ScmObj*, align 8
%argslist93672$ae698181 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48338, %struct.ScmObj* %argslist93672$ae698180)
store volatile %struct.ScmObj* %argslist93672$ae698181, %struct.ScmObj** %stackaddr$prim96312, align 8
%stackaddr$prim96313 = alloca %struct.ScmObj*, align 8
%argslist93672$ae698182 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69819, %struct.ScmObj* %argslist93672$ae698181)
store volatile %struct.ScmObj* %argslist93672$ae698182, %struct.ScmObj** %stackaddr$prim96313, align 8
%clofunc96314 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69818)
musttail call tailcc void %clofunc96314(%struct.ScmObj* %ae69818, %struct.ScmObj* %argslist93672$ae698182)
ret void
}

define tailcc void @proc_clo$ae69345(%struct.ScmObj* %env$ae69345,%struct.ScmObj* %current_45args93577) {
%stackaddr$env-ref96315 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69345, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96315
%stackaddr$prim96316 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93577)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim96316, align 8
%stackaddr$prim96317 = alloca %struct.ScmObj*, align 8
%current_45args93578 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93577)
store volatile %struct.ScmObj* %current_45args93578, %struct.ScmObj** %stackaddr$prim96317, align 8
%stackaddr$prim96318 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93578)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim96318, align 8
%ae69352 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96319 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69352)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim96319, align 8
%truthy$cmp96320 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp96320 = icmp eq i64 %truthy$cmp96320, 1
br i1 %cmp$cmp96320, label %truebranch$cmp96320, label %falsebranch$cmp96320
truebranch$cmp96320:
%ae69355 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96321 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69355)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim96321, align 8
%ae69357 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96322 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69357)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim96322, align 8
%stackaddr$prim96323 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim96323, align 8
%ae69361 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96324 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69361, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim96324, align 8
%stackaddr$makeclosure96325 = alloca %struct.ScmObj*, align 8
%fptrToInt96326 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69363 to i64
%ae69363 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96326)
store volatile %struct.ScmObj* %ae69363, %struct.ScmObj** %stackaddr$makeclosure96325, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69363, %struct.ScmObj* %x48150, i64 0)
%ae69364 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93601$ae693630 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96327 = alloca %struct.ScmObj*, align 8
%argslist93601$ae693631 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93601$ae693630)
store volatile %struct.ScmObj* %argslist93601$ae693631, %struct.ScmObj** %stackaddr$prim96327, align 8
%stackaddr$prim96328 = alloca %struct.ScmObj*, align 8
%argslist93601$ae693632 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69364, %struct.ScmObj* %argslist93601$ae693631)
store volatile %struct.ScmObj* %argslist93601$ae693632, %struct.ScmObj** %stackaddr$prim96328, align 8
%clofunc96329 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69363)
musttail call tailcc void %clofunc96329(%struct.ScmObj* %ae69363, %struct.ScmObj* %argslist93601$ae693632)
ret void
falsebranch$cmp96320:
%stackaddr$makeclosure96330 = alloca %struct.ScmObj*, align 8
%fptrToInt96331 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69601 to i64
%ae69601 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96331)
store volatile %struct.ScmObj* %ae69601, %struct.ScmObj** %stackaddr$makeclosure96330, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69601, %struct.ScmObj* %x48150, i64 0)
%ae69602 = call %struct.ScmObj* @const_init_int(i64 0)
%ae69603 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93623$ae696010 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96332 = alloca %struct.ScmObj*, align 8
%argslist93623$ae696011 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69603, %struct.ScmObj* %argslist93623$ae696010)
store volatile %struct.ScmObj* %argslist93623$ae696011, %struct.ScmObj** %stackaddr$prim96332, align 8
%stackaddr$prim96333 = alloca %struct.ScmObj*, align 8
%argslist93623$ae696012 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69602, %struct.ScmObj* %argslist93623$ae696011)
store volatile %struct.ScmObj* %argslist93623$ae696012, %struct.ScmObj** %stackaddr$prim96333, align 8
%clofunc96334 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69601)
musttail call tailcc void %clofunc96334(%struct.ScmObj* %ae69601, %struct.ScmObj* %argslist93623$ae696012)
ret void
}

define tailcc void @proc_clo$ae69363(%struct.ScmObj* %env$ae69363,%struct.ScmObj* %current_45args93580) {
%stackaddr$env-ref96335 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69363, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96335
%stackaddr$prim96336 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93580)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96336, align 8
%stackaddr$prim96337 = alloca %struct.ScmObj*, align 8
%current_45args93581 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93580)
store volatile %struct.ScmObj* %current_45args93581, %struct.ScmObj** %stackaddr$prim96337, align 8
%stackaddr$prim96338 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93581)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96338, align 8
%ae69369 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96339 = call i64 @is_truthy_value(%struct.ScmObj* %ae69369)
%cmp$cmp96339 = icmp eq i64 %truthy$cmp96339, 1
br i1 %cmp$cmp96339, label %truebranch$cmp96339, label %falsebranch$cmp96339
truebranch$cmp96339:
%ae69371 = call %struct.ScmObj* @const_init_int(i64 0)
%ae69372 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96340 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69371, %struct.ScmObj* %ae69372)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96340, align 8
%stackaddr$makeclosure96341 = alloca %struct.ScmObj*, align 8
%fptrToInt96342 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69373 to i64
%ae69373 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96342)
store volatile %struct.ScmObj* %ae69373, %struct.ScmObj** %stackaddr$makeclosure96341, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69373, %struct.ScmObj* %x48150, i64 0)
%ae69374 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93591$ae693730 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96343 = alloca %struct.ScmObj*, align 8
%argslist93591$ae693731 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93591$ae693730)
store volatile %struct.ScmObj* %argslist93591$ae693731, %struct.ScmObj** %stackaddr$prim96343, align 8
%stackaddr$prim96344 = alloca %struct.ScmObj*, align 8
%argslist93591$ae693732 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69374, %struct.ScmObj* %argslist93591$ae693731)
store volatile %struct.ScmObj* %argslist93591$ae693732, %struct.ScmObj** %stackaddr$prim96344, align 8
%clofunc96345 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69373)
musttail call tailcc void %clofunc96345(%struct.ScmObj* %ae69373, %struct.ScmObj* %argslist93591$ae693732)
ret void
falsebranch$cmp96339:
%stackaddr$makeclosure96346 = alloca %struct.ScmObj*, align 8
%fptrToInt96347 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69432 to i64
%ae69432 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96347)
store volatile %struct.ScmObj* %ae69432, %struct.ScmObj** %stackaddr$makeclosure96346, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69432, %struct.ScmObj* %x48150, i64 0)
%ae69433 = call %struct.ScmObj* @const_init_int(i64 0)
%ae69434 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93600$ae694320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96348 = alloca %struct.ScmObj*, align 8
%argslist93600$ae694321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69434, %struct.ScmObj* %argslist93600$ae694320)
store volatile %struct.ScmObj* %argslist93600$ae694321, %struct.ScmObj** %stackaddr$prim96348, align 8
%stackaddr$prim96349 = alloca %struct.ScmObj*, align 8
%argslist93600$ae694322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69433, %struct.ScmObj* %argslist93600$ae694321)
store volatile %struct.ScmObj* %argslist93600$ae694322, %struct.ScmObj** %stackaddr$prim96349, align 8
%clofunc96350 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69432)
musttail call tailcc void %clofunc96350(%struct.ScmObj* %ae69432, %struct.ScmObj* %argslist93600$ae694322)
ret void
}

define tailcc void @proc_clo$ae69373(%struct.ScmObj* %env$ae69373,%struct.ScmObj* %current_45args93583) {
%stackaddr$env-ref96351 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69373, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96351
%stackaddr$prim96352 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93583)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96352, align 8
%stackaddr$prim96353 = alloca %struct.ScmObj*, align 8
%current_45args93584 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93583)
store volatile %struct.ScmObj* %current_45args93584, %struct.ScmObj** %stackaddr$prim96353, align 8
%stackaddr$prim96354 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93584)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96354, align 8
%ae69380 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96355 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69380)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96355, align 8
%stackaddr$makeclosure96356 = alloca %struct.ScmObj*, align 8
%fptrToInt96357 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69381 to i64
%ae69381 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96357)
store volatile %struct.ScmObj* %ae69381, %struct.ScmObj** %stackaddr$makeclosure96356, align 8
%ae69382 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93590$ae693810 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96358 = alloca %struct.ScmObj*, align 8
%argslist93590$ae693811 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93590$ae693810)
store volatile %struct.ScmObj* %argslist93590$ae693811, %struct.ScmObj** %stackaddr$prim96358, align 8
%stackaddr$prim96359 = alloca %struct.ScmObj*, align 8
%argslist93590$ae693812 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69382, %struct.ScmObj* %argslist93590$ae693811)
store volatile %struct.ScmObj* %argslist93590$ae693812, %struct.ScmObj** %stackaddr$prim96359, align 8
%clofunc96360 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69381)
musttail call tailcc void %clofunc96360(%struct.ScmObj* %ae69381, %struct.ScmObj* %argslist93590$ae693812)
ret void
}

define tailcc void @proc_clo$ae69381(%struct.ScmObj* %env$ae69381,%struct.ScmObj* %current_45args93586) {
%stackaddr$prim96361 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93586)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96361, align 8
%stackaddr$prim96362 = alloca %struct.ScmObj*, align 8
%current_45args93587 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93586)
store volatile %struct.ScmObj* %current_45args93587, %struct.ScmObj** %stackaddr$prim96362, align 8
%stackaddr$prim96363 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93587)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96363, align 8
%stackaddr$prim96364 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96364, align 8
%argslist93589$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96365 = alloca %struct.ScmObj*, align 8
%argslist93589$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93589$k0)
store volatile %struct.ScmObj* %argslist93589$k1, %struct.ScmObj** %stackaddr$prim96365, align 8
%clofunc96366 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96366(%struct.ScmObj* %k, %struct.ScmObj* %argslist93589$k1)
ret void
}

define tailcc void @proc_clo$ae69432(%struct.ScmObj* %env$ae69432,%struct.ScmObj* %current_45args93592) {
%stackaddr$env-ref96367 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69432, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96367
%stackaddr$prim96368 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93592)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96368, align 8
%stackaddr$prim96369 = alloca %struct.ScmObj*, align 8
%current_45args93593 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93592)
store volatile %struct.ScmObj* %current_45args93593, %struct.ScmObj** %stackaddr$prim96369, align 8
%stackaddr$prim96370 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93593)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96370, align 8
%ae69442 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96371 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69442)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96371, align 8
%stackaddr$makeclosure96372 = alloca %struct.ScmObj*, align 8
%fptrToInt96373 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69443 to i64
%ae69443 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96373)
store volatile %struct.ScmObj* %ae69443, %struct.ScmObj** %stackaddr$makeclosure96372, align 8
%ae69444 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93599$ae694430 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96374 = alloca %struct.ScmObj*, align 8
%argslist93599$ae694431 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93599$ae694430)
store volatile %struct.ScmObj* %argslist93599$ae694431, %struct.ScmObj** %stackaddr$prim96374, align 8
%stackaddr$prim96375 = alloca %struct.ScmObj*, align 8
%argslist93599$ae694432 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69444, %struct.ScmObj* %argslist93599$ae694431)
store volatile %struct.ScmObj* %argslist93599$ae694432, %struct.ScmObj** %stackaddr$prim96375, align 8
%clofunc96376 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69443)
musttail call tailcc void %clofunc96376(%struct.ScmObj* %ae69443, %struct.ScmObj* %argslist93599$ae694432)
ret void
}

define tailcc void @proc_clo$ae69443(%struct.ScmObj* %env$ae69443,%struct.ScmObj* %current_45args93595) {
%stackaddr$prim96377 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93595)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96377, align 8
%stackaddr$prim96378 = alloca %struct.ScmObj*, align 8
%current_45args93596 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93595)
store volatile %struct.ScmObj* %current_45args93596, %struct.ScmObj** %stackaddr$prim96378, align 8
%stackaddr$prim96379 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93596)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96379, align 8
%stackaddr$prim96380 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96380, align 8
%argslist93598$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96381 = alloca %struct.ScmObj*, align 8
%argslist93598$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93598$k0)
store volatile %struct.ScmObj* %argslist93598$k1, %struct.ScmObj** %stackaddr$prim96381, align 8
%clofunc96382 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96382(%struct.ScmObj* %k, %struct.ScmObj* %argslist93598$k1)
ret void
}

define tailcc void @proc_clo$ae69601(%struct.ScmObj* %env$ae69601,%struct.ScmObj* %current_45args93602) {
%stackaddr$env-ref96383 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69601, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96383
%stackaddr$prim96384 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93602)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96384, align 8
%stackaddr$prim96385 = alloca %struct.ScmObj*, align 8
%current_45args93603 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93602)
store volatile %struct.ScmObj* %current_45args93603, %struct.ScmObj** %stackaddr$prim96385, align 8
%stackaddr$prim96386 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93603)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96386, align 8
%ae69610 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96387 = call i64 @is_truthy_value(%struct.ScmObj* %ae69610)
%cmp$cmp96387 = icmp eq i64 %truthy$cmp96387, 1
br i1 %cmp$cmp96387, label %truebranch$cmp96387, label %falsebranch$cmp96387
truebranch$cmp96387:
%ae69612 = call %struct.ScmObj* @const_init_int(i64 0)
%ae69613 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96388 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69612, %struct.ScmObj* %ae69613)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96388, align 8
%stackaddr$makeclosure96389 = alloca %struct.ScmObj*, align 8
%fptrToInt96390 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69614 to i64
%ae69614 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96390)
store volatile %struct.ScmObj* %ae69614, %struct.ScmObj** %stackaddr$makeclosure96389, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69614, %struct.ScmObj* %x48150, i64 0)
%ae69615 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93613$ae696140 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96391 = alloca %struct.ScmObj*, align 8
%argslist93613$ae696141 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93613$ae696140)
store volatile %struct.ScmObj* %argslist93613$ae696141, %struct.ScmObj** %stackaddr$prim96391, align 8
%stackaddr$prim96392 = alloca %struct.ScmObj*, align 8
%argslist93613$ae696142 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69615, %struct.ScmObj* %argslist93613$ae696141)
store volatile %struct.ScmObj* %argslist93613$ae696142, %struct.ScmObj** %stackaddr$prim96392, align 8
%clofunc96393 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69614)
musttail call tailcc void %clofunc96393(%struct.ScmObj* %ae69614, %struct.ScmObj* %argslist93613$ae696142)
ret void
falsebranch$cmp96387:
%stackaddr$makeclosure96394 = alloca %struct.ScmObj*, align 8
%fptrToInt96395 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69673 to i64
%ae69673 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96395)
store volatile %struct.ScmObj* %ae69673, %struct.ScmObj** %stackaddr$makeclosure96394, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69673, %struct.ScmObj* %x48150, i64 0)
%ae69674 = call %struct.ScmObj* @const_init_int(i64 0)
%ae69675 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93622$ae696730 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96396 = alloca %struct.ScmObj*, align 8
%argslist93622$ae696731 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69675, %struct.ScmObj* %argslist93622$ae696730)
store volatile %struct.ScmObj* %argslist93622$ae696731, %struct.ScmObj** %stackaddr$prim96396, align 8
%stackaddr$prim96397 = alloca %struct.ScmObj*, align 8
%argslist93622$ae696732 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69674, %struct.ScmObj* %argslist93622$ae696731)
store volatile %struct.ScmObj* %argslist93622$ae696732, %struct.ScmObj** %stackaddr$prim96397, align 8
%clofunc96398 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69673)
musttail call tailcc void %clofunc96398(%struct.ScmObj* %ae69673, %struct.ScmObj* %argslist93622$ae696732)
ret void
}

define tailcc void @proc_clo$ae69614(%struct.ScmObj* %env$ae69614,%struct.ScmObj* %current_45args93605) {
%stackaddr$env-ref96399 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69614, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96399
%stackaddr$prim96400 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93605)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96400, align 8
%stackaddr$prim96401 = alloca %struct.ScmObj*, align 8
%current_45args93606 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93605)
store volatile %struct.ScmObj* %current_45args93606, %struct.ScmObj** %stackaddr$prim96401, align 8
%stackaddr$prim96402 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93606)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96402, align 8
%ae69621 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96403 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69621)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96403, align 8
%stackaddr$makeclosure96404 = alloca %struct.ScmObj*, align 8
%fptrToInt96405 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69622 to i64
%ae69622 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96405)
store volatile %struct.ScmObj* %ae69622, %struct.ScmObj** %stackaddr$makeclosure96404, align 8
%ae69623 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93612$ae696220 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96406 = alloca %struct.ScmObj*, align 8
%argslist93612$ae696221 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93612$ae696220)
store volatile %struct.ScmObj* %argslist93612$ae696221, %struct.ScmObj** %stackaddr$prim96406, align 8
%stackaddr$prim96407 = alloca %struct.ScmObj*, align 8
%argslist93612$ae696222 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69623, %struct.ScmObj* %argslist93612$ae696221)
store volatile %struct.ScmObj* %argslist93612$ae696222, %struct.ScmObj** %stackaddr$prim96407, align 8
%clofunc96408 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69622)
musttail call tailcc void %clofunc96408(%struct.ScmObj* %ae69622, %struct.ScmObj* %argslist93612$ae696222)
ret void
}

define tailcc void @proc_clo$ae69622(%struct.ScmObj* %env$ae69622,%struct.ScmObj* %current_45args93608) {
%stackaddr$prim96409 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93608)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96409, align 8
%stackaddr$prim96410 = alloca %struct.ScmObj*, align 8
%current_45args93609 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93608)
store volatile %struct.ScmObj* %current_45args93609, %struct.ScmObj** %stackaddr$prim96410, align 8
%stackaddr$prim96411 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93609)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96411, align 8
%stackaddr$prim96412 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96412, align 8
%argslist93611$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96413 = alloca %struct.ScmObj*, align 8
%argslist93611$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93611$k0)
store volatile %struct.ScmObj* %argslist93611$k1, %struct.ScmObj** %stackaddr$prim96413, align 8
%clofunc96414 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96414(%struct.ScmObj* %k, %struct.ScmObj* %argslist93611$k1)
ret void
}

define tailcc void @proc_clo$ae69673(%struct.ScmObj* %env$ae69673,%struct.ScmObj* %current_45args93614) {
%stackaddr$env-ref96415 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69673, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96415
%stackaddr$prim96416 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93614)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96416, align 8
%stackaddr$prim96417 = alloca %struct.ScmObj*, align 8
%current_45args93615 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93614)
store volatile %struct.ScmObj* %current_45args93615, %struct.ScmObj** %stackaddr$prim96417, align 8
%stackaddr$prim96418 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93615)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96418, align 8
%ae69683 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96419 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69683)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96419, align 8
%stackaddr$makeclosure96420 = alloca %struct.ScmObj*, align 8
%fptrToInt96421 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69684 to i64
%ae69684 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96421)
store volatile %struct.ScmObj* %ae69684, %struct.ScmObj** %stackaddr$makeclosure96420, align 8
%ae69685 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93621$ae696840 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96422 = alloca %struct.ScmObj*, align 8
%argslist93621$ae696841 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93621$ae696840)
store volatile %struct.ScmObj* %argslist93621$ae696841, %struct.ScmObj** %stackaddr$prim96422, align 8
%stackaddr$prim96423 = alloca %struct.ScmObj*, align 8
%argslist93621$ae696842 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69685, %struct.ScmObj* %argslist93621$ae696841)
store volatile %struct.ScmObj* %argslist93621$ae696842, %struct.ScmObj** %stackaddr$prim96423, align 8
%clofunc96424 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69684)
musttail call tailcc void %clofunc96424(%struct.ScmObj* %ae69684, %struct.ScmObj* %argslist93621$ae696842)
ret void
}

define tailcc void @proc_clo$ae69684(%struct.ScmObj* %env$ae69684,%struct.ScmObj* %current_45args93617) {
%stackaddr$prim96425 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93617)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96425, align 8
%stackaddr$prim96426 = alloca %struct.ScmObj*, align 8
%current_45args93618 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93617)
store volatile %struct.ScmObj* %current_45args93618, %struct.ScmObj** %stackaddr$prim96426, align 8
%stackaddr$prim96427 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93618)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96427, align 8
%stackaddr$prim96428 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96428, align 8
%argslist93620$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96429 = alloca %struct.ScmObj*, align 8
%argslist93620$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93620$k0)
store volatile %struct.ScmObj* %argslist93620$k1, %struct.ScmObj** %stackaddr$prim96429, align 8
%clofunc96430 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96430(%struct.ScmObj* %k, %struct.ScmObj* %argslist93620$k1)
ret void
}

define tailcc void @proc_clo$ae69818(%struct.ScmObj* %env$ae69818,%struct.ScmObj* %current_45args93625) {
%stackaddr$env-ref96431 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69818, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96431
%stackaddr$prim96432 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93625)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim96432, align 8
%stackaddr$prim96433 = alloca %struct.ScmObj*, align 8
%current_45args93626 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93625)
store volatile %struct.ScmObj* %current_45args93626, %struct.ScmObj** %stackaddr$prim96433, align 8
%stackaddr$prim96434 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93626)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim96434, align 8
%ae69825 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96435 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69825)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim96435, align 8
%truthy$cmp96436 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp96436 = icmp eq i64 %truthy$cmp96436, 1
br i1 %cmp$cmp96436, label %truebranch$cmp96436, label %falsebranch$cmp96436
truebranch$cmp96436:
%ae69828 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96437 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69828)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim96437, align 8
%ae69830 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96438 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69830)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim96438, align 8
%stackaddr$prim96439 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim96439, align 8
%ae69834 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96440 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69834, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim96440, align 8
%stackaddr$makeclosure96441 = alloca %struct.ScmObj*, align 8
%fptrToInt96442 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69836 to i64
%ae69836 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96442)
store volatile %struct.ScmObj* %ae69836, %struct.ScmObj** %stackaddr$makeclosure96441, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69836, %struct.ScmObj* %x48150, i64 0)
%ae69837 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93649$ae698360 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96443 = alloca %struct.ScmObj*, align 8
%argslist93649$ae698361 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93649$ae698360)
store volatile %struct.ScmObj* %argslist93649$ae698361, %struct.ScmObj** %stackaddr$prim96443, align 8
%stackaddr$prim96444 = alloca %struct.ScmObj*, align 8
%argslist93649$ae698362 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69837, %struct.ScmObj* %argslist93649$ae698361)
store volatile %struct.ScmObj* %argslist93649$ae698362, %struct.ScmObj** %stackaddr$prim96444, align 8
%clofunc96445 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69836)
musttail call tailcc void %clofunc96445(%struct.ScmObj* %ae69836, %struct.ScmObj* %argslist93649$ae698362)
ret void
falsebranch$cmp96436:
%stackaddr$makeclosure96446 = alloca %struct.ScmObj*, align 8
%fptrToInt96447 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae70074 to i64
%ae70074 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96447)
store volatile %struct.ScmObj* %ae70074, %struct.ScmObj** %stackaddr$makeclosure96446, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae70074, %struct.ScmObj* %x48150, i64 0)
%ae70075 = call %struct.ScmObj* @const_init_int(i64 0)
%ae70076 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93671$ae700740 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96448 = alloca %struct.ScmObj*, align 8
%argslist93671$ae700741 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae70076, %struct.ScmObj* %argslist93671$ae700740)
store volatile %struct.ScmObj* %argslist93671$ae700741, %struct.ScmObj** %stackaddr$prim96448, align 8
%stackaddr$prim96449 = alloca %struct.ScmObj*, align 8
%argslist93671$ae700742 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae70075, %struct.ScmObj* %argslist93671$ae700741)
store volatile %struct.ScmObj* %argslist93671$ae700742, %struct.ScmObj** %stackaddr$prim96449, align 8
%clofunc96450 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae70074)
musttail call tailcc void %clofunc96450(%struct.ScmObj* %ae70074, %struct.ScmObj* %argslist93671$ae700742)
ret void
}

define tailcc void @proc_clo$ae69836(%struct.ScmObj* %env$ae69836,%struct.ScmObj* %current_45args93628) {
%stackaddr$env-ref96451 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69836, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96451
%stackaddr$prim96452 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93628)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96452, align 8
%stackaddr$prim96453 = alloca %struct.ScmObj*, align 8
%current_45args93629 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93628)
store volatile %struct.ScmObj* %current_45args93629, %struct.ScmObj** %stackaddr$prim96453, align 8
%stackaddr$prim96454 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93629)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96454, align 8
%ae69842 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96455 = call i64 @is_truthy_value(%struct.ScmObj* %ae69842)
%cmp$cmp96455 = icmp eq i64 %truthy$cmp96455, 1
br i1 %cmp$cmp96455, label %truebranch$cmp96455, label %falsebranch$cmp96455
truebranch$cmp96455:
%ae69844 = call %struct.ScmObj* @const_init_int(i64 0)
%ae69845 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96456 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69844, %struct.ScmObj* %ae69845)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96456, align 8
%stackaddr$makeclosure96457 = alloca %struct.ScmObj*, align 8
%fptrToInt96458 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69846 to i64
%ae69846 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96458)
store volatile %struct.ScmObj* %ae69846, %struct.ScmObj** %stackaddr$makeclosure96457, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69846, %struct.ScmObj* %x48150, i64 0)
%ae69847 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93639$ae698460 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96459 = alloca %struct.ScmObj*, align 8
%argslist93639$ae698461 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93639$ae698460)
store volatile %struct.ScmObj* %argslist93639$ae698461, %struct.ScmObj** %stackaddr$prim96459, align 8
%stackaddr$prim96460 = alloca %struct.ScmObj*, align 8
%argslist93639$ae698462 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69847, %struct.ScmObj* %argslist93639$ae698461)
store volatile %struct.ScmObj* %argslist93639$ae698462, %struct.ScmObj** %stackaddr$prim96460, align 8
%clofunc96461 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69846)
musttail call tailcc void %clofunc96461(%struct.ScmObj* %ae69846, %struct.ScmObj* %argslist93639$ae698462)
ret void
falsebranch$cmp96455:
%stackaddr$makeclosure96462 = alloca %struct.ScmObj*, align 8
%fptrToInt96463 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69905 to i64
%ae69905 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96463)
store volatile %struct.ScmObj* %ae69905, %struct.ScmObj** %stackaddr$makeclosure96462, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae69905, %struct.ScmObj* %x48150, i64 0)
%ae69906 = call %struct.ScmObj* @const_init_int(i64 0)
%ae69907 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93648$ae699050 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96464 = alloca %struct.ScmObj*, align 8
%argslist93648$ae699051 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69907, %struct.ScmObj* %argslist93648$ae699050)
store volatile %struct.ScmObj* %argslist93648$ae699051, %struct.ScmObj** %stackaddr$prim96464, align 8
%stackaddr$prim96465 = alloca %struct.ScmObj*, align 8
%argslist93648$ae699052 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69906, %struct.ScmObj* %argslist93648$ae699051)
store volatile %struct.ScmObj* %argslist93648$ae699052, %struct.ScmObj** %stackaddr$prim96465, align 8
%clofunc96466 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69905)
musttail call tailcc void %clofunc96466(%struct.ScmObj* %ae69905, %struct.ScmObj* %argslist93648$ae699052)
ret void
}

define tailcc void @proc_clo$ae69846(%struct.ScmObj* %env$ae69846,%struct.ScmObj* %current_45args93631) {
%stackaddr$env-ref96467 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69846, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96467
%stackaddr$prim96468 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93631)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96468, align 8
%stackaddr$prim96469 = alloca %struct.ScmObj*, align 8
%current_45args93632 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93631)
store volatile %struct.ScmObj* %current_45args93632, %struct.ScmObj** %stackaddr$prim96469, align 8
%stackaddr$prim96470 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93632)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96470, align 8
%ae69853 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96471 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69853)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96471, align 8
%stackaddr$makeclosure96472 = alloca %struct.ScmObj*, align 8
%fptrToInt96473 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69854 to i64
%ae69854 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96473)
store volatile %struct.ScmObj* %ae69854, %struct.ScmObj** %stackaddr$makeclosure96472, align 8
%ae69855 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93638$ae698540 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96474 = alloca %struct.ScmObj*, align 8
%argslist93638$ae698541 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93638$ae698540)
store volatile %struct.ScmObj* %argslist93638$ae698541, %struct.ScmObj** %stackaddr$prim96474, align 8
%stackaddr$prim96475 = alloca %struct.ScmObj*, align 8
%argslist93638$ae698542 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69855, %struct.ScmObj* %argslist93638$ae698541)
store volatile %struct.ScmObj* %argslist93638$ae698542, %struct.ScmObj** %stackaddr$prim96475, align 8
%clofunc96476 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69854)
musttail call tailcc void %clofunc96476(%struct.ScmObj* %ae69854, %struct.ScmObj* %argslist93638$ae698542)
ret void
}

define tailcc void @proc_clo$ae69854(%struct.ScmObj* %env$ae69854,%struct.ScmObj* %current_45args93634) {
%stackaddr$prim96477 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93634)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96477, align 8
%stackaddr$prim96478 = alloca %struct.ScmObj*, align 8
%current_45args93635 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93634)
store volatile %struct.ScmObj* %current_45args93635, %struct.ScmObj** %stackaddr$prim96478, align 8
%stackaddr$prim96479 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93635)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96479, align 8
%stackaddr$prim96480 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96480, align 8
%argslist93637$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96481 = alloca %struct.ScmObj*, align 8
%argslist93637$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93637$k0)
store volatile %struct.ScmObj* %argslist93637$k1, %struct.ScmObj** %stackaddr$prim96481, align 8
%clofunc96482 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96482(%struct.ScmObj* %k, %struct.ScmObj* %argslist93637$k1)
ret void
}

define tailcc void @proc_clo$ae69905(%struct.ScmObj* %env$ae69905,%struct.ScmObj* %current_45args93640) {
%stackaddr$env-ref96483 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae69905, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96483
%stackaddr$prim96484 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93640)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96484, align 8
%stackaddr$prim96485 = alloca %struct.ScmObj*, align 8
%current_45args93641 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93640)
store volatile %struct.ScmObj* %current_45args93641, %struct.ScmObj** %stackaddr$prim96485, align 8
%stackaddr$prim96486 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93641)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96486, align 8
%ae69915 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96487 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae69915)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96487, align 8
%stackaddr$makeclosure96488 = alloca %struct.ScmObj*, align 8
%fptrToInt96489 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae69916 to i64
%ae69916 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96489)
store volatile %struct.ScmObj* %ae69916, %struct.ScmObj** %stackaddr$makeclosure96488, align 8
%ae69917 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93647$ae699160 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96490 = alloca %struct.ScmObj*, align 8
%argslist93647$ae699161 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93647$ae699160)
store volatile %struct.ScmObj* %argslist93647$ae699161, %struct.ScmObj** %stackaddr$prim96490, align 8
%stackaddr$prim96491 = alloca %struct.ScmObj*, align 8
%argslist93647$ae699162 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae69917, %struct.ScmObj* %argslist93647$ae699161)
store volatile %struct.ScmObj* %argslist93647$ae699162, %struct.ScmObj** %stackaddr$prim96491, align 8
%clofunc96492 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae69916)
musttail call tailcc void %clofunc96492(%struct.ScmObj* %ae69916, %struct.ScmObj* %argslist93647$ae699162)
ret void
}

define tailcc void @proc_clo$ae69916(%struct.ScmObj* %env$ae69916,%struct.ScmObj* %current_45args93643) {
%stackaddr$prim96493 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93643)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96493, align 8
%stackaddr$prim96494 = alloca %struct.ScmObj*, align 8
%current_45args93644 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93643)
store volatile %struct.ScmObj* %current_45args93644, %struct.ScmObj** %stackaddr$prim96494, align 8
%stackaddr$prim96495 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93644)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96495, align 8
%stackaddr$prim96496 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96496, align 8
%argslist93646$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96497 = alloca %struct.ScmObj*, align 8
%argslist93646$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93646$k0)
store volatile %struct.ScmObj* %argslist93646$k1, %struct.ScmObj** %stackaddr$prim96497, align 8
%clofunc96498 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96498(%struct.ScmObj* %k, %struct.ScmObj* %argslist93646$k1)
ret void
}

define tailcc void @proc_clo$ae70074(%struct.ScmObj* %env$ae70074,%struct.ScmObj* %current_45args93650) {
%stackaddr$env-ref96499 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae70074, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96499
%stackaddr$prim96500 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93650)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96500, align 8
%stackaddr$prim96501 = alloca %struct.ScmObj*, align 8
%current_45args93651 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93650)
store volatile %struct.ScmObj* %current_45args93651, %struct.ScmObj** %stackaddr$prim96501, align 8
%stackaddr$prim96502 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93651)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96502, align 8
%ae70083 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96503 = call i64 @is_truthy_value(%struct.ScmObj* %ae70083)
%cmp$cmp96503 = icmp eq i64 %truthy$cmp96503, 1
br i1 %cmp$cmp96503, label %truebranch$cmp96503, label %falsebranch$cmp96503
truebranch$cmp96503:
%ae70085 = call %struct.ScmObj* @const_init_int(i64 0)
%ae70086 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96504 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae70085, %struct.ScmObj* %ae70086)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96504, align 8
%stackaddr$makeclosure96505 = alloca %struct.ScmObj*, align 8
%fptrToInt96506 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae70087 to i64
%ae70087 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96506)
store volatile %struct.ScmObj* %ae70087, %struct.ScmObj** %stackaddr$makeclosure96505, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae70087, %struct.ScmObj* %x48150, i64 0)
%ae70088 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93661$ae700870 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96507 = alloca %struct.ScmObj*, align 8
%argslist93661$ae700871 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93661$ae700870)
store volatile %struct.ScmObj* %argslist93661$ae700871, %struct.ScmObj** %stackaddr$prim96507, align 8
%stackaddr$prim96508 = alloca %struct.ScmObj*, align 8
%argslist93661$ae700872 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae70088, %struct.ScmObj* %argslist93661$ae700871)
store volatile %struct.ScmObj* %argslist93661$ae700872, %struct.ScmObj** %stackaddr$prim96508, align 8
%clofunc96509 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae70087)
musttail call tailcc void %clofunc96509(%struct.ScmObj* %ae70087, %struct.ScmObj* %argslist93661$ae700872)
ret void
falsebranch$cmp96503:
%stackaddr$makeclosure96510 = alloca %struct.ScmObj*, align 8
%fptrToInt96511 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae70146 to i64
%ae70146 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96511)
store volatile %struct.ScmObj* %ae70146, %struct.ScmObj** %stackaddr$makeclosure96510, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae70146, %struct.ScmObj* %x48150, i64 0)
%ae70147 = call %struct.ScmObj* @const_init_int(i64 0)
%ae70148 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93670$ae701460 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96512 = alloca %struct.ScmObj*, align 8
%argslist93670$ae701461 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae70148, %struct.ScmObj* %argslist93670$ae701460)
store volatile %struct.ScmObj* %argslist93670$ae701461, %struct.ScmObj** %stackaddr$prim96512, align 8
%stackaddr$prim96513 = alloca %struct.ScmObj*, align 8
%argslist93670$ae701462 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae70147, %struct.ScmObj* %argslist93670$ae701461)
store volatile %struct.ScmObj* %argslist93670$ae701462, %struct.ScmObj** %stackaddr$prim96513, align 8
%clofunc96514 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae70146)
musttail call tailcc void %clofunc96514(%struct.ScmObj* %ae70146, %struct.ScmObj* %argslist93670$ae701462)
ret void
}

define tailcc void @proc_clo$ae70087(%struct.ScmObj* %env$ae70087,%struct.ScmObj* %current_45args93653) {
%stackaddr$env-ref96515 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae70087, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96515
%stackaddr$prim96516 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93653)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96516, align 8
%stackaddr$prim96517 = alloca %struct.ScmObj*, align 8
%current_45args93654 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93653)
store volatile %struct.ScmObj* %current_45args93654, %struct.ScmObj** %stackaddr$prim96517, align 8
%stackaddr$prim96518 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93654)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96518, align 8
%ae70094 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96519 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae70094)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96519, align 8
%stackaddr$makeclosure96520 = alloca %struct.ScmObj*, align 8
%fptrToInt96521 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae70095 to i64
%ae70095 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96521)
store volatile %struct.ScmObj* %ae70095, %struct.ScmObj** %stackaddr$makeclosure96520, align 8
%ae70096 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93660$ae700950 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96522 = alloca %struct.ScmObj*, align 8
%argslist93660$ae700951 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93660$ae700950)
store volatile %struct.ScmObj* %argslist93660$ae700951, %struct.ScmObj** %stackaddr$prim96522, align 8
%stackaddr$prim96523 = alloca %struct.ScmObj*, align 8
%argslist93660$ae700952 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae70096, %struct.ScmObj* %argslist93660$ae700951)
store volatile %struct.ScmObj* %argslist93660$ae700952, %struct.ScmObj** %stackaddr$prim96523, align 8
%clofunc96524 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae70095)
musttail call tailcc void %clofunc96524(%struct.ScmObj* %ae70095, %struct.ScmObj* %argslist93660$ae700952)
ret void
}

define tailcc void @proc_clo$ae70095(%struct.ScmObj* %env$ae70095,%struct.ScmObj* %current_45args93656) {
%stackaddr$prim96525 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93656)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96525, align 8
%stackaddr$prim96526 = alloca %struct.ScmObj*, align 8
%current_45args93657 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93656)
store volatile %struct.ScmObj* %current_45args93657, %struct.ScmObj** %stackaddr$prim96526, align 8
%stackaddr$prim96527 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93657)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96527, align 8
%stackaddr$prim96528 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96528, align 8
%argslist93659$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96529 = alloca %struct.ScmObj*, align 8
%argslist93659$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93659$k0)
store volatile %struct.ScmObj* %argslist93659$k1, %struct.ScmObj** %stackaddr$prim96529, align 8
%clofunc96530 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96530(%struct.ScmObj* %k, %struct.ScmObj* %argslist93659$k1)
ret void
}

define tailcc void @proc_clo$ae70146(%struct.ScmObj* %env$ae70146,%struct.ScmObj* %current_45args93662) {
%stackaddr$env-ref96531 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae70146, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96531
%stackaddr$prim96532 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93662)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96532, align 8
%stackaddr$prim96533 = alloca %struct.ScmObj*, align 8
%current_45args93663 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93662)
store volatile %struct.ScmObj* %current_45args93663, %struct.ScmObj** %stackaddr$prim96533, align 8
%stackaddr$prim96534 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93663)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96534, align 8
%ae70156 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96535 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae70156)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96535, align 8
%stackaddr$makeclosure96536 = alloca %struct.ScmObj*, align 8
%fptrToInt96537 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae70157 to i64
%ae70157 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96537)
store volatile %struct.ScmObj* %ae70157, %struct.ScmObj** %stackaddr$makeclosure96536, align 8
%ae70158 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93669$ae701570 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96538 = alloca %struct.ScmObj*, align 8
%argslist93669$ae701571 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93669$ae701570)
store volatile %struct.ScmObj* %argslist93669$ae701571, %struct.ScmObj** %stackaddr$prim96538, align 8
%stackaddr$prim96539 = alloca %struct.ScmObj*, align 8
%argslist93669$ae701572 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae70158, %struct.ScmObj* %argslist93669$ae701571)
store volatile %struct.ScmObj* %argslist93669$ae701572, %struct.ScmObj** %stackaddr$prim96539, align 8
%clofunc96540 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae70157)
musttail call tailcc void %clofunc96540(%struct.ScmObj* %ae70157, %struct.ScmObj* %argslist93669$ae701572)
ret void
}

define tailcc void @proc_clo$ae70157(%struct.ScmObj* %env$ae70157,%struct.ScmObj* %current_45args93665) {
%stackaddr$prim96541 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93665)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96541, align 8
%stackaddr$prim96542 = alloca %struct.ScmObj*, align 8
%current_45args93666 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93665)
store volatile %struct.ScmObj* %current_45args93666, %struct.ScmObj** %stackaddr$prim96542, align 8
%stackaddr$prim96543 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93666)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96543, align 8
%stackaddr$prim96544 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96544, align 8
%argslist93668$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96545 = alloca %struct.ScmObj*, align 8
%argslist93668$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93668$k0)
store volatile %struct.ScmObj* %argslist93668$k1, %struct.ScmObj** %stackaddr$prim96545, align 8
%clofunc96546 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96546(%struct.ScmObj* %k, %struct.ScmObj* %argslist93668$k1)
ret void
}

define tailcc void @proc_clo$ae71417(%struct.ScmObj* %env$ae71417,%struct.ScmObj* %current_45args93674) {
%stackaddr$env-ref96547 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71417, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96547
%stackaddr$prim96548 = alloca %struct.ScmObj*, align 8
%_95k48330 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93674)
store volatile %struct.ScmObj* %_95k48330, %struct.ScmObj** %stackaddr$prim96548, align 8
%stackaddr$prim96549 = alloca %struct.ScmObj*, align 8
%current_45args93675 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93674)
store volatile %struct.ScmObj* %current_45args93675, %struct.ScmObj** %stackaddr$prim96549, align 8
%stackaddr$prim96550 = alloca %struct.ScmObj*, align 8
%t4802848154 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93675)
store volatile %struct.ScmObj* %t4802848154, %struct.ScmObj** %stackaddr$prim96550, align 8
%ae71423 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96551 = call i64 @is_truthy_value(%struct.ScmObj* %ae71423)
%cmp$cmp96551 = icmp eq i64 %truthy$cmp96551, 1
br i1 %cmp$cmp96551, label %truebranch$cmp96551, label %falsebranch$cmp96551
truebranch$cmp96551:
%stackaddr$prim96552 = alloca %struct.ScmObj*, align 8
%cpsprim48337 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim48337, %struct.ScmObj** %stackaddr$prim96552, align 8
%stackaddr$makeclosure96553 = alloca %struct.ScmObj*, align 8
%fptrToInt96554 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71424 to i64
%ae71424 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96554)
store volatile %struct.ScmObj* %ae71424, %struct.ScmObj** %stackaddr$makeclosure96553, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71424, %struct.ScmObj* %x48150, i64 0)
%ae71425 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93724$ae714240 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96555 = alloca %struct.ScmObj*, align 8
%argslist93724$ae714241 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48337, %struct.ScmObj* %argslist93724$ae714240)
store volatile %struct.ScmObj* %argslist93724$ae714241, %struct.ScmObj** %stackaddr$prim96555, align 8
%stackaddr$prim96556 = alloca %struct.ScmObj*, align 8
%argslist93724$ae714242 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71425, %struct.ScmObj* %argslist93724$ae714241)
store volatile %struct.ScmObj* %argslist93724$ae714242, %struct.ScmObj** %stackaddr$prim96556, align 8
%clofunc96557 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71424)
musttail call tailcc void %clofunc96557(%struct.ScmObj* %ae71424, %struct.ScmObj* %argslist93724$ae714242)
ret void
falsebranch$cmp96551:
%ae71889 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96558 = alloca %struct.ScmObj*, align 8
%anf_45bind48287 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71889)
store volatile %struct.ScmObj* %anf_45bind48287, %struct.ScmObj** %stackaddr$prim96558, align 8
%ae71891 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim96559 = alloca %struct.ScmObj*, align 8
%anf_45bind48288 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind48287, %struct.ScmObj* %ae71891)
store volatile %struct.ScmObj* %anf_45bind48288, %struct.ScmObj** %stackaddr$prim96559, align 8
%ae71893 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim96560 = alloca %struct.ScmObj*, align 8
%anf_45bind48289 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48288, %struct.ScmObj* %ae71893)
store volatile %struct.ScmObj* %anf_45bind48289, %struct.ScmObj** %stackaddr$prim96560, align 8
%ae71895 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96561 = alloca %struct.ScmObj*, align 8
%cpsprim48338 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71895, %struct.ScmObj* %anf_45bind48289)
store volatile %struct.ScmObj* %cpsprim48338, %struct.ScmObj** %stackaddr$prim96561, align 8
%stackaddr$makeclosure96562 = alloca %struct.ScmObj*, align 8
%fptrToInt96563 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71897 to i64
%ae71897 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96563)
store volatile %struct.ScmObj* %ae71897, %struct.ScmObj** %stackaddr$makeclosure96562, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71897, %struct.ScmObj* %x48150, i64 0)
%ae71898 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93772$ae718970 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96564 = alloca %struct.ScmObj*, align 8
%argslist93772$ae718971 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48338, %struct.ScmObj* %argslist93772$ae718970)
store volatile %struct.ScmObj* %argslist93772$ae718971, %struct.ScmObj** %stackaddr$prim96564, align 8
%stackaddr$prim96565 = alloca %struct.ScmObj*, align 8
%argslist93772$ae718972 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71898, %struct.ScmObj* %argslist93772$ae718971)
store volatile %struct.ScmObj* %argslist93772$ae718972, %struct.ScmObj** %stackaddr$prim96565, align 8
%clofunc96566 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71897)
musttail call tailcc void %clofunc96566(%struct.ScmObj* %ae71897, %struct.ScmObj* %argslist93772$ae718972)
ret void
}

define tailcc void @proc_clo$ae71424(%struct.ScmObj* %env$ae71424,%struct.ScmObj* %current_45args93677) {
%stackaddr$env-ref96567 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71424, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96567
%stackaddr$prim96568 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93677)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim96568, align 8
%stackaddr$prim96569 = alloca %struct.ScmObj*, align 8
%current_45args93678 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93677)
store volatile %struct.ScmObj* %current_45args93678, %struct.ScmObj** %stackaddr$prim96569, align 8
%stackaddr$prim96570 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93678)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim96570, align 8
%ae71431 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96571 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71431)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim96571, align 8
%truthy$cmp96572 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp96572 = icmp eq i64 %truthy$cmp96572, 1
br i1 %cmp$cmp96572, label %truebranch$cmp96572, label %falsebranch$cmp96572
truebranch$cmp96572:
%ae71434 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96573 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71434)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim96573, align 8
%ae71436 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96574 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71436)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim96574, align 8
%stackaddr$prim96575 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim96575, align 8
%ae71440 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96576 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71440, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim96576, align 8
%stackaddr$makeclosure96577 = alloca %struct.ScmObj*, align 8
%fptrToInt96578 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71442 to i64
%ae71442 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96578)
store volatile %struct.ScmObj* %ae71442, %struct.ScmObj** %stackaddr$makeclosure96577, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71442, %struct.ScmObj* %x48150, i64 0)
%ae71443 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93701$ae714420 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96579 = alloca %struct.ScmObj*, align 8
%argslist93701$ae714421 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93701$ae714420)
store volatile %struct.ScmObj* %argslist93701$ae714421, %struct.ScmObj** %stackaddr$prim96579, align 8
%stackaddr$prim96580 = alloca %struct.ScmObj*, align 8
%argslist93701$ae714422 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71443, %struct.ScmObj* %argslist93701$ae714421)
store volatile %struct.ScmObj* %argslist93701$ae714422, %struct.ScmObj** %stackaddr$prim96580, align 8
%clofunc96581 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71442)
musttail call tailcc void %clofunc96581(%struct.ScmObj* %ae71442, %struct.ScmObj* %argslist93701$ae714422)
ret void
falsebranch$cmp96572:
%stackaddr$makeclosure96582 = alloca %struct.ScmObj*, align 8
%fptrToInt96583 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71680 to i64
%ae71680 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96583)
store volatile %struct.ScmObj* %ae71680, %struct.ScmObj** %stackaddr$makeclosure96582, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71680, %struct.ScmObj* %x48150, i64 0)
%ae71681 = call %struct.ScmObj* @const_init_int(i64 0)
%ae71682 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93723$ae716800 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96584 = alloca %struct.ScmObj*, align 8
%argslist93723$ae716801 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71682, %struct.ScmObj* %argslist93723$ae716800)
store volatile %struct.ScmObj* %argslist93723$ae716801, %struct.ScmObj** %stackaddr$prim96584, align 8
%stackaddr$prim96585 = alloca %struct.ScmObj*, align 8
%argslist93723$ae716802 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71681, %struct.ScmObj* %argslist93723$ae716801)
store volatile %struct.ScmObj* %argslist93723$ae716802, %struct.ScmObj** %stackaddr$prim96585, align 8
%clofunc96586 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71680)
musttail call tailcc void %clofunc96586(%struct.ScmObj* %ae71680, %struct.ScmObj* %argslist93723$ae716802)
ret void
}

define tailcc void @proc_clo$ae71442(%struct.ScmObj* %env$ae71442,%struct.ScmObj* %current_45args93680) {
%stackaddr$env-ref96587 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71442, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96587
%stackaddr$prim96588 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93680)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96588, align 8
%stackaddr$prim96589 = alloca %struct.ScmObj*, align 8
%current_45args93681 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93680)
store volatile %struct.ScmObj* %current_45args93681, %struct.ScmObj** %stackaddr$prim96589, align 8
%stackaddr$prim96590 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93681)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96590, align 8
%ae71448 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96591 = call i64 @is_truthy_value(%struct.ScmObj* %ae71448)
%cmp$cmp96591 = icmp eq i64 %truthy$cmp96591, 1
br i1 %cmp$cmp96591, label %truebranch$cmp96591, label %falsebranch$cmp96591
truebranch$cmp96591:
%ae71450 = call %struct.ScmObj* @const_init_int(i64 0)
%ae71451 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96592 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71450, %struct.ScmObj* %ae71451)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96592, align 8
%stackaddr$makeclosure96593 = alloca %struct.ScmObj*, align 8
%fptrToInt96594 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71452 to i64
%ae71452 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96594)
store volatile %struct.ScmObj* %ae71452, %struct.ScmObj** %stackaddr$makeclosure96593, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71452, %struct.ScmObj* %x48150, i64 0)
%ae71453 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93691$ae714520 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96595 = alloca %struct.ScmObj*, align 8
%argslist93691$ae714521 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93691$ae714520)
store volatile %struct.ScmObj* %argslist93691$ae714521, %struct.ScmObj** %stackaddr$prim96595, align 8
%stackaddr$prim96596 = alloca %struct.ScmObj*, align 8
%argslist93691$ae714522 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71453, %struct.ScmObj* %argslist93691$ae714521)
store volatile %struct.ScmObj* %argslist93691$ae714522, %struct.ScmObj** %stackaddr$prim96596, align 8
%clofunc96597 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71452)
musttail call tailcc void %clofunc96597(%struct.ScmObj* %ae71452, %struct.ScmObj* %argslist93691$ae714522)
ret void
falsebranch$cmp96591:
%stackaddr$makeclosure96598 = alloca %struct.ScmObj*, align 8
%fptrToInt96599 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71511 to i64
%ae71511 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96599)
store volatile %struct.ScmObj* %ae71511, %struct.ScmObj** %stackaddr$makeclosure96598, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71511, %struct.ScmObj* %x48150, i64 0)
%ae71512 = call %struct.ScmObj* @const_init_int(i64 0)
%ae71513 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93700$ae715110 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96600 = alloca %struct.ScmObj*, align 8
%argslist93700$ae715111 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71513, %struct.ScmObj* %argslist93700$ae715110)
store volatile %struct.ScmObj* %argslist93700$ae715111, %struct.ScmObj** %stackaddr$prim96600, align 8
%stackaddr$prim96601 = alloca %struct.ScmObj*, align 8
%argslist93700$ae715112 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71512, %struct.ScmObj* %argslist93700$ae715111)
store volatile %struct.ScmObj* %argslist93700$ae715112, %struct.ScmObj** %stackaddr$prim96601, align 8
%clofunc96602 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71511)
musttail call tailcc void %clofunc96602(%struct.ScmObj* %ae71511, %struct.ScmObj* %argslist93700$ae715112)
ret void
}

define tailcc void @proc_clo$ae71452(%struct.ScmObj* %env$ae71452,%struct.ScmObj* %current_45args93683) {
%stackaddr$env-ref96603 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71452, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96603
%stackaddr$prim96604 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93683)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96604, align 8
%stackaddr$prim96605 = alloca %struct.ScmObj*, align 8
%current_45args93684 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93683)
store volatile %struct.ScmObj* %current_45args93684, %struct.ScmObj** %stackaddr$prim96605, align 8
%stackaddr$prim96606 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93684)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96606, align 8
%ae71459 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96607 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71459)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96607, align 8
%stackaddr$makeclosure96608 = alloca %struct.ScmObj*, align 8
%fptrToInt96609 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71460 to i64
%ae71460 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96609)
store volatile %struct.ScmObj* %ae71460, %struct.ScmObj** %stackaddr$makeclosure96608, align 8
%ae71461 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93690$ae714600 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96610 = alloca %struct.ScmObj*, align 8
%argslist93690$ae714601 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93690$ae714600)
store volatile %struct.ScmObj* %argslist93690$ae714601, %struct.ScmObj** %stackaddr$prim96610, align 8
%stackaddr$prim96611 = alloca %struct.ScmObj*, align 8
%argslist93690$ae714602 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71461, %struct.ScmObj* %argslist93690$ae714601)
store volatile %struct.ScmObj* %argslist93690$ae714602, %struct.ScmObj** %stackaddr$prim96611, align 8
%clofunc96612 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71460)
musttail call tailcc void %clofunc96612(%struct.ScmObj* %ae71460, %struct.ScmObj* %argslist93690$ae714602)
ret void
}

define tailcc void @proc_clo$ae71460(%struct.ScmObj* %env$ae71460,%struct.ScmObj* %current_45args93686) {
%stackaddr$prim96613 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93686)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96613, align 8
%stackaddr$prim96614 = alloca %struct.ScmObj*, align 8
%current_45args93687 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93686)
store volatile %struct.ScmObj* %current_45args93687, %struct.ScmObj** %stackaddr$prim96614, align 8
%stackaddr$prim96615 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93687)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96615, align 8
%stackaddr$prim96616 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96616, align 8
%argslist93689$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96617 = alloca %struct.ScmObj*, align 8
%argslist93689$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93689$k0)
store volatile %struct.ScmObj* %argslist93689$k1, %struct.ScmObj** %stackaddr$prim96617, align 8
%clofunc96618 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96618(%struct.ScmObj* %k, %struct.ScmObj* %argslist93689$k1)
ret void
}

define tailcc void @proc_clo$ae71511(%struct.ScmObj* %env$ae71511,%struct.ScmObj* %current_45args93692) {
%stackaddr$env-ref96619 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71511, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96619
%stackaddr$prim96620 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93692)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96620, align 8
%stackaddr$prim96621 = alloca %struct.ScmObj*, align 8
%current_45args93693 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93692)
store volatile %struct.ScmObj* %current_45args93693, %struct.ScmObj** %stackaddr$prim96621, align 8
%stackaddr$prim96622 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93693)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96622, align 8
%ae71521 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96623 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71521)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96623, align 8
%stackaddr$makeclosure96624 = alloca %struct.ScmObj*, align 8
%fptrToInt96625 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71522 to i64
%ae71522 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96625)
store volatile %struct.ScmObj* %ae71522, %struct.ScmObj** %stackaddr$makeclosure96624, align 8
%ae71523 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93699$ae715220 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96626 = alloca %struct.ScmObj*, align 8
%argslist93699$ae715221 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93699$ae715220)
store volatile %struct.ScmObj* %argslist93699$ae715221, %struct.ScmObj** %stackaddr$prim96626, align 8
%stackaddr$prim96627 = alloca %struct.ScmObj*, align 8
%argslist93699$ae715222 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71523, %struct.ScmObj* %argslist93699$ae715221)
store volatile %struct.ScmObj* %argslist93699$ae715222, %struct.ScmObj** %stackaddr$prim96627, align 8
%clofunc96628 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71522)
musttail call tailcc void %clofunc96628(%struct.ScmObj* %ae71522, %struct.ScmObj* %argslist93699$ae715222)
ret void
}

define tailcc void @proc_clo$ae71522(%struct.ScmObj* %env$ae71522,%struct.ScmObj* %current_45args93695) {
%stackaddr$prim96629 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93695)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96629, align 8
%stackaddr$prim96630 = alloca %struct.ScmObj*, align 8
%current_45args93696 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93695)
store volatile %struct.ScmObj* %current_45args93696, %struct.ScmObj** %stackaddr$prim96630, align 8
%stackaddr$prim96631 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93696)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96631, align 8
%stackaddr$prim96632 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96632, align 8
%argslist93698$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96633 = alloca %struct.ScmObj*, align 8
%argslist93698$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93698$k0)
store volatile %struct.ScmObj* %argslist93698$k1, %struct.ScmObj** %stackaddr$prim96633, align 8
%clofunc96634 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96634(%struct.ScmObj* %k, %struct.ScmObj* %argslist93698$k1)
ret void
}

define tailcc void @proc_clo$ae71680(%struct.ScmObj* %env$ae71680,%struct.ScmObj* %current_45args93702) {
%stackaddr$env-ref96635 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71680, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96635
%stackaddr$prim96636 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93702)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96636, align 8
%stackaddr$prim96637 = alloca %struct.ScmObj*, align 8
%current_45args93703 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93702)
store volatile %struct.ScmObj* %current_45args93703, %struct.ScmObj** %stackaddr$prim96637, align 8
%stackaddr$prim96638 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93703)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96638, align 8
%ae71689 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96639 = call i64 @is_truthy_value(%struct.ScmObj* %ae71689)
%cmp$cmp96639 = icmp eq i64 %truthy$cmp96639, 1
br i1 %cmp$cmp96639, label %truebranch$cmp96639, label %falsebranch$cmp96639
truebranch$cmp96639:
%ae71691 = call %struct.ScmObj* @const_init_int(i64 0)
%ae71692 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96640 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71691, %struct.ScmObj* %ae71692)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96640, align 8
%stackaddr$makeclosure96641 = alloca %struct.ScmObj*, align 8
%fptrToInt96642 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71693 to i64
%ae71693 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96642)
store volatile %struct.ScmObj* %ae71693, %struct.ScmObj** %stackaddr$makeclosure96641, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71693, %struct.ScmObj* %x48150, i64 0)
%ae71694 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93713$ae716930 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96643 = alloca %struct.ScmObj*, align 8
%argslist93713$ae716931 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93713$ae716930)
store volatile %struct.ScmObj* %argslist93713$ae716931, %struct.ScmObj** %stackaddr$prim96643, align 8
%stackaddr$prim96644 = alloca %struct.ScmObj*, align 8
%argslist93713$ae716932 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71694, %struct.ScmObj* %argslist93713$ae716931)
store volatile %struct.ScmObj* %argslist93713$ae716932, %struct.ScmObj** %stackaddr$prim96644, align 8
%clofunc96645 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71693)
musttail call tailcc void %clofunc96645(%struct.ScmObj* %ae71693, %struct.ScmObj* %argslist93713$ae716932)
ret void
falsebranch$cmp96639:
%stackaddr$makeclosure96646 = alloca %struct.ScmObj*, align 8
%fptrToInt96647 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71752 to i64
%ae71752 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96647)
store volatile %struct.ScmObj* %ae71752, %struct.ScmObj** %stackaddr$makeclosure96646, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71752, %struct.ScmObj* %x48150, i64 0)
%ae71753 = call %struct.ScmObj* @const_init_int(i64 0)
%ae71754 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93722$ae717520 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96648 = alloca %struct.ScmObj*, align 8
%argslist93722$ae717521 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71754, %struct.ScmObj* %argslist93722$ae717520)
store volatile %struct.ScmObj* %argslist93722$ae717521, %struct.ScmObj** %stackaddr$prim96648, align 8
%stackaddr$prim96649 = alloca %struct.ScmObj*, align 8
%argslist93722$ae717522 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71753, %struct.ScmObj* %argslist93722$ae717521)
store volatile %struct.ScmObj* %argslist93722$ae717522, %struct.ScmObj** %stackaddr$prim96649, align 8
%clofunc96650 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71752)
musttail call tailcc void %clofunc96650(%struct.ScmObj* %ae71752, %struct.ScmObj* %argslist93722$ae717522)
ret void
}

define tailcc void @proc_clo$ae71693(%struct.ScmObj* %env$ae71693,%struct.ScmObj* %current_45args93705) {
%stackaddr$env-ref96651 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71693, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96651
%stackaddr$prim96652 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93705)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96652, align 8
%stackaddr$prim96653 = alloca %struct.ScmObj*, align 8
%current_45args93706 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93705)
store volatile %struct.ScmObj* %current_45args93706, %struct.ScmObj** %stackaddr$prim96653, align 8
%stackaddr$prim96654 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93706)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96654, align 8
%ae71700 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96655 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71700)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96655, align 8
%stackaddr$makeclosure96656 = alloca %struct.ScmObj*, align 8
%fptrToInt96657 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71701 to i64
%ae71701 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96657)
store volatile %struct.ScmObj* %ae71701, %struct.ScmObj** %stackaddr$makeclosure96656, align 8
%ae71702 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93712$ae717010 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96658 = alloca %struct.ScmObj*, align 8
%argslist93712$ae717011 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93712$ae717010)
store volatile %struct.ScmObj* %argslist93712$ae717011, %struct.ScmObj** %stackaddr$prim96658, align 8
%stackaddr$prim96659 = alloca %struct.ScmObj*, align 8
%argslist93712$ae717012 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71702, %struct.ScmObj* %argslist93712$ae717011)
store volatile %struct.ScmObj* %argslist93712$ae717012, %struct.ScmObj** %stackaddr$prim96659, align 8
%clofunc96660 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71701)
musttail call tailcc void %clofunc96660(%struct.ScmObj* %ae71701, %struct.ScmObj* %argslist93712$ae717012)
ret void
}

define tailcc void @proc_clo$ae71701(%struct.ScmObj* %env$ae71701,%struct.ScmObj* %current_45args93708) {
%stackaddr$prim96661 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93708)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96661, align 8
%stackaddr$prim96662 = alloca %struct.ScmObj*, align 8
%current_45args93709 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93708)
store volatile %struct.ScmObj* %current_45args93709, %struct.ScmObj** %stackaddr$prim96662, align 8
%stackaddr$prim96663 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93709)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96663, align 8
%stackaddr$prim96664 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96664, align 8
%argslist93711$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96665 = alloca %struct.ScmObj*, align 8
%argslist93711$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93711$k0)
store volatile %struct.ScmObj* %argslist93711$k1, %struct.ScmObj** %stackaddr$prim96665, align 8
%clofunc96666 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96666(%struct.ScmObj* %k, %struct.ScmObj* %argslist93711$k1)
ret void
}

define tailcc void @proc_clo$ae71752(%struct.ScmObj* %env$ae71752,%struct.ScmObj* %current_45args93714) {
%stackaddr$env-ref96667 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71752, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96667
%stackaddr$prim96668 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93714)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96668, align 8
%stackaddr$prim96669 = alloca %struct.ScmObj*, align 8
%current_45args93715 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93714)
store volatile %struct.ScmObj* %current_45args93715, %struct.ScmObj** %stackaddr$prim96669, align 8
%stackaddr$prim96670 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93715)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96670, align 8
%ae71762 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96671 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71762)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96671, align 8
%stackaddr$makeclosure96672 = alloca %struct.ScmObj*, align 8
%fptrToInt96673 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71763 to i64
%ae71763 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96673)
store volatile %struct.ScmObj* %ae71763, %struct.ScmObj** %stackaddr$makeclosure96672, align 8
%ae71764 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93721$ae717630 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96674 = alloca %struct.ScmObj*, align 8
%argslist93721$ae717631 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93721$ae717630)
store volatile %struct.ScmObj* %argslist93721$ae717631, %struct.ScmObj** %stackaddr$prim96674, align 8
%stackaddr$prim96675 = alloca %struct.ScmObj*, align 8
%argslist93721$ae717632 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71764, %struct.ScmObj* %argslist93721$ae717631)
store volatile %struct.ScmObj* %argslist93721$ae717632, %struct.ScmObj** %stackaddr$prim96675, align 8
%clofunc96676 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71763)
musttail call tailcc void %clofunc96676(%struct.ScmObj* %ae71763, %struct.ScmObj* %argslist93721$ae717632)
ret void
}

define tailcc void @proc_clo$ae71763(%struct.ScmObj* %env$ae71763,%struct.ScmObj* %current_45args93717) {
%stackaddr$prim96677 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93717)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96677, align 8
%stackaddr$prim96678 = alloca %struct.ScmObj*, align 8
%current_45args93718 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93717)
store volatile %struct.ScmObj* %current_45args93718, %struct.ScmObj** %stackaddr$prim96678, align 8
%stackaddr$prim96679 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93718)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96679, align 8
%stackaddr$prim96680 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96680, align 8
%argslist93720$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96681 = alloca %struct.ScmObj*, align 8
%argslist93720$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93720$k0)
store volatile %struct.ScmObj* %argslist93720$k1, %struct.ScmObj** %stackaddr$prim96681, align 8
%clofunc96682 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96682(%struct.ScmObj* %k, %struct.ScmObj* %argslist93720$k1)
ret void
}

define tailcc void @proc_clo$ae71897(%struct.ScmObj* %env$ae71897,%struct.ScmObj* %current_45args93725) {
%stackaddr$env-ref96683 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71897, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96683
%stackaddr$prim96684 = alloca %struct.ScmObj*, align 8
%_95k48331 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93725)
store volatile %struct.ScmObj* %_95k48331, %struct.ScmObj** %stackaddr$prim96684, align 8
%stackaddr$prim96685 = alloca %struct.ScmObj*, align 8
%current_45args93726 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93725)
store volatile %struct.ScmObj* %current_45args93726, %struct.ScmObj** %stackaddr$prim96685, align 8
%stackaddr$prim96686 = alloca %struct.ScmObj*, align 8
%t4802948155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93726)
store volatile %struct.ScmObj* %t4802948155, %struct.ScmObj** %stackaddr$prim96686, align 8
%ae71904 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96687 = alloca %struct.ScmObj*, align 8
%anf_45bind48290 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71904)
store volatile %struct.ScmObj* %anf_45bind48290, %struct.ScmObj** %stackaddr$prim96687, align 8
%truthy$cmp96688 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48290)
%cmp$cmp96688 = icmp eq i64 %truthy$cmp96688, 1
br i1 %cmp$cmp96688, label %truebranch$cmp96688, label %falsebranch$cmp96688
truebranch$cmp96688:
%ae71907 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96689 = alloca %struct.ScmObj*, align 8
%anf_45bind48291 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71907)
store volatile %struct.ScmObj* %anf_45bind48291, %struct.ScmObj** %stackaddr$prim96689, align 8
%ae71909 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96690 = alloca %struct.ScmObj*, align 8
%anf_45bind48292 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71909)
store volatile %struct.ScmObj* %anf_45bind48292, %struct.ScmObj** %stackaddr$prim96690, align 8
%stackaddr$prim96691 = alloca %struct.ScmObj*, align 8
%anf_45bind48293 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind48291, %struct.ScmObj* %anf_45bind48292)
store volatile %struct.ScmObj* %anf_45bind48293, %struct.ScmObj** %stackaddr$prim96691, align 8
%ae71913 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96692 = alloca %struct.ScmObj*, align 8
%cpsprim48336 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71913, %struct.ScmObj* %anf_45bind48293)
store volatile %struct.ScmObj* %cpsprim48336, %struct.ScmObj** %stackaddr$prim96692, align 8
%stackaddr$makeclosure96693 = alloca %struct.ScmObj*, align 8
%fptrToInt96694 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71915 to i64
%ae71915 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96694)
store volatile %struct.ScmObj* %ae71915, %struct.ScmObj** %stackaddr$makeclosure96693, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71915, %struct.ScmObj* %x48150, i64 0)
%ae71916 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93749$ae719150 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96695 = alloca %struct.ScmObj*, align 8
%argslist93749$ae719151 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48336, %struct.ScmObj* %argslist93749$ae719150)
store volatile %struct.ScmObj* %argslist93749$ae719151, %struct.ScmObj** %stackaddr$prim96695, align 8
%stackaddr$prim96696 = alloca %struct.ScmObj*, align 8
%argslist93749$ae719152 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71916, %struct.ScmObj* %argslist93749$ae719151)
store volatile %struct.ScmObj* %argslist93749$ae719152, %struct.ScmObj** %stackaddr$prim96696, align 8
%clofunc96697 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71915)
musttail call tailcc void %clofunc96697(%struct.ScmObj* %ae71915, %struct.ScmObj* %argslist93749$ae719152)
ret void
falsebranch$cmp96688:
%stackaddr$makeclosure96698 = alloca %struct.ScmObj*, align 8
%fptrToInt96699 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae72153 to i64
%ae72153 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96699)
store volatile %struct.ScmObj* %ae72153, %struct.ScmObj** %stackaddr$makeclosure96698, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae72153, %struct.ScmObj* %x48150, i64 0)
%ae72154 = call %struct.ScmObj* @const_init_int(i64 0)
%ae72155 = call %struct.ScmObj* @const_init_int(i64 7)
%argslist93771$ae721530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96700 = alloca %struct.ScmObj*, align 8
%argslist93771$ae721531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae72155, %struct.ScmObj* %argslist93771$ae721530)
store volatile %struct.ScmObj* %argslist93771$ae721531, %struct.ScmObj** %stackaddr$prim96700, align 8
%stackaddr$prim96701 = alloca %struct.ScmObj*, align 8
%argslist93771$ae721532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae72154, %struct.ScmObj* %argslist93771$ae721531)
store volatile %struct.ScmObj* %argslist93771$ae721532, %struct.ScmObj** %stackaddr$prim96701, align 8
%clofunc96702 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae72153)
musttail call tailcc void %clofunc96702(%struct.ScmObj* %ae72153, %struct.ScmObj* %argslist93771$ae721532)
ret void
}

define tailcc void @proc_clo$ae71915(%struct.ScmObj* %env$ae71915,%struct.ScmObj* %current_45args93728) {
%stackaddr$env-ref96703 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71915, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96703
%stackaddr$prim96704 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93728)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96704, align 8
%stackaddr$prim96705 = alloca %struct.ScmObj*, align 8
%current_45args93729 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93728)
store volatile %struct.ScmObj* %current_45args93729, %struct.ScmObj** %stackaddr$prim96705, align 8
%stackaddr$prim96706 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93729)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96706, align 8
%ae71921 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96707 = call i64 @is_truthy_value(%struct.ScmObj* %ae71921)
%cmp$cmp96707 = icmp eq i64 %truthy$cmp96707, 1
br i1 %cmp$cmp96707, label %truebranch$cmp96707, label %falsebranch$cmp96707
truebranch$cmp96707:
%ae71923 = call %struct.ScmObj* @const_init_int(i64 0)
%ae71924 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96708 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71923, %struct.ScmObj* %ae71924)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96708, align 8
%stackaddr$makeclosure96709 = alloca %struct.ScmObj*, align 8
%fptrToInt96710 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71925 to i64
%ae71925 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96710)
store volatile %struct.ScmObj* %ae71925, %struct.ScmObj** %stackaddr$makeclosure96709, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71925, %struct.ScmObj* %x48150, i64 0)
%ae71926 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93739$ae719250 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96711 = alloca %struct.ScmObj*, align 8
%argslist93739$ae719251 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93739$ae719250)
store volatile %struct.ScmObj* %argslist93739$ae719251, %struct.ScmObj** %stackaddr$prim96711, align 8
%stackaddr$prim96712 = alloca %struct.ScmObj*, align 8
%argslist93739$ae719252 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71926, %struct.ScmObj* %argslist93739$ae719251)
store volatile %struct.ScmObj* %argslist93739$ae719252, %struct.ScmObj** %stackaddr$prim96712, align 8
%clofunc96713 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71925)
musttail call tailcc void %clofunc96713(%struct.ScmObj* %ae71925, %struct.ScmObj* %argslist93739$ae719252)
ret void
falsebranch$cmp96707:
%stackaddr$makeclosure96714 = alloca %struct.ScmObj*, align 8
%fptrToInt96715 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71984 to i64
%ae71984 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96715)
store volatile %struct.ScmObj* %ae71984, %struct.ScmObj** %stackaddr$makeclosure96714, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae71984, %struct.ScmObj* %x48150, i64 0)
%ae71985 = call %struct.ScmObj* @const_init_int(i64 0)
%ae71986 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93748$ae719840 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96716 = alloca %struct.ScmObj*, align 8
%argslist93748$ae719841 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71986, %struct.ScmObj* %argslist93748$ae719840)
store volatile %struct.ScmObj* %argslist93748$ae719841, %struct.ScmObj** %stackaddr$prim96716, align 8
%stackaddr$prim96717 = alloca %struct.ScmObj*, align 8
%argslist93748$ae719842 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71985, %struct.ScmObj* %argslist93748$ae719841)
store volatile %struct.ScmObj* %argslist93748$ae719842, %struct.ScmObj** %stackaddr$prim96717, align 8
%clofunc96718 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71984)
musttail call tailcc void %clofunc96718(%struct.ScmObj* %ae71984, %struct.ScmObj* %argslist93748$ae719842)
ret void
}

define tailcc void @proc_clo$ae71925(%struct.ScmObj* %env$ae71925,%struct.ScmObj* %current_45args93731) {
%stackaddr$env-ref96719 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71925, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96719
%stackaddr$prim96720 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93731)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96720, align 8
%stackaddr$prim96721 = alloca %struct.ScmObj*, align 8
%current_45args93732 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93731)
store volatile %struct.ScmObj* %current_45args93732, %struct.ScmObj** %stackaddr$prim96721, align 8
%stackaddr$prim96722 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93732)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96722, align 8
%ae71932 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96723 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71932)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96723, align 8
%stackaddr$makeclosure96724 = alloca %struct.ScmObj*, align 8
%fptrToInt96725 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71933 to i64
%ae71933 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96725)
store volatile %struct.ScmObj* %ae71933, %struct.ScmObj** %stackaddr$makeclosure96724, align 8
%ae71934 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93738$ae719330 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96726 = alloca %struct.ScmObj*, align 8
%argslist93738$ae719331 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93738$ae719330)
store volatile %struct.ScmObj* %argslist93738$ae719331, %struct.ScmObj** %stackaddr$prim96726, align 8
%stackaddr$prim96727 = alloca %struct.ScmObj*, align 8
%argslist93738$ae719332 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71934, %struct.ScmObj* %argslist93738$ae719331)
store volatile %struct.ScmObj* %argslist93738$ae719332, %struct.ScmObj** %stackaddr$prim96727, align 8
%clofunc96728 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71933)
musttail call tailcc void %clofunc96728(%struct.ScmObj* %ae71933, %struct.ScmObj* %argslist93738$ae719332)
ret void
}

define tailcc void @proc_clo$ae71933(%struct.ScmObj* %env$ae71933,%struct.ScmObj* %current_45args93734) {
%stackaddr$prim96729 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93734)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96729, align 8
%stackaddr$prim96730 = alloca %struct.ScmObj*, align 8
%current_45args93735 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93734)
store volatile %struct.ScmObj* %current_45args93735, %struct.ScmObj** %stackaddr$prim96730, align 8
%stackaddr$prim96731 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93735)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96731, align 8
%stackaddr$prim96732 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96732, align 8
%argslist93737$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96733 = alloca %struct.ScmObj*, align 8
%argslist93737$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93737$k0)
store volatile %struct.ScmObj* %argslist93737$k1, %struct.ScmObj** %stackaddr$prim96733, align 8
%clofunc96734 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96734(%struct.ScmObj* %k, %struct.ScmObj* %argslist93737$k1)
ret void
}

define tailcc void @proc_clo$ae71984(%struct.ScmObj* %env$ae71984,%struct.ScmObj* %current_45args93740) {
%stackaddr$env-ref96735 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae71984, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96735
%stackaddr$prim96736 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93740)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96736, align 8
%stackaddr$prim96737 = alloca %struct.ScmObj*, align 8
%current_45args93741 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93740)
store volatile %struct.ScmObj* %current_45args93741, %struct.ScmObj** %stackaddr$prim96737, align 8
%stackaddr$prim96738 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93741)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96738, align 8
%ae71994 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96739 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae71994)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96739, align 8
%stackaddr$makeclosure96740 = alloca %struct.ScmObj*, align 8
%fptrToInt96741 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae71995 to i64
%ae71995 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96741)
store volatile %struct.ScmObj* %ae71995, %struct.ScmObj** %stackaddr$makeclosure96740, align 8
%ae71996 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93747$ae719950 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96742 = alloca %struct.ScmObj*, align 8
%argslist93747$ae719951 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93747$ae719950)
store volatile %struct.ScmObj* %argslist93747$ae719951, %struct.ScmObj** %stackaddr$prim96742, align 8
%stackaddr$prim96743 = alloca %struct.ScmObj*, align 8
%argslist93747$ae719952 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae71996, %struct.ScmObj* %argslist93747$ae719951)
store volatile %struct.ScmObj* %argslist93747$ae719952, %struct.ScmObj** %stackaddr$prim96743, align 8
%clofunc96744 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae71995)
musttail call tailcc void %clofunc96744(%struct.ScmObj* %ae71995, %struct.ScmObj* %argslist93747$ae719952)
ret void
}

define tailcc void @proc_clo$ae71995(%struct.ScmObj* %env$ae71995,%struct.ScmObj* %current_45args93743) {
%stackaddr$prim96745 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93743)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96745, align 8
%stackaddr$prim96746 = alloca %struct.ScmObj*, align 8
%current_45args93744 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93743)
store volatile %struct.ScmObj* %current_45args93744, %struct.ScmObj** %stackaddr$prim96746, align 8
%stackaddr$prim96747 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93744)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96747, align 8
%stackaddr$prim96748 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96748, align 8
%argslist93746$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96749 = alloca %struct.ScmObj*, align 8
%argslist93746$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93746$k0)
store volatile %struct.ScmObj* %argslist93746$k1, %struct.ScmObj** %stackaddr$prim96749, align 8
%clofunc96750 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96750(%struct.ScmObj* %k, %struct.ScmObj* %argslist93746$k1)
ret void
}

define tailcc void @proc_clo$ae72153(%struct.ScmObj* %env$ae72153,%struct.ScmObj* %current_45args93750) {
%stackaddr$env-ref96751 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae72153, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96751
%stackaddr$prim96752 = alloca %struct.ScmObj*, align 8
%_95k48332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93750)
store volatile %struct.ScmObj* %_95k48332, %struct.ScmObj** %stackaddr$prim96752, align 8
%stackaddr$prim96753 = alloca %struct.ScmObj*, align 8
%current_45args93751 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93750)
store volatile %struct.ScmObj* %current_45args93751, %struct.ScmObj** %stackaddr$prim96753, align 8
%stackaddr$prim96754 = alloca %struct.ScmObj*, align 8
%t4803048156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93751)
store volatile %struct.ScmObj* %t4803048156, %struct.ScmObj** %stackaddr$prim96754, align 8
%ae72162 = call %struct.ScmObj* @const_init_false()
%truthy$cmp96755 = call i64 @is_truthy_value(%struct.ScmObj* %ae72162)
%cmp$cmp96755 = icmp eq i64 %truthy$cmp96755, 1
br i1 %cmp$cmp96755, label %truebranch$cmp96755, label %falsebranch$cmp96755
truebranch$cmp96755:
%ae72164 = call %struct.ScmObj* @const_init_int(i64 0)
%ae72165 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96756 = alloca %struct.ScmObj*, align 8
%cpsprim48335 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x48150, %struct.ScmObj* %ae72164, %struct.ScmObj* %ae72165)
store volatile %struct.ScmObj* %cpsprim48335, %struct.ScmObj** %stackaddr$prim96756, align 8
%stackaddr$makeclosure96757 = alloca %struct.ScmObj*, align 8
%fptrToInt96758 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae72166 to i64
%ae72166 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96758)
store volatile %struct.ScmObj* %ae72166, %struct.ScmObj** %stackaddr$makeclosure96757, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae72166, %struct.ScmObj* %x48150, i64 0)
%ae72167 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93761$ae721660 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96759 = alloca %struct.ScmObj*, align 8
%argslist93761$ae721661 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48335, %struct.ScmObj* %argslist93761$ae721660)
store volatile %struct.ScmObj* %argslist93761$ae721661, %struct.ScmObj** %stackaddr$prim96759, align 8
%stackaddr$prim96760 = alloca %struct.ScmObj*, align 8
%argslist93761$ae721662 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae72167, %struct.ScmObj* %argslist93761$ae721661)
store volatile %struct.ScmObj* %argslist93761$ae721662, %struct.ScmObj** %stackaddr$prim96760, align 8
%clofunc96761 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae72166)
musttail call tailcc void %clofunc96761(%struct.ScmObj* %ae72166, %struct.ScmObj* %argslist93761$ae721662)
ret void
falsebranch$cmp96755:
%stackaddr$makeclosure96762 = alloca %struct.ScmObj*, align 8
%fptrToInt96763 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae72225 to i64
%ae72225 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt96763)
store volatile %struct.ScmObj* %ae72225, %struct.ScmObj** %stackaddr$makeclosure96762, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae72225, %struct.ScmObj* %x48150, i64 0)
%ae72226 = call %struct.ScmObj* @const_init_int(i64 0)
%ae72227 = call %struct.ScmObj* @const_init_int(i64 9)
%argslist93770$ae722250 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96764 = alloca %struct.ScmObj*, align 8
%argslist93770$ae722251 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae72227, %struct.ScmObj* %argslist93770$ae722250)
store volatile %struct.ScmObj* %argslist93770$ae722251, %struct.ScmObj** %stackaddr$prim96764, align 8
%stackaddr$prim96765 = alloca %struct.ScmObj*, align 8
%argslist93770$ae722252 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae72226, %struct.ScmObj* %argslist93770$ae722251)
store volatile %struct.ScmObj* %argslist93770$ae722252, %struct.ScmObj** %stackaddr$prim96765, align 8
%clofunc96766 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae72225)
musttail call tailcc void %clofunc96766(%struct.ScmObj* %ae72225, %struct.ScmObj* %argslist93770$ae722252)
ret void
}

define tailcc void @proc_clo$ae72166(%struct.ScmObj* %env$ae72166,%struct.ScmObj* %current_45args93753) {
%stackaddr$env-ref96767 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae72166, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96767
%stackaddr$prim96768 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93753)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96768, align 8
%stackaddr$prim96769 = alloca %struct.ScmObj*, align 8
%current_45args93754 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93753)
store volatile %struct.ScmObj* %current_45args93754, %struct.ScmObj** %stackaddr$prim96769, align 8
%stackaddr$prim96770 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93754)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96770, align 8
%ae72173 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96771 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae72173)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96771, align 8
%stackaddr$makeclosure96772 = alloca %struct.ScmObj*, align 8
%fptrToInt96773 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae72174 to i64
%ae72174 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96773)
store volatile %struct.ScmObj* %ae72174, %struct.ScmObj** %stackaddr$makeclosure96772, align 8
%ae72175 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93760$ae721740 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96774 = alloca %struct.ScmObj*, align 8
%argslist93760$ae721741 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93760$ae721740)
store volatile %struct.ScmObj* %argslist93760$ae721741, %struct.ScmObj** %stackaddr$prim96774, align 8
%stackaddr$prim96775 = alloca %struct.ScmObj*, align 8
%argslist93760$ae721742 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae72175, %struct.ScmObj* %argslist93760$ae721741)
store volatile %struct.ScmObj* %argslist93760$ae721742, %struct.ScmObj** %stackaddr$prim96775, align 8
%clofunc96776 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae72174)
musttail call tailcc void %clofunc96776(%struct.ScmObj* %ae72174, %struct.ScmObj* %argslist93760$ae721742)
ret void
}

define tailcc void @proc_clo$ae72174(%struct.ScmObj* %env$ae72174,%struct.ScmObj* %current_45args93756) {
%stackaddr$prim96777 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93756)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96777, align 8
%stackaddr$prim96778 = alloca %struct.ScmObj*, align 8
%current_45args93757 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93756)
store volatile %struct.ScmObj* %current_45args93757, %struct.ScmObj** %stackaddr$prim96778, align 8
%stackaddr$prim96779 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93757)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96779, align 8
%stackaddr$prim96780 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96780, align 8
%argslist93759$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96781 = alloca %struct.ScmObj*, align 8
%argslist93759$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93759$k0)
store volatile %struct.ScmObj* %argslist93759$k1, %struct.ScmObj** %stackaddr$prim96781, align 8
%clofunc96782 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96782(%struct.ScmObj* %k, %struct.ScmObj* %argslist93759$k1)
ret void
}

define tailcc void @proc_clo$ae72225(%struct.ScmObj* %env$ae72225,%struct.ScmObj* %current_45args93762) {
%stackaddr$env-ref96783 = alloca %struct.ScmObj*, align 8
%x48150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae72225, i64 0)
store %struct.ScmObj* %x48150, %struct.ScmObj** %stackaddr$env-ref96783
%stackaddr$prim96784 = alloca %struct.ScmObj*, align 8
%_95k48333 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93762)
store volatile %struct.ScmObj* %_95k48333, %struct.ScmObj** %stackaddr$prim96784, align 8
%stackaddr$prim96785 = alloca %struct.ScmObj*, align 8
%current_45args93763 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93762)
store volatile %struct.ScmObj* %current_45args93763, %struct.ScmObj** %stackaddr$prim96785, align 8
%stackaddr$prim96786 = alloca %struct.ScmObj*, align 8
%t4803148157 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93763)
store volatile %struct.ScmObj* %t4803148157, %struct.ScmObj** %stackaddr$prim96786, align 8
%ae72235 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96787 = alloca %struct.ScmObj*, align 8
%cpsprim48334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x48150, %struct.ScmObj* %ae72235)
store volatile %struct.ScmObj* %cpsprim48334, %struct.ScmObj** %stackaddr$prim96787, align 8
%stackaddr$makeclosure96788 = alloca %struct.ScmObj*, align 8
%fptrToInt96789 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae72236 to i64
%ae72236 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96789)
store volatile %struct.ScmObj* %ae72236, %struct.ScmObj** %stackaddr$makeclosure96788, align 8
%ae72237 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93769$ae722360 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96790 = alloca %struct.ScmObj*, align 8
%argslist93769$ae722361 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48334, %struct.ScmObj* %argslist93769$ae722360)
store volatile %struct.ScmObj* %argslist93769$ae722361, %struct.ScmObj** %stackaddr$prim96790, align 8
%stackaddr$prim96791 = alloca %struct.ScmObj*, align 8
%argslist93769$ae722362 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae72237, %struct.ScmObj* %argslist93769$ae722361)
store volatile %struct.ScmObj* %argslist93769$ae722362, %struct.ScmObj** %stackaddr$prim96791, align 8
%clofunc96792 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae72236)
musttail call tailcc void %clofunc96792(%struct.ScmObj* %ae72236, %struct.ScmObj* %argslist93769$ae722362)
ret void
}

define tailcc void @proc_clo$ae72236(%struct.ScmObj* %env$ae72236,%struct.ScmObj* %current_45args93765) {
%stackaddr$prim96793 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93765)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim96793, align 8
%stackaddr$prim96794 = alloca %struct.ScmObj*, align 8
%current_45args93766 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93765)
store volatile %struct.ScmObj* %current_45args93766, %struct.ScmObj** %stackaddr$prim96794, align 8
%stackaddr$prim96795 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93766)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim96795, align 8
%stackaddr$prim96796 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim96796, align 8
%argslist93768$k0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96797 = alloca %struct.ScmObj*, align 8
%argslist93768$k1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %argslist93768$k0)
store volatile %struct.ScmObj* %argslist93768$k1, %struct.ScmObj** %stackaddr$prim96797, align 8
%clofunc96798 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc96798(%struct.ScmObj* %k, %struct.ScmObj* %argslist93768$k1)
ret void
}

define tailcc void @proc_clo$ae51825(%struct.ScmObj* %env$ae51825,%struct.ScmObj* %current_45args93778) {
%stackaddr$prim96799 = alloca %struct.ScmObj*, align 8
%k48345 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93778)
store volatile %struct.ScmObj* %k48345, %struct.ScmObj** %stackaddr$prim96799, align 8
%stackaddr$prim96800 = alloca %struct.ScmObj*, align 8
%current_45args93779 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93778)
store volatile %struct.ScmObj* %current_45args93779, %struct.ScmObj** %stackaddr$prim96800, align 8
%stackaddr$prim96801 = alloca %struct.ScmObj*, align 8
%x48090 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93779)
store volatile %struct.ScmObj* %x48090, %struct.ScmObj** %stackaddr$prim96801, align 8
%stackaddr$prim96802 = alloca %struct.ScmObj*, align 8
%anf_45bind48266 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %x48090)
store volatile %struct.ScmObj* %anf_45bind48266, %struct.ScmObj** %stackaddr$prim96802, align 8
%stackaddr$prim96803 = alloca %struct.ScmObj*, align 8
%anf_45bind48267 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48266)
store volatile %struct.ScmObj* %anf_45bind48267, %struct.ScmObj** %stackaddr$prim96803, align 8
%stackaddr$prim96804 = alloca %struct.ScmObj*, align 8
%anf_45bind48268 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48267)
store volatile %struct.ScmObj* %anf_45bind48268, %struct.ScmObj** %stackaddr$prim96804, align 8
%stackaddr$prim96805 = alloca %struct.ScmObj*, align 8
%cpsprim48346 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind48268)
store volatile %struct.ScmObj* %cpsprim48346, %struct.ScmObj** %stackaddr$prim96805, align 8
%ae51831 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93781$k483450 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96806 = alloca %struct.ScmObj*, align 8
%argslist93781$k483451 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48346, %struct.ScmObj* %argslist93781$k483450)
store volatile %struct.ScmObj* %argslist93781$k483451, %struct.ScmObj** %stackaddr$prim96806, align 8
%stackaddr$prim96807 = alloca %struct.ScmObj*, align 8
%argslist93781$k483452 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51831, %struct.ScmObj* %argslist93781$k483451)
store volatile %struct.ScmObj* %argslist93781$k483452, %struct.ScmObj** %stackaddr$prim96807, align 8
%clofunc96808 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48345)
musttail call tailcc void %clofunc96808(%struct.ScmObj* %k48345, %struct.ScmObj* %argslist93781$k483452)
ret void
}

define tailcc void @proc_clo$ae51801(%struct.ScmObj* %env$ae51801,%struct.ScmObj* %current_45args93783) {
%stackaddr$prim96809 = alloca %struct.ScmObj*, align 8
%k48347 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93783)
store volatile %struct.ScmObj* %k48347, %struct.ScmObj** %stackaddr$prim96809, align 8
%stackaddr$prim96810 = alloca %struct.ScmObj*, align 8
%current_45args93784 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93783)
store volatile %struct.ScmObj* %current_45args93784, %struct.ScmObj** %stackaddr$prim96810, align 8
%stackaddr$prim96811 = alloca %struct.ScmObj*, align 8
%x48092 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93784)
store volatile %struct.ScmObj* %x48092, %struct.ScmObj** %stackaddr$prim96811, align 8
%stackaddr$prim96812 = alloca %struct.ScmObj*, align 8
%anf_45bind48264 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %x48092)
store volatile %struct.ScmObj* %anf_45bind48264, %struct.ScmObj** %stackaddr$prim96812, align 8
%stackaddr$prim96813 = alloca %struct.ScmObj*, align 8
%anf_45bind48265 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48264)
store volatile %struct.ScmObj* %anf_45bind48265, %struct.ScmObj** %stackaddr$prim96813, align 8
%stackaddr$prim96814 = alloca %struct.ScmObj*, align 8
%cpsprim48348 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind48265)
store volatile %struct.ScmObj* %cpsprim48348, %struct.ScmObj** %stackaddr$prim96814, align 8
%ae51806 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93786$k483470 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96815 = alloca %struct.ScmObj*, align 8
%argslist93786$k483471 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48348, %struct.ScmObj* %argslist93786$k483470)
store volatile %struct.ScmObj* %argslist93786$k483471, %struct.ScmObj** %stackaddr$prim96815, align 8
%stackaddr$prim96816 = alloca %struct.ScmObj*, align 8
%argslist93786$k483472 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51806, %struct.ScmObj* %argslist93786$k483471)
store volatile %struct.ScmObj* %argslist93786$k483472, %struct.ScmObj** %stackaddr$prim96816, align 8
%clofunc96817 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48347)
musttail call tailcc void %clofunc96817(%struct.ScmObj* %k48347, %struct.ScmObj* %argslist93786$k483472)
ret void
}

define tailcc void @proc_clo$ae51779(%struct.ScmObj* %env$ae51779,%struct.ScmObj* %current_45args93788) {
%stackaddr$prim96818 = alloca %struct.ScmObj*, align 8
%k48349 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93788)
store volatile %struct.ScmObj* %k48349, %struct.ScmObj** %stackaddr$prim96818, align 8
%stackaddr$prim96819 = alloca %struct.ScmObj*, align 8
%current_45args93789 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93788)
store volatile %struct.ScmObj* %current_45args93789, %struct.ScmObj** %stackaddr$prim96819, align 8
%stackaddr$prim96820 = alloca %struct.ScmObj*, align 8
%x48094 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93789)
store volatile %struct.ScmObj* %x48094, %struct.ScmObj** %stackaddr$prim96820, align 8
%stackaddr$prim96821 = alloca %struct.ScmObj*, align 8
%anf_45bind48263 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %x48094)
store volatile %struct.ScmObj* %anf_45bind48263, %struct.ScmObj** %stackaddr$prim96821, align 8
%stackaddr$prim96822 = alloca %struct.ScmObj*, align 8
%cpsprim48350 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind48263)
store volatile %struct.ScmObj* %cpsprim48350, %struct.ScmObj** %stackaddr$prim96822, align 8
%ae51783 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93791$k483490 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96823 = alloca %struct.ScmObj*, align 8
%argslist93791$k483491 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48350, %struct.ScmObj* %argslist93791$k483490)
store volatile %struct.ScmObj* %argslist93791$k483491, %struct.ScmObj** %stackaddr$prim96823, align 8
%stackaddr$prim96824 = alloca %struct.ScmObj*, align 8
%argslist93791$k483492 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51783, %struct.ScmObj* %argslist93791$k483491)
store volatile %struct.ScmObj* %argslist93791$k483492, %struct.ScmObj** %stackaddr$prim96824, align 8
%clofunc96825 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48349)
musttail call tailcc void %clofunc96825(%struct.ScmObj* %k48349, %struct.ScmObj* %argslist93791$k483492)
ret void
}

define tailcc void @proc_clo$ae51759(%struct.ScmObj* %env$ae51759,%struct.ScmObj* %current_45args93793) {
%stackaddr$prim96826 = alloca %struct.ScmObj*, align 8
%k48351 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93793)
store volatile %struct.ScmObj* %k48351, %struct.ScmObj** %stackaddr$prim96826, align 8
%stackaddr$prim96827 = alloca %struct.ScmObj*, align 8
%current_45args93794 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93793)
store volatile %struct.ScmObj* %current_45args93794, %struct.ScmObj** %stackaddr$prim96827, align 8
%stackaddr$prim96828 = alloca %struct.ScmObj*, align 8
%x48096 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93794)
store volatile %struct.ScmObj* %x48096, %struct.ScmObj** %stackaddr$prim96828, align 8
%stackaddr$prim96829 = alloca %struct.ScmObj*, align 8
%cpsprim48352 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %x48096)
store volatile %struct.ScmObj* %cpsprim48352, %struct.ScmObj** %stackaddr$prim96829, align 8
%ae51762 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93796$k483510 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96830 = alloca %struct.ScmObj*, align 8
%argslist93796$k483511 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48352, %struct.ScmObj* %argslist93796$k483510)
store volatile %struct.ScmObj* %argslist93796$k483511, %struct.ScmObj** %stackaddr$prim96830, align 8
%stackaddr$prim96831 = alloca %struct.ScmObj*, align 8
%argslist93796$k483512 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51762, %struct.ScmObj* %argslist93796$k483511)
store volatile %struct.ScmObj* %argslist93796$k483512, %struct.ScmObj** %stackaddr$prim96831, align 8
%clofunc96832 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48351)
musttail call tailcc void %clofunc96832(%struct.ScmObj* %k48351, %struct.ScmObj* %argslist93796$k483512)
ret void
}

define tailcc void @proc_clo$ae51661(%struct.ScmObj* %env$ae51661,%struct.ScmObj* %args4809848353) {
%stackaddr$env-ref96833 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51661, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref96833
%stackaddr$prim96834 = alloca %struct.ScmObj*, align 8
%k48354 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args4809848353)
store volatile %struct.ScmObj* %k48354, %struct.ScmObj** %stackaddr$prim96834, align 8
%stackaddr$prim96835 = alloca %struct.ScmObj*, align 8
%args48098 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args4809848353)
store volatile %struct.ScmObj* %args48098, %struct.ScmObj** %stackaddr$prim96835, align 8
%stackaddr$prim96836 = alloca %struct.ScmObj*, align 8
%anf_45bind48257 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %args48098)
store volatile %struct.ScmObj* %anf_45bind48257, %struct.ScmObj** %stackaddr$prim96836, align 8
%truthy$cmp96837 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48257)
%cmp$cmp96837 = icmp eq i64 %truthy$cmp96837, 1
br i1 %cmp$cmp96837, label %truebranch$cmp96837, label %falsebranch$cmp96837
truebranch$cmp96837:
%ae51667 = call %struct.ScmObj* @const_init_int(i64 0)
%ae51668 = call %struct.ScmObj* @const_init_int(i64 1)
%argslist93798$k483540 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96838 = alloca %struct.ScmObj*, align 8
%argslist93798$k483541 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51668, %struct.ScmObj* %argslist93798$k483540)
store volatile %struct.ScmObj* %argslist93798$k483541, %struct.ScmObj** %stackaddr$prim96838, align 8
%stackaddr$prim96839 = alloca %struct.ScmObj*, align 8
%argslist93798$k483542 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51667, %struct.ScmObj* %argslist93798$k483541)
store volatile %struct.ScmObj* %argslist93798$k483542, %struct.ScmObj** %stackaddr$prim96839, align 8
%clofunc96840 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48354)
musttail call tailcc void %clofunc96840(%struct.ScmObj* %k48354, %struct.ScmObj* %argslist93798$k483542)
ret void
falsebranch$cmp96837:
%stackaddr$prim96841 = alloca %struct.ScmObj*, align 8
%anf_45bind48258 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args48098)
store volatile %struct.ScmObj* %anf_45bind48258, %struct.ScmObj** %stackaddr$prim96841, align 8
%stackaddr$prim96842 = alloca %struct.ScmObj*, align 8
%anf_45bind48259 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %anf_45bind48258)
store volatile %struct.ScmObj* %anf_45bind48259, %struct.ScmObj** %stackaddr$prim96842, align 8
%truthy$cmp96843 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48259)
%cmp$cmp96843 = icmp eq i64 %truthy$cmp96843, 1
br i1 %cmp$cmp96843, label %truebranch$cmp96843, label %falsebranch$cmp96843
truebranch$cmp96843:
%stackaddr$prim96844 = alloca %struct.ScmObj*, align 8
%cpsprim48355 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args48098)
store volatile %struct.ScmObj* %cpsprim48355, %struct.ScmObj** %stackaddr$prim96844, align 8
%ae51680 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93799$k483540 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96845 = alloca %struct.ScmObj*, align 8
%argslist93799$k483541 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48355, %struct.ScmObj* %argslist93799$k483540)
store volatile %struct.ScmObj* %argslist93799$k483541, %struct.ScmObj** %stackaddr$prim96845, align 8
%stackaddr$prim96846 = alloca %struct.ScmObj*, align 8
%argslist93799$k483542 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51680, %struct.ScmObj* %argslist93799$k483541)
store volatile %struct.ScmObj* %argslist93799$k483542, %struct.ScmObj** %stackaddr$prim96846, align 8
%clofunc96847 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48354)
musttail call tailcc void %clofunc96847(%struct.ScmObj* %k48354, %struct.ScmObj* %argslist93799$k483542)
ret void
falsebranch$cmp96843:
%stackaddr$makeclosure96848 = alloca %struct.ScmObj*, align 8
%fptrToInt96849 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51685 to i64
%ae51685 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt96849)
store volatile %struct.ScmObj* %ae51685, %struct.ScmObj** %stackaddr$makeclosure96848, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51685, %struct.ScmObj* %k48354, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae51685, %struct.ScmObj* %args48098, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae51685, %struct.ScmObj* %_37foldl148037, i64 2)
%ae51686 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure96850 = alloca %struct.ScmObj*, align 8
%fptrToInt96851 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51687 to i64
%ae51687 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96851)
store volatile %struct.ScmObj* %ae51687, %struct.ScmObj** %stackaddr$makeclosure96850, align 8
%argslist93809$ae516850 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96852 = alloca %struct.ScmObj*, align 8
%argslist93809$ae516851 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51687, %struct.ScmObj* %argslist93809$ae516850)
store volatile %struct.ScmObj* %argslist93809$ae516851, %struct.ScmObj** %stackaddr$prim96852, align 8
%stackaddr$prim96853 = alloca %struct.ScmObj*, align 8
%argslist93809$ae516852 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51686, %struct.ScmObj* %argslist93809$ae516851)
store volatile %struct.ScmObj* %argslist93809$ae516852, %struct.ScmObj** %stackaddr$prim96853, align 8
%clofunc96854 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51685)
musttail call tailcc void %clofunc96854(%struct.ScmObj* %ae51685, %struct.ScmObj* %argslist93809$ae516852)
ret void
}

define tailcc void @proc_clo$ae51685(%struct.ScmObj* %env$ae51685,%struct.ScmObj* %current_45args93800) {
%stackaddr$env-ref96855 = alloca %struct.ScmObj*, align 8
%k48354 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51685, i64 0)
store %struct.ScmObj* %k48354, %struct.ScmObj** %stackaddr$env-ref96855
%stackaddr$env-ref96856 = alloca %struct.ScmObj*, align 8
%args48098 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51685, i64 1)
store %struct.ScmObj* %args48098, %struct.ScmObj** %stackaddr$env-ref96856
%stackaddr$env-ref96857 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51685, i64 2)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref96857
%stackaddr$prim96858 = alloca %struct.ScmObj*, align 8
%_95k48356 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93800)
store volatile %struct.ScmObj* %_95k48356, %struct.ScmObj** %stackaddr$prim96858, align 8
%stackaddr$prim96859 = alloca %struct.ScmObj*, align 8
%current_45args93801 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93800)
store volatile %struct.ScmObj* %current_45args93801, %struct.ScmObj** %stackaddr$prim96859, align 8
%stackaddr$prim96860 = alloca %struct.ScmObj*, align 8
%anf_45bind48260 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93801)
store volatile %struct.ScmObj* %anf_45bind48260, %struct.ScmObj** %stackaddr$prim96860, align 8
%stackaddr$prim96861 = alloca %struct.ScmObj*, align 8
%anf_45bind48261 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args48098)
store volatile %struct.ScmObj* %anf_45bind48261, %struct.ScmObj** %stackaddr$prim96861, align 8
%stackaddr$prim96862 = alloca %struct.ScmObj*, align 8
%anf_45bind48262 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args48098)
store volatile %struct.ScmObj* %anf_45bind48262, %struct.ScmObj** %stackaddr$prim96862, align 8
%argslist93803$_37foldl1480370 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96863 = alloca %struct.ScmObj*, align 8
%argslist93803$_37foldl1480371 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48262, %struct.ScmObj* %argslist93803$_37foldl1480370)
store volatile %struct.ScmObj* %argslist93803$_37foldl1480371, %struct.ScmObj** %stackaddr$prim96863, align 8
%stackaddr$prim96864 = alloca %struct.ScmObj*, align 8
%argslist93803$_37foldl1480372 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48261, %struct.ScmObj* %argslist93803$_37foldl1480371)
store volatile %struct.ScmObj* %argslist93803$_37foldl1480372, %struct.ScmObj** %stackaddr$prim96864, align 8
%stackaddr$prim96865 = alloca %struct.ScmObj*, align 8
%argslist93803$_37foldl1480373 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48260, %struct.ScmObj* %argslist93803$_37foldl1480372)
store volatile %struct.ScmObj* %argslist93803$_37foldl1480373, %struct.ScmObj** %stackaddr$prim96865, align 8
%stackaddr$prim96866 = alloca %struct.ScmObj*, align 8
%argslist93803$_37foldl1480374 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48354, %struct.ScmObj* %argslist93803$_37foldl1480373)
store volatile %struct.ScmObj* %argslist93803$_37foldl1480374, %struct.ScmObj** %stackaddr$prim96866, align 8
%clofunc96867 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldl148037)
musttail call tailcc void %clofunc96867(%struct.ScmObj* %_37foldl148037, %struct.ScmObj* %argslist93803$_37foldl1480374)
ret void
}

define tailcc void @proc_clo$ae51687(%struct.ScmObj* %env$ae51687,%struct.ScmObj* %current_45args93804) {
%stackaddr$prim96868 = alloca %struct.ScmObj*, align 8
%k48357 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93804)
store volatile %struct.ScmObj* %k48357, %struct.ScmObj** %stackaddr$prim96868, align 8
%stackaddr$prim96869 = alloca %struct.ScmObj*, align 8
%current_45args93805 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93804)
store volatile %struct.ScmObj* %current_45args93805, %struct.ScmObj** %stackaddr$prim96869, align 8
%stackaddr$prim96870 = alloca %struct.ScmObj*, align 8
%n48100 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93805)
store volatile %struct.ScmObj* %n48100, %struct.ScmObj** %stackaddr$prim96870, align 8
%stackaddr$prim96871 = alloca %struct.ScmObj*, align 8
%current_45args93806 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93805)
store volatile %struct.ScmObj* %current_45args93806, %struct.ScmObj** %stackaddr$prim96871, align 8
%stackaddr$prim96872 = alloca %struct.ScmObj*, align 8
%v48099 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93806)
store volatile %struct.ScmObj* %v48099, %struct.ScmObj** %stackaddr$prim96872, align 8
%stackaddr$prim96873 = alloca %struct.ScmObj*, align 8
%cpsprim48358 = call %struct.ScmObj* @prim__47(%struct.ScmObj* %v48099, %struct.ScmObj* %n48100)
store volatile %struct.ScmObj* %cpsprim48358, %struct.ScmObj** %stackaddr$prim96873, align 8
%ae51691 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93808$k483570 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96874 = alloca %struct.ScmObj*, align 8
%argslist93808$k483571 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48358, %struct.ScmObj* %argslist93808$k483570)
store volatile %struct.ScmObj* %argslist93808$k483571, %struct.ScmObj** %stackaddr$prim96874, align 8
%stackaddr$prim96875 = alloca %struct.ScmObj*, align 8
%argslist93808$k483572 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51691, %struct.ScmObj* %argslist93808$k483571)
store volatile %struct.ScmObj* %argslist93808$k483572, %struct.ScmObj** %stackaddr$prim96875, align 8
%clofunc96876 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48357)
musttail call tailcc void %clofunc96876(%struct.ScmObj* %k48357, %struct.ScmObj* %argslist93808$k483572)
ret void
}

define tailcc void @proc_clo$ae51257(%struct.ScmObj* %env$ae51257,%struct.ScmObj* %current_45args93811) {
%stackaddr$prim96877 = alloca %struct.ScmObj*, align 8
%k48359 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93811)
store volatile %struct.ScmObj* %k48359, %struct.ScmObj** %stackaddr$prim96877, align 8
%stackaddr$prim96878 = alloca %struct.ScmObj*, align 8
%current_45args93812 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93811)
store volatile %struct.ScmObj* %current_45args93812, %struct.ScmObj** %stackaddr$prim96878, align 8
%stackaddr$prim96879 = alloca %struct.ScmObj*, align 8
%v48103 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93812)
store volatile %struct.ScmObj* %v48103, %struct.ScmObj** %stackaddr$prim96879, align 8
%stackaddr$prim96880 = alloca %struct.ScmObj*, align 8
%current_45args93813 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93812)
store volatile %struct.ScmObj* %current_45args93813, %struct.ScmObj** %stackaddr$prim96880, align 8
%stackaddr$prim96881 = alloca %struct.ScmObj*, align 8
%lst48102 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93813)
store volatile %struct.ScmObj* %lst48102, %struct.ScmObj** %stackaddr$prim96881, align 8
%ae51258 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim96882 = alloca %struct.ScmObj*, align 8
%lst48104 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae51258, %struct.ScmObj* %lst48102)
store volatile %struct.ScmObj* %lst48104, %struct.ScmObj** %stackaddr$prim96882, align 8
%stackaddr$makeclosure96883 = alloca %struct.ScmObj*, align 8
%fptrToInt96884 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51260 to i64
%ae51260 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt96884)
store volatile %struct.ScmObj* %ae51260, %struct.ScmObj** %stackaddr$makeclosure96883, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51260, %struct.ScmObj* %k48359, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae51260, %struct.ScmObj* %v48103, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae51260, %struct.ScmObj* %lst48104, i64 2)
%ae51261 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure96885 = alloca %struct.ScmObj*, align 8
%fptrToInt96886 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51262 to i64
%ae51262 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96886)
store volatile %struct.ScmObj* %ae51262, %struct.ScmObj** %stackaddr$makeclosure96885, align 8
%argslist93835$ae512600 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96887 = alloca %struct.ScmObj*, align 8
%argslist93835$ae512601 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51262, %struct.ScmObj* %argslist93835$ae512600)
store volatile %struct.ScmObj* %argslist93835$ae512601, %struct.ScmObj** %stackaddr$prim96887, align 8
%stackaddr$prim96888 = alloca %struct.ScmObj*, align 8
%argslist93835$ae512602 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51261, %struct.ScmObj* %argslist93835$ae512601)
store volatile %struct.ScmObj* %argslist93835$ae512602, %struct.ScmObj** %stackaddr$prim96888, align 8
%clofunc96889 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51260)
musttail call tailcc void %clofunc96889(%struct.ScmObj* %ae51260, %struct.ScmObj* %argslist93835$ae512602)
ret void
}

define tailcc void @proc_clo$ae51260(%struct.ScmObj* %env$ae51260,%struct.ScmObj* %current_45args93815) {
%stackaddr$env-ref96890 = alloca %struct.ScmObj*, align 8
%k48359 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51260, i64 0)
store %struct.ScmObj* %k48359, %struct.ScmObj** %stackaddr$env-ref96890
%stackaddr$env-ref96891 = alloca %struct.ScmObj*, align 8
%v48103 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51260, i64 1)
store %struct.ScmObj* %v48103, %struct.ScmObj** %stackaddr$env-ref96891
%stackaddr$env-ref96892 = alloca %struct.ScmObj*, align 8
%lst48104 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51260, i64 2)
store %struct.ScmObj* %lst48104, %struct.ScmObj** %stackaddr$env-ref96892
%stackaddr$prim96893 = alloca %struct.ScmObj*, align 8
%_95k48360 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93815)
store volatile %struct.ScmObj* %_95k48360, %struct.ScmObj** %stackaddr$prim96893, align 8
%stackaddr$prim96894 = alloca %struct.ScmObj*, align 8
%current_45args93816 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93815)
store volatile %struct.ScmObj* %current_45args93816, %struct.ScmObj** %stackaddr$prim96894, align 8
%stackaddr$prim96895 = alloca %struct.ScmObj*, align 8
%anf_45bind48249 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93816)
store volatile %struct.ScmObj* %anf_45bind48249, %struct.ScmObj** %stackaddr$prim96895, align 8
%stackaddr$makeclosure96896 = alloca %struct.ScmObj*, align 8
%fptrToInt96897 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51276 to i64
%ae51276 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt96897)
store volatile %struct.ScmObj* %ae51276, %struct.ScmObj** %stackaddr$makeclosure96896, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51276, %struct.ScmObj* %k48359, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae51276, %struct.ScmObj* %v48103, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae51276, %struct.ScmObj* %lst48104, i64 2)
%stackaddr$makeclosure96898 = alloca %struct.ScmObj*, align 8
%fptrToInt96899 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51277 to i64
%ae51277 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt96899)
store volatile %struct.ScmObj* %ae51277, %struct.ScmObj** %stackaddr$makeclosure96898, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51277, %struct.ScmObj* %k48359, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae51277, %struct.ScmObj* %v48103, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae51277, %struct.ScmObj* %lst48104, i64 2)
%argslist93830$anf_45bind482490 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96900 = alloca %struct.ScmObj*, align 8
%argslist93830$anf_45bind482491 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51277, %struct.ScmObj* %argslist93830$anf_45bind482490)
store volatile %struct.ScmObj* %argslist93830$anf_45bind482491, %struct.ScmObj** %stackaddr$prim96900, align 8
%stackaddr$prim96901 = alloca %struct.ScmObj*, align 8
%argslist93830$anf_45bind482492 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51276, %struct.ScmObj* %argslist93830$anf_45bind482491)
store volatile %struct.ScmObj* %argslist93830$anf_45bind482492, %struct.ScmObj** %stackaddr$prim96901, align 8
%clofunc96902 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind48249)
musttail call tailcc void %clofunc96902(%struct.ScmObj* %anf_45bind48249, %struct.ScmObj* %argslist93830$anf_45bind482492)
ret void
}

define tailcc void @proc_clo$ae51276(%struct.ScmObj* %env$ae51276,%struct.ScmObj* %current_45args93818) {
%stackaddr$env-ref96903 = alloca %struct.ScmObj*, align 8
%k48359 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51276, i64 0)
store %struct.ScmObj* %k48359, %struct.ScmObj** %stackaddr$env-ref96903
%stackaddr$env-ref96904 = alloca %struct.ScmObj*, align 8
%v48103 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51276, i64 1)
store %struct.ScmObj* %v48103, %struct.ScmObj** %stackaddr$env-ref96904
%stackaddr$env-ref96905 = alloca %struct.ScmObj*, align 8
%lst48104 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51276, i64 2)
store %struct.ScmObj* %lst48104, %struct.ScmObj** %stackaddr$env-ref96905
%stackaddr$prim96906 = alloca %struct.ScmObj*, align 8
%_95k48361 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93818)
store volatile %struct.ScmObj* %_95k48361, %struct.ScmObj** %stackaddr$prim96906, align 8
%stackaddr$prim96907 = alloca %struct.ScmObj*, align 8
%current_45args93819 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93818)
store volatile %struct.ScmObj* %current_45args93819, %struct.ScmObj** %stackaddr$prim96907, align 8
%stackaddr$prim96908 = alloca %struct.ScmObj*, align 8
%cc48105 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93819)
store volatile %struct.ScmObj* %cc48105, %struct.ScmObj** %stackaddr$prim96908, align 8
%ae51385 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96909 = alloca %struct.ScmObj*, align 8
%anf_45bind48250 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48104, %struct.ScmObj* %ae51385)
store volatile %struct.ScmObj* %anf_45bind48250, %struct.ScmObj** %stackaddr$prim96909, align 8
%stackaddr$prim96910 = alloca %struct.ScmObj*, align 8
%anf_45bind48251 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %anf_45bind48250)
store volatile %struct.ScmObj* %anf_45bind48251, %struct.ScmObj** %stackaddr$prim96910, align 8
%truthy$cmp96911 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48251)
%cmp$cmp96911 = icmp eq i64 %truthy$cmp96911, 1
br i1 %cmp$cmp96911, label %truebranch$cmp96911, label %falsebranch$cmp96911
truebranch$cmp96911:
%ae51389 = call %struct.ScmObj* @const_init_int(i64 0)
%ae51390 = call %struct.ScmObj* @const_init_false()
%argslist93821$k483590 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96912 = alloca %struct.ScmObj*, align 8
%argslist93821$k483591 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51390, %struct.ScmObj* %argslist93821$k483590)
store volatile %struct.ScmObj* %argslist93821$k483591, %struct.ScmObj** %stackaddr$prim96912, align 8
%stackaddr$prim96913 = alloca %struct.ScmObj*, align 8
%argslist93821$k483592 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51389, %struct.ScmObj* %argslist93821$k483591)
store volatile %struct.ScmObj* %argslist93821$k483592, %struct.ScmObj** %stackaddr$prim96913, align 8
%clofunc96914 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48359)
musttail call tailcc void %clofunc96914(%struct.ScmObj* %k48359, %struct.ScmObj* %argslist93821$k483592)
ret void
falsebranch$cmp96911:
%ae51398 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96915 = alloca %struct.ScmObj*, align 8
%anf_45bind48252 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48104, %struct.ScmObj* %ae51398)
store volatile %struct.ScmObj* %anf_45bind48252, %struct.ScmObj** %stackaddr$prim96915, align 8
%stackaddr$prim96916 = alloca %struct.ScmObj*, align 8
%anf_45bind48253 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind48252)
store volatile %struct.ScmObj* %anf_45bind48253, %struct.ScmObj** %stackaddr$prim96916, align 8
%stackaddr$prim96917 = alloca %struct.ScmObj*, align 8
%anf_45bind48254 = call %struct.ScmObj* @prim_eqv_63(%struct.ScmObj* %anf_45bind48253, %struct.ScmObj* %v48103)
store volatile %struct.ScmObj* %anf_45bind48254, %struct.ScmObj** %stackaddr$prim96917, align 8
%truthy$cmp96918 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48254)
%cmp$cmp96918 = icmp eq i64 %truthy$cmp96918, 1
br i1 %cmp$cmp96918, label %truebranch$cmp96918, label %falsebranch$cmp96918
truebranch$cmp96918:
%ae51404 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96919 = alloca %struct.ScmObj*, align 8
%cpsprim48362 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48104, %struct.ScmObj* %ae51404)
store volatile %struct.ScmObj* %cpsprim48362, %struct.ScmObj** %stackaddr$prim96919, align 8
%ae51406 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93822$k483590 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96920 = alloca %struct.ScmObj*, align 8
%argslist93822$k483591 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48362, %struct.ScmObj* %argslist93822$k483590)
store volatile %struct.ScmObj* %argslist93822$k483591, %struct.ScmObj** %stackaddr$prim96920, align 8
%stackaddr$prim96921 = alloca %struct.ScmObj*, align 8
%argslist93822$k483592 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51406, %struct.ScmObj* %argslist93822$k483591)
store volatile %struct.ScmObj* %argslist93822$k483592, %struct.ScmObj** %stackaddr$prim96921, align 8
%clofunc96922 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48359)
musttail call tailcc void %clofunc96922(%struct.ScmObj* %k48359, %struct.ScmObj* %argslist93822$k483592)
ret void
falsebranch$cmp96918:
%ae51417 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96923 = alloca %struct.ScmObj*, align 8
%anf_45bind48255 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48104, %struct.ScmObj* %ae51417)
store volatile %struct.ScmObj* %anf_45bind48255, %struct.ScmObj** %stackaddr$prim96923, align 8
%stackaddr$prim96924 = alloca %struct.ScmObj*, align 8
%anf_45bind48256 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48255)
store volatile %struct.ScmObj* %anf_45bind48256, %struct.ScmObj** %stackaddr$prim96924, align 8
%ae51420 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96925 = alloca %struct.ScmObj*, align 8
%_95048107 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %lst48104, %struct.ScmObj* %ae51420, %struct.ScmObj* %anf_45bind48256)
store volatile %struct.ScmObj* %_95048107, %struct.ScmObj** %stackaddr$prim96925, align 8
%argslist93823$cc481050 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96926 = alloca %struct.ScmObj*, align 8
%argslist93823$cc481051 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc48105, %struct.ScmObj* %argslist93823$cc481050)
store volatile %struct.ScmObj* %argslist93823$cc481051, %struct.ScmObj** %stackaddr$prim96926, align 8
%stackaddr$prim96927 = alloca %struct.ScmObj*, align 8
%argslist93823$cc481052 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48359, %struct.ScmObj* %argslist93823$cc481051)
store volatile %struct.ScmObj* %argslist93823$cc481052, %struct.ScmObj** %stackaddr$prim96927, align 8
%clofunc96928 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc48105)
musttail call tailcc void %clofunc96928(%struct.ScmObj* %cc48105, %struct.ScmObj* %argslist93823$cc481052)
ret void
}

define tailcc void @proc_clo$ae51277(%struct.ScmObj* %env$ae51277,%struct.ScmObj* %current_45args93824) {
%stackaddr$env-ref96929 = alloca %struct.ScmObj*, align 8
%k48359 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51277, i64 0)
store %struct.ScmObj* %k48359, %struct.ScmObj** %stackaddr$env-ref96929
%stackaddr$env-ref96930 = alloca %struct.ScmObj*, align 8
%v48103 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51277, i64 1)
store %struct.ScmObj* %v48103, %struct.ScmObj** %stackaddr$env-ref96930
%stackaddr$env-ref96931 = alloca %struct.ScmObj*, align 8
%lst48104 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51277, i64 2)
store %struct.ScmObj* %lst48104, %struct.ScmObj** %stackaddr$env-ref96931
%stackaddr$prim96932 = alloca %struct.ScmObj*, align 8
%_95k48361 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93824)
store volatile %struct.ScmObj* %_95k48361, %struct.ScmObj** %stackaddr$prim96932, align 8
%stackaddr$prim96933 = alloca %struct.ScmObj*, align 8
%current_45args93825 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93824)
store volatile %struct.ScmObj* %current_45args93825, %struct.ScmObj** %stackaddr$prim96933, align 8
%stackaddr$prim96934 = alloca %struct.ScmObj*, align 8
%cc48105 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93825)
store volatile %struct.ScmObj* %cc48105, %struct.ScmObj** %stackaddr$prim96934, align 8
%ae51279 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96935 = alloca %struct.ScmObj*, align 8
%anf_45bind48250 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48104, %struct.ScmObj* %ae51279)
store volatile %struct.ScmObj* %anf_45bind48250, %struct.ScmObj** %stackaddr$prim96935, align 8
%stackaddr$prim96936 = alloca %struct.ScmObj*, align 8
%anf_45bind48251 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %anf_45bind48250)
store volatile %struct.ScmObj* %anf_45bind48251, %struct.ScmObj** %stackaddr$prim96936, align 8
%truthy$cmp96937 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48251)
%cmp$cmp96937 = icmp eq i64 %truthy$cmp96937, 1
br i1 %cmp$cmp96937, label %truebranch$cmp96937, label %falsebranch$cmp96937
truebranch$cmp96937:
%ae51283 = call %struct.ScmObj* @const_init_int(i64 0)
%ae51284 = call %struct.ScmObj* @const_init_false()
%argslist93827$k483590 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96938 = alloca %struct.ScmObj*, align 8
%argslist93827$k483591 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51284, %struct.ScmObj* %argslist93827$k483590)
store volatile %struct.ScmObj* %argslist93827$k483591, %struct.ScmObj** %stackaddr$prim96938, align 8
%stackaddr$prim96939 = alloca %struct.ScmObj*, align 8
%argslist93827$k483592 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51283, %struct.ScmObj* %argslist93827$k483591)
store volatile %struct.ScmObj* %argslist93827$k483592, %struct.ScmObj** %stackaddr$prim96939, align 8
%clofunc96940 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48359)
musttail call tailcc void %clofunc96940(%struct.ScmObj* %k48359, %struct.ScmObj* %argslist93827$k483592)
ret void
falsebranch$cmp96937:
%ae51292 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96941 = alloca %struct.ScmObj*, align 8
%anf_45bind48252 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48104, %struct.ScmObj* %ae51292)
store volatile %struct.ScmObj* %anf_45bind48252, %struct.ScmObj** %stackaddr$prim96941, align 8
%stackaddr$prim96942 = alloca %struct.ScmObj*, align 8
%anf_45bind48253 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind48252)
store volatile %struct.ScmObj* %anf_45bind48253, %struct.ScmObj** %stackaddr$prim96942, align 8
%stackaddr$prim96943 = alloca %struct.ScmObj*, align 8
%anf_45bind48254 = call %struct.ScmObj* @prim_eqv_63(%struct.ScmObj* %anf_45bind48253, %struct.ScmObj* %v48103)
store volatile %struct.ScmObj* %anf_45bind48254, %struct.ScmObj** %stackaddr$prim96943, align 8
%truthy$cmp96944 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48254)
%cmp$cmp96944 = icmp eq i64 %truthy$cmp96944, 1
br i1 %cmp$cmp96944, label %truebranch$cmp96944, label %falsebranch$cmp96944
truebranch$cmp96944:
%ae51298 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96945 = alloca %struct.ScmObj*, align 8
%cpsprim48362 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48104, %struct.ScmObj* %ae51298)
store volatile %struct.ScmObj* %cpsprim48362, %struct.ScmObj** %stackaddr$prim96945, align 8
%ae51300 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93828$k483590 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96946 = alloca %struct.ScmObj*, align 8
%argslist93828$k483591 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48362, %struct.ScmObj* %argslist93828$k483590)
store volatile %struct.ScmObj* %argslist93828$k483591, %struct.ScmObj** %stackaddr$prim96946, align 8
%stackaddr$prim96947 = alloca %struct.ScmObj*, align 8
%argslist93828$k483592 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51300, %struct.ScmObj* %argslist93828$k483591)
store volatile %struct.ScmObj* %argslist93828$k483592, %struct.ScmObj** %stackaddr$prim96947, align 8
%clofunc96948 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48359)
musttail call tailcc void %clofunc96948(%struct.ScmObj* %k48359, %struct.ScmObj* %argslist93828$k483592)
ret void
falsebranch$cmp96944:
%ae51311 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96949 = alloca %struct.ScmObj*, align 8
%anf_45bind48255 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48104, %struct.ScmObj* %ae51311)
store volatile %struct.ScmObj* %anf_45bind48255, %struct.ScmObj** %stackaddr$prim96949, align 8
%stackaddr$prim96950 = alloca %struct.ScmObj*, align 8
%anf_45bind48256 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48255)
store volatile %struct.ScmObj* %anf_45bind48256, %struct.ScmObj** %stackaddr$prim96950, align 8
%ae51314 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96951 = alloca %struct.ScmObj*, align 8
%_95048107 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %lst48104, %struct.ScmObj* %ae51314, %struct.ScmObj* %anf_45bind48256)
store volatile %struct.ScmObj* %_95048107, %struct.ScmObj** %stackaddr$prim96951, align 8
%argslist93829$cc481050 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96952 = alloca %struct.ScmObj*, align 8
%argslist93829$cc481051 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc48105, %struct.ScmObj* %argslist93829$cc481050)
store volatile %struct.ScmObj* %argslist93829$cc481051, %struct.ScmObj** %stackaddr$prim96952, align 8
%stackaddr$prim96953 = alloca %struct.ScmObj*, align 8
%argslist93829$cc481052 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48359, %struct.ScmObj* %argslist93829$cc481051)
store volatile %struct.ScmObj* %argslist93829$cc481052, %struct.ScmObj** %stackaddr$prim96953, align 8
%clofunc96954 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc48105)
musttail call tailcc void %clofunc96954(%struct.ScmObj* %cc48105, %struct.ScmObj* %argslist93829$cc481052)
ret void
}

define tailcc void @proc_clo$ae51262(%struct.ScmObj* %env$ae51262,%struct.ScmObj* %current_45args93831) {
%stackaddr$prim96955 = alloca %struct.ScmObj*, align 8
%k48363 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93831)
store volatile %struct.ScmObj* %k48363, %struct.ScmObj** %stackaddr$prim96955, align 8
%stackaddr$prim96956 = alloca %struct.ScmObj*, align 8
%current_45args93832 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93831)
store volatile %struct.ScmObj* %current_45args93832, %struct.ScmObj** %stackaddr$prim96956, align 8
%stackaddr$prim96957 = alloca %struct.ScmObj*, align 8
%u48106 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93832)
store volatile %struct.ScmObj* %u48106, %struct.ScmObj** %stackaddr$prim96957, align 8
%argslist93834$u481060 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96958 = alloca %struct.ScmObj*, align 8
%argslist93834$u481061 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %u48106, %struct.ScmObj* %argslist93834$u481060)
store volatile %struct.ScmObj* %argslist93834$u481061, %struct.ScmObj** %stackaddr$prim96958, align 8
%stackaddr$prim96959 = alloca %struct.ScmObj*, align 8
%argslist93834$u481062 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48363, %struct.ScmObj* %argslist93834$u481061)
store volatile %struct.ScmObj* %argslist93834$u481062, %struct.ScmObj** %stackaddr$prim96959, align 8
%clofunc96960 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %u48106)
musttail call tailcc void %clofunc96960(%struct.ScmObj* %u48106, %struct.ScmObj* %argslist93834$u481062)
ret void
}

define tailcc void @proc_clo$ae50721(%struct.ScmObj* %env$ae50721,%struct.ScmObj* %current_45args93837) {
%stackaddr$prim96961 = alloca %struct.ScmObj*, align 8
%k48364 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93837)
store volatile %struct.ScmObj* %k48364, %struct.ScmObj** %stackaddr$prim96961, align 8
%stackaddr$prim96962 = alloca %struct.ScmObj*, align 8
%current_45args93838 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93837)
store volatile %struct.ScmObj* %current_45args93838, %struct.ScmObj** %stackaddr$prim96962, align 8
%stackaddr$prim96963 = alloca %struct.ScmObj*, align 8
%lst48110 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93838)
store volatile %struct.ScmObj* %lst48110, %struct.ScmObj** %stackaddr$prim96963, align 8
%stackaddr$prim96964 = alloca %struct.ScmObj*, align 8
%current_45args93839 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93838)
store volatile %struct.ScmObj* %current_45args93839, %struct.ScmObj** %stackaddr$prim96964, align 8
%stackaddr$prim96965 = alloca %struct.ScmObj*, align 8
%n48109 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93839)
store volatile %struct.ScmObj* %n48109, %struct.ScmObj** %stackaddr$prim96965, align 8
%ae50722 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim96966 = alloca %struct.ScmObj*, align 8
%n48112 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae50722, %struct.ScmObj* %n48109)
store volatile %struct.ScmObj* %n48112, %struct.ScmObj** %stackaddr$prim96966, align 8
%ae50724 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim96967 = alloca %struct.ScmObj*, align 8
%lst48111 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae50724, %struct.ScmObj* %lst48110)
store volatile %struct.ScmObj* %lst48111, %struct.ScmObj** %stackaddr$prim96967, align 8
%stackaddr$makeclosure96968 = alloca %struct.ScmObj*, align 8
%fptrToInt96969 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50726 to i64
%ae50726 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt96969)
store volatile %struct.ScmObj* %ae50726, %struct.ScmObj** %stackaddr$makeclosure96968, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50726, %struct.ScmObj* %n48112, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50726, %struct.ScmObj* %lst48111, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae50726, %struct.ScmObj* %k48364, i64 2)
%ae50727 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure96970 = alloca %struct.ScmObj*, align 8
%fptrToInt96971 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50728 to i64
%ae50728 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt96971)
store volatile %struct.ScmObj* %ae50728, %struct.ScmObj** %stackaddr$makeclosure96970, align 8
%argslist93859$ae507260 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96972 = alloca %struct.ScmObj*, align 8
%argslist93859$ae507261 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50728, %struct.ScmObj* %argslist93859$ae507260)
store volatile %struct.ScmObj* %argslist93859$ae507261, %struct.ScmObj** %stackaddr$prim96972, align 8
%stackaddr$prim96973 = alloca %struct.ScmObj*, align 8
%argslist93859$ae507262 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50727, %struct.ScmObj* %argslist93859$ae507261)
store volatile %struct.ScmObj* %argslist93859$ae507262, %struct.ScmObj** %stackaddr$prim96973, align 8
%clofunc96974 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50726)
musttail call tailcc void %clofunc96974(%struct.ScmObj* %ae50726, %struct.ScmObj* %argslist93859$ae507262)
ret void
}

define tailcc void @proc_clo$ae50726(%struct.ScmObj* %env$ae50726,%struct.ScmObj* %current_45args93841) {
%stackaddr$env-ref96975 = alloca %struct.ScmObj*, align 8
%n48112 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50726, i64 0)
store %struct.ScmObj* %n48112, %struct.ScmObj** %stackaddr$env-ref96975
%stackaddr$env-ref96976 = alloca %struct.ScmObj*, align 8
%lst48111 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50726, i64 1)
store %struct.ScmObj* %lst48111, %struct.ScmObj** %stackaddr$env-ref96976
%stackaddr$env-ref96977 = alloca %struct.ScmObj*, align 8
%k48364 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50726, i64 2)
store %struct.ScmObj* %k48364, %struct.ScmObj** %stackaddr$env-ref96977
%stackaddr$prim96978 = alloca %struct.ScmObj*, align 8
%_95k48365 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93841)
store volatile %struct.ScmObj* %_95k48365, %struct.ScmObj** %stackaddr$prim96978, align 8
%stackaddr$prim96979 = alloca %struct.ScmObj*, align 8
%current_45args93842 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93841)
store volatile %struct.ScmObj* %current_45args93842, %struct.ScmObj** %stackaddr$prim96979, align 8
%stackaddr$prim96980 = alloca %struct.ScmObj*, align 8
%anf_45bind48242 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93842)
store volatile %struct.ScmObj* %anf_45bind48242, %struct.ScmObj** %stackaddr$prim96980, align 8
%stackaddr$makeclosure96981 = alloca %struct.ScmObj*, align 8
%fptrToInt96982 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50742 to i64
%ae50742 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt96982)
store volatile %struct.ScmObj* %ae50742, %struct.ScmObj** %stackaddr$makeclosure96981, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50742, %struct.ScmObj* %n48112, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50742, %struct.ScmObj* %lst48111, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae50742, %struct.ScmObj* %k48364, i64 2)
%stackaddr$makeclosure96983 = alloca %struct.ScmObj*, align 8
%fptrToInt96984 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50743 to i64
%ae50743 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt96984)
store volatile %struct.ScmObj* %ae50743, %struct.ScmObj** %stackaddr$makeclosure96983, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50743, %struct.ScmObj* %n48112, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50743, %struct.ScmObj* %lst48111, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae50743, %struct.ScmObj* %k48364, i64 2)
%argslist93854$anf_45bind482420 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96985 = alloca %struct.ScmObj*, align 8
%argslist93854$anf_45bind482421 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50743, %struct.ScmObj* %argslist93854$anf_45bind482420)
store volatile %struct.ScmObj* %argslist93854$anf_45bind482421, %struct.ScmObj** %stackaddr$prim96985, align 8
%stackaddr$prim96986 = alloca %struct.ScmObj*, align 8
%argslist93854$anf_45bind482422 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50742, %struct.ScmObj* %argslist93854$anf_45bind482421)
store volatile %struct.ScmObj* %argslist93854$anf_45bind482422, %struct.ScmObj** %stackaddr$prim96986, align 8
%clofunc96987 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind48242)
musttail call tailcc void %clofunc96987(%struct.ScmObj* %anf_45bind48242, %struct.ScmObj* %argslist93854$anf_45bind482422)
ret void
}

define tailcc void @proc_clo$ae50742(%struct.ScmObj* %env$ae50742,%struct.ScmObj* %current_45args93844) {
%stackaddr$env-ref96988 = alloca %struct.ScmObj*, align 8
%n48112 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50742, i64 0)
store %struct.ScmObj* %n48112, %struct.ScmObj** %stackaddr$env-ref96988
%stackaddr$env-ref96989 = alloca %struct.ScmObj*, align 8
%lst48111 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50742, i64 1)
store %struct.ScmObj* %lst48111, %struct.ScmObj** %stackaddr$env-ref96989
%stackaddr$env-ref96990 = alloca %struct.ScmObj*, align 8
%k48364 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50742, i64 2)
store %struct.ScmObj* %k48364, %struct.ScmObj** %stackaddr$env-ref96990
%stackaddr$prim96991 = alloca %struct.ScmObj*, align 8
%_95k48366 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93844)
store volatile %struct.ScmObj* %_95k48366, %struct.ScmObj** %stackaddr$prim96991, align 8
%stackaddr$prim96992 = alloca %struct.ScmObj*, align 8
%current_45args93845 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93844)
store volatile %struct.ScmObj* %current_45args93845, %struct.ScmObj** %stackaddr$prim96992, align 8
%stackaddr$prim96993 = alloca %struct.ScmObj*, align 8
%cc48113 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93845)
store volatile %struct.ScmObj* %cc48113, %struct.ScmObj** %stackaddr$prim96993, align 8
%ae50885 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96994 = alloca %struct.ScmObj*, align 8
%anf_45bind48243 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %n48112, %struct.ScmObj* %ae50885)
store volatile %struct.ScmObj* %anf_45bind48243, %struct.ScmObj** %stackaddr$prim96994, align 8
%ae50886 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96995 = alloca %struct.ScmObj*, align 8
%anf_45bind48244 = call %struct.ScmObj* @prim__61(%struct.ScmObj* %ae50886, %struct.ScmObj* %anf_45bind48243)
store volatile %struct.ScmObj* %anf_45bind48244, %struct.ScmObj** %stackaddr$prim96995, align 8
%truthy$cmp96996 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48244)
%cmp$cmp96996 = icmp eq i64 %truthy$cmp96996, 1
br i1 %cmp$cmp96996, label %truebranch$cmp96996, label %falsebranch$cmp96996
truebranch$cmp96996:
%ae50890 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim96997 = alloca %struct.ScmObj*, align 8
%cpsprim48367 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48111, %struct.ScmObj* %ae50890)
store volatile %struct.ScmObj* %cpsprim48367, %struct.ScmObj** %stackaddr$prim96997, align 8
%ae50892 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93847$k483640 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim96998 = alloca %struct.ScmObj*, align 8
%argslist93847$k483641 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48367, %struct.ScmObj* %argslist93847$k483640)
store volatile %struct.ScmObj* %argslist93847$k483641, %struct.ScmObj** %stackaddr$prim96998, align 8
%stackaddr$prim96999 = alloca %struct.ScmObj*, align 8
%argslist93847$k483642 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50892, %struct.ScmObj* %argslist93847$k483641)
store volatile %struct.ScmObj* %argslist93847$k483642, %struct.ScmObj** %stackaddr$prim96999, align 8
%clofunc97000 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48364)
musttail call tailcc void %clofunc97000(%struct.ScmObj* %k48364, %struct.ScmObj* %argslist93847$k483642)
ret void
falsebranch$cmp96996:
%ae50903 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97001 = alloca %struct.ScmObj*, align 8
%anf_45bind48245 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48111, %struct.ScmObj* %ae50903)
store volatile %struct.ScmObj* %anf_45bind48245, %struct.ScmObj** %stackaddr$prim97001, align 8
%stackaddr$prim97002 = alloca %struct.ScmObj*, align 8
%anf_45bind48246 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48245)
store volatile %struct.ScmObj* %anf_45bind48246, %struct.ScmObj** %stackaddr$prim97002, align 8
%ae50906 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97003 = alloca %struct.ScmObj*, align 8
%_95048116 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %lst48111, %struct.ScmObj* %ae50906, %struct.ScmObj* %anf_45bind48246)
store volatile %struct.ScmObj* %_95048116, %struct.ScmObj** %stackaddr$prim97003, align 8
%ae50909 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97004 = alloca %struct.ScmObj*, align 8
%anf_45bind48247 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %n48112, %struct.ScmObj* %ae50909)
store volatile %struct.ScmObj* %anf_45bind48247, %struct.ScmObj** %stackaddr$prim97004, align 8
%ae50911 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim97005 = alloca %struct.ScmObj*, align 8
%anf_45bind48248 = call %struct.ScmObj* @prim__45(%struct.ScmObj* %anf_45bind48247, %struct.ScmObj* %ae50911)
store volatile %struct.ScmObj* %anf_45bind48248, %struct.ScmObj** %stackaddr$prim97005, align 8
%ae50913 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97006 = alloca %struct.ScmObj*, align 8
%_95148115 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %n48112, %struct.ScmObj* %ae50913, %struct.ScmObj* %anf_45bind48248)
store volatile %struct.ScmObj* %_95148115, %struct.ScmObj** %stackaddr$prim97006, align 8
%argslist93848$cc481130 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97007 = alloca %struct.ScmObj*, align 8
%argslist93848$cc481131 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc48113, %struct.ScmObj* %argslist93848$cc481130)
store volatile %struct.ScmObj* %argslist93848$cc481131, %struct.ScmObj** %stackaddr$prim97007, align 8
%stackaddr$prim97008 = alloca %struct.ScmObj*, align 8
%argslist93848$cc481132 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48364, %struct.ScmObj* %argslist93848$cc481131)
store volatile %struct.ScmObj* %argslist93848$cc481132, %struct.ScmObj** %stackaddr$prim97008, align 8
%clofunc97009 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc48113)
musttail call tailcc void %clofunc97009(%struct.ScmObj* %cc48113, %struct.ScmObj* %argslist93848$cc481132)
ret void
}

define tailcc void @proc_clo$ae50743(%struct.ScmObj* %env$ae50743,%struct.ScmObj* %current_45args93849) {
%stackaddr$env-ref97010 = alloca %struct.ScmObj*, align 8
%n48112 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50743, i64 0)
store %struct.ScmObj* %n48112, %struct.ScmObj** %stackaddr$env-ref97010
%stackaddr$env-ref97011 = alloca %struct.ScmObj*, align 8
%lst48111 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50743, i64 1)
store %struct.ScmObj* %lst48111, %struct.ScmObj** %stackaddr$env-ref97011
%stackaddr$env-ref97012 = alloca %struct.ScmObj*, align 8
%k48364 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50743, i64 2)
store %struct.ScmObj* %k48364, %struct.ScmObj** %stackaddr$env-ref97012
%stackaddr$prim97013 = alloca %struct.ScmObj*, align 8
%_95k48366 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93849)
store volatile %struct.ScmObj* %_95k48366, %struct.ScmObj** %stackaddr$prim97013, align 8
%stackaddr$prim97014 = alloca %struct.ScmObj*, align 8
%current_45args93850 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93849)
store volatile %struct.ScmObj* %current_45args93850, %struct.ScmObj** %stackaddr$prim97014, align 8
%stackaddr$prim97015 = alloca %struct.ScmObj*, align 8
%cc48113 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93850)
store volatile %struct.ScmObj* %cc48113, %struct.ScmObj** %stackaddr$prim97015, align 8
%ae50745 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97016 = alloca %struct.ScmObj*, align 8
%anf_45bind48243 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %n48112, %struct.ScmObj* %ae50745)
store volatile %struct.ScmObj* %anf_45bind48243, %struct.ScmObj** %stackaddr$prim97016, align 8
%ae50746 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97017 = alloca %struct.ScmObj*, align 8
%anf_45bind48244 = call %struct.ScmObj* @prim__61(%struct.ScmObj* %ae50746, %struct.ScmObj* %anf_45bind48243)
store volatile %struct.ScmObj* %anf_45bind48244, %struct.ScmObj** %stackaddr$prim97017, align 8
%truthy$cmp97018 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48244)
%cmp$cmp97018 = icmp eq i64 %truthy$cmp97018, 1
br i1 %cmp$cmp97018, label %truebranch$cmp97018, label %falsebranch$cmp97018
truebranch$cmp97018:
%ae50750 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97019 = alloca %struct.ScmObj*, align 8
%cpsprim48367 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48111, %struct.ScmObj* %ae50750)
store volatile %struct.ScmObj* %cpsprim48367, %struct.ScmObj** %stackaddr$prim97019, align 8
%ae50752 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93852$k483640 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97020 = alloca %struct.ScmObj*, align 8
%argslist93852$k483641 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48367, %struct.ScmObj* %argslist93852$k483640)
store volatile %struct.ScmObj* %argslist93852$k483641, %struct.ScmObj** %stackaddr$prim97020, align 8
%stackaddr$prim97021 = alloca %struct.ScmObj*, align 8
%argslist93852$k483642 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50752, %struct.ScmObj* %argslist93852$k483641)
store volatile %struct.ScmObj* %argslist93852$k483642, %struct.ScmObj** %stackaddr$prim97021, align 8
%clofunc97022 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48364)
musttail call tailcc void %clofunc97022(%struct.ScmObj* %k48364, %struct.ScmObj* %argslist93852$k483642)
ret void
falsebranch$cmp97018:
%ae50763 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97023 = alloca %struct.ScmObj*, align 8
%anf_45bind48245 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst48111, %struct.ScmObj* %ae50763)
store volatile %struct.ScmObj* %anf_45bind48245, %struct.ScmObj** %stackaddr$prim97023, align 8
%stackaddr$prim97024 = alloca %struct.ScmObj*, align 8
%anf_45bind48246 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48245)
store volatile %struct.ScmObj* %anf_45bind48246, %struct.ScmObj** %stackaddr$prim97024, align 8
%ae50766 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97025 = alloca %struct.ScmObj*, align 8
%_95048116 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %lst48111, %struct.ScmObj* %ae50766, %struct.ScmObj* %anf_45bind48246)
store volatile %struct.ScmObj* %_95048116, %struct.ScmObj** %stackaddr$prim97025, align 8
%ae50769 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97026 = alloca %struct.ScmObj*, align 8
%anf_45bind48247 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %n48112, %struct.ScmObj* %ae50769)
store volatile %struct.ScmObj* %anf_45bind48247, %struct.ScmObj** %stackaddr$prim97026, align 8
%ae50771 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim97027 = alloca %struct.ScmObj*, align 8
%anf_45bind48248 = call %struct.ScmObj* @prim__45(%struct.ScmObj* %anf_45bind48247, %struct.ScmObj* %ae50771)
store volatile %struct.ScmObj* %anf_45bind48248, %struct.ScmObj** %stackaddr$prim97027, align 8
%ae50773 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97028 = alloca %struct.ScmObj*, align 8
%_95148115 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %n48112, %struct.ScmObj* %ae50773, %struct.ScmObj* %anf_45bind48248)
store volatile %struct.ScmObj* %_95148115, %struct.ScmObj** %stackaddr$prim97028, align 8
%argslist93853$cc481130 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97029 = alloca %struct.ScmObj*, align 8
%argslist93853$cc481131 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc48113, %struct.ScmObj* %argslist93853$cc481130)
store volatile %struct.ScmObj* %argslist93853$cc481131, %struct.ScmObj** %stackaddr$prim97029, align 8
%stackaddr$prim97030 = alloca %struct.ScmObj*, align 8
%argslist93853$cc481132 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48364, %struct.ScmObj* %argslist93853$cc481131)
store volatile %struct.ScmObj* %argslist93853$cc481132, %struct.ScmObj** %stackaddr$prim97030, align 8
%clofunc97031 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc48113)
musttail call tailcc void %clofunc97031(%struct.ScmObj* %cc48113, %struct.ScmObj* %argslist93853$cc481132)
ret void
}

define tailcc void @proc_clo$ae50728(%struct.ScmObj* %env$ae50728,%struct.ScmObj* %current_45args93855) {
%stackaddr$prim97032 = alloca %struct.ScmObj*, align 8
%k48368 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93855)
store volatile %struct.ScmObj* %k48368, %struct.ScmObj** %stackaddr$prim97032, align 8
%stackaddr$prim97033 = alloca %struct.ScmObj*, align 8
%current_45args93856 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93855)
store volatile %struct.ScmObj* %current_45args93856, %struct.ScmObj** %stackaddr$prim97033, align 8
%stackaddr$prim97034 = alloca %struct.ScmObj*, align 8
%u48114 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93856)
store volatile %struct.ScmObj* %u48114, %struct.ScmObj** %stackaddr$prim97034, align 8
%argslist93858$u481140 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97035 = alloca %struct.ScmObj*, align 8
%argslist93858$u481141 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %u48114, %struct.ScmObj* %argslist93858$u481140)
store volatile %struct.ScmObj* %argslist93858$u481141, %struct.ScmObj** %stackaddr$prim97035, align 8
%stackaddr$prim97036 = alloca %struct.ScmObj*, align 8
%argslist93858$u481142 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48368, %struct.ScmObj* %argslist93858$u481141)
store volatile %struct.ScmObj* %argslist93858$u481142, %struct.ScmObj** %stackaddr$prim97036, align 8
%clofunc97037 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %u48114)
musttail call tailcc void %clofunc97037(%struct.ScmObj* %u48114, %struct.ScmObj* %argslist93858$u481142)
ret void
}

define tailcc void @proc_clo$ae50305(%struct.ScmObj* %env$ae50305,%struct.ScmObj* %current_45args93861) {
%stackaddr$prim97038 = alloca %struct.ScmObj*, align 8
%k48369 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93861)
store volatile %struct.ScmObj* %k48369, %struct.ScmObj** %stackaddr$prim97038, align 8
%stackaddr$prim97039 = alloca %struct.ScmObj*, align 8
%current_45args93862 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93861)
store volatile %struct.ScmObj* %current_45args93862, %struct.ScmObj** %stackaddr$prim97039, align 8
%stackaddr$prim97040 = alloca %struct.ScmObj*, align 8
%a48118 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93862)
store volatile %struct.ScmObj* %a48118, %struct.ScmObj** %stackaddr$prim97040, align 8
%ae50306 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim97041 = alloca %struct.ScmObj*, align 8
%a48119 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae50306, %struct.ScmObj* %a48118)
store volatile %struct.ScmObj* %a48119, %struct.ScmObj** %stackaddr$prim97041, align 8
%stackaddr$makeclosure97042 = alloca %struct.ScmObj*, align 8
%fptrToInt97043 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50308 to i64
%ae50308 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97043)
store volatile %struct.ScmObj* %ae50308, %struct.ScmObj** %stackaddr$makeclosure97042, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50308, %struct.ScmObj* %a48119, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50308, %struct.ScmObj* %k48369, i64 1)
%ae50309 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97044 = alloca %struct.ScmObj*, align 8
%fptrToInt97045 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50310 to i64
%ae50310 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt97045)
store volatile %struct.ScmObj* %ae50310, %struct.ScmObj** %stackaddr$makeclosure97044, align 8
%argslist93884$ae503080 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97046 = alloca %struct.ScmObj*, align 8
%argslist93884$ae503081 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50310, %struct.ScmObj* %argslist93884$ae503080)
store volatile %struct.ScmObj* %argslist93884$ae503081, %struct.ScmObj** %stackaddr$prim97046, align 8
%stackaddr$prim97047 = alloca %struct.ScmObj*, align 8
%argslist93884$ae503082 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50309, %struct.ScmObj* %argslist93884$ae503081)
store volatile %struct.ScmObj* %argslist93884$ae503082, %struct.ScmObj** %stackaddr$prim97047, align 8
%clofunc97048 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50308)
musttail call tailcc void %clofunc97048(%struct.ScmObj* %ae50308, %struct.ScmObj* %argslist93884$ae503082)
ret void
}

define tailcc void @proc_clo$ae50308(%struct.ScmObj* %env$ae50308,%struct.ScmObj* %current_45args93864) {
%stackaddr$env-ref97049 = alloca %struct.ScmObj*, align 8
%a48119 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50308, i64 0)
store %struct.ScmObj* %a48119, %struct.ScmObj** %stackaddr$env-ref97049
%stackaddr$env-ref97050 = alloca %struct.ScmObj*, align 8
%k48369 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50308, i64 1)
store %struct.ScmObj* %k48369, %struct.ScmObj** %stackaddr$env-ref97050
%stackaddr$prim97051 = alloca %struct.ScmObj*, align 8
%_95k48370 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93864)
store volatile %struct.ScmObj* %_95k48370, %struct.ScmObj** %stackaddr$prim97051, align 8
%stackaddr$prim97052 = alloca %struct.ScmObj*, align 8
%current_45args93865 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93864)
store volatile %struct.ScmObj* %current_45args93865, %struct.ScmObj** %stackaddr$prim97052, align 8
%stackaddr$prim97053 = alloca %struct.ScmObj*, align 8
%anf_45bind48234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93865)
store volatile %struct.ScmObj* %anf_45bind48234, %struct.ScmObj** %stackaddr$prim97053, align 8
%stackaddr$makeclosure97054 = alloca %struct.ScmObj*, align 8
%fptrToInt97055 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50327 to i64
%ae50327 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97055)
store volatile %struct.ScmObj* %ae50327, %struct.ScmObj** %stackaddr$makeclosure97054, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50327, %struct.ScmObj* %a48119, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50327, %struct.ScmObj* %k48369, i64 1)
%stackaddr$makeclosure97056 = alloca %struct.ScmObj*, align 8
%fptrToInt97057 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50328 to i64
%ae50328 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97057)
store volatile %struct.ScmObj* %ae50328, %struct.ScmObj** %stackaddr$makeclosure97056, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50328, %struct.ScmObj* %a48119, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50328, %struct.ScmObj* %k48369, i64 1)
%argslist93879$anf_45bind482340 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97058 = alloca %struct.ScmObj*, align 8
%argslist93879$anf_45bind482341 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50328, %struct.ScmObj* %argslist93879$anf_45bind482340)
store volatile %struct.ScmObj* %argslist93879$anf_45bind482341, %struct.ScmObj** %stackaddr$prim97058, align 8
%stackaddr$prim97059 = alloca %struct.ScmObj*, align 8
%argslist93879$anf_45bind482342 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50327, %struct.ScmObj* %argslist93879$anf_45bind482341)
store volatile %struct.ScmObj* %argslist93879$anf_45bind482342, %struct.ScmObj** %stackaddr$prim97059, align 8
%clofunc97060 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind48234)
musttail call tailcc void %clofunc97060(%struct.ScmObj* %anf_45bind48234, %struct.ScmObj* %argslist93879$anf_45bind482342)
ret void
}

define tailcc void @proc_clo$ae50327(%struct.ScmObj* %env$ae50327,%struct.ScmObj* %current_45args93867) {
%stackaddr$env-ref97061 = alloca %struct.ScmObj*, align 8
%a48119 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50327, i64 0)
store %struct.ScmObj* %a48119, %struct.ScmObj** %stackaddr$env-ref97061
%stackaddr$env-ref97062 = alloca %struct.ScmObj*, align 8
%k48369 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50327, i64 1)
store %struct.ScmObj* %k48369, %struct.ScmObj** %stackaddr$env-ref97062
%stackaddr$prim97063 = alloca %struct.ScmObj*, align 8
%_95k48371 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93867)
store volatile %struct.ScmObj* %_95k48371, %struct.ScmObj** %stackaddr$prim97063, align 8
%stackaddr$prim97064 = alloca %struct.ScmObj*, align 8
%current_45args93868 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93867)
store volatile %struct.ScmObj* %current_45args93868, %struct.ScmObj** %stackaddr$prim97064, align 8
%stackaddr$prim97065 = alloca %struct.ScmObj*, align 8
%cc48120 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93868)
store volatile %struct.ScmObj* %cc48120, %struct.ScmObj** %stackaddr$prim97065, align 8
%ae50443 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97066 = alloca %struct.ScmObj*, align 8
%anf_45bind48235 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a48119, %struct.ScmObj* %ae50443)
store volatile %struct.ScmObj* %anf_45bind48235, %struct.ScmObj** %stackaddr$prim97066, align 8
%stackaddr$prim97067 = alloca %struct.ScmObj*, align 8
%anf_45bind48236 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %anf_45bind48235)
store volatile %struct.ScmObj* %anf_45bind48236, %struct.ScmObj** %stackaddr$prim97067, align 8
%truthy$cmp97068 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48236)
%cmp$cmp97068 = icmp eq i64 %truthy$cmp97068, 1
br i1 %cmp$cmp97068, label %truebranch$cmp97068, label %falsebranch$cmp97068
truebranch$cmp97068:
%ae50447 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50448 = call %struct.ScmObj* @const_init_true()
%argslist93870$k483690 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97069 = alloca %struct.ScmObj*, align 8
%argslist93870$k483691 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50448, %struct.ScmObj* %argslist93870$k483690)
store volatile %struct.ScmObj* %argslist93870$k483691, %struct.ScmObj** %stackaddr$prim97069, align 8
%stackaddr$prim97070 = alloca %struct.ScmObj*, align 8
%argslist93870$k483692 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50447, %struct.ScmObj* %argslist93870$k483691)
store volatile %struct.ScmObj* %argslist93870$k483692, %struct.ScmObj** %stackaddr$prim97070, align 8
%clofunc97071 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48369)
musttail call tailcc void %clofunc97071(%struct.ScmObj* %k48369, %struct.ScmObj* %argslist93870$k483692)
ret void
falsebranch$cmp97068:
%ae50456 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97072 = alloca %struct.ScmObj*, align 8
%anf_45bind48237 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a48119, %struct.ScmObj* %ae50456)
store volatile %struct.ScmObj* %anf_45bind48237, %struct.ScmObj** %stackaddr$prim97072, align 8
%stackaddr$prim97073 = alloca %struct.ScmObj*, align 8
%anf_45bind48238 = call %struct.ScmObj* @prim_cons_63(%struct.ScmObj* %anf_45bind48237)
store volatile %struct.ScmObj* %anf_45bind48238, %struct.ScmObj** %stackaddr$prim97073, align 8
%truthy$cmp97074 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48238)
%cmp$cmp97074 = icmp eq i64 %truthy$cmp97074, 1
br i1 %cmp$cmp97074, label %truebranch$cmp97074, label %falsebranch$cmp97074
truebranch$cmp97074:
%ae50460 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97075 = alloca %struct.ScmObj*, align 8
%anf_45bind48239 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a48119, %struct.ScmObj* %ae50460)
store volatile %struct.ScmObj* %anf_45bind48239, %struct.ScmObj** %stackaddr$prim97075, align 8
%stackaddr$prim97076 = alloca %struct.ScmObj*, align 8
%b48122 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48239)
store volatile %struct.ScmObj* %b48122, %struct.ScmObj** %stackaddr$prim97076, align 8
%ae50463 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97077 = alloca %struct.ScmObj*, align 8
%anf_45bind48240 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a48119, %struct.ScmObj* %ae50463)
store volatile %struct.ScmObj* %anf_45bind48240, %struct.ScmObj** %stackaddr$prim97077, align 8
%stackaddr$prim97078 = alloca %struct.ScmObj*, align 8
%anf_45bind48241 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48240)
store volatile %struct.ScmObj* %anf_45bind48241, %struct.ScmObj** %stackaddr$prim97078, align 8
%ae50466 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97079 = alloca %struct.ScmObj*, align 8
%_95048123 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %a48119, %struct.ScmObj* %ae50466, %struct.ScmObj* %anf_45bind48241)
store volatile %struct.ScmObj* %_95048123, %struct.ScmObj** %stackaddr$prim97079, align 8
%argslist93871$cc481200 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97080 = alloca %struct.ScmObj*, align 8
%argslist93871$cc481201 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc48120, %struct.ScmObj* %argslist93871$cc481200)
store volatile %struct.ScmObj* %argslist93871$cc481201, %struct.ScmObj** %stackaddr$prim97080, align 8
%stackaddr$prim97081 = alloca %struct.ScmObj*, align 8
%argslist93871$cc481202 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48369, %struct.ScmObj* %argslist93871$cc481201)
store volatile %struct.ScmObj* %argslist93871$cc481202, %struct.ScmObj** %stackaddr$prim97081, align 8
%clofunc97082 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc48120)
musttail call tailcc void %clofunc97082(%struct.ScmObj* %cc48120, %struct.ScmObj* %argslist93871$cc481202)
ret void
falsebranch$cmp97074:
%ae50499 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50500 = call %struct.ScmObj* @const_init_false()
%argslist93872$k483690 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97083 = alloca %struct.ScmObj*, align 8
%argslist93872$k483691 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50500, %struct.ScmObj* %argslist93872$k483690)
store volatile %struct.ScmObj* %argslist93872$k483691, %struct.ScmObj** %stackaddr$prim97083, align 8
%stackaddr$prim97084 = alloca %struct.ScmObj*, align 8
%argslist93872$k483692 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50499, %struct.ScmObj* %argslist93872$k483691)
store volatile %struct.ScmObj* %argslist93872$k483692, %struct.ScmObj** %stackaddr$prim97084, align 8
%clofunc97085 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48369)
musttail call tailcc void %clofunc97085(%struct.ScmObj* %k48369, %struct.ScmObj* %argslist93872$k483692)
ret void
}

define tailcc void @proc_clo$ae50328(%struct.ScmObj* %env$ae50328,%struct.ScmObj* %current_45args93873) {
%stackaddr$env-ref97086 = alloca %struct.ScmObj*, align 8
%a48119 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50328, i64 0)
store %struct.ScmObj* %a48119, %struct.ScmObj** %stackaddr$env-ref97086
%stackaddr$env-ref97087 = alloca %struct.ScmObj*, align 8
%k48369 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50328, i64 1)
store %struct.ScmObj* %k48369, %struct.ScmObj** %stackaddr$env-ref97087
%stackaddr$prim97088 = alloca %struct.ScmObj*, align 8
%_95k48371 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93873)
store volatile %struct.ScmObj* %_95k48371, %struct.ScmObj** %stackaddr$prim97088, align 8
%stackaddr$prim97089 = alloca %struct.ScmObj*, align 8
%current_45args93874 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93873)
store volatile %struct.ScmObj* %current_45args93874, %struct.ScmObj** %stackaddr$prim97089, align 8
%stackaddr$prim97090 = alloca %struct.ScmObj*, align 8
%cc48120 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93874)
store volatile %struct.ScmObj* %cc48120, %struct.ScmObj** %stackaddr$prim97090, align 8
%ae50330 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97091 = alloca %struct.ScmObj*, align 8
%anf_45bind48235 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a48119, %struct.ScmObj* %ae50330)
store volatile %struct.ScmObj* %anf_45bind48235, %struct.ScmObj** %stackaddr$prim97091, align 8
%stackaddr$prim97092 = alloca %struct.ScmObj*, align 8
%anf_45bind48236 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %anf_45bind48235)
store volatile %struct.ScmObj* %anf_45bind48236, %struct.ScmObj** %stackaddr$prim97092, align 8
%truthy$cmp97093 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48236)
%cmp$cmp97093 = icmp eq i64 %truthy$cmp97093, 1
br i1 %cmp$cmp97093, label %truebranch$cmp97093, label %falsebranch$cmp97093
truebranch$cmp97093:
%ae50334 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50335 = call %struct.ScmObj* @const_init_true()
%argslist93876$k483690 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97094 = alloca %struct.ScmObj*, align 8
%argslist93876$k483691 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50335, %struct.ScmObj* %argslist93876$k483690)
store volatile %struct.ScmObj* %argslist93876$k483691, %struct.ScmObj** %stackaddr$prim97094, align 8
%stackaddr$prim97095 = alloca %struct.ScmObj*, align 8
%argslist93876$k483692 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50334, %struct.ScmObj* %argslist93876$k483691)
store volatile %struct.ScmObj* %argslist93876$k483692, %struct.ScmObj** %stackaddr$prim97095, align 8
%clofunc97096 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48369)
musttail call tailcc void %clofunc97096(%struct.ScmObj* %k48369, %struct.ScmObj* %argslist93876$k483692)
ret void
falsebranch$cmp97093:
%ae50343 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97097 = alloca %struct.ScmObj*, align 8
%anf_45bind48237 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a48119, %struct.ScmObj* %ae50343)
store volatile %struct.ScmObj* %anf_45bind48237, %struct.ScmObj** %stackaddr$prim97097, align 8
%stackaddr$prim97098 = alloca %struct.ScmObj*, align 8
%anf_45bind48238 = call %struct.ScmObj* @prim_cons_63(%struct.ScmObj* %anf_45bind48237)
store volatile %struct.ScmObj* %anf_45bind48238, %struct.ScmObj** %stackaddr$prim97098, align 8
%truthy$cmp97099 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48238)
%cmp$cmp97099 = icmp eq i64 %truthy$cmp97099, 1
br i1 %cmp$cmp97099, label %truebranch$cmp97099, label %falsebranch$cmp97099
truebranch$cmp97099:
%ae50347 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97100 = alloca %struct.ScmObj*, align 8
%anf_45bind48239 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a48119, %struct.ScmObj* %ae50347)
store volatile %struct.ScmObj* %anf_45bind48239, %struct.ScmObj** %stackaddr$prim97100, align 8
%stackaddr$prim97101 = alloca %struct.ScmObj*, align 8
%b48122 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48239)
store volatile %struct.ScmObj* %b48122, %struct.ScmObj** %stackaddr$prim97101, align 8
%ae50350 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97102 = alloca %struct.ScmObj*, align 8
%anf_45bind48240 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a48119, %struct.ScmObj* %ae50350)
store volatile %struct.ScmObj* %anf_45bind48240, %struct.ScmObj** %stackaddr$prim97102, align 8
%stackaddr$prim97103 = alloca %struct.ScmObj*, align 8
%anf_45bind48241 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48240)
store volatile %struct.ScmObj* %anf_45bind48241, %struct.ScmObj** %stackaddr$prim97103, align 8
%ae50353 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97104 = alloca %struct.ScmObj*, align 8
%_95048123 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %a48119, %struct.ScmObj* %ae50353, %struct.ScmObj* %anf_45bind48241)
store volatile %struct.ScmObj* %_95048123, %struct.ScmObj** %stackaddr$prim97104, align 8
%argslist93877$cc481200 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97105 = alloca %struct.ScmObj*, align 8
%argslist93877$cc481201 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc48120, %struct.ScmObj* %argslist93877$cc481200)
store volatile %struct.ScmObj* %argslist93877$cc481201, %struct.ScmObj** %stackaddr$prim97105, align 8
%stackaddr$prim97106 = alloca %struct.ScmObj*, align 8
%argslist93877$cc481202 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48369, %struct.ScmObj* %argslist93877$cc481201)
store volatile %struct.ScmObj* %argslist93877$cc481202, %struct.ScmObj** %stackaddr$prim97106, align 8
%clofunc97107 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc48120)
musttail call tailcc void %clofunc97107(%struct.ScmObj* %cc48120, %struct.ScmObj* %argslist93877$cc481202)
ret void
falsebranch$cmp97099:
%ae50386 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50387 = call %struct.ScmObj* @const_init_false()
%argslist93878$k483690 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97108 = alloca %struct.ScmObj*, align 8
%argslist93878$k483691 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50387, %struct.ScmObj* %argslist93878$k483690)
store volatile %struct.ScmObj* %argslist93878$k483691, %struct.ScmObj** %stackaddr$prim97108, align 8
%stackaddr$prim97109 = alloca %struct.ScmObj*, align 8
%argslist93878$k483692 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50386, %struct.ScmObj* %argslist93878$k483691)
store volatile %struct.ScmObj* %argslist93878$k483692, %struct.ScmObj** %stackaddr$prim97109, align 8
%clofunc97110 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48369)
musttail call tailcc void %clofunc97110(%struct.ScmObj* %k48369, %struct.ScmObj* %argslist93878$k483692)
ret void
}

define tailcc void @proc_clo$ae50310(%struct.ScmObj* %env$ae50310,%struct.ScmObj* %current_45args93880) {
%stackaddr$prim97111 = alloca %struct.ScmObj*, align 8
%k48372 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93880)
store volatile %struct.ScmObj* %k48372, %struct.ScmObj** %stackaddr$prim97111, align 8
%stackaddr$prim97112 = alloca %struct.ScmObj*, align 8
%current_45args93881 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93880)
store volatile %struct.ScmObj* %current_45args93881, %struct.ScmObj** %stackaddr$prim97112, align 8
%stackaddr$prim97113 = alloca %struct.ScmObj*, align 8
%k48121 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93881)
store volatile %struct.ScmObj* %k48121, %struct.ScmObj** %stackaddr$prim97113, align 8
%ae50312 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93883$k483720 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97114 = alloca %struct.ScmObj*, align 8
%argslist93883$k483721 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48121, %struct.ScmObj* %argslist93883$k483720)
store volatile %struct.ScmObj* %argslist93883$k483721, %struct.ScmObj** %stackaddr$prim97114, align 8
%stackaddr$prim97115 = alloca %struct.ScmObj*, align 8
%argslist93883$k483722 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50312, %struct.ScmObj* %argslist93883$k483721)
store volatile %struct.ScmObj* %argslist93883$k483722, %struct.ScmObj** %stackaddr$prim97115, align 8
%clofunc97116 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48372)
musttail call tailcc void %clofunc97116(%struct.ScmObj* %k48372, %struct.ScmObj* %argslist93883$k483722)
ret void
}

define tailcc void @proc_clo$ae50233(%struct.ScmObj* %env$ae50233,%struct.ScmObj* %current_45args93886) {
%stackaddr$env-ref97117 = alloca %struct.ScmObj*, align 8
%_37append48125 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50233, i64 0)
store %struct.ScmObj* %_37append48125, %struct.ScmObj** %stackaddr$env-ref97117
%stackaddr$prim97118 = alloca %struct.ScmObj*, align 8
%k48373 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93886)
store volatile %struct.ScmObj* %k48373, %struct.ScmObj** %stackaddr$prim97118, align 8
%stackaddr$prim97119 = alloca %struct.ScmObj*, align 8
%current_45args93887 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93886)
store volatile %struct.ScmObj* %current_45args93887, %struct.ScmObj** %stackaddr$prim97119, align 8
%stackaddr$prim97120 = alloca %struct.ScmObj*, align 8
%ls048128 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93887)
store volatile %struct.ScmObj* %ls048128, %struct.ScmObj** %stackaddr$prim97120, align 8
%stackaddr$prim97121 = alloca %struct.ScmObj*, align 8
%current_45args93888 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93887)
store volatile %struct.ScmObj* %current_45args93888, %struct.ScmObj** %stackaddr$prim97121, align 8
%stackaddr$prim97122 = alloca %struct.ScmObj*, align 8
%ls148127 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93888)
store volatile %struct.ScmObj* %ls148127, %struct.ScmObj** %stackaddr$prim97122, align 8
%stackaddr$prim97123 = alloca %struct.ScmObj*, align 8
%anf_45bind48228 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %ls048128)
store volatile %struct.ScmObj* %anf_45bind48228, %struct.ScmObj** %stackaddr$prim97123, align 8
%truthy$cmp97124 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48228)
%cmp$cmp97124 = icmp eq i64 %truthy$cmp97124, 1
br i1 %cmp$cmp97124, label %truebranch$cmp97124, label %falsebranch$cmp97124
truebranch$cmp97124:
%ae50237 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93890$k483730 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97125 = alloca %struct.ScmObj*, align 8
%argslist93890$k483731 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ls148127, %struct.ScmObj* %argslist93890$k483730)
store volatile %struct.ScmObj* %argslist93890$k483731, %struct.ScmObj** %stackaddr$prim97125, align 8
%stackaddr$prim97126 = alloca %struct.ScmObj*, align 8
%argslist93890$k483732 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50237, %struct.ScmObj* %argslist93890$k483731)
store volatile %struct.ScmObj* %argslist93890$k483732, %struct.ScmObj** %stackaddr$prim97126, align 8
%clofunc97127 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48373)
musttail call tailcc void %clofunc97127(%struct.ScmObj* %k48373, %struct.ScmObj* %argslist93890$k483732)
ret void
falsebranch$cmp97124:
%stackaddr$prim97128 = alloca %struct.ScmObj*, align 8
%anf_45bind48229 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %ls048128)
store volatile %struct.ScmObj* %anf_45bind48229, %struct.ScmObj** %stackaddr$prim97128, align 8
%ae50244 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97129 = alloca %struct.ScmObj*, align 8
%anf_45bind48230 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %_37append48125, %struct.ScmObj* %ae50244)
store volatile %struct.ScmObj* %anf_45bind48230, %struct.ScmObj** %stackaddr$prim97129, align 8
%stackaddr$prim97130 = alloca %struct.ScmObj*, align 8
%anf_45bind48231 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %ls048128)
store volatile %struct.ScmObj* %anf_45bind48231, %struct.ScmObj** %stackaddr$prim97130, align 8
%stackaddr$makeclosure97131 = alloca %struct.ScmObj*, align 8
%fptrToInt97132 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50247 to i64
%ae50247 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97132)
store volatile %struct.ScmObj* %ae50247, %struct.ScmObj** %stackaddr$makeclosure97131, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50247, %struct.ScmObj* %k48373, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae50247, %struct.ScmObj* %anf_45bind48229, i64 1)
%argslist93895$anf_45bind482300 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97133 = alloca %struct.ScmObj*, align 8
%argslist93895$anf_45bind482301 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ls148127, %struct.ScmObj* %argslist93895$anf_45bind482300)
store volatile %struct.ScmObj* %argslist93895$anf_45bind482301, %struct.ScmObj** %stackaddr$prim97133, align 8
%stackaddr$prim97134 = alloca %struct.ScmObj*, align 8
%argslist93895$anf_45bind482302 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48231, %struct.ScmObj* %argslist93895$anf_45bind482301)
store volatile %struct.ScmObj* %argslist93895$anf_45bind482302, %struct.ScmObj** %stackaddr$prim97134, align 8
%stackaddr$prim97135 = alloca %struct.ScmObj*, align 8
%argslist93895$anf_45bind482303 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50247, %struct.ScmObj* %argslist93895$anf_45bind482302)
store volatile %struct.ScmObj* %argslist93895$anf_45bind482303, %struct.ScmObj** %stackaddr$prim97135, align 8
%clofunc97136 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind48230)
musttail call tailcc void %clofunc97136(%struct.ScmObj* %anf_45bind48230, %struct.ScmObj* %argslist93895$anf_45bind482303)
ret void
}

define tailcc void @proc_clo$ae50247(%struct.ScmObj* %env$ae50247,%struct.ScmObj* %current_45args93891) {
%stackaddr$env-ref97137 = alloca %struct.ScmObj*, align 8
%k48373 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50247, i64 0)
store %struct.ScmObj* %k48373, %struct.ScmObj** %stackaddr$env-ref97137
%stackaddr$env-ref97138 = alloca %struct.ScmObj*, align 8
%anf_45bind48229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50247, i64 1)
store %struct.ScmObj* %anf_45bind48229, %struct.ScmObj** %stackaddr$env-ref97138
%stackaddr$prim97139 = alloca %struct.ScmObj*, align 8
%_95k48374 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93891)
store volatile %struct.ScmObj* %_95k48374, %struct.ScmObj** %stackaddr$prim97139, align 8
%stackaddr$prim97140 = alloca %struct.ScmObj*, align 8
%current_45args93892 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93891)
store volatile %struct.ScmObj* %current_45args93892, %struct.ScmObj** %stackaddr$prim97140, align 8
%stackaddr$prim97141 = alloca %struct.ScmObj*, align 8
%anf_45bind48232 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93892)
store volatile %struct.ScmObj* %anf_45bind48232, %struct.ScmObj** %stackaddr$prim97141, align 8
%stackaddr$prim97142 = alloca %struct.ScmObj*, align 8
%cpsprim48375 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48229, %struct.ScmObj* %anf_45bind48232)
store volatile %struct.ScmObj* %cpsprim48375, %struct.ScmObj** %stackaddr$prim97142, align 8
%ae50253 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93894$k483730 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97143 = alloca %struct.ScmObj*, align 8
%argslist93894$k483731 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48375, %struct.ScmObj* %argslist93894$k483730)
store volatile %struct.ScmObj* %argslist93894$k483731, %struct.ScmObj** %stackaddr$prim97143, align 8
%stackaddr$prim97144 = alloca %struct.ScmObj*, align 8
%argslist93894$k483732 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50253, %struct.ScmObj* %argslist93894$k483731)
store volatile %struct.ScmObj* %argslist93894$k483732, %struct.ScmObj** %stackaddr$prim97144, align 8
%clofunc97145 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48373)
musttail call tailcc void %clofunc97145(%struct.ScmObj* %k48373, %struct.ScmObj* %argslist93894$k483732)
ret void
}

define tailcc void @proc_clo$ae50207(%struct.ScmObj* %env$ae50207,%struct.ScmObj* %current_45args93897) {
%stackaddr$prim97146 = alloca %struct.ScmObj*, align 8
%k48376 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93897)
store volatile %struct.ScmObj* %k48376, %struct.ScmObj** %stackaddr$prim97146, align 8
%stackaddr$prim97147 = alloca %struct.ScmObj*, align 8
%current_45args93898 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93897)
store volatile %struct.ScmObj* %current_45args93898, %struct.ScmObj** %stackaddr$prim97147, align 8
%stackaddr$prim97148 = alloca %struct.ScmObj*, align 8
%a48131 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93898)
store volatile %struct.ScmObj* %a48131, %struct.ScmObj** %stackaddr$prim97148, align 8
%stackaddr$prim97149 = alloca %struct.ScmObj*, align 8
%current_45args93899 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93898)
store volatile %struct.ScmObj* %current_45args93899, %struct.ScmObj** %stackaddr$prim97149, align 8
%stackaddr$prim97150 = alloca %struct.ScmObj*, align 8
%b48130 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93899)
store volatile %struct.ScmObj* %b48130, %struct.ScmObj** %stackaddr$prim97150, align 8
%stackaddr$prim97151 = alloca %struct.ScmObj*, align 8
%anf_45bind48227 = call %struct.ScmObj* @prim__60(%struct.ScmObj* %a48131, %struct.ScmObj* %b48130)
store volatile %struct.ScmObj* %anf_45bind48227, %struct.ScmObj** %stackaddr$prim97151, align 8
%stackaddr$prim97152 = alloca %struct.ScmObj*, align 8
%cpsprim48377 = call %struct.ScmObj* @prim_not(%struct.ScmObj* %anf_45bind48227)
store volatile %struct.ScmObj* %cpsprim48377, %struct.ScmObj** %stackaddr$prim97152, align 8
%ae50212 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93901$k483760 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97153 = alloca %struct.ScmObj*, align 8
%argslist93901$k483761 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48377, %struct.ScmObj* %argslist93901$k483760)
store volatile %struct.ScmObj* %argslist93901$k483761, %struct.ScmObj** %stackaddr$prim97153, align 8
%stackaddr$prim97154 = alloca %struct.ScmObj*, align 8
%argslist93901$k483762 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50212, %struct.ScmObj* %argslist93901$k483761)
store volatile %struct.ScmObj* %argslist93901$k483762, %struct.ScmObj** %stackaddr$prim97154, align 8
%clofunc97155 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48376)
musttail call tailcc void %clofunc97155(%struct.ScmObj* %k48376, %struct.ScmObj* %argslist93901$k483762)
ret void
}

define tailcc void @proc_clo$ae50183(%struct.ScmObj* %env$ae50183,%struct.ScmObj* %current_45args93903) {
%stackaddr$prim97156 = alloca %struct.ScmObj*, align 8
%k48378 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93903)
store volatile %struct.ScmObj* %k48378, %struct.ScmObj** %stackaddr$prim97156, align 8
%stackaddr$prim97157 = alloca %struct.ScmObj*, align 8
%current_45args93904 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93903)
store volatile %struct.ScmObj* %current_45args93904, %struct.ScmObj** %stackaddr$prim97157, align 8
%stackaddr$prim97158 = alloca %struct.ScmObj*, align 8
%a48134 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93904)
store volatile %struct.ScmObj* %a48134, %struct.ScmObj** %stackaddr$prim97158, align 8
%stackaddr$prim97159 = alloca %struct.ScmObj*, align 8
%current_45args93905 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93904)
store volatile %struct.ScmObj* %current_45args93905, %struct.ScmObj** %stackaddr$prim97159, align 8
%stackaddr$prim97160 = alloca %struct.ScmObj*, align 8
%b48133 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93905)
store volatile %struct.ScmObj* %b48133, %struct.ScmObj** %stackaddr$prim97160, align 8
%stackaddr$prim97161 = alloca %struct.ScmObj*, align 8
%anf_45bind48226 = call %struct.ScmObj* @prim__60_61(%struct.ScmObj* %a48134, %struct.ScmObj* %b48133)
store volatile %struct.ScmObj* %anf_45bind48226, %struct.ScmObj** %stackaddr$prim97161, align 8
%stackaddr$prim97162 = alloca %struct.ScmObj*, align 8
%cpsprim48379 = call %struct.ScmObj* @prim_not(%struct.ScmObj* %anf_45bind48226)
store volatile %struct.ScmObj* %cpsprim48379, %struct.ScmObj** %stackaddr$prim97162, align 8
%ae50188 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93907$k483780 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97163 = alloca %struct.ScmObj*, align 8
%argslist93907$k483781 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48379, %struct.ScmObj* %argslist93907$k483780)
store volatile %struct.ScmObj* %argslist93907$k483781, %struct.ScmObj** %stackaddr$prim97163, align 8
%stackaddr$prim97164 = alloca %struct.ScmObj*, align 8
%argslist93907$k483782 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50188, %struct.ScmObj* %argslist93907$k483781)
store volatile %struct.ScmObj* %argslist93907$k483782, %struct.ScmObj** %stackaddr$prim97164, align 8
%clofunc97165 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48378)
musttail call tailcc void %clofunc97165(%struct.ScmObj* %k48378, %struct.ScmObj* %argslist93907$k483782)
ret void
}

define tailcc void @proc_clo$ae49789(%struct.ScmObj* %env$ae49789,%struct.ScmObj* %current_45args93910) {
%stackaddr$env-ref97166 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49789, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97166
%stackaddr$env-ref97167 = alloca %struct.ScmObj*, align 8
%_37map148084 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49789, i64 1)
store %struct.ScmObj* %_37map148084, %struct.ScmObj** %stackaddr$env-ref97167
%stackaddr$env-ref97168 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49789, i64 2)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97168
%stackaddr$prim97169 = alloca %struct.ScmObj*, align 8
%k48380 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93910)
store volatile %struct.ScmObj* %k48380, %struct.ScmObj** %stackaddr$prim97169, align 8
%stackaddr$prim97170 = alloca %struct.ScmObj*, align 8
%current_45args93911 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93910)
store volatile %struct.ScmObj* %current_45args93911, %struct.ScmObj** %stackaddr$prim97170, align 8
%stackaddr$prim97171 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93911)
store volatile %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$prim97171, align 8
%ae49791 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97172 = alloca %struct.ScmObj*, align 8
%fptrToInt97173 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49792 to i64
%ae49792 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt97173)
store volatile %struct.ScmObj* %ae49792, %struct.ScmObj** %stackaddr$makeclosure97172, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49792, %struct.ScmObj* %_37foldl48136, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49792, %struct.ScmObj* %_37foldr148053, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49792, %struct.ScmObj* %_37map148084, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49792, %struct.ScmObj* %_37foldr48058, i64 3)
%argslist93968$k483800 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97174 = alloca %struct.ScmObj*, align 8
%argslist93968$k483801 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49792, %struct.ScmObj* %argslist93968$k483800)
store volatile %struct.ScmObj* %argslist93968$k483801, %struct.ScmObj** %stackaddr$prim97174, align 8
%stackaddr$prim97175 = alloca %struct.ScmObj*, align 8
%argslist93968$k483802 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49791, %struct.ScmObj* %argslist93968$k483801)
store volatile %struct.ScmObj* %argslist93968$k483802, %struct.ScmObj** %stackaddr$prim97175, align 8
%clofunc97176 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48380)
musttail call tailcc void %clofunc97176(%struct.ScmObj* %k48380, %struct.ScmObj* %argslist93968$k483802)
ret void
}

define tailcc void @proc_clo$ae49792(%struct.ScmObj* %env$ae49792,%struct.ScmObj* %args4813748381) {
%stackaddr$env-ref97177 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49792, i64 0)
store %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$env-ref97177
%stackaddr$env-ref97178 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49792, i64 1)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97178
%stackaddr$env-ref97179 = alloca %struct.ScmObj*, align 8
%_37map148084 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49792, i64 2)
store %struct.ScmObj* %_37map148084, %struct.ScmObj** %stackaddr$env-ref97179
%stackaddr$env-ref97180 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49792, i64 3)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97180
%stackaddr$prim97181 = alloca %struct.ScmObj*, align 8
%k48382 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args4813748381)
store volatile %struct.ScmObj* %k48382, %struct.ScmObj** %stackaddr$prim97181, align 8
%stackaddr$prim97182 = alloca %struct.ScmObj*, align 8
%args48137 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args4813748381)
store volatile %struct.ScmObj* %args48137, %struct.ScmObj** %stackaddr$prim97182, align 8
%stackaddr$prim97183 = alloca %struct.ScmObj*, align 8
%f48140 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args48137)
store volatile %struct.ScmObj* %f48140, %struct.ScmObj** %stackaddr$prim97183, align 8
%stackaddr$prim97184 = alloca %struct.ScmObj*, align 8
%anf_45bind48214 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args48137)
store volatile %struct.ScmObj* %anf_45bind48214, %struct.ScmObj** %stackaddr$prim97184, align 8
%stackaddr$prim97185 = alloca %struct.ScmObj*, align 8
%acc48139 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind48214)
store volatile %struct.ScmObj* %acc48139, %struct.ScmObj** %stackaddr$prim97185, align 8
%stackaddr$prim97186 = alloca %struct.ScmObj*, align 8
%anf_45bind48215 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args48137)
store volatile %struct.ScmObj* %anf_45bind48215, %struct.ScmObj** %stackaddr$prim97186, align 8
%stackaddr$prim97187 = alloca %struct.ScmObj*, align 8
%lsts48138 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48215)
store volatile %struct.ScmObj* %lsts48138, %struct.ScmObj** %stackaddr$prim97187, align 8
%stackaddr$makeclosure97188 = alloca %struct.ScmObj*, align 8
%fptrToInt97189 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49800 to i64
%ae49800 = call %struct.ScmObj* @closure_alloc(i64 8, i64 %fptrToInt97189)
store volatile %struct.ScmObj* %ae49800, %struct.ScmObj** %stackaddr$makeclosure97188, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49800, %struct.ScmObj* %lsts48138, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49800, %struct.ScmObj* %_37foldr48058, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49800, %struct.ScmObj* %_37foldl48136, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49800, %struct.ScmObj* %_37foldr148053, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49800, %struct.ScmObj* %_37map148084, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49800, %struct.ScmObj* %k48382, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49800, %struct.ScmObj* %f48140, i64 6)
call void @closure_place_freevar(%struct.ScmObj* %ae49800, %struct.ScmObj* %acc48139, i64 7)
%ae49801 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97190 = alloca %struct.ScmObj*, align 8
%fptrToInt97191 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49802 to i64
%ae49802 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt97191)
store volatile %struct.ScmObj* %ae49802, %struct.ScmObj** %stackaddr$makeclosure97190, align 8
%argslist93967$ae498000 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97192 = alloca %struct.ScmObj*, align 8
%argslist93967$ae498001 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49802, %struct.ScmObj* %argslist93967$ae498000)
store volatile %struct.ScmObj* %argslist93967$ae498001, %struct.ScmObj** %stackaddr$prim97192, align 8
%stackaddr$prim97193 = alloca %struct.ScmObj*, align 8
%argslist93967$ae498002 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49801, %struct.ScmObj* %argslist93967$ae498001)
store volatile %struct.ScmObj* %argslist93967$ae498002, %struct.ScmObj** %stackaddr$prim97193, align 8
%clofunc97194 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49800)
musttail call tailcc void %clofunc97194(%struct.ScmObj* %ae49800, %struct.ScmObj* %argslist93967$ae498002)
ret void
}

define tailcc void @proc_clo$ae49800(%struct.ScmObj* %env$ae49800,%struct.ScmObj* %current_45args93913) {
%stackaddr$env-ref97195 = alloca %struct.ScmObj*, align 8
%lsts48138 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49800, i64 0)
store %struct.ScmObj* %lsts48138, %struct.ScmObj** %stackaddr$env-ref97195
%stackaddr$env-ref97196 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49800, i64 1)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97196
%stackaddr$env-ref97197 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49800, i64 2)
store %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$env-ref97197
%stackaddr$env-ref97198 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49800, i64 3)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97198
%stackaddr$env-ref97199 = alloca %struct.ScmObj*, align 8
%_37map148084 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49800, i64 4)
store %struct.ScmObj* %_37map148084, %struct.ScmObj** %stackaddr$env-ref97199
%stackaddr$env-ref97200 = alloca %struct.ScmObj*, align 8
%k48382 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49800, i64 5)
store %struct.ScmObj* %k48382, %struct.ScmObj** %stackaddr$env-ref97200
%stackaddr$env-ref97201 = alloca %struct.ScmObj*, align 8
%f48140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49800, i64 6)
store %struct.ScmObj* %f48140, %struct.ScmObj** %stackaddr$env-ref97201
%stackaddr$env-ref97202 = alloca %struct.ScmObj*, align 8
%acc48139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49800, i64 7)
store %struct.ScmObj* %acc48139, %struct.ScmObj** %stackaddr$env-ref97202
%stackaddr$prim97203 = alloca %struct.ScmObj*, align 8
%_95k48383 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93913)
store volatile %struct.ScmObj* %_95k48383, %struct.ScmObj** %stackaddr$prim97203, align 8
%stackaddr$prim97204 = alloca %struct.ScmObj*, align 8
%current_45args93914 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93913)
store volatile %struct.ScmObj* %current_45args93914, %struct.ScmObj** %stackaddr$prim97204, align 8
%stackaddr$prim97205 = alloca %struct.ScmObj*, align 8
%anf_45bind48216 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93914)
store volatile %struct.ScmObj* %anf_45bind48216, %struct.ScmObj** %stackaddr$prim97205, align 8
%stackaddr$makeclosure97206 = alloca %struct.ScmObj*, align 8
%fptrToInt97207 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49832 to i64
%ae49832 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt97207)
store volatile %struct.ScmObj* %ae49832, %struct.ScmObj** %stackaddr$makeclosure97206, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49832, %struct.ScmObj* %lsts48138, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49832, %struct.ScmObj* %_37foldr48058, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49832, %struct.ScmObj* %_37foldl48136, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49832, %struct.ScmObj* %_37map148084, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49832, %struct.ScmObj* %k48382, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49832, %struct.ScmObj* %f48140, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49832, %struct.ScmObj* %acc48139, i64 6)
%ae49834 = call %struct.ScmObj* @const_init_false()
%argslist93960$_37foldr1480530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97208 = alloca %struct.ScmObj*, align 8
%argslist93960$_37foldr1480531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts48138, %struct.ScmObj* %argslist93960$_37foldr1480530)
store volatile %struct.ScmObj* %argslist93960$_37foldr1480531, %struct.ScmObj** %stackaddr$prim97208, align 8
%stackaddr$prim97209 = alloca %struct.ScmObj*, align 8
%argslist93960$_37foldr1480532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49834, %struct.ScmObj* %argslist93960$_37foldr1480531)
store volatile %struct.ScmObj* %argslist93960$_37foldr1480532, %struct.ScmObj** %stackaddr$prim97209, align 8
%stackaddr$prim97210 = alloca %struct.ScmObj*, align 8
%argslist93960$_37foldr1480533 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48216, %struct.ScmObj* %argslist93960$_37foldr1480532)
store volatile %struct.ScmObj* %argslist93960$_37foldr1480533, %struct.ScmObj** %stackaddr$prim97210, align 8
%stackaddr$prim97211 = alloca %struct.ScmObj*, align 8
%argslist93960$_37foldr1480534 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49832, %struct.ScmObj* %argslist93960$_37foldr1480533)
store volatile %struct.ScmObj* %argslist93960$_37foldr1480534, %struct.ScmObj** %stackaddr$prim97211, align 8
%clofunc97212 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr148053)
musttail call tailcc void %clofunc97212(%struct.ScmObj* %_37foldr148053, %struct.ScmObj* %argslist93960$_37foldr1480534)
ret void
}

define tailcc void @proc_clo$ae49832(%struct.ScmObj* %env$ae49832,%struct.ScmObj* %current_45args93916) {
%stackaddr$env-ref97213 = alloca %struct.ScmObj*, align 8
%lsts48138 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49832, i64 0)
store %struct.ScmObj* %lsts48138, %struct.ScmObj** %stackaddr$env-ref97213
%stackaddr$env-ref97214 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49832, i64 1)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97214
%stackaddr$env-ref97215 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49832, i64 2)
store %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$env-ref97215
%stackaddr$env-ref97216 = alloca %struct.ScmObj*, align 8
%_37map148084 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49832, i64 3)
store %struct.ScmObj* %_37map148084, %struct.ScmObj** %stackaddr$env-ref97216
%stackaddr$env-ref97217 = alloca %struct.ScmObj*, align 8
%k48382 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49832, i64 4)
store %struct.ScmObj* %k48382, %struct.ScmObj** %stackaddr$env-ref97217
%stackaddr$env-ref97218 = alloca %struct.ScmObj*, align 8
%f48140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49832, i64 5)
store %struct.ScmObj* %f48140, %struct.ScmObj** %stackaddr$env-ref97218
%stackaddr$env-ref97219 = alloca %struct.ScmObj*, align 8
%acc48139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49832, i64 6)
store %struct.ScmObj* %acc48139, %struct.ScmObj** %stackaddr$env-ref97219
%stackaddr$prim97220 = alloca %struct.ScmObj*, align 8
%_95k48384 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93916)
store volatile %struct.ScmObj* %_95k48384, %struct.ScmObj** %stackaddr$prim97220, align 8
%stackaddr$prim97221 = alloca %struct.ScmObj*, align 8
%current_45args93917 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93916)
store volatile %struct.ScmObj* %current_45args93917, %struct.ScmObj** %stackaddr$prim97221, align 8
%stackaddr$prim97222 = alloca %struct.ScmObj*, align 8
%anf_45bind48217 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93917)
store volatile %struct.ScmObj* %anf_45bind48217, %struct.ScmObj** %stackaddr$prim97222, align 8
%truthy$cmp97223 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48217)
%cmp$cmp97223 = icmp eq i64 %truthy$cmp97223, 1
br i1 %cmp$cmp97223, label %truebranch$cmp97223, label %falsebranch$cmp97223
truebranch$cmp97223:
%ae49843 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93919$k483820 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97224 = alloca %struct.ScmObj*, align 8
%argslist93919$k483821 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc48139, %struct.ScmObj* %argslist93919$k483820)
store volatile %struct.ScmObj* %argslist93919$k483821, %struct.ScmObj** %stackaddr$prim97224, align 8
%stackaddr$prim97225 = alloca %struct.ScmObj*, align 8
%argslist93919$k483822 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49843, %struct.ScmObj* %argslist93919$k483821)
store volatile %struct.ScmObj* %argslist93919$k483822, %struct.ScmObj** %stackaddr$prim97225, align 8
%clofunc97226 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48382)
musttail call tailcc void %clofunc97226(%struct.ScmObj* %k48382, %struct.ScmObj* %argslist93919$k483822)
ret void
falsebranch$cmp97223:
%stackaddr$makeclosure97227 = alloca %struct.ScmObj*, align 8
%fptrToInt97228 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49848 to i64
%ae49848 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt97228)
store volatile %struct.ScmObj* %ae49848, %struct.ScmObj** %stackaddr$makeclosure97227, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49848, %struct.ScmObj* %lsts48138, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49848, %struct.ScmObj* %_37foldr48058, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49848, %struct.ScmObj* %_37foldl48136, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49848, %struct.ScmObj* %_37map148084, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49848, %struct.ScmObj* %k48382, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49848, %struct.ScmObj* %f48140, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49848, %struct.ScmObj* %acc48139, i64 6)
%ae49849 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97229 = alloca %struct.ScmObj*, align 8
%fptrToInt97230 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49850 to i64
%ae49850 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt97230)
store volatile %struct.ScmObj* %ae49850, %struct.ScmObj** %stackaddr$makeclosure97229, align 8
%argslist93959$ae498480 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97231 = alloca %struct.ScmObj*, align 8
%argslist93959$ae498481 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49850, %struct.ScmObj* %argslist93959$ae498480)
store volatile %struct.ScmObj* %argslist93959$ae498481, %struct.ScmObj** %stackaddr$prim97231, align 8
%stackaddr$prim97232 = alloca %struct.ScmObj*, align 8
%argslist93959$ae498482 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49849, %struct.ScmObj* %argslist93959$ae498481)
store volatile %struct.ScmObj* %argslist93959$ae498482, %struct.ScmObj** %stackaddr$prim97232, align 8
%clofunc97233 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49848)
musttail call tailcc void %clofunc97233(%struct.ScmObj* %ae49848, %struct.ScmObj* %argslist93959$ae498482)
ret void
}

define tailcc void @proc_clo$ae49848(%struct.ScmObj* %env$ae49848,%struct.ScmObj* %current_45args93920) {
%stackaddr$env-ref97234 = alloca %struct.ScmObj*, align 8
%lsts48138 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49848, i64 0)
store %struct.ScmObj* %lsts48138, %struct.ScmObj** %stackaddr$env-ref97234
%stackaddr$env-ref97235 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49848, i64 1)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97235
%stackaddr$env-ref97236 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49848, i64 2)
store %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$env-ref97236
%stackaddr$env-ref97237 = alloca %struct.ScmObj*, align 8
%_37map148084 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49848, i64 3)
store %struct.ScmObj* %_37map148084, %struct.ScmObj** %stackaddr$env-ref97237
%stackaddr$env-ref97238 = alloca %struct.ScmObj*, align 8
%k48382 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49848, i64 4)
store %struct.ScmObj* %k48382, %struct.ScmObj** %stackaddr$env-ref97238
%stackaddr$env-ref97239 = alloca %struct.ScmObj*, align 8
%f48140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49848, i64 5)
store %struct.ScmObj* %f48140, %struct.ScmObj** %stackaddr$env-ref97239
%stackaddr$env-ref97240 = alloca %struct.ScmObj*, align 8
%acc48139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49848, i64 6)
store %struct.ScmObj* %acc48139, %struct.ScmObj** %stackaddr$env-ref97240
%stackaddr$prim97241 = alloca %struct.ScmObj*, align 8
%_95k48385 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93920)
store volatile %struct.ScmObj* %_95k48385, %struct.ScmObj** %stackaddr$prim97241, align 8
%stackaddr$prim97242 = alloca %struct.ScmObj*, align 8
%current_45args93921 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93920)
store volatile %struct.ScmObj* %current_45args93921, %struct.ScmObj** %stackaddr$prim97242, align 8
%stackaddr$prim97243 = alloca %struct.ScmObj*, align 8
%anf_45bind48218 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93921)
store volatile %struct.ScmObj* %anf_45bind48218, %struct.ScmObj** %stackaddr$prim97243, align 8
%stackaddr$makeclosure97244 = alloca %struct.ScmObj*, align 8
%fptrToInt97245 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49869 to i64
%ae49869 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt97245)
store volatile %struct.ScmObj* %ae49869, %struct.ScmObj** %stackaddr$makeclosure97244, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49869, %struct.ScmObj* %lsts48138, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49869, %struct.ScmObj* %_37foldr48058, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49869, %struct.ScmObj* %_37foldl48136, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49869, %struct.ScmObj* %_37map148084, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49869, %struct.ScmObj* %k48382, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49869, %struct.ScmObj* %f48140, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49869, %struct.ScmObj* %acc48139, i64 6)
%argslist93954$_37map1480840 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97246 = alloca %struct.ScmObj*, align 8
%argslist93954$_37map1480841 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts48138, %struct.ScmObj* %argslist93954$_37map1480840)
store volatile %struct.ScmObj* %argslist93954$_37map1480841, %struct.ScmObj** %stackaddr$prim97246, align 8
%stackaddr$prim97247 = alloca %struct.ScmObj*, align 8
%argslist93954$_37map1480842 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48218, %struct.ScmObj* %argslist93954$_37map1480841)
store volatile %struct.ScmObj* %argslist93954$_37map1480842, %struct.ScmObj** %stackaddr$prim97247, align 8
%stackaddr$prim97248 = alloca %struct.ScmObj*, align 8
%argslist93954$_37map1480843 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49869, %struct.ScmObj* %argslist93954$_37map1480842)
store volatile %struct.ScmObj* %argslist93954$_37map1480843, %struct.ScmObj** %stackaddr$prim97248, align 8
%clofunc97249 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37map148084)
musttail call tailcc void %clofunc97249(%struct.ScmObj* %_37map148084, %struct.ScmObj* %argslist93954$_37map1480843)
ret void
}

define tailcc void @proc_clo$ae49869(%struct.ScmObj* %env$ae49869,%struct.ScmObj* %current_45args93923) {
%stackaddr$env-ref97250 = alloca %struct.ScmObj*, align 8
%lsts48138 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49869, i64 0)
store %struct.ScmObj* %lsts48138, %struct.ScmObj** %stackaddr$env-ref97250
%stackaddr$env-ref97251 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49869, i64 1)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97251
%stackaddr$env-ref97252 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49869, i64 2)
store %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$env-ref97252
%stackaddr$env-ref97253 = alloca %struct.ScmObj*, align 8
%_37map148084 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49869, i64 3)
store %struct.ScmObj* %_37map148084, %struct.ScmObj** %stackaddr$env-ref97253
%stackaddr$env-ref97254 = alloca %struct.ScmObj*, align 8
%k48382 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49869, i64 4)
store %struct.ScmObj* %k48382, %struct.ScmObj** %stackaddr$env-ref97254
%stackaddr$env-ref97255 = alloca %struct.ScmObj*, align 8
%f48140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49869, i64 5)
store %struct.ScmObj* %f48140, %struct.ScmObj** %stackaddr$env-ref97255
%stackaddr$env-ref97256 = alloca %struct.ScmObj*, align 8
%acc48139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49869, i64 6)
store %struct.ScmObj* %acc48139, %struct.ScmObj** %stackaddr$env-ref97256
%stackaddr$prim97257 = alloca %struct.ScmObj*, align 8
%_95k48386 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93923)
store volatile %struct.ScmObj* %_95k48386, %struct.ScmObj** %stackaddr$prim97257, align 8
%stackaddr$prim97258 = alloca %struct.ScmObj*, align 8
%current_45args93924 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93923)
store volatile %struct.ScmObj* %current_45args93924, %struct.ScmObj** %stackaddr$prim97258, align 8
%stackaddr$prim97259 = alloca %struct.ScmObj*, align 8
%lsts_4348145 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93924)
store volatile %struct.ScmObj* %lsts_4348145, %struct.ScmObj** %stackaddr$prim97259, align 8
%stackaddr$makeclosure97260 = alloca %struct.ScmObj*, align 8
%fptrToInt97261 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49872 to i64
%ae49872 = call %struct.ScmObj* @closure_alloc(i64 8, i64 %fptrToInt97261)
store volatile %struct.ScmObj* %ae49872, %struct.ScmObj** %stackaddr$makeclosure97260, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49872, %struct.ScmObj* %lsts48138, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49872, %struct.ScmObj* %_37foldr48058, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49872, %struct.ScmObj* %_37foldl48136, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49872, %struct.ScmObj* %_37map148084, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49872, %struct.ScmObj* %lsts_4348145, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49872, %struct.ScmObj* %k48382, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49872, %struct.ScmObj* %f48140, i64 6)
call void @closure_place_freevar(%struct.ScmObj* %ae49872, %struct.ScmObj* %acc48139, i64 7)
%ae49873 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97262 = alloca %struct.ScmObj*, align 8
%fptrToInt97263 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49874 to i64
%ae49874 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt97263)
store volatile %struct.ScmObj* %ae49874, %struct.ScmObj** %stackaddr$makeclosure97262, align 8
%argslist93953$ae498720 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97264 = alloca %struct.ScmObj*, align 8
%argslist93953$ae498721 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49874, %struct.ScmObj* %argslist93953$ae498720)
store volatile %struct.ScmObj* %argslist93953$ae498721, %struct.ScmObj** %stackaddr$prim97264, align 8
%stackaddr$prim97265 = alloca %struct.ScmObj*, align 8
%argslist93953$ae498722 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49873, %struct.ScmObj* %argslist93953$ae498721)
store volatile %struct.ScmObj* %argslist93953$ae498722, %struct.ScmObj** %stackaddr$prim97265, align 8
%clofunc97266 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49872)
musttail call tailcc void %clofunc97266(%struct.ScmObj* %ae49872, %struct.ScmObj* %argslist93953$ae498722)
ret void
}

define tailcc void @proc_clo$ae49872(%struct.ScmObj* %env$ae49872,%struct.ScmObj* %current_45args93926) {
%stackaddr$env-ref97267 = alloca %struct.ScmObj*, align 8
%lsts48138 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49872, i64 0)
store %struct.ScmObj* %lsts48138, %struct.ScmObj** %stackaddr$env-ref97267
%stackaddr$env-ref97268 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49872, i64 1)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97268
%stackaddr$env-ref97269 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49872, i64 2)
store %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$env-ref97269
%stackaddr$env-ref97270 = alloca %struct.ScmObj*, align 8
%_37map148084 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49872, i64 3)
store %struct.ScmObj* %_37map148084, %struct.ScmObj** %stackaddr$env-ref97270
%stackaddr$env-ref97271 = alloca %struct.ScmObj*, align 8
%lsts_4348145 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49872, i64 4)
store %struct.ScmObj* %lsts_4348145, %struct.ScmObj** %stackaddr$env-ref97271
%stackaddr$env-ref97272 = alloca %struct.ScmObj*, align 8
%k48382 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49872, i64 5)
store %struct.ScmObj* %k48382, %struct.ScmObj** %stackaddr$env-ref97272
%stackaddr$env-ref97273 = alloca %struct.ScmObj*, align 8
%f48140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49872, i64 6)
store %struct.ScmObj* %f48140, %struct.ScmObj** %stackaddr$env-ref97273
%stackaddr$env-ref97274 = alloca %struct.ScmObj*, align 8
%acc48139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49872, i64 7)
store %struct.ScmObj* %acc48139, %struct.ScmObj** %stackaddr$env-ref97274
%stackaddr$prim97275 = alloca %struct.ScmObj*, align 8
%_95k48387 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93926)
store volatile %struct.ScmObj* %_95k48387, %struct.ScmObj** %stackaddr$prim97275, align 8
%stackaddr$prim97276 = alloca %struct.ScmObj*, align 8
%current_45args93927 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93926)
store volatile %struct.ScmObj* %current_45args93927, %struct.ScmObj** %stackaddr$prim97276, align 8
%stackaddr$prim97277 = alloca %struct.ScmObj*, align 8
%anf_45bind48219 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93927)
store volatile %struct.ScmObj* %anf_45bind48219, %struct.ScmObj** %stackaddr$prim97277, align 8
%stackaddr$makeclosure97278 = alloca %struct.ScmObj*, align 8
%fptrToInt97279 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49893 to i64
%ae49893 = call %struct.ScmObj* @closure_alloc(i64 6, i64 %fptrToInt97279)
store volatile %struct.ScmObj* %ae49893, %struct.ScmObj** %stackaddr$makeclosure97278, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49893, %struct.ScmObj* %_37foldl48136, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49893, %struct.ScmObj* %lsts_4348145, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49893, %struct.ScmObj* %k48382, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49893, %struct.ScmObj* %f48140, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49893, %struct.ScmObj* %acc48139, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49893, %struct.ScmObj* %_37foldr48058, i64 5)
%argslist93948$_37map1480840 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97280 = alloca %struct.ScmObj*, align 8
%argslist93948$_37map1480841 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts48138, %struct.ScmObj* %argslist93948$_37map1480840)
store volatile %struct.ScmObj* %argslist93948$_37map1480841, %struct.ScmObj** %stackaddr$prim97280, align 8
%stackaddr$prim97281 = alloca %struct.ScmObj*, align 8
%argslist93948$_37map1480842 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48219, %struct.ScmObj* %argslist93948$_37map1480841)
store volatile %struct.ScmObj* %argslist93948$_37map1480842, %struct.ScmObj** %stackaddr$prim97281, align 8
%stackaddr$prim97282 = alloca %struct.ScmObj*, align 8
%argslist93948$_37map1480843 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49893, %struct.ScmObj* %argslist93948$_37map1480842)
store volatile %struct.ScmObj* %argslist93948$_37map1480843, %struct.ScmObj** %stackaddr$prim97282, align 8
%clofunc97283 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37map148084)
musttail call tailcc void %clofunc97283(%struct.ScmObj* %_37map148084, %struct.ScmObj* %argslist93948$_37map1480843)
ret void
}

define tailcc void @proc_clo$ae49893(%struct.ScmObj* %env$ae49893,%struct.ScmObj* %current_45args93929) {
%stackaddr$env-ref97284 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49893, i64 0)
store %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$env-ref97284
%stackaddr$env-ref97285 = alloca %struct.ScmObj*, align 8
%lsts_4348145 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49893, i64 1)
store %struct.ScmObj* %lsts_4348145, %struct.ScmObj** %stackaddr$env-ref97285
%stackaddr$env-ref97286 = alloca %struct.ScmObj*, align 8
%k48382 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49893, i64 2)
store %struct.ScmObj* %k48382, %struct.ScmObj** %stackaddr$env-ref97286
%stackaddr$env-ref97287 = alloca %struct.ScmObj*, align 8
%f48140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49893, i64 3)
store %struct.ScmObj* %f48140, %struct.ScmObj** %stackaddr$env-ref97287
%stackaddr$env-ref97288 = alloca %struct.ScmObj*, align 8
%acc48139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49893, i64 4)
store %struct.ScmObj* %acc48139, %struct.ScmObj** %stackaddr$env-ref97288
%stackaddr$env-ref97289 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49893, i64 5)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97289
%stackaddr$prim97290 = alloca %struct.ScmObj*, align 8
%_95k48388 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93929)
store volatile %struct.ScmObj* %_95k48388, %struct.ScmObj** %stackaddr$prim97290, align 8
%stackaddr$prim97291 = alloca %struct.ScmObj*, align 8
%current_45args93930 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93929)
store volatile %struct.ScmObj* %current_45args93930, %struct.ScmObj** %stackaddr$prim97291, align 8
%stackaddr$prim97292 = alloca %struct.ScmObj*, align 8
%vs48143 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93930)
store volatile %struct.ScmObj* %vs48143, %struct.ScmObj** %stackaddr$prim97292, align 8
%stackaddr$makeclosure97293 = alloca %struct.ScmObj*, align 8
%fptrToInt97294 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49896 to i64
%ae49896 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt97294)
store volatile %struct.ScmObj* %ae49896, %struct.ScmObj** %stackaddr$makeclosure97293, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49896, %struct.ScmObj* %_37foldl48136, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49896, %struct.ScmObj* %lsts_4348145, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49896, %struct.ScmObj* %vs48143, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49896, %struct.ScmObj* %k48382, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49896, %struct.ScmObj* %f48140, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49896, %struct.ScmObj* %acc48139, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49896, %struct.ScmObj* %_37foldr48058, i64 6)
%ae49897 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97295 = alloca %struct.ScmObj*, align 8
%fptrToInt97296 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49898 to i64
%ae49898 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt97296)
store volatile %struct.ScmObj* %ae49898, %struct.ScmObj** %stackaddr$makeclosure97295, align 8
%argslist93947$ae498960 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97297 = alloca %struct.ScmObj*, align 8
%argslist93947$ae498961 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49898, %struct.ScmObj* %argslist93947$ae498960)
store volatile %struct.ScmObj* %argslist93947$ae498961, %struct.ScmObj** %stackaddr$prim97297, align 8
%stackaddr$prim97298 = alloca %struct.ScmObj*, align 8
%argslist93947$ae498962 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49897, %struct.ScmObj* %argslist93947$ae498961)
store volatile %struct.ScmObj* %argslist93947$ae498962, %struct.ScmObj** %stackaddr$prim97298, align 8
%clofunc97299 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49896)
musttail call tailcc void %clofunc97299(%struct.ScmObj* %ae49896, %struct.ScmObj* %argslist93947$ae498962)
ret void
}

define tailcc void @proc_clo$ae49896(%struct.ScmObj* %env$ae49896,%struct.ScmObj* %current_45args93932) {
%stackaddr$env-ref97300 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49896, i64 0)
store %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$env-ref97300
%stackaddr$env-ref97301 = alloca %struct.ScmObj*, align 8
%lsts_4348145 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49896, i64 1)
store %struct.ScmObj* %lsts_4348145, %struct.ScmObj** %stackaddr$env-ref97301
%stackaddr$env-ref97302 = alloca %struct.ScmObj*, align 8
%vs48143 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49896, i64 2)
store %struct.ScmObj* %vs48143, %struct.ScmObj** %stackaddr$env-ref97302
%stackaddr$env-ref97303 = alloca %struct.ScmObj*, align 8
%k48382 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49896, i64 3)
store %struct.ScmObj* %k48382, %struct.ScmObj** %stackaddr$env-ref97303
%stackaddr$env-ref97304 = alloca %struct.ScmObj*, align 8
%f48140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49896, i64 4)
store %struct.ScmObj* %f48140, %struct.ScmObj** %stackaddr$env-ref97304
%stackaddr$env-ref97305 = alloca %struct.ScmObj*, align 8
%acc48139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49896, i64 5)
store %struct.ScmObj* %acc48139, %struct.ScmObj** %stackaddr$env-ref97305
%stackaddr$env-ref97306 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49896, i64 6)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97306
%stackaddr$prim97307 = alloca %struct.ScmObj*, align 8
%_95k48389 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93932)
store volatile %struct.ScmObj* %_95k48389, %struct.ScmObj** %stackaddr$prim97307, align 8
%stackaddr$prim97308 = alloca %struct.ScmObj*, align 8
%current_45args93933 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93932)
store volatile %struct.ScmObj* %current_45args93933, %struct.ScmObj** %stackaddr$prim97308, align 8
%stackaddr$prim97309 = alloca %struct.ScmObj*, align 8
%anf_45bind48220 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93933)
store volatile %struct.ScmObj* %anf_45bind48220, %struct.ScmObj** %stackaddr$prim97309, align 8
%ae49919 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97310 = alloca %struct.ScmObj*, align 8
%anf_45bind48221 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc48139, %struct.ScmObj* %ae49919)
store volatile %struct.ScmObj* %anf_45bind48221, %struct.ScmObj** %stackaddr$prim97310, align 8
%stackaddr$makeclosure97311 = alloca %struct.ScmObj*, align 8
%fptrToInt97312 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49921 to i64
%ae49921 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt97312)
store volatile %struct.ScmObj* %ae49921, %struct.ScmObj** %stackaddr$makeclosure97311, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49921, %struct.ScmObj* %_37foldl48136, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49921, %struct.ScmObj* %lsts_4348145, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49921, %struct.ScmObj* %k48382, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49921, %struct.ScmObj* %f48140, i64 3)
%argslist93941$_37foldr480580 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97313 = alloca %struct.ScmObj*, align 8
%argslist93941$_37foldr480581 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %vs48143, %struct.ScmObj* %argslist93941$_37foldr480580)
store volatile %struct.ScmObj* %argslist93941$_37foldr480581, %struct.ScmObj** %stackaddr$prim97313, align 8
%stackaddr$prim97314 = alloca %struct.ScmObj*, align 8
%argslist93941$_37foldr480582 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48221, %struct.ScmObj* %argslist93941$_37foldr480581)
store volatile %struct.ScmObj* %argslist93941$_37foldr480582, %struct.ScmObj** %stackaddr$prim97314, align 8
%stackaddr$prim97315 = alloca %struct.ScmObj*, align 8
%argslist93941$_37foldr480583 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48220, %struct.ScmObj* %argslist93941$_37foldr480582)
store volatile %struct.ScmObj* %argslist93941$_37foldr480583, %struct.ScmObj** %stackaddr$prim97315, align 8
%stackaddr$prim97316 = alloca %struct.ScmObj*, align 8
%argslist93941$_37foldr480584 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49921, %struct.ScmObj* %argslist93941$_37foldr480583)
store volatile %struct.ScmObj* %argslist93941$_37foldr480584, %struct.ScmObj** %stackaddr$prim97316, align 8
%clofunc97317 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr48058)
musttail call tailcc void %clofunc97317(%struct.ScmObj* %_37foldr48058, %struct.ScmObj* %argslist93941$_37foldr480584)
ret void
}

define tailcc void @proc_clo$ae49921(%struct.ScmObj* %env$ae49921,%struct.ScmObj* %current_45args93935) {
%stackaddr$env-ref97318 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49921, i64 0)
store %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$env-ref97318
%stackaddr$env-ref97319 = alloca %struct.ScmObj*, align 8
%lsts_4348145 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49921, i64 1)
store %struct.ScmObj* %lsts_4348145, %struct.ScmObj** %stackaddr$env-ref97319
%stackaddr$env-ref97320 = alloca %struct.ScmObj*, align 8
%k48382 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49921, i64 2)
store %struct.ScmObj* %k48382, %struct.ScmObj** %stackaddr$env-ref97320
%stackaddr$env-ref97321 = alloca %struct.ScmObj*, align 8
%f48140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49921, i64 3)
store %struct.ScmObj* %f48140, %struct.ScmObj** %stackaddr$env-ref97321
%stackaddr$prim97322 = alloca %struct.ScmObj*, align 8
%_95k48390 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93935)
store volatile %struct.ScmObj* %_95k48390, %struct.ScmObj** %stackaddr$prim97322, align 8
%stackaddr$prim97323 = alloca %struct.ScmObj*, align 8
%current_45args93936 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93935)
store volatile %struct.ScmObj* %current_45args93936, %struct.ScmObj** %stackaddr$prim97323, align 8
%stackaddr$prim97324 = alloca %struct.ScmObj*, align 8
%anf_45bind48222 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93936)
store volatile %struct.ScmObj* %anf_45bind48222, %struct.ScmObj** %stackaddr$prim97324, align 8
%stackaddr$makeclosure97325 = alloca %struct.ScmObj*, align 8
%fptrToInt97326 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49925 to i64
%ae49925 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt97326)
store volatile %struct.ScmObj* %ae49925, %struct.ScmObj** %stackaddr$makeclosure97325, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49925, %struct.ScmObj* %_37foldl48136, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49925, %struct.ScmObj* %lsts_4348145, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49925, %struct.ScmObj* %k48382, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49925, %struct.ScmObj* %f48140, i64 3)
%stackaddr$prim97327 = alloca %struct.ScmObj*, align 8
%cpsargs48393 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49925, %struct.ScmObj* %anf_45bind48222)
store volatile %struct.ScmObj* %cpsargs48393, %struct.ScmObj** %stackaddr$prim97327, align 8
%clofunc97328 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f48140)
musttail call tailcc void %clofunc97328(%struct.ScmObj* %f48140, %struct.ScmObj* %cpsargs48393)
ret void
}

define tailcc void @proc_clo$ae49925(%struct.ScmObj* %env$ae49925,%struct.ScmObj* %current_45args93938) {
%stackaddr$env-ref97329 = alloca %struct.ScmObj*, align 8
%_37foldl48136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49925, i64 0)
store %struct.ScmObj* %_37foldl48136, %struct.ScmObj** %stackaddr$env-ref97329
%stackaddr$env-ref97330 = alloca %struct.ScmObj*, align 8
%lsts_4348145 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49925, i64 1)
store %struct.ScmObj* %lsts_4348145, %struct.ScmObj** %stackaddr$env-ref97330
%stackaddr$env-ref97331 = alloca %struct.ScmObj*, align 8
%k48382 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49925, i64 2)
store %struct.ScmObj* %k48382, %struct.ScmObj** %stackaddr$env-ref97331
%stackaddr$env-ref97332 = alloca %struct.ScmObj*, align 8
%f48140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49925, i64 3)
store %struct.ScmObj* %f48140, %struct.ScmObj** %stackaddr$env-ref97332
%stackaddr$prim97333 = alloca %struct.ScmObj*, align 8
%_95k48391 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93938)
store volatile %struct.ScmObj* %_95k48391, %struct.ScmObj** %stackaddr$prim97333, align 8
%stackaddr$prim97334 = alloca %struct.ScmObj*, align 8
%current_45args93939 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93938)
store volatile %struct.ScmObj* %current_45args93939, %struct.ScmObj** %stackaddr$prim97334, align 8
%stackaddr$prim97335 = alloca %struct.ScmObj*, align 8
%acc_4348147 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93939)
store volatile %struct.ScmObj* %acc_4348147, %struct.ScmObj** %stackaddr$prim97335, align 8
%stackaddr$prim97336 = alloca %struct.ScmObj*, align 8
%anf_45bind48223 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc_4348147, %struct.ScmObj* %lsts_4348145)
store volatile %struct.ScmObj* %anf_45bind48223, %struct.ScmObj** %stackaddr$prim97336, align 8
%stackaddr$prim97337 = alloca %struct.ScmObj*, align 8
%anf_45bind48224 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f48140, %struct.ScmObj* %anf_45bind48223)
store volatile %struct.ScmObj* %anf_45bind48224, %struct.ScmObj** %stackaddr$prim97337, align 8
%stackaddr$prim97338 = alloca %struct.ScmObj*, align 8
%cpsargs48392 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48382, %struct.ScmObj* %anf_45bind48224)
store volatile %struct.ScmObj* %cpsargs48392, %struct.ScmObj** %stackaddr$prim97338, align 8
%clofunc97339 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldl48136)
musttail call tailcc void %clofunc97339(%struct.ScmObj* %_37foldl48136, %struct.ScmObj* %cpsargs48392)
ret void
}

define tailcc void @proc_clo$ae49898(%struct.ScmObj* %env$ae49898,%struct.ScmObj* %current_45args93942) {
%stackaddr$prim97340 = alloca %struct.ScmObj*, align 8
%k48394 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93942)
store volatile %struct.ScmObj* %k48394, %struct.ScmObj** %stackaddr$prim97340, align 8
%stackaddr$prim97341 = alloca %struct.ScmObj*, align 8
%current_45args93943 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93942)
store volatile %struct.ScmObj* %current_45args93943, %struct.ScmObj** %stackaddr$prim97341, align 8
%stackaddr$prim97342 = alloca %struct.ScmObj*, align 8
%a48149 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93943)
store volatile %struct.ScmObj* %a48149, %struct.ScmObj** %stackaddr$prim97342, align 8
%stackaddr$prim97343 = alloca %struct.ScmObj*, align 8
%current_45args93944 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93943)
store volatile %struct.ScmObj* %current_45args93944, %struct.ScmObj** %stackaddr$prim97343, align 8
%stackaddr$prim97344 = alloca %struct.ScmObj*, align 8
%b48148 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93944)
store volatile %struct.ScmObj* %b48148, %struct.ScmObj** %stackaddr$prim97344, align 8
%stackaddr$prim97345 = alloca %struct.ScmObj*, align 8
%cpsprim48395 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %a48149, %struct.ScmObj* %b48148)
store volatile %struct.ScmObj* %cpsprim48395, %struct.ScmObj** %stackaddr$prim97345, align 8
%ae49902 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93946$k483940 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97346 = alloca %struct.ScmObj*, align 8
%argslist93946$k483941 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48395, %struct.ScmObj* %argslist93946$k483940)
store volatile %struct.ScmObj* %argslist93946$k483941, %struct.ScmObj** %stackaddr$prim97346, align 8
%stackaddr$prim97347 = alloca %struct.ScmObj*, align 8
%argslist93946$k483942 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49902, %struct.ScmObj* %argslist93946$k483941)
store volatile %struct.ScmObj* %argslist93946$k483942, %struct.ScmObj** %stackaddr$prim97347, align 8
%clofunc97348 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48394)
musttail call tailcc void %clofunc97348(%struct.ScmObj* %k48394, %struct.ScmObj* %argslist93946$k483942)
ret void
}

define tailcc void @proc_clo$ae49874(%struct.ScmObj* %env$ae49874,%struct.ScmObj* %current_45args93949) {
%stackaddr$prim97349 = alloca %struct.ScmObj*, align 8
%k48396 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93949)
store volatile %struct.ScmObj* %k48396, %struct.ScmObj** %stackaddr$prim97349, align 8
%stackaddr$prim97350 = alloca %struct.ScmObj*, align 8
%current_45args93950 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93949)
store volatile %struct.ScmObj* %current_45args93950, %struct.ScmObj** %stackaddr$prim97350, align 8
%stackaddr$prim97351 = alloca %struct.ScmObj*, align 8
%x48144 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93950)
store volatile %struct.ScmObj* %x48144, %struct.ScmObj** %stackaddr$prim97351, align 8
%stackaddr$prim97352 = alloca %struct.ScmObj*, align 8
%cpsprim48397 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %x48144)
store volatile %struct.ScmObj* %cpsprim48397, %struct.ScmObj** %stackaddr$prim97352, align 8
%ae49877 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93952$k483960 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97353 = alloca %struct.ScmObj*, align 8
%argslist93952$k483961 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48397, %struct.ScmObj* %argslist93952$k483960)
store volatile %struct.ScmObj* %argslist93952$k483961, %struct.ScmObj** %stackaddr$prim97353, align 8
%stackaddr$prim97354 = alloca %struct.ScmObj*, align 8
%argslist93952$k483962 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49877, %struct.ScmObj* %argslist93952$k483961)
store volatile %struct.ScmObj* %argslist93952$k483962, %struct.ScmObj** %stackaddr$prim97354, align 8
%clofunc97355 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48396)
musttail call tailcc void %clofunc97355(%struct.ScmObj* %k48396, %struct.ScmObj* %argslist93952$k483962)
ret void
}

define tailcc void @proc_clo$ae49850(%struct.ScmObj* %env$ae49850,%struct.ScmObj* %current_45args93955) {
%stackaddr$prim97356 = alloca %struct.ScmObj*, align 8
%k48398 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93955)
store volatile %struct.ScmObj* %k48398, %struct.ScmObj** %stackaddr$prim97356, align 8
%stackaddr$prim97357 = alloca %struct.ScmObj*, align 8
%current_45args93956 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93955)
store volatile %struct.ScmObj* %current_45args93956, %struct.ScmObj** %stackaddr$prim97357, align 8
%stackaddr$prim97358 = alloca %struct.ScmObj*, align 8
%x48146 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93956)
store volatile %struct.ScmObj* %x48146, %struct.ScmObj** %stackaddr$prim97358, align 8
%stackaddr$prim97359 = alloca %struct.ScmObj*, align 8
%cpsprim48399 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %x48146)
store volatile %struct.ScmObj* %cpsprim48399, %struct.ScmObj** %stackaddr$prim97359, align 8
%ae49853 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93958$k483980 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97360 = alloca %struct.ScmObj*, align 8
%argslist93958$k483981 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48399, %struct.ScmObj* %argslist93958$k483980)
store volatile %struct.ScmObj* %argslist93958$k483981, %struct.ScmObj** %stackaddr$prim97360, align 8
%stackaddr$prim97361 = alloca %struct.ScmObj*, align 8
%argslist93958$k483982 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49853, %struct.ScmObj* %argslist93958$k483981)
store volatile %struct.ScmObj* %argslist93958$k483982, %struct.ScmObj** %stackaddr$prim97361, align 8
%clofunc97362 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48398)
musttail call tailcc void %clofunc97362(%struct.ScmObj* %k48398, %struct.ScmObj* %argslist93958$k483982)
ret void
}

define tailcc void @proc_clo$ae49802(%struct.ScmObj* %env$ae49802,%struct.ScmObj* %current_45args93961) {
%stackaddr$prim97363 = alloca %struct.ScmObj*, align 8
%k48400 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93961)
store volatile %struct.ScmObj* %k48400, %struct.ScmObj** %stackaddr$prim97363, align 8
%stackaddr$prim97364 = alloca %struct.ScmObj*, align 8
%current_45args93962 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93961)
store volatile %struct.ScmObj* %current_45args93962, %struct.ScmObj** %stackaddr$prim97364, align 8
%stackaddr$prim97365 = alloca %struct.ScmObj*, align 8
%lst48142 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93962)
store volatile %struct.ScmObj* %lst48142, %struct.ScmObj** %stackaddr$prim97365, align 8
%stackaddr$prim97366 = alloca %struct.ScmObj*, align 8
%current_45args93963 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93962)
store volatile %struct.ScmObj* %current_45args93963, %struct.ScmObj** %stackaddr$prim97366, align 8
%stackaddr$prim97367 = alloca %struct.ScmObj*, align 8
%b48141 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93963)
store volatile %struct.ScmObj* %b48141, %struct.ScmObj** %stackaddr$prim97367, align 8
%truthy$cmp97368 = call i64 @is_truthy_value(%struct.ScmObj* %b48141)
%cmp$cmp97368 = icmp eq i64 %truthy$cmp97368, 1
br i1 %cmp$cmp97368, label %truebranch$cmp97368, label %falsebranch$cmp97368
truebranch$cmp97368:
%ae49805 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93965$k484000 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97369 = alloca %struct.ScmObj*, align 8
%argslist93965$k484001 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %b48141, %struct.ScmObj* %argslist93965$k484000)
store volatile %struct.ScmObj* %argslist93965$k484001, %struct.ScmObj** %stackaddr$prim97369, align 8
%stackaddr$prim97370 = alloca %struct.ScmObj*, align 8
%argslist93965$k484002 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49805, %struct.ScmObj* %argslist93965$k484001)
store volatile %struct.ScmObj* %argslist93965$k484002, %struct.ScmObj** %stackaddr$prim97370, align 8
%clofunc97371 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48400)
musttail call tailcc void %clofunc97371(%struct.ScmObj* %k48400, %struct.ScmObj* %argslist93965$k484002)
ret void
falsebranch$cmp97368:
%stackaddr$prim97372 = alloca %struct.ScmObj*, align 8
%cpsprim48401 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst48142)
store volatile %struct.ScmObj* %cpsprim48401, %struct.ScmObj** %stackaddr$prim97372, align 8
%ae49812 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93966$k484000 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97373 = alloca %struct.ScmObj*, align 8
%argslist93966$k484001 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48401, %struct.ScmObj* %argslist93966$k484000)
store volatile %struct.ScmObj* %argslist93966$k484001, %struct.ScmObj** %stackaddr$prim97373, align 8
%stackaddr$prim97374 = alloca %struct.ScmObj*, align 8
%argslist93966$k484002 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49812, %struct.ScmObj* %argslist93966$k484001)
store volatile %struct.ScmObj* %argslist93966$k484002, %struct.ScmObj** %stackaddr$prim97374, align 8
%clofunc97375 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48400)
musttail call tailcc void %clofunc97375(%struct.ScmObj* %k48400, %struct.ScmObj* %argslist93966$k484002)
ret void
}

define tailcc void @proc_clo$ae49643(%struct.ScmObj* %env$ae49643,%struct.ScmObj* %args4808048402) {
%stackaddr$env-ref97376 = alloca %struct.ScmObj*, align 8
%_37drop_45right48072 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49643, i64 0)
store %struct.ScmObj* %_37drop_45right48072, %struct.ScmObj** %stackaddr$env-ref97376
%stackaddr$env-ref97377 = alloca %struct.ScmObj*, align 8
%_37last48075 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49643, i64 1)
store %struct.ScmObj* %_37last48075, %struct.ScmObj** %stackaddr$env-ref97377
%stackaddr$env-ref97378 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49643, i64 2)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97378
%stackaddr$prim97379 = alloca %struct.ScmObj*, align 8
%k48403 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args4808048402)
store volatile %struct.ScmObj* %k48403, %struct.ScmObj** %stackaddr$prim97379, align 8
%stackaddr$prim97380 = alloca %struct.ScmObj*, align 8
%args48080 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args4808048402)
store volatile %struct.ScmObj* %args48080, %struct.ScmObj** %stackaddr$prim97380, align 8
%stackaddr$prim97381 = alloca %struct.ScmObj*, align 8
%f48082 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args48080)
store volatile %struct.ScmObj* %f48082, %struct.ScmObj** %stackaddr$prim97381, align 8
%stackaddr$prim97382 = alloca %struct.ScmObj*, align 8
%lsts48081 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args48080)
store volatile %struct.ScmObj* %lsts48081, %struct.ScmObj** %stackaddr$prim97382, align 8
%stackaddr$makeclosure97383 = alloca %struct.ScmObj*, align 8
%fptrToInt97384 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49648 to i64
%ae49648 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt97384)
store volatile %struct.ScmObj* %ae49648, %struct.ScmObj** %stackaddr$makeclosure97383, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49648, %struct.ScmObj* %k48403, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49648, %struct.ScmObj* %lsts48081, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49648, %struct.ScmObj* %_37foldr48058, i64 2)
%ae49649 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97385 = alloca %struct.ScmObj*, align 8
%fptrToInt97386 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49650 to i64
%ae49650 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt97386)
store volatile %struct.ScmObj* %ae49650, %struct.ScmObj** %stackaddr$makeclosure97385, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49650, %struct.ScmObj* %_37drop_45right48072, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49650, %struct.ScmObj* %f48082, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49650, %struct.ScmObj* %_37last48075, i64 2)
%argslist93985$ae496480 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97387 = alloca %struct.ScmObj*, align 8
%argslist93985$ae496481 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49650, %struct.ScmObj* %argslist93985$ae496480)
store volatile %struct.ScmObj* %argslist93985$ae496481, %struct.ScmObj** %stackaddr$prim97387, align 8
%stackaddr$prim97388 = alloca %struct.ScmObj*, align 8
%argslist93985$ae496482 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49649, %struct.ScmObj* %argslist93985$ae496481)
store volatile %struct.ScmObj* %argslist93985$ae496482, %struct.ScmObj** %stackaddr$prim97388, align 8
%clofunc97389 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49648)
musttail call tailcc void %clofunc97389(%struct.ScmObj* %ae49648, %struct.ScmObj* %argslist93985$ae496482)
ret void
}

define tailcc void @proc_clo$ae49648(%struct.ScmObj* %env$ae49648,%struct.ScmObj* %current_45args93970) {
%stackaddr$env-ref97390 = alloca %struct.ScmObj*, align 8
%k48403 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49648, i64 0)
store %struct.ScmObj* %k48403, %struct.ScmObj** %stackaddr$env-ref97390
%stackaddr$env-ref97391 = alloca %struct.ScmObj*, align 8
%lsts48081 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49648, i64 1)
store %struct.ScmObj* %lsts48081, %struct.ScmObj** %stackaddr$env-ref97391
%stackaddr$env-ref97392 = alloca %struct.ScmObj*, align 8
%_37foldr48058 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49648, i64 2)
store %struct.ScmObj* %_37foldr48058, %struct.ScmObj** %stackaddr$env-ref97392
%stackaddr$prim97393 = alloca %struct.ScmObj*, align 8
%_95k48404 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93970)
store volatile %struct.ScmObj* %_95k48404, %struct.ScmObj** %stackaddr$prim97393, align 8
%stackaddr$prim97394 = alloca %struct.ScmObj*, align 8
%current_45args93971 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93970)
store volatile %struct.ScmObj* %current_45args93971, %struct.ScmObj** %stackaddr$prim97394, align 8
%stackaddr$prim97395 = alloca %struct.ScmObj*, align 8
%anf_45bind48211 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93971)
store volatile %struct.ScmObj* %anf_45bind48211, %struct.ScmObj** %stackaddr$prim97395, align 8
%ae49711 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97396 = alloca %struct.ScmObj*, align 8
%anf_45bind48212 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49711, %struct.ScmObj* %lsts48081)
store volatile %struct.ScmObj* %anf_45bind48212, %struct.ScmObj** %stackaddr$prim97396, align 8
%stackaddr$prim97397 = alloca %struct.ScmObj*, align 8
%anf_45bind48213 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48211, %struct.ScmObj* %anf_45bind48212)
store volatile %struct.ScmObj* %anf_45bind48213, %struct.ScmObj** %stackaddr$prim97397, align 8
%stackaddr$prim97398 = alloca %struct.ScmObj*, align 8
%cpsargs48405 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48403, %struct.ScmObj* %anf_45bind48213)
store volatile %struct.ScmObj* %cpsargs48405, %struct.ScmObj** %stackaddr$prim97398, align 8
%clofunc97399 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr48058)
musttail call tailcc void %clofunc97399(%struct.ScmObj* %_37foldr48058, %struct.ScmObj* %cpsargs48405)
ret void
}

define tailcc void @proc_clo$ae49650(%struct.ScmObj* %env$ae49650,%struct.ScmObj* %fargs4808348406) {
%stackaddr$env-ref97400 = alloca %struct.ScmObj*, align 8
%_37drop_45right48072 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49650, i64 0)
store %struct.ScmObj* %_37drop_45right48072, %struct.ScmObj** %stackaddr$env-ref97400
%stackaddr$env-ref97401 = alloca %struct.ScmObj*, align 8
%f48082 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49650, i64 1)
store %struct.ScmObj* %f48082, %struct.ScmObj** %stackaddr$env-ref97401
%stackaddr$env-ref97402 = alloca %struct.ScmObj*, align 8
%_37last48075 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49650, i64 2)
store %struct.ScmObj* %_37last48075, %struct.ScmObj** %stackaddr$env-ref97402
%stackaddr$prim97403 = alloca %struct.ScmObj*, align 8
%k48407 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %fargs4808348406)
store volatile %struct.ScmObj* %k48407, %struct.ScmObj** %stackaddr$prim97403, align 8
%stackaddr$prim97404 = alloca %struct.ScmObj*, align 8
%fargs48083 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %fargs4808348406)
store volatile %struct.ScmObj* %fargs48083, %struct.ScmObj** %stackaddr$prim97404, align 8
%stackaddr$makeclosure97405 = alloca %struct.ScmObj*, align 8
%fptrToInt97406 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49654 to i64
%ae49654 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt97406)
store volatile %struct.ScmObj* %ae49654, %struct.ScmObj** %stackaddr$makeclosure97405, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49654, %struct.ScmObj* %k48407, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49654, %struct.ScmObj* %fargs48083, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49654, %struct.ScmObj* %f48082, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49654, %struct.ScmObj* %_37last48075, i64 3)
%ae49656 = call %struct.ScmObj* @const_init_int(i64 1)
%argslist93984$_37drop_45right480720 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97407 = alloca %struct.ScmObj*, align 8
%argslist93984$_37drop_45right480721 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49656, %struct.ScmObj* %argslist93984$_37drop_45right480720)
store volatile %struct.ScmObj* %argslist93984$_37drop_45right480721, %struct.ScmObj** %stackaddr$prim97407, align 8
%stackaddr$prim97408 = alloca %struct.ScmObj*, align 8
%argslist93984$_37drop_45right480722 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %fargs48083, %struct.ScmObj* %argslist93984$_37drop_45right480721)
store volatile %struct.ScmObj* %argslist93984$_37drop_45right480722, %struct.ScmObj** %stackaddr$prim97408, align 8
%stackaddr$prim97409 = alloca %struct.ScmObj*, align 8
%argslist93984$_37drop_45right480723 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49654, %struct.ScmObj* %argslist93984$_37drop_45right480722)
store volatile %struct.ScmObj* %argslist93984$_37drop_45right480723, %struct.ScmObj** %stackaddr$prim97409, align 8
%clofunc97410 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37drop_45right48072)
musttail call tailcc void %clofunc97410(%struct.ScmObj* %_37drop_45right48072, %struct.ScmObj* %argslist93984$_37drop_45right480723)
ret void
}

define tailcc void @proc_clo$ae49654(%struct.ScmObj* %env$ae49654,%struct.ScmObj* %current_45args93973) {
%stackaddr$env-ref97411 = alloca %struct.ScmObj*, align 8
%k48407 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49654, i64 0)
store %struct.ScmObj* %k48407, %struct.ScmObj** %stackaddr$env-ref97411
%stackaddr$env-ref97412 = alloca %struct.ScmObj*, align 8
%fargs48083 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49654, i64 1)
store %struct.ScmObj* %fargs48083, %struct.ScmObj** %stackaddr$env-ref97412
%stackaddr$env-ref97413 = alloca %struct.ScmObj*, align 8
%f48082 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49654, i64 2)
store %struct.ScmObj* %f48082, %struct.ScmObj** %stackaddr$env-ref97413
%stackaddr$env-ref97414 = alloca %struct.ScmObj*, align 8
%_37last48075 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49654, i64 3)
store %struct.ScmObj* %_37last48075, %struct.ScmObj** %stackaddr$env-ref97414
%stackaddr$prim97415 = alloca %struct.ScmObj*, align 8
%_95k48408 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93973)
store volatile %struct.ScmObj* %_95k48408, %struct.ScmObj** %stackaddr$prim97415, align 8
%stackaddr$prim97416 = alloca %struct.ScmObj*, align 8
%current_45args93974 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93973)
store volatile %struct.ScmObj* %current_45args93974, %struct.ScmObj** %stackaddr$prim97416, align 8
%stackaddr$prim97417 = alloca %struct.ScmObj*, align 8
%anf_45bind48208 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93974)
store volatile %struct.ScmObj* %anf_45bind48208, %struct.ScmObj** %stackaddr$prim97417, align 8
%stackaddr$makeclosure97418 = alloca %struct.ScmObj*, align 8
%fptrToInt97419 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49661 to i64
%ae49661 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt97419)
store volatile %struct.ScmObj* %ae49661, %struct.ScmObj** %stackaddr$makeclosure97418, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49661, %struct.ScmObj* %k48407, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49661, %struct.ScmObj* %fargs48083, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49661, %struct.ScmObj* %_37last48075, i64 2)
%stackaddr$prim97420 = alloca %struct.ScmObj*, align 8
%cpsargs48412 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49661, %struct.ScmObj* %anf_45bind48208)
store volatile %struct.ScmObj* %cpsargs48412, %struct.ScmObj** %stackaddr$prim97420, align 8
%clofunc97421 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f48082)
musttail call tailcc void %clofunc97421(%struct.ScmObj* %f48082, %struct.ScmObj* %cpsargs48412)
ret void
}

define tailcc void @proc_clo$ae49661(%struct.ScmObj* %env$ae49661,%struct.ScmObj* %current_45args93976) {
%stackaddr$env-ref97422 = alloca %struct.ScmObj*, align 8
%k48407 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49661, i64 0)
store %struct.ScmObj* %k48407, %struct.ScmObj** %stackaddr$env-ref97422
%stackaddr$env-ref97423 = alloca %struct.ScmObj*, align 8
%fargs48083 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49661, i64 1)
store %struct.ScmObj* %fargs48083, %struct.ScmObj** %stackaddr$env-ref97423
%stackaddr$env-ref97424 = alloca %struct.ScmObj*, align 8
%_37last48075 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49661, i64 2)
store %struct.ScmObj* %_37last48075, %struct.ScmObj** %stackaddr$env-ref97424
%stackaddr$prim97425 = alloca %struct.ScmObj*, align 8
%_95k48409 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93976)
store volatile %struct.ScmObj* %_95k48409, %struct.ScmObj** %stackaddr$prim97425, align 8
%stackaddr$prim97426 = alloca %struct.ScmObj*, align 8
%current_45args93977 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93976)
store volatile %struct.ScmObj* %current_45args93977, %struct.ScmObj** %stackaddr$prim97426, align 8
%stackaddr$prim97427 = alloca %struct.ScmObj*, align 8
%anf_45bind48209 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93977)
store volatile %struct.ScmObj* %anf_45bind48209, %struct.ScmObj** %stackaddr$prim97427, align 8
%stackaddr$makeclosure97428 = alloca %struct.ScmObj*, align 8
%fptrToInt97429 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49666 to i64
%ae49666 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97429)
store volatile %struct.ScmObj* %ae49666, %struct.ScmObj** %stackaddr$makeclosure97428, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49666, %struct.ScmObj* %k48407, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49666, %struct.ScmObj* %anf_45bind48209, i64 1)
%argslist93983$_37last480750 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97430 = alloca %struct.ScmObj*, align 8
%argslist93983$_37last480751 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %fargs48083, %struct.ScmObj* %argslist93983$_37last480750)
store volatile %struct.ScmObj* %argslist93983$_37last480751, %struct.ScmObj** %stackaddr$prim97430, align 8
%stackaddr$prim97431 = alloca %struct.ScmObj*, align 8
%argslist93983$_37last480752 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49666, %struct.ScmObj* %argslist93983$_37last480751)
store volatile %struct.ScmObj* %argslist93983$_37last480752, %struct.ScmObj** %stackaddr$prim97431, align 8
%clofunc97432 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37last48075)
musttail call tailcc void %clofunc97432(%struct.ScmObj* %_37last48075, %struct.ScmObj* %argslist93983$_37last480752)
ret void
}

define tailcc void @proc_clo$ae49666(%struct.ScmObj* %env$ae49666,%struct.ScmObj* %current_45args93979) {
%stackaddr$env-ref97433 = alloca %struct.ScmObj*, align 8
%k48407 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49666, i64 0)
store %struct.ScmObj* %k48407, %struct.ScmObj** %stackaddr$env-ref97433
%stackaddr$env-ref97434 = alloca %struct.ScmObj*, align 8
%anf_45bind48209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49666, i64 1)
store %struct.ScmObj* %anf_45bind48209, %struct.ScmObj** %stackaddr$env-ref97434
%stackaddr$prim97435 = alloca %struct.ScmObj*, align 8
%_95k48410 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93979)
store volatile %struct.ScmObj* %_95k48410, %struct.ScmObj** %stackaddr$prim97435, align 8
%stackaddr$prim97436 = alloca %struct.ScmObj*, align 8
%current_45args93980 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93979)
store volatile %struct.ScmObj* %current_45args93980, %struct.ScmObj** %stackaddr$prim97436, align 8
%stackaddr$prim97437 = alloca %struct.ScmObj*, align 8
%anf_45bind48210 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93980)
store volatile %struct.ScmObj* %anf_45bind48210, %struct.ScmObj** %stackaddr$prim97437, align 8
%stackaddr$prim97438 = alloca %struct.ScmObj*, align 8
%cpsprim48411 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48209, %struct.ScmObj* %anf_45bind48210)
store volatile %struct.ScmObj* %cpsprim48411, %struct.ScmObj** %stackaddr$prim97438, align 8
%ae49671 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist93982$k484070 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97439 = alloca %struct.ScmObj*, align 8
%argslist93982$k484071 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48411, %struct.ScmObj* %argslist93982$k484070)
store volatile %struct.ScmObj* %argslist93982$k484071, %struct.ScmObj** %stackaddr$prim97439, align 8
%stackaddr$prim97440 = alloca %struct.ScmObj*, align 8
%argslist93982$k484072 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49671, %struct.ScmObj* %argslist93982$k484071)
store volatile %struct.ScmObj* %argslist93982$k484072, %struct.ScmObj** %stackaddr$prim97440, align 8
%clofunc97441 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48407)
musttail call tailcc void %clofunc97441(%struct.ScmObj* %k48407, %struct.ScmObj* %argslist93982$k484072)
ret void
}

define tailcc void @proc_clo$ae49566(%struct.ScmObj* %env$ae49566,%struct.ScmObj* %current_45args93987) {
%stackaddr$env-ref97442 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49566, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97442
%stackaddr$prim97443 = alloca %struct.ScmObj*, align 8
%k48413 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93987)
store volatile %struct.ScmObj* %k48413, %struct.ScmObj** %stackaddr$prim97443, align 8
%stackaddr$prim97444 = alloca %struct.ScmObj*, align 8
%current_45args93988 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93987)
store volatile %struct.ScmObj* %current_45args93988, %struct.ScmObj** %stackaddr$prim97444, align 8
%stackaddr$prim97445 = alloca %struct.ScmObj*, align 8
%f48086 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93988)
store volatile %struct.ScmObj* %f48086, %struct.ScmObj** %stackaddr$prim97445, align 8
%stackaddr$prim97446 = alloca %struct.ScmObj*, align 8
%current_45args93989 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93988)
store volatile %struct.ScmObj* %current_45args93989, %struct.ScmObj** %stackaddr$prim97446, align 8
%stackaddr$prim97447 = alloca %struct.ScmObj*, align 8
%lst48085 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93989)
store volatile %struct.ScmObj* %lst48085, %struct.ScmObj** %stackaddr$prim97447, align 8
%stackaddr$makeclosure97448 = alloca %struct.ScmObj*, align 8
%fptrToInt97449 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49567 to i64
%ae49567 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt97449)
store volatile %struct.ScmObj* %ae49567, %struct.ScmObj** %stackaddr$makeclosure97448, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49567, %struct.ScmObj* %lst48085, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49567, %struct.ScmObj* %_37foldr148053, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49567, %struct.ScmObj* %k48413, i64 2)
%ae49568 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97450 = alloca %struct.ScmObj*, align 8
%fptrToInt97451 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49569 to i64
%ae49569 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt97451)
store volatile %struct.ScmObj* %ae49569, %struct.ScmObj** %stackaddr$makeclosure97450, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49569, %struct.ScmObj* %f48086, i64 0)
%argslist94004$ae495670 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97452 = alloca %struct.ScmObj*, align 8
%argslist94004$ae495671 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49569, %struct.ScmObj* %argslist94004$ae495670)
store volatile %struct.ScmObj* %argslist94004$ae495671, %struct.ScmObj** %stackaddr$prim97452, align 8
%stackaddr$prim97453 = alloca %struct.ScmObj*, align 8
%argslist94004$ae495672 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49568, %struct.ScmObj* %argslist94004$ae495671)
store volatile %struct.ScmObj* %argslist94004$ae495672, %struct.ScmObj** %stackaddr$prim97453, align 8
%clofunc97454 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49567)
musttail call tailcc void %clofunc97454(%struct.ScmObj* %ae49567, %struct.ScmObj* %argslist94004$ae495672)
ret void
}

define tailcc void @proc_clo$ae49567(%struct.ScmObj* %env$ae49567,%struct.ScmObj* %current_45args93991) {
%stackaddr$env-ref97455 = alloca %struct.ScmObj*, align 8
%lst48085 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49567, i64 0)
store %struct.ScmObj* %lst48085, %struct.ScmObj** %stackaddr$env-ref97455
%stackaddr$env-ref97456 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49567, i64 1)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97456
%stackaddr$env-ref97457 = alloca %struct.ScmObj*, align 8
%k48413 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49567, i64 2)
store %struct.ScmObj* %k48413, %struct.ScmObj** %stackaddr$env-ref97457
%stackaddr$prim97458 = alloca %struct.ScmObj*, align 8
%_95k48414 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93991)
store volatile %struct.ScmObj* %_95k48414, %struct.ScmObj** %stackaddr$prim97458, align 8
%stackaddr$prim97459 = alloca %struct.ScmObj*, align 8
%current_45args93992 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93991)
store volatile %struct.ScmObj* %current_45args93992, %struct.ScmObj** %stackaddr$prim97459, align 8
%stackaddr$prim97460 = alloca %struct.ScmObj*, align 8
%anf_45bind48207 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93992)
store volatile %struct.ScmObj* %anf_45bind48207, %struct.ScmObj** %stackaddr$prim97460, align 8
%ae49601 = call %struct.ScmObj* @const_init_null()
%argslist93994$_37foldr1480530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97461 = alloca %struct.ScmObj*, align 8
%argslist93994$_37foldr1480531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lst48085, %struct.ScmObj* %argslist93994$_37foldr1480530)
store volatile %struct.ScmObj* %argslist93994$_37foldr1480531, %struct.ScmObj** %stackaddr$prim97461, align 8
%stackaddr$prim97462 = alloca %struct.ScmObj*, align 8
%argslist93994$_37foldr1480532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49601, %struct.ScmObj* %argslist93994$_37foldr1480531)
store volatile %struct.ScmObj* %argslist93994$_37foldr1480532, %struct.ScmObj** %stackaddr$prim97462, align 8
%stackaddr$prim97463 = alloca %struct.ScmObj*, align 8
%argslist93994$_37foldr1480533 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48207, %struct.ScmObj* %argslist93994$_37foldr1480532)
store volatile %struct.ScmObj* %argslist93994$_37foldr1480533, %struct.ScmObj** %stackaddr$prim97463, align 8
%stackaddr$prim97464 = alloca %struct.ScmObj*, align 8
%argslist93994$_37foldr1480534 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48413, %struct.ScmObj* %argslist93994$_37foldr1480533)
store volatile %struct.ScmObj* %argslist93994$_37foldr1480534, %struct.ScmObj** %stackaddr$prim97464, align 8
%clofunc97465 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr148053)
musttail call tailcc void %clofunc97465(%struct.ScmObj* %_37foldr148053, %struct.ScmObj* %argslist93994$_37foldr1480534)
ret void
}

define tailcc void @proc_clo$ae49569(%struct.ScmObj* %env$ae49569,%struct.ScmObj* %current_45args93995) {
%stackaddr$env-ref97466 = alloca %struct.ScmObj*, align 8
%f48086 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49569, i64 0)
store %struct.ScmObj* %f48086, %struct.ScmObj** %stackaddr$env-ref97466
%stackaddr$prim97467 = alloca %struct.ScmObj*, align 8
%k48415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93995)
store volatile %struct.ScmObj* %k48415, %struct.ScmObj** %stackaddr$prim97467, align 8
%stackaddr$prim97468 = alloca %struct.ScmObj*, align 8
%current_45args93996 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93995)
store volatile %struct.ScmObj* %current_45args93996, %struct.ScmObj** %stackaddr$prim97468, align 8
%stackaddr$prim97469 = alloca %struct.ScmObj*, align 8
%v48088 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93996)
store volatile %struct.ScmObj* %v48088, %struct.ScmObj** %stackaddr$prim97469, align 8
%stackaddr$prim97470 = alloca %struct.ScmObj*, align 8
%current_45args93997 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93996)
store volatile %struct.ScmObj* %current_45args93997, %struct.ScmObj** %stackaddr$prim97470, align 8
%stackaddr$prim97471 = alloca %struct.ScmObj*, align 8
%r48087 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93997)
store volatile %struct.ScmObj* %r48087, %struct.ScmObj** %stackaddr$prim97471, align 8
%stackaddr$makeclosure97472 = alloca %struct.ScmObj*, align 8
%fptrToInt97473 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49571 to i64
%ae49571 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97473)
store volatile %struct.ScmObj* %ae49571, %struct.ScmObj** %stackaddr$makeclosure97472, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49571, %struct.ScmObj* %r48087, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49571, %struct.ScmObj* %k48415, i64 1)
%argslist94003$f480860 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97474 = alloca %struct.ScmObj*, align 8
%argslist94003$f480861 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %v48088, %struct.ScmObj* %argslist94003$f480860)
store volatile %struct.ScmObj* %argslist94003$f480861, %struct.ScmObj** %stackaddr$prim97474, align 8
%stackaddr$prim97475 = alloca %struct.ScmObj*, align 8
%argslist94003$f480862 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49571, %struct.ScmObj* %argslist94003$f480861)
store volatile %struct.ScmObj* %argslist94003$f480862, %struct.ScmObj** %stackaddr$prim97475, align 8
%clofunc97476 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f48086)
musttail call tailcc void %clofunc97476(%struct.ScmObj* %f48086, %struct.ScmObj* %argslist94003$f480862)
ret void
}

define tailcc void @proc_clo$ae49571(%struct.ScmObj* %env$ae49571,%struct.ScmObj* %current_45args93999) {
%stackaddr$env-ref97477 = alloca %struct.ScmObj*, align 8
%r48087 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49571, i64 0)
store %struct.ScmObj* %r48087, %struct.ScmObj** %stackaddr$env-ref97477
%stackaddr$env-ref97478 = alloca %struct.ScmObj*, align 8
%k48415 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49571, i64 1)
store %struct.ScmObj* %k48415, %struct.ScmObj** %stackaddr$env-ref97478
%stackaddr$prim97479 = alloca %struct.ScmObj*, align 8
%_95k48416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args93999)
store volatile %struct.ScmObj* %_95k48416, %struct.ScmObj** %stackaddr$prim97479, align 8
%stackaddr$prim97480 = alloca %struct.ScmObj*, align 8
%current_45args94000 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args93999)
store volatile %struct.ScmObj* %current_45args94000, %struct.ScmObj** %stackaddr$prim97480, align 8
%stackaddr$prim97481 = alloca %struct.ScmObj*, align 8
%anf_45bind48206 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94000)
store volatile %struct.ScmObj* %anf_45bind48206, %struct.ScmObj** %stackaddr$prim97481, align 8
%stackaddr$prim97482 = alloca %struct.ScmObj*, align 8
%cpsprim48417 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48206, %struct.ScmObj* %r48087)
store volatile %struct.ScmObj* %cpsprim48417, %struct.ScmObj** %stackaddr$prim97482, align 8
%ae49576 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94002$k484150 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97483 = alloca %struct.ScmObj*, align 8
%argslist94002$k484151 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48417, %struct.ScmObj* %argslist94002$k484150)
store volatile %struct.ScmObj* %argslist94002$k484151, %struct.ScmObj** %stackaddr$prim97483, align 8
%stackaddr$prim97484 = alloca %struct.ScmObj*, align 8
%argslist94002$k484152 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49576, %struct.ScmObj* %argslist94002$k484151)
store volatile %struct.ScmObj* %argslist94002$k484152, %struct.ScmObj** %stackaddr$prim97484, align 8
%clofunc97485 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48415)
musttail call tailcc void %clofunc97485(%struct.ScmObj* %k48415, %struct.ScmObj* %argslist94002$k484152)
ret void
}

define tailcc void @proc_clo$ae49180(%struct.ScmObj* %env$ae49180,%struct.ScmObj* %current_45args94007) {
%stackaddr$env-ref97486 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49180, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97486
%stackaddr$env-ref97487 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49180, i64 1)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref97487
%stackaddr$prim97488 = alloca %struct.ScmObj*, align 8
%k48418 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94007)
store volatile %struct.ScmObj* %k48418, %struct.ScmObj** %stackaddr$prim97488, align 8
%stackaddr$prim97489 = alloca %struct.ScmObj*, align 8
%current_45args94008 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94007)
store volatile %struct.ScmObj* %current_45args94008, %struct.ScmObj** %stackaddr$prim97489, align 8
%stackaddr$prim97490 = alloca %struct.ScmObj*, align 8
%_37foldr48059 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94008)
store volatile %struct.ScmObj* %_37foldr48059, %struct.ScmObj** %stackaddr$prim97490, align 8
%ae49182 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97491 = alloca %struct.ScmObj*, align 8
%fptrToInt97492 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49183 to i64
%ae49183 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt97492)
store volatile %struct.ScmObj* %ae49183, %struct.ScmObj** %stackaddr$makeclosure97491, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49183, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49183, %struct.ScmObj* %_37map148049, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49183, %struct.ScmObj* %_37foldr48059, i64 2)
%argslist94065$k484180 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97493 = alloca %struct.ScmObj*, align 8
%argslist94065$k484181 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49183, %struct.ScmObj* %argslist94065$k484180)
store volatile %struct.ScmObj* %argslist94065$k484181, %struct.ScmObj** %stackaddr$prim97493, align 8
%stackaddr$prim97494 = alloca %struct.ScmObj*, align 8
%argslist94065$k484182 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49182, %struct.ScmObj* %argslist94065$k484181)
store volatile %struct.ScmObj* %argslist94065$k484182, %struct.ScmObj** %stackaddr$prim97494, align 8
%clofunc97495 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48418)
musttail call tailcc void %clofunc97495(%struct.ScmObj* %k48418, %struct.ScmObj* %argslist94065$k484182)
ret void
}

define tailcc void @proc_clo$ae49183(%struct.ScmObj* %env$ae49183,%struct.ScmObj* %args4806048419) {
%stackaddr$env-ref97496 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49183, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97496
%stackaddr$env-ref97497 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49183, i64 1)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref97497
%stackaddr$env-ref97498 = alloca %struct.ScmObj*, align 8
%_37foldr48059 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49183, i64 2)
store %struct.ScmObj* %_37foldr48059, %struct.ScmObj** %stackaddr$env-ref97498
%stackaddr$prim97499 = alloca %struct.ScmObj*, align 8
%k48420 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args4806048419)
store volatile %struct.ScmObj* %k48420, %struct.ScmObj** %stackaddr$prim97499, align 8
%stackaddr$prim97500 = alloca %struct.ScmObj*, align 8
%args48060 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args4806048419)
store volatile %struct.ScmObj* %args48060, %struct.ScmObj** %stackaddr$prim97500, align 8
%stackaddr$prim97501 = alloca %struct.ScmObj*, align 8
%f48063 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args48060)
store volatile %struct.ScmObj* %f48063, %struct.ScmObj** %stackaddr$prim97501, align 8
%stackaddr$prim97502 = alloca %struct.ScmObj*, align 8
%anf_45bind48193 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args48060)
store volatile %struct.ScmObj* %anf_45bind48193, %struct.ScmObj** %stackaddr$prim97502, align 8
%stackaddr$prim97503 = alloca %struct.ScmObj*, align 8
%acc48062 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind48193)
store volatile %struct.ScmObj* %acc48062, %struct.ScmObj** %stackaddr$prim97503, align 8
%stackaddr$prim97504 = alloca %struct.ScmObj*, align 8
%anf_45bind48194 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args48060)
store volatile %struct.ScmObj* %anf_45bind48194, %struct.ScmObj** %stackaddr$prim97504, align 8
%stackaddr$prim97505 = alloca %struct.ScmObj*, align 8
%lsts48061 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind48194)
store volatile %struct.ScmObj* %lsts48061, %struct.ScmObj** %stackaddr$prim97505, align 8
%stackaddr$makeclosure97506 = alloca %struct.ScmObj*, align 8
%fptrToInt97507 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49191 to i64
%ae49191 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt97507)
store volatile %struct.ScmObj* %ae49191, %struct.ScmObj** %stackaddr$makeclosure97506, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49191, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49191, %struct.ScmObj* %k48420, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49191, %struct.ScmObj* %_37map148049, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49191, %struct.ScmObj* %f48063, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49191, %struct.ScmObj* %acc48062, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49191, %struct.ScmObj* %lsts48061, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49191, %struct.ScmObj* %_37foldr48059, i64 6)
%ae49192 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97508 = alloca %struct.ScmObj*, align 8
%fptrToInt97509 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49193 to i64
%ae49193 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt97509)
store volatile %struct.ScmObj* %ae49193, %struct.ScmObj** %stackaddr$makeclosure97508, align 8
%argslist94064$ae491910 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97510 = alloca %struct.ScmObj*, align 8
%argslist94064$ae491911 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49193, %struct.ScmObj* %argslist94064$ae491910)
store volatile %struct.ScmObj* %argslist94064$ae491911, %struct.ScmObj** %stackaddr$prim97510, align 8
%stackaddr$prim97511 = alloca %struct.ScmObj*, align 8
%argslist94064$ae491912 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49192, %struct.ScmObj* %argslist94064$ae491911)
store volatile %struct.ScmObj* %argslist94064$ae491912, %struct.ScmObj** %stackaddr$prim97511, align 8
%clofunc97512 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49191)
musttail call tailcc void %clofunc97512(%struct.ScmObj* %ae49191, %struct.ScmObj* %argslist94064$ae491912)
ret void
}

define tailcc void @proc_clo$ae49191(%struct.ScmObj* %env$ae49191,%struct.ScmObj* %current_45args94010) {
%stackaddr$env-ref97513 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49191, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97513
%stackaddr$env-ref97514 = alloca %struct.ScmObj*, align 8
%k48420 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49191, i64 1)
store %struct.ScmObj* %k48420, %struct.ScmObj** %stackaddr$env-ref97514
%stackaddr$env-ref97515 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49191, i64 2)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref97515
%stackaddr$env-ref97516 = alloca %struct.ScmObj*, align 8
%f48063 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49191, i64 3)
store %struct.ScmObj* %f48063, %struct.ScmObj** %stackaddr$env-ref97516
%stackaddr$env-ref97517 = alloca %struct.ScmObj*, align 8
%acc48062 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49191, i64 4)
store %struct.ScmObj* %acc48062, %struct.ScmObj** %stackaddr$env-ref97517
%stackaddr$env-ref97518 = alloca %struct.ScmObj*, align 8
%lsts48061 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49191, i64 5)
store %struct.ScmObj* %lsts48061, %struct.ScmObj** %stackaddr$env-ref97518
%stackaddr$env-ref97519 = alloca %struct.ScmObj*, align 8
%_37foldr48059 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49191, i64 6)
store %struct.ScmObj* %_37foldr48059, %struct.ScmObj** %stackaddr$env-ref97519
%stackaddr$prim97520 = alloca %struct.ScmObj*, align 8
%_95k48421 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94010)
store volatile %struct.ScmObj* %_95k48421, %struct.ScmObj** %stackaddr$prim97520, align 8
%stackaddr$prim97521 = alloca %struct.ScmObj*, align 8
%current_45args94011 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94010)
store volatile %struct.ScmObj* %current_45args94011, %struct.ScmObj** %stackaddr$prim97521, align 8
%stackaddr$prim97522 = alloca %struct.ScmObj*, align 8
%anf_45bind48195 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94011)
store volatile %struct.ScmObj* %anf_45bind48195, %struct.ScmObj** %stackaddr$prim97522, align 8
%stackaddr$makeclosure97523 = alloca %struct.ScmObj*, align 8
%fptrToInt97524 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49223 to i64
%ae49223 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt97524)
store volatile %struct.ScmObj* %ae49223, %struct.ScmObj** %stackaddr$makeclosure97523, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49223, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49223, %struct.ScmObj* %k48420, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49223, %struct.ScmObj* %_37map148049, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49223, %struct.ScmObj* %f48063, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49223, %struct.ScmObj* %acc48062, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49223, %struct.ScmObj* %lsts48061, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49223, %struct.ScmObj* %_37foldr48059, i64 6)
%ae49225 = call %struct.ScmObj* @const_init_false()
%argslist94057$_37foldr1480530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97525 = alloca %struct.ScmObj*, align 8
%argslist94057$_37foldr1480531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts48061, %struct.ScmObj* %argslist94057$_37foldr1480530)
store volatile %struct.ScmObj* %argslist94057$_37foldr1480531, %struct.ScmObj** %stackaddr$prim97525, align 8
%stackaddr$prim97526 = alloca %struct.ScmObj*, align 8
%argslist94057$_37foldr1480532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49225, %struct.ScmObj* %argslist94057$_37foldr1480531)
store volatile %struct.ScmObj* %argslist94057$_37foldr1480532, %struct.ScmObj** %stackaddr$prim97526, align 8
%stackaddr$prim97527 = alloca %struct.ScmObj*, align 8
%argslist94057$_37foldr1480533 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48195, %struct.ScmObj* %argslist94057$_37foldr1480532)
store volatile %struct.ScmObj* %argslist94057$_37foldr1480533, %struct.ScmObj** %stackaddr$prim97527, align 8
%stackaddr$prim97528 = alloca %struct.ScmObj*, align 8
%argslist94057$_37foldr1480534 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49223, %struct.ScmObj* %argslist94057$_37foldr1480533)
store volatile %struct.ScmObj* %argslist94057$_37foldr1480534, %struct.ScmObj** %stackaddr$prim97528, align 8
%clofunc97529 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr148053)
musttail call tailcc void %clofunc97529(%struct.ScmObj* %_37foldr148053, %struct.ScmObj* %argslist94057$_37foldr1480534)
ret void
}

define tailcc void @proc_clo$ae49223(%struct.ScmObj* %env$ae49223,%struct.ScmObj* %current_45args94013) {
%stackaddr$env-ref97530 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49223, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97530
%stackaddr$env-ref97531 = alloca %struct.ScmObj*, align 8
%k48420 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49223, i64 1)
store %struct.ScmObj* %k48420, %struct.ScmObj** %stackaddr$env-ref97531
%stackaddr$env-ref97532 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49223, i64 2)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref97532
%stackaddr$env-ref97533 = alloca %struct.ScmObj*, align 8
%f48063 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49223, i64 3)
store %struct.ScmObj* %f48063, %struct.ScmObj** %stackaddr$env-ref97533
%stackaddr$env-ref97534 = alloca %struct.ScmObj*, align 8
%acc48062 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49223, i64 4)
store %struct.ScmObj* %acc48062, %struct.ScmObj** %stackaddr$env-ref97534
%stackaddr$env-ref97535 = alloca %struct.ScmObj*, align 8
%lsts48061 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49223, i64 5)
store %struct.ScmObj* %lsts48061, %struct.ScmObj** %stackaddr$env-ref97535
%stackaddr$env-ref97536 = alloca %struct.ScmObj*, align 8
%_37foldr48059 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49223, i64 6)
store %struct.ScmObj* %_37foldr48059, %struct.ScmObj** %stackaddr$env-ref97536
%stackaddr$prim97537 = alloca %struct.ScmObj*, align 8
%_95k48422 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94013)
store volatile %struct.ScmObj* %_95k48422, %struct.ScmObj** %stackaddr$prim97537, align 8
%stackaddr$prim97538 = alloca %struct.ScmObj*, align 8
%current_45args94014 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94013)
store volatile %struct.ScmObj* %current_45args94014, %struct.ScmObj** %stackaddr$prim97538, align 8
%stackaddr$prim97539 = alloca %struct.ScmObj*, align 8
%anf_45bind48196 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94014)
store volatile %struct.ScmObj* %anf_45bind48196, %struct.ScmObj** %stackaddr$prim97539, align 8
%truthy$cmp97540 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48196)
%cmp$cmp97540 = icmp eq i64 %truthy$cmp97540, 1
br i1 %cmp$cmp97540, label %truebranch$cmp97540, label %falsebranch$cmp97540
truebranch$cmp97540:
%ae49234 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94016$k484200 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97541 = alloca %struct.ScmObj*, align 8
%argslist94016$k484201 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc48062, %struct.ScmObj* %argslist94016$k484200)
store volatile %struct.ScmObj* %argslist94016$k484201, %struct.ScmObj** %stackaddr$prim97541, align 8
%stackaddr$prim97542 = alloca %struct.ScmObj*, align 8
%argslist94016$k484202 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49234, %struct.ScmObj* %argslist94016$k484201)
store volatile %struct.ScmObj* %argslist94016$k484202, %struct.ScmObj** %stackaddr$prim97542, align 8
%clofunc97543 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48420)
musttail call tailcc void %clofunc97543(%struct.ScmObj* %k48420, %struct.ScmObj* %argslist94016$k484202)
ret void
falsebranch$cmp97540:
%stackaddr$makeclosure97544 = alloca %struct.ScmObj*, align 8
%fptrToInt97545 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49239 to i64
%ae49239 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt97545)
store volatile %struct.ScmObj* %ae49239, %struct.ScmObj** %stackaddr$makeclosure97544, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49239, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49239, %struct.ScmObj* %k48420, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49239, %struct.ScmObj* %_37map148049, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49239, %struct.ScmObj* %f48063, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49239, %struct.ScmObj* %acc48062, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49239, %struct.ScmObj* %lsts48061, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49239, %struct.ScmObj* %_37foldr48059, i64 6)
%ae49240 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97546 = alloca %struct.ScmObj*, align 8
%fptrToInt97547 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49241 to i64
%ae49241 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt97547)
store volatile %struct.ScmObj* %ae49241, %struct.ScmObj** %stackaddr$makeclosure97546, align 8
%argslist94056$ae492390 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97548 = alloca %struct.ScmObj*, align 8
%argslist94056$ae492391 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49241, %struct.ScmObj* %argslist94056$ae492390)
store volatile %struct.ScmObj* %argslist94056$ae492391, %struct.ScmObj** %stackaddr$prim97548, align 8
%stackaddr$prim97549 = alloca %struct.ScmObj*, align 8
%argslist94056$ae492392 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49240, %struct.ScmObj* %argslist94056$ae492391)
store volatile %struct.ScmObj* %argslist94056$ae492392, %struct.ScmObj** %stackaddr$prim97549, align 8
%clofunc97550 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49239)
musttail call tailcc void %clofunc97550(%struct.ScmObj* %ae49239, %struct.ScmObj* %argslist94056$ae492392)
ret void
}

define tailcc void @proc_clo$ae49239(%struct.ScmObj* %env$ae49239,%struct.ScmObj* %current_45args94017) {
%stackaddr$env-ref97551 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49239, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97551
%stackaddr$env-ref97552 = alloca %struct.ScmObj*, align 8
%k48420 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49239, i64 1)
store %struct.ScmObj* %k48420, %struct.ScmObj** %stackaddr$env-ref97552
%stackaddr$env-ref97553 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49239, i64 2)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref97553
%stackaddr$env-ref97554 = alloca %struct.ScmObj*, align 8
%f48063 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49239, i64 3)
store %struct.ScmObj* %f48063, %struct.ScmObj** %stackaddr$env-ref97554
%stackaddr$env-ref97555 = alloca %struct.ScmObj*, align 8
%acc48062 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49239, i64 4)
store %struct.ScmObj* %acc48062, %struct.ScmObj** %stackaddr$env-ref97555
%stackaddr$env-ref97556 = alloca %struct.ScmObj*, align 8
%lsts48061 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49239, i64 5)
store %struct.ScmObj* %lsts48061, %struct.ScmObj** %stackaddr$env-ref97556
%stackaddr$env-ref97557 = alloca %struct.ScmObj*, align 8
%_37foldr48059 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49239, i64 6)
store %struct.ScmObj* %_37foldr48059, %struct.ScmObj** %stackaddr$env-ref97557
%stackaddr$prim97558 = alloca %struct.ScmObj*, align 8
%_95k48423 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94017)
store volatile %struct.ScmObj* %_95k48423, %struct.ScmObj** %stackaddr$prim97558, align 8
%stackaddr$prim97559 = alloca %struct.ScmObj*, align 8
%current_45args94018 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94017)
store volatile %struct.ScmObj* %current_45args94018, %struct.ScmObj** %stackaddr$prim97559, align 8
%stackaddr$prim97560 = alloca %struct.ScmObj*, align 8
%anf_45bind48197 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94018)
store volatile %struct.ScmObj* %anf_45bind48197, %struct.ScmObj** %stackaddr$prim97560, align 8
%stackaddr$makeclosure97561 = alloca %struct.ScmObj*, align 8
%fptrToInt97562 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49260 to i64
%ae49260 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt97562)
store volatile %struct.ScmObj* %ae49260, %struct.ScmObj** %stackaddr$makeclosure97561, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49260, %struct.ScmObj* %_37foldr148053, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49260, %struct.ScmObj* %k48420, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49260, %struct.ScmObj* %_37map148049, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49260, %struct.ScmObj* %f48063, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49260, %struct.ScmObj* %acc48062, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49260, %struct.ScmObj* %lsts48061, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49260, %struct.ScmObj* %_37foldr48059, i64 6)
%argslist94051$_37map1480490 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97563 = alloca %struct.ScmObj*, align 8
%argslist94051$_37map1480491 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts48061, %struct.ScmObj* %argslist94051$_37map1480490)
store volatile %struct.ScmObj* %argslist94051$_37map1480491, %struct.ScmObj** %stackaddr$prim97563, align 8
%stackaddr$prim97564 = alloca %struct.ScmObj*, align 8
%argslist94051$_37map1480492 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48197, %struct.ScmObj* %argslist94051$_37map1480491)
store volatile %struct.ScmObj* %argslist94051$_37map1480492, %struct.ScmObj** %stackaddr$prim97564, align 8
%stackaddr$prim97565 = alloca %struct.ScmObj*, align 8
%argslist94051$_37map1480493 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49260, %struct.ScmObj* %argslist94051$_37map1480492)
store volatile %struct.ScmObj* %argslist94051$_37map1480493, %struct.ScmObj** %stackaddr$prim97565, align 8
%clofunc97566 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37map148049)
musttail call tailcc void %clofunc97566(%struct.ScmObj* %_37map148049, %struct.ScmObj* %argslist94051$_37map1480493)
ret void
}

define tailcc void @proc_clo$ae49260(%struct.ScmObj* %env$ae49260,%struct.ScmObj* %current_45args94020) {
%stackaddr$env-ref97567 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49260, i64 0)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97567
%stackaddr$env-ref97568 = alloca %struct.ScmObj*, align 8
%k48420 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49260, i64 1)
store %struct.ScmObj* %k48420, %struct.ScmObj** %stackaddr$env-ref97568
%stackaddr$env-ref97569 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49260, i64 2)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref97569
%stackaddr$env-ref97570 = alloca %struct.ScmObj*, align 8
%f48063 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49260, i64 3)
store %struct.ScmObj* %f48063, %struct.ScmObj** %stackaddr$env-ref97570
%stackaddr$env-ref97571 = alloca %struct.ScmObj*, align 8
%acc48062 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49260, i64 4)
store %struct.ScmObj* %acc48062, %struct.ScmObj** %stackaddr$env-ref97571
%stackaddr$env-ref97572 = alloca %struct.ScmObj*, align 8
%lsts48061 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49260, i64 5)
store %struct.ScmObj* %lsts48061, %struct.ScmObj** %stackaddr$env-ref97572
%stackaddr$env-ref97573 = alloca %struct.ScmObj*, align 8
%_37foldr48059 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49260, i64 6)
store %struct.ScmObj* %_37foldr48059, %struct.ScmObj** %stackaddr$env-ref97573
%stackaddr$prim97574 = alloca %struct.ScmObj*, align 8
%_95k48424 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94020)
store volatile %struct.ScmObj* %_95k48424, %struct.ScmObj** %stackaddr$prim97574, align 8
%stackaddr$prim97575 = alloca %struct.ScmObj*, align 8
%current_45args94021 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94020)
store volatile %struct.ScmObj* %current_45args94021, %struct.ScmObj** %stackaddr$prim97575, align 8
%stackaddr$prim97576 = alloca %struct.ScmObj*, align 8
%lsts_4348068 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94021)
store volatile %struct.ScmObj* %lsts_4348068, %struct.ScmObj** %stackaddr$prim97576, align 8
%stackaddr$makeclosure97577 = alloca %struct.ScmObj*, align 8
%fptrToInt97578 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49263 to i64
%ae49263 = call %struct.ScmObj* @closure_alloc(i64 8, i64 %fptrToInt97578)
store volatile %struct.ScmObj* %ae49263, %struct.ScmObj** %stackaddr$makeclosure97577, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49263, %struct.ScmObj* %lsts_4348068, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49263, %struct.ScmObj* %k48420, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49263, %struct.ScmObj* %_37foldr148053, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49263, %struct.ScmObj* %_37map148049, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49263, %struct.ScmObj* %f48063, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49263, %struct.ScmObj* %acc48062, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49263, %struct.ScmObj* %lsts48061, i64 6)
call void @closure_place_freevar(%struct.ScmObj* %ae49263, %struct.ScmObj* %_37foldr48059, i64 7)
%ae49264 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97579 = alloca %struct.ScmObj*, align 8
%fptrToInt97580 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49265 to i64
%ae49265 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt97580)
store volatile %struct.ScmObj* %ae49265, %struct.ScmObj** %stackaddr$makeclosure97579, align 8
%argslist94050$ae492630 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97581 = alloca %struct.ScmObj*, align 8
%argslist94050$ae492631 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49265, %struct.ScmObj* %argslist94050$ae492630)
store volatile %struct.ScmObj* %argslist94050$ae492631, %struct.ScmObj** %stackaddr$prim97581, align 8
%stackaddr$prim97582 = alloca %struct.ScmObj*, align 8
%argslist94050$ae492632 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49264, %struct.ScmObj* %argslist94050$ae492631)
store volatile %struct.ScmObj* %argslist94050$ae492632, %struct.ScmObj** %stackaddr$prim97582, align 8
%clofunc97583 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49263)
musttail call tailcc void %clofunc97583(%struct.ScmObj* %ae49263, %struct.ScmObj* %argslist94050$ae492632)
ret void
}

define tailcc void @proc_clo$ae49263(%struct.ScmObj* %env$ae49263,%struct.ScmObj* %current_45args94023) {
%stackaddr$env-ref97584 = alloca %struct.ScmObj*, align 8
%lsts_4348068 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49263, i64 0)
store %struct.ScmObj* %lsts_4348068, %struct.ScmObj** %stackaddr$env-ref97584
%stackaddr$env-ref97585 = alloca %struct.ScmObj*, align 8
%k48420 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49263, i64 1)
store %struct.ScmObj* %k48420, %struct.ScmObj** %stackaddr$env-ref97585
%stackaddr$env-ref97586 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49263, i64 2)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97586
%stackaddr$env-ref97587 = alloca %struct.ScmObj*, align 8
%_37map148049 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49263, i64 3)
store %struct.ScmObj* %_37map148049, %struct.ScmObj** %stackaddr$env-ref97587
%stackaddr$env-ref97588 = alloca %struct.ScmObj*, align 8
%f48063 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49263, i64 4)
store %struct.ScmObj* %f48063, %struct.ScmObj** %stackaddr$env-ref97588
%stackaddr$env-ref97589 = alloca %struct.ScmObj*, align 8
%acc48062 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49263, i64 5)
store %struct.ScmObj* %acc48062, %struct.ScmObj** %stackaddr$env-ref97589
%stackaddr$env-ref97590 = alloca %struct.ScmObj*, align 8
%lsts48061 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49263, i64 6)
store %struct.ScmObj* %lsts48061, %struct.ScmObj** %stackaddr$env-ref97590
%stackaddr$env-ref97591 = alloca %struct.ScmObj*, align 8
%_37foldr48059 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49263, i64 7)
store %struct.ScmObj* %_37foldr48059, %struct.ScmObj** %stackaddr$env-ref97591
%stackaddr$prim97592 = alloca %struct.ScmObj*, align 8
%_95k48425 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94023)
store volatile %struct.ScmObj* %_95k48425, %struct.ScmObj** %stackaddr$prim97592, align 8
%stackaddr$prim97593 = alloca %struct.ScmObj*, align 8
%current_45args94024 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94023)
store volatile %struct.ScmObj* %current_45args94024, %struct.ScmObj** %stackaddr$prim97593, align 8
%stackaddr$prim97594 = alloca %struct.ScmObj*, align 8
%anf_45bind48198 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94024)
store volatile %struct.ScmObj* %anf_45bind48198, %struct.ScmObj** %stackaddr$prim97594, align 8
%stackaddr$makeclosure97595 = alloca %struct.ScmObj*, align 8
%fptrToInt97596 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49284 to i64
%ae49284 = call %struct.ScmObj* @closure_alloc(i64 6, i64 %fptrToInt97596)
store volatile %struct.ScmObj* %ae49284, %struct.ScmObj** %stackaddr$makeclosure97595, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49284, %struct.ScmObj* %lsts_4348068, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49284, %struct.ScmObj* %k48420, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49284, %struct.ScmObj* %_37foldr148053, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49284, %struct.ScmObj* %f48063, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49284, %struct.ScmObj* %acc48062, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49284, %struct.ScmObj* %_37foldr48059, i64 5)
%argslist94045$_37map1480490 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97597 = alloca %struct.ScmObj*, align 8
%argslist94045$_37map1480491 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts48061, %struct.ScmObj* %argslist94045$_37map1480490)
store volatile %struct.ScmObj* %argslist94045$_37map1480491, %struct.ScmObj** %stackaddr$prim97597, align 8
%stackaddr$prim97598 = alloca %struct.ScmObj*, align 8
%argslist94045$_37map1480492 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48198, %struct.ScmObj* %argslist94045$_37map1480491)
store volatile %struct.ScmObj* %argslist94045$_37map1480492, %struct.ScmObj** %stackaddr$prim97598, align 8
%stackaddr$prim97599 = alloca %struct.ScmObj*, align 8
%argslist94045$_37map1480493 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49284, %struct.ScmObj* %argslist94045$_37map1480492)
store volatile %struct.ScmObj* %argslist94045$_37map1480493, %struct.ScmObj** %stackaddr$prim97599, align 8
%clofunc97600 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37map148049)
musttail call tailcc void %clofunc97600(%struct.ScmObj* %_37map148049, %struct.ScmObj* %argslist94045$_37map1480493)
ret void
}

define tailcc void @proc_clo$ae49284(%struct.ScmObj* %env$ae49284,%struct.ScmObj* %current_45args94026) {
%stackaddr$env-ref97601 = alloca %struct.ScmObj*, align 8
%lsts_4348068 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49284, i64 0)
store %struct.ScmObj* %lsts_4348068, %struct.ScmObj** %stackaddr$env-ref97601
%stackaddr$env-ref97602 = alloca %struct.ScmObj*, align 8
%k48420 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49284, i64 1)
store %struct.ScmObj* %k48420, %struct.ScmObj** %stackaddr$env-ref97602
%stackaddr$env-ref97603 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49284, i64 2)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97603
%stackaddr$env-ref97604 = alloca %struct.ScmObj*, align 8
%f48063 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49284, i64 3)
store %struct.ScmObj* %f48063, %struct.ScmObj** %stackaddr$env-ref97604
%stackaddr$env-ref97605 = alloca %struct.ScmObj*, align 8
%acc48062 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49284, i64 4)
store %struct.ScmObj* %acc48062, %struct.ScmObj** %stackaddr$env-ref97605
%stackaddr$env-ref97606 = alloca %struct.ScmObj*, align 8
%_37foldr48059 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49284, i64 5)
store %struct.ScmObj* %_37foldr48059, %struct.ScmObj** %stackaddr$env-ref97606
%stackaddr$prim97607 = alloca %struct.ScmObj*, align 8
%_95k48426 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94026)
store volatile %struct.ScmObj* %_95k48426, %struct.ScmObj** %stackaddr$prim97607, align 8
%stackaddr$prim97608 = alloca %struct.ScmObj*, align 8
%current_45args94027 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94026)
store volatile %struct.ScmObj* %current_45args94027, %struct.ScmObj** %stackaddr$prim97608, align 8
%stackaddr$prim97609 = alloca %struct.ScmObj*, align 8
%vs48066 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94027)
store volatile %struct.ScmObj* %vs48066, %struct.ScmObj** %stackaddr$prim97609, align 8
%stackaddr$makeclosure97610 = alloca %struct.ScmObj*, align 8
%fptrToInt97611 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49287 to i64
%ae49287 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt97611)
store volatile %struct.ScmObj* %ae49287, %struct.ScmObj** %stackaddr$makeclosure97610, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49287, %struct.ScmObj* %lsts_4348068, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49287, %struct.ScmObj* %k48420, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49287, %struct.ScmObj* %_37foldr148053, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49287, %struct.ScmObj* %vs48066, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49287, %struct.ScmObj* %f48063, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae49287, %struct.ScmObj* %acc48062, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae49287, %struct.ScmObj* %_37foldr48059, i64 6)
%ae49288 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97612 = alloca %struct.ScmObj*, align 8
%fptrToInt97613 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49289 to i64
%ae49289 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt97613)
store volatile %struct.ScmObj* %ae49289, %struct.ScmObj** %stackaddr$makeclosure97612, align 8
%argslist94044$ae492870 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97614 = alloca %struct.ScmObj*, align 8
%argslist94044$ae492871 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49289, %struct.ScmObj* %argslist94044$ae492870)
store volatile %struct.ScmObj* %argslist94044$ae492871, %struct.ScmObj** %stackaddr$prim97614, align 8
%stackaddr$prim97615 = alloca %struct.ScmObj*, align 8
%argslist94044$ae492872 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49288, %struct.ScmObj* %argslist94044$ae492871)
store volatile %struct.ScmObj* %argslist94044$ae492872, %struct.ScmObj** %stackaddr$prim97615, align 8
%clofunc97616 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49287)
musttail call tailcc void %clofunc97616(%struct.ScmObj* %ae49287, %struct.ScmObj* %argslist94044$ae492872)
ret void
}

define tailcc void @proc_clo$ae49287(%struct.ScmObj* %env$ae49287,%struct.ScmObj* %current_45args94029) {
%stackaddr$env-ref97617 = alloca %struct.ScmObj*, align 8
%lsts_4348068 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49287, i64 0)
store %struct.ScmObj* %lsts_4348068, %struct.ScmObj** %stackaddr$env-ref97617
%stackaddr$env-ref97618 = alloca %struct.ScmObj*, align 8
%k48420 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49287, i64 1)
store %struct.ScmObj* %k48420, %struct.ScmObj** %stackaddr$env-ref97618
%stackaddr$env-ref97619 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49287, i64 2)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97619
%stackaddr$env-ref97620 = alloca %struct.ScmObj*, align 8
%vs48066 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49287, i64 3)
store %struct.ScmObj* %vs48066, %struct.ScmObj** %stackaddr$env-ref97620
%stackaddr$env-ref97621 = alloca %struct.ScmObj*, align 8
%f48063 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49287, i64 4)
store %struct.ScmObj* %f48063, %struct.ScmObj** %stackaddr$env-ref97621
%stackaddr$env-ref97622 = alloca %struct.ScmObj*, align 8
%acc48062 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49287, i64 5)
store %struct.ScmObj* %acc48062, %struct.ScmObj** %stackaddr$env-ref97622
%stackaddr$env-ref97623 = alloca %struct.ScmObj*, align 8
%_37foldr48059 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49287, i64 6)
store %struct.ScmObj* %_37foldr48059, %struct.ScmObj** %stackaddr$env-ref97623
%stackaddr$prim97624 = alloca %struct.ScmObj*, align 8
%_95k48427 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94029)
store volatile %struct.ScmObj* %_95k48427, %struct.ScmObj** %stackaddr$prim97624, align 8
%stackaddr$prim97625 = alloca %struct.ScmObj*, align 8
%current_45args94030 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94029)
store volatile %struct.ScmObj* %current_45args94030, %struct.ScmObj** %stackaddr$prim97625, align 8
%stackaddr$prim97626 = alloca %struct.ScmObj*, align 8
%anf_45bind48199 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94030)
store volatile %struct.ScmObj* %anf_45bind48199, %struct.ScmObj** %stackaddr$prim97626, align 8
%stackaddr$prim97627 = alloca %struct.ScmObj*, align 8
%anf_45bind48200 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc48062, %struct.ScmObj* %lsts_4348068)
store volatile %struct.ScmObj* %anf_45bind48200, %struct.ScmObj** %stackaddr$prim97627, align 8
%stackaddr$prim97628 = alloca %struct.ScmObj*, align 8
%anf_45bind48201 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f48063, %struct.ScmObj* %anf_45bind48200)
store volatile %struct.ScmObj* %anf_45bind48201, %struct.ScmObj** %stackaddr$prim97628, align 8
%stackaddr$makeclosure97629 = alloca %struct.ScmObj*, align 8
%fptrToInt97630 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49313 to i64
%ae49313 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt97630)
store volatile %struct.ScmObj* %ae49313, %struct.ScmObj** %stackaddr$makeclosure97629, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49313, %struct.ScmObj* %anf_45bind48199, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49313, %struct.ScmObj* %_37foldr148053, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49313, %struct.ScmObj* %k48420, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49313, %struct.ScmObj* %vs48066, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae49313, %struct.ScmObj* %f48063, i64 4)
%stackaddr$prim97631 = alloca %struct.ScmObj*, align 8
%cpsargs48431 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49313, %struct.ScmObj* %anf_45bind48201)
store volatile %struct.ScmObj* %cpsargs48431, %struct.ScmObj** %stackaddr$prim97631, align 8
%clofunc97632 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr48059)
musttail call tailcc void %clofunc97632(%struct.ScmObj* %_37foldr48059, %struct.ScmObj* %cpsargs48431)
ret void
}

define tailcc void @proc_clo$ae49313(%struct.ScmObj* %env$ae49313,%struct.ScmObj* %current_45args94032) {
%stackaddr$env-ref97633 = alloca %struct.ScmObj*, align 8
%anf_45bind48199 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49313, i64 0)
store %struct.ScmObj* %anf_45bind48199, %struct.ScmObj** %stackaddr$env-ref97633
%stackaddr$env-ref97634 = alloca %struct.ScmObj*, align 8
%_37foldr148053 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49313, i64 1)
store %struct.ScmObj* %_37foldr148053, %struct.ScmObj** %stackaddr$env-ref97634
%stackaddr$env-ref97635 = alloca %struct.ScmObj*, align 8
%k48420 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49313, i64 2)
store %struct.ScmObj* %k48420, %struct.ScmObj** %stackaddr$env-ref97635
%stackaddr$env-ref97636 = alloca %struct.ScmObj*, align 8
%vs48066 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49313, i64 3)
store %struct.ScmObj* %vs48066, %struct.ScmObj** %stackaddr$env-ref97636
%stackaddr$env-ref97637 = alloca %struct.ScmObj*, align 8
%f48063 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49313, i64 4)
store %struct.ScmObj* %f48063, %struct.ScmObj** %stackaddr$env-ref97637
%stackaddr$prim97638 = alloca %struct.ScmObj*, align 8
%_95k48428 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94032)
store volatile %struct.ScmObj* %_95k48428, %struct.ScmObj** %stackaddr$prim97638, align 8
%stackaddr$prim97639 = alloca %struct.ScmObj*, align 8
%current_45args94033 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94032)
store volatile %struct.ScmObj* %current_45args94033, %struct.ScmObj** %stackaddr$prim97639, align 8
%stackaddr$prim97640 = alloca %struct.ScmObj*, align 8
%anf_45bind48202 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94033)
store volatile %struct.ScmObj* %anf_45bind48202, %struct.ScmObj** %stackaddr$prim97640, align 8
%ae49318 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97641 = alloca %struct.ScmObj*, align 8
%anf_45bind48203 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48202, %struct.ScmObj* %ae49318)
store volatile %struct.ScmObj* %anf_45bind48203, %struct.ScmObj** %stackaddr$prim97641, align 8
%stackaddr$makeclosure97642 = alloca %struct.ScmObj*, align 8
%fptrToInt97643 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49320 to i64
%ae49320 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97643)
store volatile %struct.ScmObj* %ae49320, %struct.ScmObj** %stackaddr$makeclosure97642, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49320, %struct.ScmObj* %k48420, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49320, %struct.ScmObj* %f48063, i64 1)
%argslist94038$_37foldr1480530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97644 = alloca %struct.ScmObj*, align 8
%argslist94038$_37foldr1480531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %vs48066, %struct.ScmObj* %argslist94038$_37foldr1480530)
store volatile %struct.ScmObj* %argslist94038$_37foldr1480531, %struct.ScmObj** %stackaddr$prim97644, align 8
%stackaddr$prim97645 = alloca %struct.ScmObj*, align 8
%argslist94038$_37foldr1480532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48203, %struct.ScmObj* %argslist94038$_37foldr1480531)
store volatile %struct.ScmObj* %argslist94038$_37foldr1480532, %struct.ScmObj** %stackaddr$prim97645, align 8
%stackaddr$prim97646 = alloca %struct.ScmObj*, align 8
%argslist94038$_37foldr1480533 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48199, %struct.ScmObj* %argslist94038$_37foldr1480532)
store volatile %struct.ScmObj* %argslist94038$_37foldr1480533, %struct.ScmObj** %stackaddr$prim97646, align 8
%stackaddr$prim97647 = alloca %struct.ScmObj*, align 8
%argslist94038$_37foldr1480534 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49320, %struct.ScmObj* %argslist94038$_37foldr1480533)
store volatile %struct.ScmObj* %argslist94038$_37foldr1480534, %struct.ScmObj** %stackaddr$prim97647, align 8
%clofunc97648 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr148053)
musttail call tailcc void %clofunc97648(%struct.ScmObj* %_37foldr148053, %struct.ScmObj* %argslist94038$_37foldr1480534)
ret void
}

define tailcc void @proc_clo$ae49320(%struct.ScmObj* %env$ae49320,%struct.ScmObj* %current_45args94035) {
%stackaddr$env-ref97649 = alloca %struct.ScmObj*, align 8
%k48420 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49320, i64 0)
store %struct.ScmObj* %k48420, %struct.ScmObj** %stackaddr$env-ref97649
%stackaddr$env-ref97650 = alloca %struct.ScmObj*, align 8
%f48063 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49320, i64 1)
store %struct.ScmObj* %f48063, %struct.ScmObj** %stackaddr$env-ref97650
%stackaddr$prim97651 = alloca %struct.ScmObj*, align 8
%_95k48429 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94035)
store volatile %struct.ScmObj* %_95k48429, %struct.ScmObj** %stackaddr$prim97651, align 8
%stackaddr$prim97652 = alloca %struct.ScmObj*, align 8
%current_45args94036 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94035)
store volatile %struct.ScmObj* %current_45args94036, %struct.ScmObj** %stackaddr$prim97652, align 8
%stackaddr$prim97653 = alloca %struct.ScmObj*, align 8
%anf_45bind48204 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94036)
store volatile %struct.ScmObj* %anf_45bind48204, %struct.ScmObj** %stackaddr$prim97653, align 8
%stackaddr$prim97654 = alloca %struct.ScmObj*, align 8
%cpsargs48430 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48420, %struct.ScmObj* %anf_45bind48204)
store volatile %struct.ScmObj* %cpsargs48430, %struct.ScmObj** %stackaddr$prim97654, align 8
%clofunc97655 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f48063)
musttail call tailcc void %clofunc97655(%struct.ScmObj* %f48063, %struct.ScmObj* %cpsargs48430)
ret void
}

define tailcc void @proc_clo$ae49289(%struct.ScmObj* %env$ae49289,%struct.ScmObj* %current_45args94039) {
%stackaddr$prim97656 = alloca %struct.ScmObj*, align 8
%k48432 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94039)
store volatile %struct.ScmObj* %k48432, %struct.ScmObj** %stackaddr$prim97656, align 8
%stackaddr$prim97657 = alloca %struct.ScmObj*, align 8
%current_45args94040 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94039)
store volatile %struct.ScmObj* %current_45args94040, %struct.ScmObj** %stackaddr$prim97657, align 8
%stackaddr$prim97658 = alloca %struct.ScmObj*, align 8
%a48071 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94040)
store volatile %struct.ScmObj* %a48071, %struct.ScmObj** %stackaddr$prim97658, align 8
%stackaddr$prim97659 = alloca %struct.ScmObj*, align 8
%current_45args94041 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94040)
store volatile %struct.ScmObj* %current_45args94041, %struct.ScmObj** %stackaddr$prim97659, align 8
%stackaddr$prim97660 = alloca %struct.ScmObj*, align 8
%b48070 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94041)
store volatile %struct.ScmObj* %b48070, %struct.ScmObj** %stackaddr$prim97660, align 8
%stackaddr$prim97661 = alloca %struct.ScmObj*, align 8
%cpsprim48433 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %a48071, %struct.ScmObj* %b48070)
store volatile %struct.ScmObj* %cpsprim48433, %struct.ScmObj** %stackaddr$prim97661, align 8
%ae49293 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94043$k484320 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97662 = alloca %struct.ScmObj*, align 8
%argslist94043$k484321 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48433, %struct.ScmObj* %argslist94043$k484320)
store volatile %struct.ScmObj* %argslist94043$k484321, %struct.ScmObj** %stackaddr$prim97662, align 8
%stackaddr$prim97663 = alloca %struct.ScmObj*, align 8
%argslist94043$k484322 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49293, %struct.ScmObj* %argslist94043$k484321)
store volatile %struct.ScmObj* %argslist94043$k484322, %struct.ScmObj** %stackaddr$prim97663, align 8
%clofunc97664 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48432)
musttail call tailcc void %clofunc97664(%struct.ScmObj* %k48432, %struct.ScmObj* %argslist94043$k484322)
ret void
}

define tailcc void @proc_clo$ae49265(%struct.ScmObj* %env$ae49265,%struct.ScmObj* %current_45args94046) {
%stackaddr$prim97665 = alloca %struct.ScmObj*, align 8
%k48434 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94046)
store volatile %struct.ScmObj* %k48434, %struct.ScmObj** %stackaddr$prim97665, align 8
%stackaddr$prim97666 = alloca %struct.ScmObj*, align 8
%current_45args94047 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94046)
store volatile %struct.ScmObj* %current_45args94047, %struct.ScmObj** %stackaddr$prim97666, align 8
%stackaddr$prim97667 = alloca %struct.ScmObj*, align 8
%x48067 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94047)
store volatile %struct.ScmObj* %x48067, %struct.ScmObj** %stackaddr$prim97667, align 8
%stackaddr$prim97668 = alloca %struct.ScmObj*, align 8
%cpsprim48435 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %x48067)
store volatile %struct.ScmObj* %cpsprim48435, %struct.ScmObj** %stackaddr$prim97668, align 8
%ae49268 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94049$k484340 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97669 = alloca %struct.ScmObj*, align 8
%argslist94049$k484341 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48435, %struct.ScmObj* %argslist94049$k484340)
store volatile %struct.ScmObj* %argslist94049$k484341, %struct.ScmObj** %stackaddr$prim97669, align 8
%stackaddr$prim97670 = alloca %struct.ScmObj*, align 8
%argslist94049$k484342 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49268, %struct.ScmObj* %argslist94049$k484341)
store volatile %struct.ScmObj* %argslist94049$k484342, %struct.ScmObj** %stackaddr$prim97670, align 8
%clofunc97671 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48434)
musttail call tailcc void %clofunc97671(%struct.ScmObj* %k48434, %struct.ScmObj* %argslist94049$k484342)
ret void
}

define tailcc void @proc_clo$ae49241(%struct.ScmObj* %env$ae49241,%struct.ScmObj* %current_45args94052) {
%stackaddr$prim97672 = alloca %struct.ScmObj*, align 8
%k48436 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94052)
store volatile %struct.ScmObj* %k48436, %struct.ScmObj** %stackaddr$prim97672, align 8
%stackaddr$prim97673 = alloca %struct.ScmObj*, align 8
%current_45args94053 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94052)
store volatile %struct.ScmObj* %current_45args94053, %struct.ScmObj** %stackaddr$prim97673, align 8
%stackaddr$prim97674 = alloca %struct.ScmObj*, align 8
%x48069 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94053)
store volatile %struct.ScmObj* %x48069, %struct.ScmObj** %stackaddr$prim97674, align 8
%stackaddr$prim97675 = alloca %struct.ScmObj*, align 8
%cpsprim48437 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %x48069)
store volatile %struct.ScmObj* %cpsprim48437, %struct.ScmObj** %stackaddr$prim97675, align 8
%ae49244 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94055$k484360 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97676 = alloca %struct.ScmObj*, align 8
%argslist94055$k484361 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48437, %struct.ScmObj* %argslist94055$k484360)
store volatile %struct.ScmObj* %argslist94055$k484361, %struct.ScmObj** %stackaddr$prim97676, align 8
%stackaddr$prim97677 = alloca %struct.ScmObj*, align 8
%argslist94055$k484362 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49244, %struct.ScmObj* %argslist94055$k484361)
store volatile %struct.ScmObj* %argslist94055$k484362, %struct.ScmObj** %stackaddr$prim97677, align 8
%clofunc97678 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48436)
musttail call tailcc void %clofunc97678(%struct.ScmObj* %k48436, %struct.ScmObj* %argslist94055$k484362)
ret void
}

define tailcc void @proc_clo$ae49193(%struct.ScmObj* %env$ae49193,%struct.ScmObj* %current_45args94058) {
%stackaddr$prim97679 = alloca %struct.ScmObj*, align 8
%k48438 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94058)
store volatile %struct.ScmObj* %k48438, %struct.ScmObj** %stackaddr$prim97679, align 8
%stackaddr$prim97680 = alloca %struct.ScmObj*, align 8
%current_45args94059 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94058)
store volatile %struct.ScmObj* %current_45args94059, %struct.ScmObj** %stackaddr$prim97680, align 8
%stackaddr$prim97681 = alloca %struct.ScmObj*, align 8
%lst48065 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94059)
store volatile %struct.ScmObj* %lst48065, %struct.ScmObj** %stackaddr$prim97681, align 8
%stackaddr$prim97682 = alloca %struct.ScmObj*, align 8
%current_45args94060 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94059)
store volatile %struct.ScmObj* %current_45args94060, %struct.ScmObj** %stackaddr$prim97682, align 8
%stackaddr$prim97683 = alloca %struct.ScmObj*, align 8
%b48064 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94060)
store volatile %struct.ScmObj* %b48064, %struct.ScmObj** %stackaddr$prim97683, align 8
%truthy$cmp97684 = call i64 @is_truthy_value(%struct.ScmObj* %b48064)
%cmp$cmp97684 = icmp eq i64 %truthy$cmp97684, 1
br i1 %cmp$cmp97684, label %truebranch$cmp97684, label %falsebranch$cmp97684
truebranch$cmp97684:
%ae49196 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94062$k484380 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97685 = alloca %struct.ScmObj*, align 8
%argslist94062$k484381 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %b48064, %struct.ScmObj* %argslist94062$k484380)
store volatile %struct.ScmObj* %argslist94062$k484381, %struct.ScmObj** %stackaddr$prim97685, align 8
%stackaddr$prim97686 = alloca %struct.ScmObj*, align 8
%argslist94062$k484382 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49196, %struct.ScmObj* %argslist94062$k484381)
store volatile %struct.ScmObj* %argslist94062$k484382, %struct.ScmObj** %stackaddr$prim97686, align 8
%clofunc97687 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48438)
musttail call tailcc void %clofunc97687(%struct.ScmObj* %k48438, %struct.ScmObj* %argslist94062$k484382)
ret void
falsebranch$cmp97684:
%stackaddr$prim97688 = alloca %struct.ScmObj*, align 8
%cpsprim48439 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst48065)
store volatile %struct.ScmObj* %cpsprim48439, %struct.ScmObj** %stackaddr$prim97688, align 8
%ae49203 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94063$k484380 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97689 = alloca %struct.ScmObj*, align 8
%argslist94063$k484381 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48439, %struct.ScmObj* %argslist94063$k484380)
store volatile %struct.ScmObj* %argslist94063$k484381, %struct.ScmObj** %stackaddr$prim97689, align 8
%stackaddr$prim97690 = alloca %struct.ScmObj*, align 8
%argslist94063$k484382 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49203, %struct.ScmObj* %argslist94063$k484381)
store volatile %struct.ScmObj* %argslist94063$k484382, %struct.ScmObj** %stackaddr$prim97690, align 8
%clofunc97691 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48438)
musttail call tailcc void %clofunc97691(%struct.ScmObj* %k48438, %struct.ScmObj* %argslist94063$k484382)
ret void
}

define tailcc void @proc_clo$ae49150(%struct.ScmObj* %env$ae49150,%struct.ScmObj* %current_45args94067) {
%stackaddr$env-ref97692 = alloca %struct.ScmObj*, align 8
%_37take48045 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49150, i64 0)
store %struct.ScmObj* %_37take48045, %struct.ScmObj** %stackaddr$env-ref97692
%stackaddr$env-ref97693 = alloca %struct.ScmObj*, align 8
%_37length48042 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49150, i64 1)
store %struct.ScmObj* %_37length48042, %struct.ScmObj** %stackaddr$env-ref97693
%stackaddr$prim97694 = alloca %struct.ScmObj*, align 8
%k48440 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94067)
store volatile %struct.ScmObj* %k48440, %struct.ScmObj** %stackaddr$prim97694, align 8
%stackaddr$prim97695 = alloca %struct.ScmObj*, align 8
%current_45args94068 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94067)
store volatile %struct.ScmObj* %current_45args94068, %struct.ScmObj** %stackaddr$prim97695, align 8
%stackaddr$prim97696 = alloca %struct.ScmObj*, align 8
%lst48074 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94068)
store volatile %struct.ScmObj* %lst48074, %struct.ScmObj** %stackaddr$prim97696, align 8
%stackaddr$prim97697 = alloca %struct.ScmObj*, align 8
%current_45args94069 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94068)
store volatile %struct.ScmObj* %current_45args94069, %struct.ScmObj** %stackaddr$prim97697, align 8
%stackaddr$prim97698 = alloca %struct.ScmObj*, align 8
%n48073 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94069)
store volatile %struct.ScmObj* %n48073, %struct.ScmObj** %stackaddr$prim97698, align 8
%stackaddr$makeclosure97699 = alloca %struct.ScmObj*, align 8
%fptrToInt97700 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49152 to i64
%ae49152 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt97700)
store volatile %struct.ScmObj* %ae49152, %struct.ScmObj** %stackaddr$makeclosure97699, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49152, %struct.ScmObj* %n48073, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49152, %struct.ScmObj* %k48440, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49152, %struct.ScmObj* %_37take48045, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49152, %struct.ScmObj* %lst48074, i64 3)
%argslist94075$_37length480420 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97701 = alloca %struct.ScmObj*, align 8
%argslist94075$_37length480421 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lst48074, %struct.ScmObj* %argslist94075$_37length480420)
store volatile %struct.ScmObj* %argslist94075$_37length480421, %struct.ScmObj** %stackaddr$prim97701, align 8
%stackaddr$prim97702 = alloca %struct.ScmObj*, align 8
%argslist94075$_37length480422 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49152, %struct.ScmObj* %argslist94075$_37length480421)
store volatile %struct.ScmObj* %argslist94075$_37length480422, %struct.ScmObj** %stackaddr$prim97702, align 8
%clofunc97703 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37length48042)
musttail call tailcc void %clofunc97703(%struct.ScmObj* %_37length48042, %struct.ScmObj* %argslist94075$_37length480422)
ret void
}

define tailcc void @proc_clo$ae49152(%struct.ScmObj* %env$ae49152,%struct.ScmObj* %current_45args94071) {
%stackaddr$env-ref97704 = alloca %struct.ScmObj*, align 8
%n48073 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49152, i64 0)
store %struct.ScmObj* %n48073, %struct.ScmObj** %stackaddr$env-ref97704
%stackaddr$env-ref97705 = alloca %struct.ScmObj*, align 8
%k48440 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49152, i64 1)
store %struct.ScmObj* %k48440, %struct.ScmObj** %stackaddr$env-ref97705
%stackaddr$env-ref97706 = alloca %struct.ScmObj*, align 8
%_37take48045 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49152, i64 2)
store %struct.ScmObj* %_37take48045, %struct.ScmObj** %stackaddr$env-ref97706
%stackaddr$env-ref97707 = alloca %struct.ScmObj*, align 8
%lst48074 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49152, i64 3)
store %struct.ScmObj* %lst48074, %struct.ScmObj** %stackaddr$env-ref97707
%stackaddr$prim97708 = alloca %struct.ScmObj*, align 8
%_95k48441 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94071)
store volatile %struct.ScmObj* %_95k48441, %struct.ScmObj** %stackaddr$prim97708, align 8
%stackaddr$prim97709 = alloca %struct.ScmObj*, align 8
%current_45args94072 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94071)
store volatile %struct.ScmObj* %current_45args94072, %struct.ScmObj** %stackaddr$prim97709, align 8
%stackaddr$prim97710 = alloca %struct.ScmObj*, align 8
%anf_45bind48191 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94072)
store volatile %struct.ScmObj* %anf_45bind48191, %struct.ScmObj** %stackaddr$prim97710, align 8
%stackaddr$prim97711 = alloca %struct.ScmObj*, align 8
%anf_45bind48192 = call %struct.ScmObj* @prim__45(%struct.ScmObj* %anf_45bind48191, %struct.ScmObj* %n48073)
store volatile %struct.ScmObj* %anf_45bind48192, %struct.ScmObj** %stackaddr$prim97711, align 8
%argslist94074$_37take480450 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97712 = alloca %struct.ScmObj*, align 8
%argslist94074$_37take480451 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48192, %struct.ScmObj* %argslist94074$_37take480450)
store volatile %struct.ScmObj* %argslist94074$_37take480451, %struct.ScmObj** %stackaddr$prim97712, align 8
%stackaddr$prim97713 = alloca %struct.ScmObj*, align 8
%argslist94074$_37take480452 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lst48074, %struct.ScmObj* %argslist94074$_37take480451)
store volatile %struct.ScmObj* %argslist94074$_37take480452, %struct.ScmObj** %stackaddr$prim97713, align 8
%stackaddr$prim97714 = alloca %struct.ScmObj*, align 8
%argslist94074$_37take480453 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48440, %struct.ScmObj* %argslist94074$_37take480452)
store volatile %struct.ScmObj* %argslist94074$_37take480453, %struct.ScmObj** %stackaddr$prim97714, align 8
%clofunc97715 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37take48045)
musttail call tailcc void %clofunc97715(%struct.ScmObj* %_37take48045, %struct.ScmObj* %argslist94074$_37take480453)
ret void
}

define tailcc void @proc_clo$ae49096(%struct.ScmObj* %env$ae49096,%struct.ScmObj* %current_45args94077) {
%stackaddr$env-ref97716 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49096, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref97716
%stackaddr$prim97717 = alloca %struct.ScmObj*, align 8
%k48442 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94077)
store volatile %struct.ScmObj* %k48442, %struct.ScmObj** %stackaddr$prim97717, align 8
%stackaddr$prim97718 = alloca %struct.ScmObj*, align 8
%current_45args94078 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94077)
store volatile %struct.ScmObj* %current_45args94078, %struct.ScmObj** %stackaddr$prim97718, align 8
%stackaddr$prim97719 = alloca %struct.ScmObj*, align 8
%lst48076 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94078)
store volatile %struct.ScmObj* %lst48076, %struct.ScmObj** %stackaddr$prim97719, align 8
%stackaddr$makeclosure97720 = alloca %struct.ScmObj*, align 8
%fptrToInt97721 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49097 to i64
%ae49097 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt97721)
store volatile %struct.ScmObj* %ae49097, %struct.ScmObj** %stackaddr$makeclosure97720, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49097, %struct.ScmObj* %_37foldl148037, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49097, %struct.ScmObj* %lst48076, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49097, %struct.ScmObj* %k48442, i64 2)
%ae49098 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97722 = alloca %struct.ScmObj*, align 8
%fptrToInt97723 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49099 to i64
%ae49099 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt97723)
store volatile %struct.ScmObj* %ae49099, %struct.ScmObj** %stackaddr$makeclosure97722, align 8
%argslist94089$ae490970 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97724 = alloca %struct.ScmObj*, align 8
%argslist94089$ae490971 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49099, %struct.ScmObj* %argslist94089$ae490970)
store volatile %struct.ScmObj* %argslist94089$ae490971, %struct.ScmObj** %stackaddr$prim97724, align 8
%stackaddr$prim97725 = alloca %struct.ScmObj*, align 8
%argslist94089$ae490972 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49098, %struct.ScmObj* %argslist94089$ae490971)
store volatile %struct.ScmObj* %argslist94089$ae490972, %struct.ScmObj** %stackaddr$prim97725, align 8
%clofunc97726 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49097)
musttail call tailcc void %clofunc97726(%struct.ScmObj* %ae49097, %struct.ScmObj* %argslist94089$ae490972)
ret void
}

define tailcc void @proc_clo$ae49097(%struct.ScmObj* %env$ae49097,%struct.ScmObj* %current_45args94080) {
%stackaddr$env-ref97727 = alloca %struct.ScmObj*, align 8
%_37foldl148037 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49097, i64 0)
store %struct.ScmObj* %_37foldl148037, %struct.ScmObj** %stackaddr$env-ref97727
%stackaddr$env-ref97728 = alloca %struct.ScmObj*, align 8
%lst48076 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49097, i64 1)
store %struct.ScmObj* %lst48076, %struct.ScmObj** %stackaddr$env-ref97728
%stackaddr$env-ref97729 = alloca %struct.ScmObj*, align 8
%k48442 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49097, i64 2)
store %struct.ScmObj* %k48442, %struct.ScmObj** %stackaddr$env-ref97729
%stackaddr$prim97730 = alloca %struct.ScmObj*, align 8
%_95k48443 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94080)
store volatile %struct.ScmObj* %_95k48443, %struct.ScmObj** %stackaddr$prim97730, align 8
%stackaddr$prim97731 = alloca %struct.ScmObj*, align 8
%current_45args94081 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94080)
store volatile %struct.ScmObj* %current_45args94081, %struct.ScmObj** %stackaddr$prim97731, align 8
%stackaddr$prim97732 = alloca %struct.ScmObj*, align 8
%anf_45bind48190 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94081)
store volatile %struct.ScmObj* %anf_45bind48190, %struct.ScmObj** %stackaddr$prim97732, align 8
%ae49118 = call %struct.ScmObj* @const_init_null()
%argslist94083$_37foldl1480370 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97733 = alloca %struct.ScmObj*, align 8
%argslist94083$_37foldl1480371 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lst48076, %struct.ScmObj* %argslist94083$_37foldl1480370)
store volatile %struct.ScmObj* %argslist94083$_37foldl1480371, %struct.ScmObj** %stackaddr$prim97733, align 8
%stackaddr$prim97734 = alloca %struct.ScmObj*, align 8
%argslist94083$_37foldl1480372 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49118, %struct.ScmObj* %argslist94083$_37foldl1480371)
store volatile %struct.ScmObj* %argslist94083$_37foldl1480372, %struct.ScmObj** %stackaddr$prim97734, align 8
%stackaddr$prim97735 = alloca %struct.ScmObj*, align 8
%argslist94083$_37foldl1480373 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48190, %struct.ScmObj* %argslist94083$_37foldl1480372)
store volatile %struct.ScmObj* %argslist94083$_37foldl1480373, %struct.ScmObj** %stackaddr$prim97735, align 8
%stackaddr$prim97736 = alloca %struct.ScmObj*, align 8
%argslist94083$_37foldl1480374 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48442, %struct.ScmObj* %argslist94083$_37foldl1480373)
store volatile %struct.ScmObj* %argslist94083$_37foldl1480374, %struct.ScmObj** %stackaddr$prim97736, align 8
%clofunc97737 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldl148037)
musttail call tailcc void %clofunc97737(%struct.ScmObj* %_37foldl148037, %struct.ScmObj* %argslist94083$_37foldl1480374)
ret void
}

define tailcc void @proc_clo$ae49099(%struct.ScmObj* %env$ae49099,%struct.ScmObj* %current_45args94084) {
%stackaddr$prim97738 = alloca %struct.ScmObj*, align 8
%k48444 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94084)
store volatile %struct.ScmObj* %k48444, %struct.ScmObj** %stackaddr$prim97738, align 8
%stackaddr$prim97739 = alloca %struct.ScmObj*, align 8
%current_45args94085 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94084)
store volatile %struct.ScmObj* %current_45args94085, %struct.ScmObj** %stackaddr$prim97739, align 8
%stackaddr$prim97740 = alloca %struct.ScmObj*, align 8
%x48078 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94085)
store volatile %struct.ScmObj* %x48078, %struct.ScmObj** %stackaddr$prim97740, align 8
%stackaddr$prim97741 = alloca %struct.ScmObj*, align 8
%current_45args94086 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94085)
store volatile %struct.ScmObj* %current_45args94086, %struct.ScmObj** %stackaddr$prim97741, align 8
%stackaddr$prim97742 = alloca %struct.ScmObj*, align 8
%y48077 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94086)
store volatile %struct.ScmObj* %y48077, %struct.ScmObj** %stackaddr$prim97742, align 8
%ae49101 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94088$k484440 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97743 = alloca %struct.ScmObj*, align 8
%argslist94088$k484441 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x48078, %struct.ScmObj* %argslist94088$k484440)
store volatile %struct.ScmObj* %argslist94088$k484441, %struct.ScmObj** %stackaddr$prim97743, align 8
%stackaddr$prim97744 = alloca %struct.ScmObj*, align 8
%argslist94088$k484442 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49101, %struct.ScmObj* %argslist94088$k484441)
store volatile %struct.ScmObj* %argslist94088$k484442, %struct.ScmObj** %stackaddr$prim97744, align 8
%clofunc97745 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48444)
musttail call tailcc void %clofunc97745(%struct.ScmObj* %k48444, %struct.ScmObj* %argslist94088$k484442)
ret void
}

define tailcc void @proc_clo$ae49017(%struct.ScmObj* %env$ae49017,%struct.ScmObj* %current_45args94092) {
%stackaddr$prim97746 = alloca %struct.ScmObj*, align 8
%k48445 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94092)
store volatile %struct.ScmObj* %k48445, %struct.ScmObj** %stackaddr$prim97746, align 8
%stackaddr$prim97747 = alloca %struct.ScmObj*, align 8
%current_45args94093 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94092)
store volatile %struct.ScmObj* %current_45args94093, %struct.ScmObj** %stackaddr$prim97747, align 8
%stackaddr$prim97748 = alloca %struct.ScmObj*, align 8
%_37foldl148038 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94093)
store volatile %struct.ScmObj* %_37foldl148038, %struct.ScmObj** %stackaddr$prim97748, align 8
%ae49019 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97749 = alloca %struct.ScmObj*, align 8
%fptrToInt97750 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49020 to i64
%ae49020 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt97750)
store volatile %struct.ScmObj* %ae49020, %struct.ScmObj** %stackaddr$makeclosure97749, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49020, %struct.ScmObj* %_37foldl148038, i64 0)
%argslist94106$k484450 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97751 = alloca %struct.ScmObj*, align 8
%argslist94106$k484451 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49020, %struct.ScmObj* %argslist94106$k484450)
store volatile %struct.ScmObj* %argslist94106$k484451, %struct.ScmObj** %stackaddr$prim97751, align 8
%stackaddr$prim97752 = alloca %struct.ScmObj*, align 8
%argslist94106$k484452 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49019, %struct.ScmObj* %argslist94106$k484451)
store volatile %struct.ScmObj* %argslist94106$k484452, %struct.ScmObj** %stackaddr$prim97752, align 8
%clofunc97753 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48445)
musttail call tailcc void %clofunc97753(%struct.ScmObj* %k48445, %struct.ScmObj* %argslist94106$k484452)
ret void
}

define tailcc void @proc_clo$ae49020(%struct.ScmObj* %env$ae49020,%struct.ScmObj* %current_45args94095) {
%stackaddr$env-ref97754 = alloca %struct.ScmObj*, align 8
%_37foldl148038 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49020, i64 0)
store %struct.ScmObj* %_37foldl148038, %struct.ScmObj** %stackaddr$env-ref97754
%stackaddr$prim97755 = alloca %struct.ScmObj*, align 8
%k48446 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94095)
store volatile %struct.ScmObj* %k48446, %struct.ScmObj** %stackaddr$prim97755, align 8
%stackaddr$prim97756 = alloca %struct.ScmObj*, align 8
%current_45args94096 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94095)
store volatile %struct.ScmObj* %current_45args94096, %struct.ScmObj** %stackaddr$prim97756, align 8
%stackaddr$prim97757 = alloca %struct.ScmObj*, align 8
%f48041 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94096)
store volatile %struct.ScmObj* %f48041, %struct.ScmObj** %stackaddr$prim97757, align 8
%stackaddr$prim97758 = alloca %struct.ScmObj*, align 8
%current_45args94097 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94096)
store volatile %struct.ScmObj* %current_45args94097, %struct.ScmObj** %stackaddr$prim97758, align 8
%stackaddr$prim97759 = alloca %struct.ScmObj*, align 8
%acc48040 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94097)
store volatile %struct.ScmObj* %acc48040, %struct.ScmObj** %stackaddr$prim97759, align 8
%stackaddr$prim97760 = alloca %struct.ScmObj*, align 8
%current_45args94098 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94097)
store volatile %struct.ScmObj* %current_45args94098, %struct.ScmObj** %stackaddr$prim97760, align 8
%stackaddr$prim97761 = alloca %struct.ScmObj*, align 8
%lst48039 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94098)
store volatile %struct.ScmObj* %lst48039, %struct.ScmObj** %stackaddr$prim97761, align 8
%stackaddr$prim97762 = alloca %struct.ScmObj*, align 8
%anf_45bind48185 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst48039)
store volatile %struct.ScmObj* %anf_45bind48185, %struct.ScmObj** %stackaddr$prim97762, align 8
%truthy$cmp97763 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48185)
%cmp$cmp97763 = icmp eq i64 %truthy$cmp97763, 1
br i1 %cmp$cmp97763, label %truebranch$cmp97763, label %falsebranch$cmp97763
truebranch$cmp97763:
%ae49024 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94100$k484460 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97764 = alloca %struct.ScmObj*, align 8
%argslist94100$k484461 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc48040, %struct.ScmObj* %argslist94100$k484460)
store volatile %struct.ScmObj* %argslist94100$k484461, %struct.ScmObj** %stackaddr$prim97764, align 8
%stackaddr$prim97765 = alloca %struct.ScmObj*, align 8
%argslist94100$k484462 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49024, %struct.ScmObj* %argslist94100$k484461)
store volatile %struct.ScmObj* %argslist94100$k484462, %struct.ScmObj** %stackaddr$prim97765, align 8
%clofunc97766 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48446)
musttail call tailcc void %clofunc97766(%struct.ScmObj* %k48446, %struct.ScmObj* %argslist94100$k484462)
ret void
falsebranch$cmp97763:
%stackaddr$prim97767 = alloca %struct.ScmObj*, align 8
%anf_45bind48186 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %lst48039)
store volatile %struct.ScmObj* %anf_45bind48186, %struct.ScmObj** %stackaddr$prim97767, align 8
%stackaddr$makeclosure97768 = alloca %struct.ScmObj*, align 8
%fptrToInt97769 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49031 to i64
%ae49031 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt97769)
store volatile %struct.ScmObj* %ae49031, %struct.ScmObj** %stackaddr$makeclosure97768, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49031, %struct.ScmObj* %f48041, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae49031, %struct.ScmObj* %lst48039, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae49031, %struct.ScmObj* %_37foldl148038, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae49031, %struct.ScmObj* %k48446, i64 3)
%argslist94105$f480410 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97770 = alloca %struct.ScmObj*, align 8
%argslist94105$f480411 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc48040, %struct.ScmObj* %argslist94105$f480410)
store volatile %struct.ScmObj* %argslist94105$f480411, %struct.ScmObj** %stackaddr$prim97770, align 8
%stackaddr$prim97771 = alloca %struct.ScmObj*, align 8
%argslist94105$f480412 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48186, %struct.ScmObj* %argslist94105$f480411)
store volatile %struct.ScmObj* %argslist94105$f480412, %struct.ScmObj** %stackaddr$prim97771, align 8
%stackaddr$prim97772 = alloca %struct.ScmObj*, align 8
%argslist94105$f480413 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49031, %struct.ScmObj* %argslist94105$f480412)
store volatile %struct.ScmObj* %argslist94105$f480413, %struct.ScmObj** %stackaddr$prim97772, align 8
%clofunc97773 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f48041)
musttail call tailcc void %clofunc97773(%struct.ScmObj* %f48041, %struct.ScmObj* %argslist94105$f480413)
ret void
}

define tailcc void @proc_clo$ae49031(%struct.ScmObj* %env$ae49031,%struct.ScmObj* %current_45args94101) {
%stackaddr$env-ref97774 = alloca %struct.ScmObj*, align 8
%f48041 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49031, i64 0)
store %struct.ScmObj* %f48041, %struct.ScmObj** %stackaddr$env-ref97774
%stackaddr$env-ref97775 = alloca %struct.ScmObj*, align 8
%lst48039 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49031, i64 1)
store %struct.ScmObj* %lst48039, %struct.ScmObj** %stackaddr$env-ref97775
%stackaddr$env-ref97776 = alloca %struct.ScmObj*, align 8
%_37foldl148038 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49031, i64 2)
store %struct.ScmObj* %_37foldl148038, %struct.ScmObj** %stackaddr$env-ref97776
%stackaddr$env-ref97777 = alloca %struct.ScmObj*, align 8
%k48446 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49031, i64 3)
store %struct.ScmObj* %k48446, %struct.ScmObj** %stackaddr$env-ref97777
%stackaddr$prim97778 = alloca %struct.ScmObj*, align 8
%_95k48447 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94101)
store volatile %struct.ScmObj* %_95k48447, %struct.ScmObj** %stackaddr$prim97778, align 8
%stackaddr$prim97779 = alloca %struct.ScmObj*, align 8
%current_45args94102 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94101)
store volatile %struct.ScmObj* %current_45args94102, %struct.ScmObj** %stackaddr$prim97779, align 8
%stackaddr$prim97780 = alloca %struct.ScmObj*, align 8
%anf_45bind48187 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94102)
store volatile %struct.ScmObj* %anf_45bind48187, %struct.ScmObj** %stackaddr$prim97780, align 8
%stackaddr$prim97781 = alloca %struct.ScmObj*, align 8
%anf_45bind48188 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %lst48039)
store volatile %struct.ScmObj* %anf_45bind48188, %struct.ScmObj** %stackaddr$prim97781, align 8
%argslist94104$_37foldl1480380 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97782 = alloca %struct.ScmObj*, align 8
%argslist94104$_37foldl1480381 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48188, %struct.ScmObj* %argslist94104$_37foldl1480380)
store volatile %struct.ScmObj* %argslist94104$_37foldl1480381, %struct.ScmObj** %stackaddr$prim97782, align 8
%stackaddr$prim97783 = alloca %struct.ScmObj*, align 8
%argslist94104$_37foldl1480382 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48187, %struct.ScmObj* %argslist94104$_37foldl1480381)
store volatile %struct.ScmObj* %argslist94104$_37foldl1480382, %struct.ScmObj** %stackaddr$prim97783, align 8
%stackaddr$prim97784 = alloca %struct.ScmObj*, align 8
%argslist94104$_37foldl1480383 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f48041, %struct.ScmObj* %argslist94104$_37foldl1480382)
store volatile %struct.ScmObj* %argslist94104$_37foldl1480383, %struct.ScmObj** %stackaddr$prim97784, align 8
%stackaddr$prim97785 = alloca %struct.ScmObj*, align 8
%argslist94104$_37foldl1480384 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48446, %struct.ScmObj* %argslist94104$_37foldl1480383)
store volatile %struct.ScmObj* %argslist94104$_37foldl1480384, %struct.ScmObj** %stackaddr$prim97785, align 8
%clofunc97786 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldl148038)
musttail call tailcc void %clofunc97786(%struct.ScmObj* %_37foldl148038, %struct.ScmObj* %argslist94104$_37foldl1480384)
ret void
}

define tailcc void @proc_clo$ae48934(%struct.ScmObj* %env$ae48934,%struct.ScmObj* %current_45args94109) {
%stackaddr$prim97787 = alloca %struct.ScmObj*, align 8
%k48448 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94109)
store volatile %struct.ScmObj* %k48448, %struct.ScmObj** %stackaddr$prim97787, align 8
%stackaddr$prim97788 = alloca %struct.ScmObj*, align 8
%current_45args94110 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94109)
store volatile %struct.ScmObj* %current_45args94110, %struct.ScmObj** %stackaddr$prim97788, align 8
%stackaddr$prim97789 = alloca %struct.ScmObj*, align 8
%_37length48043 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94110)
store volatile %struct.ScmObj* %_37length48043, %struct.ScmObj** %stackaddr$prim97789, align 8
%ae48936 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97790 = alloca %struct.ScmObj*, align 8
%fptrToInt97791 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48937 to i64
%ae48937 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt97791)
store volatile %struct.ScmObj* %ae48937, %struct.ScmObj** %stackaddr$makeclosure97790, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48937, %struct.ScmObj* %_37length48043, i64 0)
%argslist94121$k484480 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97792 = alloca %struct.ScmObj*, align 8
%argslist94121$k484481 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48937, %struct.ScmObj* %argslist94121$k484480)
store volatile %struct.ScmObj* %argslist94121$k484481, %struct.ScmObj** %stackaddr$prim97792, align 8
%stackaddr$prim97793 = alloca %struct.ScmObj*, align 8
%argslist94121$k484482 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48936, %struct.ScmObj* %argslist94121$k484481)
store volatile %struct.ScmObj* %argslist94121$k484482, %struct.ScmObj** %stackaddr$prim97793, align 8
%clofunc97794 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48448)
musttail call tailcc void %clofunc97794(%struct.ScmObj* %k48448, %struct.ScmObj* %argslist94121$k484482)
ret void
}

define tailcc void @proc_clo$ae48937(%struct.ScmObj* %env$ae48937,%struct.ScmObj* %current_45args94112) {
%stackaddr$env-ref97795 = alloca %struct.ScmObj*, align 8
%_37length48043 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48937, i64 0)
store %struct.ScmObj* %_37length48043, %struct.ScmObj** %stackaddr$env-ref97795
%stackaddr$prim97796 = alloca %struct.ScmObj*, align 8
%k48449 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94112)
store volatile %struct.ScmObj* %k48449, %struct.ScmObj** %stackaddr$prim97796, align 8
%stackaddr$prim97797 = alloca %struct.ScmObj*, align 8
%current_45args94113 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94112)
store volatile %struct.ScmObj* %current_45args94113, %struct.ScmObj** %stackaddr$prim97797, align 8
%stackaddr$prim97798 = alloca %struct.ScmObj*, align 8
%lst48044 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94113)
store volatile %struct.ScmObj* %lst48044, %struct.ScmObj** %stackaddr$prim97798, align 8
%stackaddr$prim97799 = alloca %struct.ScmObj*, align 8
%anf_45bind48181 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst48044)
store volatile %struct.ScmObj* %anf_45bind48181, %struct.ScmObj** %stackaddr$prim97799, align 8
%truthy$cmp97800 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48181)
%cmp$cmp97800 = icmp eq i64 %truthy$cmp97800, 1
br i1 %cmp$cmp97800, label %truebranch$cmp97800, label %falsebranch$cmp97800
truebranch$cmp97800:
%ae48941 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48942 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94115$k484490 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97801 = alloca %struct.ScmObj*, align 8
%argslist94115$k484491 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48942, %struct.ScmObj* %argslist94115$k484490)
store volatile %struct.ScmObj* %argslist94115$k484491, %struct.ScmObj** %stackaddr$prim97801, align 8
%stackaddr$prim97802 = alloca %struct.ScmObj*, align 8
%argslist94115$k484492 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48941, %struct.ScmObj* %argslist94115$k484491)
store volatile %struct.ScmObj* %argslist94115$k484492, %struct.ScmObj** %stackaddr$prim97802, align 8
%clofunc97803 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48449)
musttail call tailcc void %clofunc97803(%struct.ScmObj* %k48449, %struct.ScmObj* %argslist94115$k484492)
ret void
falsebranch$cmp97800:
%stackaddr$prim97804 = alloca %struct.ScmObj*, align 8
%anf_45bind48182 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %lst48044)
store volatile %struct.ScmObj* %anf_45bind48182, %struct.ScmObj** %stackaddr$prim97804, align 8
%stackaddr$makeclosure97805 = alloca %struct.ScmObj*, align 8
%fptrToInt97806 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48951 to i64
%ae48951 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt97806)
store volatile %struct.ScmObj* %ae48951, %struct.ScmObj** %stackaddr$makeclosure97805, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48951, %struct.ScmObj* %k48449, i64 0)
%argslist94120$_37length480430 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97807 = alloca %struct.ScmObj*, align 8
%argslist94120$_37length480431 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48182, %struct.ScmObj* %argslist94120$_37length480430)
store volatile %struct.ScmObj* %argslist94120$_37length480431, %struct.ScmObj** %stackaddr$prim97807, align 8
%stackaddr$prim97808 = alloca %struct.ScmObj*, align 8
%argslist94120$_37length480432 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48951, %struct.ScmObj* %argslist94120$_37length480431)
store volatile %struct.ScmObj* %argslist94120$_37length480432, %struct.ScmObj** %stackaddr$prim97808, align 8
%clofunc97809 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37length48043)
musttail call tailcc void %clofunc97809(%struct.ScmObj* %_37length48043, %struct.ScmObj* %argslist94120$_37length480432)
ret void
}

define tailcc void @proc_clo$ae48951(%struct.ScmObj* %env$ae48951,%struct.ScmObj* %current_45args94116) {
%stackaddr$env-ref97810 = alloca %struct.ScmObj*, align 8
%k48449 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48951, i64 0)
store %struct.ScmObj* %k48449, %struct.ScmObj** %stackaddr$env-ref97810
%stackaddr$prim97811 = alloca %struct.ScmObj*, align 8
%_95k48450 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94116)
store volatile %struct.ScmObj* %_95k48450, %struct.ScmObj** %stackaddr$prim97811, align 8
%stackaddr$prim97812 = alloca %struct.ScmObj*, align 8
%current_45args94117 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94116)
store volatile %struct.ScmObj* %current_45args94117, %struct.ScmObj** %stackaddr$prim97812, align 8
%stackaddr$prim97813 = alloca %struct.ScmObj*, align 8
%anf_45bind48183 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94117)
store volatile %struct.ScmObj* %anf_45bind48183, %struct.ScmObj** %stackaddr$prim97813, align 8
%ae48953 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim97814 = alloca %struct.ScmObj*, align 8
%cpsprim48451 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %ae48953, %struct.ScmObj* %anf_45bind48183)
store volatile %struct.ScmObj* %cpsprim48451, %struct.ScmObj** %stackaddr$prim97814, align 8
%ae48956 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94119$k484490 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97815 = alloca %struct.ScmObj*, align 8
%argslist94119$k484491 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48451, %struct.ScmObj* %argslist94119$k484490)
store volatile %struct.ScmObj* %argslist94119$k484491, %struct.ScmObj** %stackaddr$prim97815, align 8
%stackaddr$prim97816 = alloca %struct.ScmObj*, align 8
%argslist94119$k484492 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48956, %struct.ScmObj* %argslist94119$k484491)
store volatile %struct.ScmObj* %argslist94119$k484492, %struct.ScmObj** %stackaddr$prim97816, align 8
%clofunc97817 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48449)
musttail call tailcc void %clofunc97817(%struct.ScmObj* %k48449, %struct.ScmObj* %argslist94119$k484492)
ret void
}

define tailcc void @proc_clo$ae48784(%struct.ScmObj* %env$ae48784,%struct.ScmObj* %current_45args94124) {
%stackaddr$prim97818 = alloca %struct.ScmObj*, align 8
%k48452 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94124)
store volatile %struct.ScmObj* %k48452, %struct.ScmObj** %stackaddr$prim97818, align 8
%stackaddr$prim97819 = alloca %struct.ScmObj*, align 8
%current_45args94125 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94124)
store volatile %struct.ScmObj* %current_45args94125, %struct.ScmObj** %stackaddr$prim97819, align 8
%stackaddr$prim97820 = alloca %struct.ScmObj*, align 8
%_37take48046 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94125)
store volatile %struct.ScmObj* %_37take48046, %struct.ScmObj** %stackaddr$prim97820, align 8
%ae48786 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97821 = alloca %struct.ScmObj*, align 8
%fptrToInt97822 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48787 to i64
%ae48787 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt97822)
store volatile %struct.ScmObj* %ae48787, %struct.ScmObj** %stackaddr$makeclosure97821, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48787, %struct.ScmObj* %_37take48046, i64 0)
%argslist94138$k484520 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97823 = alloca %struct.ScmObj*, align 8
%argslist94138$k484521 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48787, %struct.ScmObj* %argslist94138$k484520)
store volatile %struct.ScmObj* %argslist94138$k484521, %struct.ScmObj** %stackaddr$prim97823, align 8
%stackaddr$prim97824 = alloca %struct.ScmObj*, align 8
%argslist94138$k484522 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48786, %struct.ScmObj* %argslist94138$k484521)
store volatile %struct.ScmObj* %argslist94138$k484522, %struct.ScmObj** %stackaddr$prim97824, align 8
%clofunc97825 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48452)
musttail call tailcc void %clofunc97825(%struct.ScmObj* %k48452, %struct.ScmObj* %argslist94138$k484522)
ret void
}

define tailcc void @proc_clo$ae48787(%struct.ScmObj* %env$ae48787,%struct.ScmObj* %current_45args94127) {
%stackaddr$env-ref97826 = alloca %struct.ScmObj*, align 8
%_37take48046 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48787, i64 0)
store %struct.ScmObj* %_37take48046, %struct.ScmObj** %stackaddr$env-ref97826
%stackaddr$prim97827 = alloca %struct.ScmObj*, align 8
%k48453 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94127)
store volatile %struct.ScmObj* %k48453, %struct.ScmObj** %stackaddr$prim97827, align 8
%stackaddr$prim97828 = alloca %struct.ScmObj*, align 8
%current_45args94128 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94127)
store volatile %struct.ScmObj* %current_45args94128, %struct.ScmObj** %stackaddr$prim97828, align 8
%stackaddr$prim97829 = alloca %struct.ScmObj*, align 8
%lst48048 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94128)
store volatile %struct.ScmObj* %lst48048, %struct.ScmObj** %stackaddr$prim97829, align 8
%stackaddr$prim97830 = alloca %struct.ScmObj*, align 8
%current_45args94129 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94128)
store volatile %struct.ScmObj* %current_45args94129, %struct.ScmObj** %stackaddr$prim97830, align 8
%stackaddr$prim97831 = alloca %struct.ScmObj*, align 8
%n48047 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94129)
store volatile %struct.ScmObj* %n48047, %struct.ScmObj** %stackaddr$prim97831, align 8
%ae48789 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim97832 = alloca %struct.ScmObj*, align 8
%anf_45bind48174 = call %struct.ScmObj* @prim__61(%struct.ScmObj* %n48047, %struct.ScmObj* %ae48789)
store volatile %struct.ScmObj* %anf_45bind48174, %struct.ScmObj** %stackaddr$prim97832, align 8
%truthy$cmp97833 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48174)
%cmp$cmp97833 = icmp eq i64 %truthy$cmp97833, 1
br i1 %cmp$cmp97833, label %truebranch$cmp97833, label %falsebranch$cmp97833
truebranch$cmp97833:
%ae48792 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48793 = call %struct.ScmObj* @const_init_null()
%argslist94131$k484530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97834 = alloca %struct.ScmObj*, align 8
%argslist94131$k484531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48793, %struct.ScmObj* %argslist94131$k484530)
store volatile %struct.ScmObj* %argslist94131$k484531, %struct.ScmObj** %stackaddr$prim97834, align 8
%stackaddr$prim97835 = alloca %struct.ScmObj*, align 8
%argslist94131$k484532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48792, %struct.ScmObj* %argslist94131$k484531)
store volatile %struct.ScmObj* %argslist94131$k484532, %struct.ScmObj** %stackaddr$prim97835, align 8
%clofunc97836 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48453)
musttail call tailcc void %clofunc97836(%struct.ScmObj* %k48453, %struct.ScmObj* %argslist94131$k484532)
ret void
falsebranch$cmp97833:
%stackaddr$prim97837 = alloca %struct.ScmObj*, align 8
%anf_45bind48175 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst48048)
store volatile %struct.ScmObj* %anf_45bind48175, %struct.ScmObj** %stackaddr$prim97837, align 8
%truthy$cmp97838 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48175)
%cmp$cmp97838 = icmp eq i64 %truthy$cmp97838, 1
br i1 %cmp$cmp97838, label %truebranch$cmp97838, label %falsebranch$cmp97838
truebranch$cmp97838:
%ae48803 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48804 = call %struct.ScmObj* @const_init_null()
%argslist94132$k484530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97839 = alloca %struct.ScmObj*, align 8
%argslist94132$k484531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48804, %struct.ScmObj* %argslist94132$k484530)
store volatile %struct.ScmObj* %argslist94132$k484531, %struct.ScmObj** %stackaddr$prim97839, align 8
%stackaddr$prim97840 = alloca %struct.ScmObj*, align 8
%argslist94132$k484532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48803, %struct.ScmObj* %argslist94132$k484531)
store volatile %struct.ScmObj* %argslist94132$k484532, %struct.ScmObj** %stackaddr$prim97840, align 8
%clofunc97841 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48453)
musttail call tailcc void %clofunc97841(%struct.ScmObj* %k48453, %struct.ScmObj* %argslist94132$k484532)
ret void
falsebranch$cmp97838:
%stackaddr$prim97842 = alloca %struct.ScmObj*, align 8
%anf_45bind48176 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %lst48048)
store volatile %struct.ScmObj* %anf_45bind48176, %struct.ScmObj** %stackaddr$prim97842, align 8
%stackaddr$prim97843 = alloca %struct.ScmObj*, align 8
%anf_45bind48177 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %lst48048)
store volatile %struct.ScmObj* %anf_45bind48177, %struct.ScmObj** %stackaddr$prim97843, align 8
%ae48814 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim97844 = alloca %struct.ScmObj*, align 8
%anf_45bind48178 = call %struct.ScmObj* @prim__45(%struct.ScmObj* %n48047, %struct.ScmObj* %ae48814)
store volatile %struct.ScmObj* %anf_45bind48178, %struct.ScmObj** %stackaddr$prim97844, align 8
%stackaddr$makeclosure97845 = alloca %struct.ScmObj*, align 8
%fptrToInt97846 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48816 to i64
%ae48816 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97846)
store volatile %struct.ScmObj* %ae48816, %struct.ScmObj** %stackaddr$makeclosure97845, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48816, %struct.ScmObj* %k48453, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48816, %struct.ScmObj* %anf_45bind48176, i64 1)
%argslist94137$_37take480460 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97847 = alloca %struct.ScmObj*, align 8
%argslist94137$_37take480461 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48178, %struct.ScmObj* %argslist94137$_37take480460)
store volatile %struct.ScmObj* %argslist94137$_37take480461, %struct.ScmObj** %stackaddr$prim97847, align 8
%stackaddr$prim97848 = alloca %struct.ScmObj*, align 8
%argslist94137$_37take480462 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48177, %struct.ScmObj* %argslist94137$_37take480461)
store volatile %struct.ScmObj* %argslist94137$_37take480462, %struct.ScmObj** %stackaddr$prim97848, align 8
%stackaddr$prim97849 = alloca %struct.ScmObj*, align 8
%argslist94137$_37take480463 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48816, %struct.ScmObj* %argslist94137$_37take480462)
store volatile %struct.ScmObj* %argslist94137$_37take480463, %struct.ScmObj** %stackaddr$prim97849, align 8
%clofunc97850 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37take48046)
musttail call tailcc void %clofunc97850(%struct.ScmObj* %_37take48046, %struct.ScmObj* %argslist94137$_37take480463)
ret void
}

define tailcc void @proc_clo$ae48816(%struct.ScmObj* %env$ae48816,%struct.ScmObj* %current_45args94133) {
%stackaddr$env-ref97851 = alloca %struct.ScmObj*, align 8
%k48453 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48816, i64 0)
store %struct.ScmObj* %k48453, %struct.ScmObj** %stackaddr$env-ref97851
%stackaddr$env-ref97852 = alloca %struct.ScmObj*, align 8
%anf_45bind48176 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48816, i64 1)
store %struct.ScmObj* %anf_45bind48176, %struct.ScmObj** %stackaddr$env-ref97852
%stackaddr$prim97853 = alloca %struct.ScmObj*, align 8
%_95k48454 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94133)
store volatile %struct.ScmObj* %_95k48454, %struct.ScmObj** %stackaddr$prim97853, align 8
%stackaddr$prim97854 = alloca %struct.ScmObj*, align 8
%current_45args94134 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94133)
store volatile %struct.ScmObj* %current_45args94134, %struct.ScmObj** %stackaddr$prim97854, align 8
%stackaddr$prim97855 = alloca %struct.ScmObj*, align 8
%anf_45bind48179 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94134)
store volatile %struct.ScmObj* %anf_45bind48179, %struct.ScmObj** %stackaddr$prim97855, align 8
%stackaddr$prim97856 = alloca %struct.ScmObj*, align 8
%cpsprim48455 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48176, %struct.ScmObj* %anf_45bind48179)
store volatile %struct.ScmObj* %cpsprim48455, %struct.ScmObj** %stackaddr$prim97856, align 8
%ae48822 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94136$k484530 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97857 = alloca %struct.ScmObj*, align 8
%argslist94136$k484531 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48455, %struct.ScmObj* %argslist94136$k484530)
store volatile %struct.ScmObj* %argslist94136$k484531, %struct.ScmObj** %stackaddr$prim97857, align 8
%stackaddr$prim97858 = alloca %struct.ScmObj*, align 8
%argslist94136$k484532 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48822, %struct.ScmObj* %argslist94136$k484531)
store volatile %struct.ScmObj* %argslist94136$k484532, %struct.ScmObj** %stackaddr$prim97858, align 8
%clofunc97859 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48453)
musttail call tailcc void %clofunc97859(%struct.ScmObj* %k48453, %struct.ScmObj* %argslist94136$k484532)
ret void
}

define tailcc void @proc_clo$ae48687(%struct.ScmObj* %env$ae48687,%struct.ScmObj* %current_45args94141) {
%stackaddr$prim97860 = alloca %struct.ScmObj*, align 8
%k48456 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94141)
store volatile %struct.ScmObj* %k48456, %struct.ScmObj** %stackaddr$prim97860, align 8
%stackaddr$prim97861 = alloca %struct.ScmObj*, align 8
%current_45args94142 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94141)
store volatile %struct.ScmObj* %current_45args94142, %struct.ScmObj** %stackaddr$prim97861, align 8
%stackaddr$prim97862 = alloca %struct.ScmObj*, align 8
%_37map48050 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94142)
store volatile %struct.ScmObj* %_37map48050, %struct.ScmObj** %stackaddr$prim97862, align 8
%ae48689 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97863 = alloca %struct.ScmObj*, align 8
%fptrToInt97864 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48690 to i64
%ae48690 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt97864)
store volatile %struct.ScmObj* %ae48690, %struct.ScmObj** %stackaddr$makeclosure97863, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48690, %struct.ScmObj* %_37map48050, i64 0)
%argslist94158$k484560 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97865 = alloca %struct.ScmObj*, align 8
%argslist94158$k484561 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48690, %struct.ScmObj* %argslist94158$k484560)
store volatile %struct.ScmObj* %argslist94158$k484561, %struct.ScmObj** %stackaddr$prim97865, align 8
%stackaddr$prim97866 = alloca %struct.ScmObj*, align 8
%argslist94158$k484562 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48689, %struct.ScmObj* %argslist94158$k484561)
store volatile %struct.ScmObj* %argslist94158$k484562, %struct.ScmObj** %stackaddr$prim97866, align 8
%clofunc97867 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48456)
musttail call tailcc void %clofunc97867(%struct.ScmObj* %k48456, %struct.ScmObj* %argslist94158$k484562)
ret void
}

define tailcc void @proc_clo$ae48690(%struct.ScmObj* %env$ae48690,%struct.ScmObj* %current_45args94144) {
%stackaddr$env-ref97868 = alloca %struct.ScmObj*, align 8
%_37map48050 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48690, i64 0)
store %struct.ScmObj* %_37map48050, %struct.ScmObj** %stackaddr$env-ref97868
%stackaddr$prim97869 = alloca %struct.ScmObj*, align 8
%k48457 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94144)
store volatile %struct.ScmObj* %k48457, %struct.ScmObj** %stackaddr$prim97869, align 8
%stackaddr$prim97870 = alloca %struct.ScmObj*, align 8
%current_45args94145 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94144)
store volatile %struct.ScmObj* %current_45args94145, %struct.ScmObj** %stackaddr$prim97870, align 8
%stackaddr$prim97871 = alloca %struct.ScmObj*, align 8
%f48052 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94145)
store volatile %struct.ScmObj* %f48052, %struct.ScmObj** %stackaddr$prim97871, align 8
%stackaddr$prim97872 = alloca %struct.ScmObj*, align 8
%current_45args94146 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94145)
store volatile %struct.ScmObj* %current_45args94146, %struct.ScmObj** %stackaddr$prim97872, align 8
%stackaddr$prim97873 = alloca %struct.ScmObj*, align 8
%lst48051 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94146)
store volatile %struct.ScmObj* %lst48051, %struct.ScmObj** %stackaddr$prim97873, align 8
%stackaddr$prim97874 = alloca %struct.ScmObj*, align 8
%anf_45bind48168 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst48051)
store volatile %struct.ScmObj* %anf_45bind48168, %struct.ScmObj** %stackaddr$prim97874, align 8
%truthy$cmp97875 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48168)
%cmp$cmp97875 = icmp eq i64 %truthy$cmp97875, 1
br i1 %cmp$cmp97875, label %truebranch$cmp97875, label %falsebranch$cmp97875
truebranch$cmp97875:
%ae48694 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48695 = call %struct.ScmObj* @const_init_null()
%argslist94148$k484570 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97876 = alloca %struct.ScmObj*, align 8
%argslist94148$k484571 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48695, %struct.ScmObj* %argslist94148$k484570)
store volatile %struct.ScmObj* %argslist94148$k484571, %struct.ScmObj** %stackaddr$prim97876, align 8
%stackaddr$prim97877 = alloca %struct.ScmObj*, align 8
%argslist94148$k484572 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48694, %struct.ScmObj* %argslist94148$k484571)
store volatile %struct.ScmObj* %argslist94148$k484572, %struct.ScmObj** %stackaddr$prim97877, align 8
%clofunc97878 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48457)
musttail call tailcc void %clofunc97878(%struct.ScmObj* %k48457, %struct.ScmObj* %argslist94148$k484572)
ret void
falsebranch$cmp97875:
%stackaddr$prim97879 = alloca %struct.ScmObj*, align 8
%anf_45bind48169 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %lst48051)
store volatile %struct.ScmObj* %anf_45bind48169, %struct.ScmObj** %stackaddr$prim97879, align 8
%stackaddr$makeclosure97880 = alloca %struct.ScmObj*, align 8
%fptrToInt97881 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48704 to i64
%ae48704 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt97881)
store volatile %struct.ScmObj* %ae48704, %struct.ScmObj** %stackaddr$makeclosure97880, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48704, %struct.ScmObj* %k48457, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48704, %struct.ScmObj* %f48052, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae48704, %struct.ScmObj* %lst48051, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae48704, %struct.ScmObj* %_37map48050, i64 3)
%argslist94157$f480520 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97882 = alloca %struct.ScmObj*, align 8
%argslist94157$f480521 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48169, %struct.ScmObj* %argslist94157$f480520)
store volatile %struct.ScmObj* %argslist94157$f480521, %struct.ScmObj** %stackaddr$prim97882, align 8
%stackaddr$prim97883 = alloca %struct.ScmObj*, align 8
%argslist94157$f480522 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48704, %struct.ScmObj* %argslist94157$f480521)
store volatile %struct.ScmObj* %argslist94157$f480522, %struct.ScmObj** %stackaddr$prim97883, align 8
%clofunc97884 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f48052)
musttail call tailcc void %clofunc97884(%struct.ScmObj* %f48052, %struct.ScmObj* %argslist94157$f480522)
ret void
}

define tailcc void @proc_clo$ae48704(%struct.ScmObj* %env$ae48704,%struct.ScmObj* %current_45args94149) {
%stackaddr$env-ref97885 = alloca %struct.ScmObj*, align 8
%k48457 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48704, i64 0)
store %struct.ScmObj* %k48457, %struct.ScmObj** %stackaddr$env-ref97885
%stackaddr$env-ref97886 = alloca %struct.ScmObj*, align 8
%f48052 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48704, i64 1)
store %struct.ScmObj* %f48052, %struct.ScmObj** %stackaddr$env-ref97886
%stackaddr$env-ref97887 = alloca %struct.ScmObj*, align 8
%lst48051 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48704, i64 2)
store %struct.ScmObj* %lst48051, %struct.ScmObj** %stackaddr$env-ref97887
%stackaddr$env-ref97888 = alloca %struct.ScmObj*, align 8
%_37map48050 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48704, i64 3)
store %struct.ScmObj* %_37map48050, %struct.ScmObj** %stackaddr$env-ref97888
%stackaddr$prim97889 = alloca %struct.ScmObj*, align 8
%_95k48458 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94149)
store volatile %struct.ScmObj* %_95k48458, %struct.ScmObj** %stackaddr$prim97889, align 8
%stackaddr$prim97890 = alloca %struct.ScmObj*, align 8
%current_45args94150 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94149)
store volatile %struct.ScmObj* %current_45args94150, %struct.ScmObj** %stackaddr$prim97890, align 8
%stackaddr$prim97891 = alloca %struct.ScmObj*, align 8
%anf_45bind48170 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94150)
store volatile %struct.ScmObj* %anf_45bind48170, %struct.ScmObj** %stackaddr$prim97891, align 8
%stackaddr$prim97892 = alloca %struct.ScmObj*, align 8
%anf_45bind48171 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %lst48051)
store volatile %struct.ScmObj* %anf_45bind48171, %struct.ScmObj** %stackaddr$prim97892, align 8
%stackaddr$makeclosure97893 = alloca %struct.ScmObj*, align 8
%fptrToInt97894 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48708 to i64
%ae48708 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97894)
store volatile %struct.ScmObj* %ae48708, %struct.ScmObj** %stackaddr$makeclosure97893, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48708, %struct.ScmObj* %k48457, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48708, %struct.ScmObj* %anf_45bind48170, i64 1)
%argslist94156$_37map480500 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97895 = alloca %struct.ScmObj*, align 8
%argslist94156$_37map480501 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48171, %struct.ScmObj* %argslist94156$_37map480500)
store volatile %struct.ScmObj* %argslist94156$_37map480501, %struct.ScmObj** %stackaddr$prim97895, align 8
%stackaddr$prim97896 = alloca %struct.ScmObj*, align 8
%argslist94156$_37map480502 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f48052, %struct.ScmObj* %argslist94156$_37map480501)
store volatile %struct.ScmObj* %argslist94156$_37map480502, %struct.ScmObj** %stackaddr$prim97896, align 8
%stackaddr$prim97897 = alloca %struct.ScmObj*, align 8
%argslist94156$_37map480503 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48708, %struct.ScmObj* %argslist94156$_37map480502)
store volatile %struct.ScmObj* %argslist94156$_37map480503, %struct.ScmObj** %stackaddr$prim97897, align 8
%clofunc97898 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37map48050)
musttail call tailcc void %clofunc97898(%struct.ScmObj* %_37map48050, %struct.ScmObj* %argslist94156$_37map480503)
ret void
}

define tailcc void @proc_clo$ae48708(%struct.ScmObj* %env$ae48708,%struct.ScmObj* %current_45args94152) {
%stackaddr$env-ref97899 = alloca %struct.ScmObj*, align 8
%k48457 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48708, i64 0)
store %struct.ScmObj* %k48457, %struct.ScmObj** %stackaddr$env-ref97899
%stackaddr$env-ref97900 = alloca %struct.ScmObj*, align 8
%anf_45bind48170 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48708, i64 1)
store %struct.ScmObj* %anf_45bind48170, %struct.ScmObj** %stackaddr$env-ref97900
%stackaddr$prim97901 = alloca %struct.ScmObj*, align 8
%_95k48459 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94152)
store volatile %struct.ScmObj* %_95k48459, %struct.ScmObj** %stackaddr$prim97901, align 8
%stackaddr$prim97902 = alloca %struct.ScmObj*, align 8
%current_45args94153 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94152)
store volatile %struct.ScmObj* %current_45args94153, %struct.ScmObj** %stackaddr$prim97902, align 8
%stackaddr$prim97903 = alloca %struct.ScmObj*, align 8
%anf_45bind48172 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94153)
store volatile %struct.ScmObj* %anf_45bind48172, %struct.ScmObj** %stackaddr$prim97903, align 8
%stackaddr$prim97904 = alloca %struct.ScmObj*, align 8
%cpsprim48460 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48170, %struct.ScmObj* %anf_45bind48172)
store volatile %struct.ScmObj* %cpsprim48460, %struct.ScmObj** %stackaddr$prim97904, align 8
%ae48714 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94155$k484570 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97905 = alloca %struct.ScmObj*, align 8
%argslist94155$k484571 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim48460, %struct.ScmObj* %argslist94155$k484570)
store volatile %struct.ScmObj* %argslist94155$k484571, %struct.ScmObj** %stackaddr$prim97905, align 8
%stackaddr$prim97906 = alloca %struct.ScmObj*, align 8
%argslist94155$k484572 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48714, %struct.ScmObj* %argslist94155$k484571)
store volatile %struct.ScmObj* %argslist94155$k484572, %struct.ScmObj** %stackaddr$prim97906, align 8
%clofunc97907 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48457)
musttail call tailcc void %clofunc97907(%struct.ScmObj* %k48457, %struct.ScmObj* %argslist94155$k484572)
ret void
}

define tailcc void @proc_clo$ae48607(%struct.ScmObj* %env$ae48607,%struct.ScmObj* %current_45args94161) {
%stackaddr$prim97908 = alloca %struct.ScmObj*, align 8
%k48461 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94161)
store volatile %struct.ScmObj* %k48461, %struct.ScmObj** %stackaddr$prim97908, align 8
%stackaddr$prim97909 = alloca %struct.ScmObj*, align 8
%current_45args94162 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94161)
store volatile %struct.ScmObj* %current_45args94162, %struct.ScmObj** %stackaddr$prim97909, align 8
%stackaddr$prim97910 = alloca %struct.ScmObj*, align 8
%_37foldr148054 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94162)
store volatile %struct.ScmObj* %_37foldr148054, %struct.ScmObj** %stackaddr$prim97910, align 8
%ae48609 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97911 = alloca %struct.ScmObj*, align 8
%fptrToInt97912 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48610 to i64
%ae48610 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt97912)
store volatile %struct.ScmObj* %ae48610, %struct.ScmObj** %stackaddr$makeclosure97911, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48610, %struct.ScmObj* %_37foldr148054, i64 0)
%argslist94175$k484610 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97913 = alloca %struct.ScmObj*, align 8
%argslist94175$k484611 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48610, %struct.ScmObj* %argslist94175$k484610)
store volatile %struct.ScmObj* %argslist94175$k484611, %struct.ScmObj** %stackaddr$prim97913, align 8
%stackaddr$prim97914 = alloca %struct.ScmObj*, align 8
%argslist94175$k484612 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48609, %struct.ScmObj* %argslist94175$k484611)
store volatile %struct.ScmObj* %argslist94175$k484612, %struct.ScmObj** %stackaddr$prim97914, align 8
%clofunc97915 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48461)
musttail call tailcc void %clofunc97915(%struct.ScmObj* %k48461, %struct.ScmObj* %argslist94175$k484612)
ret void
}

define tailcc void @proc_clo$ae48610(%struct.ScmObj* %env$ae48610,%struct.ScmObj* %current_45args94164) {
%stackaddr$env-ref97916 = alloca %struct.ScmObj*, align 8
%_37foldr148054 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48610, i64 0)
store %struct.ScmObj* %_37foldr148054, %struct.ScmObj** %stackaddr$env-ref97916
%stackaddr$prim97917 = alloca %struct.ScmObj*, align 8
%k48462 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94164)
store volatile %struct.ScmObj* %k48462, %struct.ScmObj** %stackaddr$prim97917, align 8
%stackaddr$prim97918 = alloca %struct.ScmObj*, align 8
%current_45args94165 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94164)
store volatile %struct.ScmObj* %current_45args94165, %struct.ScmObj** %stackaddr$prim97918, align 8
%stackaddr$prim97919 = alloca %struct.ScmObj*, align 8
%f48057 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94165)
store volatile %struct.ScmObj* %f48057, %struct.ScmObj** %stackaddr$prim97919, align 8
%stackaddr$prim97920 = alloca %struct.ScmObj*, align 8
%current_45args94166 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94165)
store volatile %struct.ScmObj* %current_45args94166, %struct.ScmObj** %stackaddr$prim97920, align 8
%stackaddr$prim97921 = alloca %struct.ScmObj*, align 8
%acc48056 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94166)
store volatile %struct.ScmObj* %acc48056, %struct.ScmObj** %stackaddr$prim97921, align 8
%stackaddr$prim97922 = alloca %struct.ScmObj*, align 8
%current_45args94167 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94166)
store volatile %struct.ScmObj* %current_45args94167, %struct.ScmObj** %stackaddr$prim97922, align 8
%stackaddr$prim97923 = alloca %struct.ScmObj*, align 8
%lst48055 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94167)
store volatile %struct.ScmObj* %lst48055, %struct.ScmObj** %stackaddr$prim97923, align 8
%stackaddr$prim97924 = alloca %struct.ScmObj*, align 8
%anf_45bind48163 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst48055)
store volatile %struct.ScmObj* %anf_45bind48163, %struct.ScmObj** %stackaddr$prim97924, align 8
%truthy$cmp97925 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind48163)
%cmp$cmp97925 = icmp eq i64 %truthy$cmp97925, 1
br i1 %cmp$cmp97925, label %truebranch$cmp97925, label %falsebranch$cmp97925
truebranch$cmp97925:
%ae48614 = call %struct.ScmObj* @const_init_int(i64 0)
%argslist94169$k484620 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97926 = alloca %struct.ScmObj*, align 8
%argslist94169$k484621 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc48056, %struct.ScmObj* %argslist94169$k484620)
store volatile %struct.ScmObj* %argslist94169$k484621, %struct.ScmObj** %stackaddr$prim97926, align 8
%stackaddr$prim97927 = alloca %struct.ScmObj*, align 8
%argslist94169$k484622 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48614, %struct.ScmObj* %argslist94169$k484621)
store volatile %struct.ScmObj* %argslist94169$k484622, %struct.ScmObj** %stackaddr$prim97927, align 8
%clofunc97928 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48462)
musttail call tailcc void %clofunc97928(%struct.ScmObj* %k48462, %struct.ScmObj* %argslist94169$k484622)
ret void
falsebranch$cmp97925:
%stackaddr$prim97929 = alloca %struct.ScmObj*, align 8
%anf_45bind48164 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %lst48055)
store volatile %struct.ScmObj* %anf_45bind48164, %struct.ScmObj** %stackaddr$prim97929, align 8
%stackaddr$prim97930 = alloca %struct.ScmObj*, align 8
%anf_45bind48165 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %lst48055)
store volatile %struct.ScmObj* %anf_45bind48165, %struct.ScmObj** %stackaddr$prim97930, align 8
%stackaddr$makeclosure97931 = alloca %struct.ScmObj*, align 8
%fptrToInt97932 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48622 to i64
%ae48622 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt97932)
store volatile %struct.ScmObj* %ae48622, %struct.ScmObj** %stackaddr$makeclosure97931, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48622, %struct.ScmObj* %f48057, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48622, %struct.ScmObj* %anf_45bind48164, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae48622, %struct.ScmObj* %k48462, i64 2)
%argslist94174$_37foldr1480540 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97933 = alloca %struct.ScmObj*, align 8
%argslist94174$_37foldr1480541 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48165, %struct.ScmObj* %argslist94174$_37foldr1480540)
store volatile %struct.ScmObj* %argslist94174$_37foldr1480541, %struct.ScmObj** %stackaddr$prim97933, align 8
%stackaddr$prim97934 = alloca %struct.ScmObj*, align 8
%argslist94174$_37foldr1480542 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc48056, %struct.ScmObj* %argslist94174$_37foldr1480541)
store volatile %struct.ScmObj* %argslist94174$_37foldr1480542, %struct.ScmObj** %stackaddr$prim97934, align 8
%stackaddr$prim97935 = alloca %struct.ScmObj*, align 8
%argslist94174$_37foldr1480543 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f48057, %struct.ScmObj* %argslist94174$_37foldr1480542)
store volatile %struct.ScmObj* %argslist94174$_37foldr1480543, %struct.ScmObj** %stackaddr$prim97935, align 8
%stackaddr$prim97936 = alloca %struct.ScmObj*, align 8
%argslist94174$_37foldr1480544 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48622, %struct.ScmObj* %argslist94174$_37foldr1480543)
store volatile %struct.ScmObj* %argslist94174$_37foldr1480544, %struct.ScmObj** %stackaddr$prim97936, align 8
%clofunc97937 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr148054)
musttail call tailcc void %clofunc97937(%struct.ScmObj* %_37foldr148054, %struct.ScmObj* %argslist94174$_37foldr1480544)
ret void
}

define tailcc void @proc_clo$ae48622(%struct.ScmObj* %env$ae48622,%struct.ScmObj* %current_45args94170) {
%stackaddr$env-ref97938 = alloca %struct.ScmObj*, align 8
%f48057 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48622, i64 0)
store %struct.ScmObj* %f48057, %struct.ScmObj** %stackaddr$env-ref97938
%stackaddr$env-ref97939 = alloca %struct.ScmObj*, align 8
%anf_45bind48164 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48622, i64 1)
store %struct.ScmObj* %anf_45bind48164, %struct.ScmObj** %stackaddr$env-ref97939
%stackaddr$env-ref97940 = alloca %struct.ScmObj*, align 8
%k48462 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48622, i64 2)
store %struct.ScmObj* %k48462, %struct.ScmObj** %stackaddr$env-ref97940
%stackaddr$prim97941 = alloca %struct.ScmObj*, align 8
%_95k48463 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94170)
store volatile %struct.ScmObj* %_95k48463, %struct.ScmObj** %stackaddr$prim97941, align 8
%stackaddr$prim97942 = alloca %struct.ScmObj*, align 8
%current_45args94171 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94170)
store volatile %struct.ScmObj* %current_45args94171, %struct.ScmObj** %stackaddr$prim97942, align 8
%stackaddr$prim97943 = alloca %struct.ScmObj*, align 8
%anf_45bind48166 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94171)
store volatile %struct.ScmObj* %anf_45bind48166, %struct.ScmObj** %stackaddr$prim97943, align 8
%argslist94173$f480570 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97944 = alloca %struct.ScmObj*, align 8
%argslist94173$f480571 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48166, %struct.ScmObj* %argslist94173$f480570)
store volatile %struct.ScmObj* %argslist94173$f480571, %struct.ScmObj** %stackaddr$prim97944, align 8
%stackaddr$prim97945 = alloca %struct.ScmObj*, align 8
%argslist94173$f480572 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48164, %struct.ScmObj* %argslist94173$f480571)
store volatile %struct.ScmObj* %argslist94173$f480572, %struct.ScmObj** %stackaddr$prim97945, align 8
%stackaddr$prim97946 = alloca %struct.ScmObj*, align 8
%argslist94173$f480573 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48462, %struct.ScmObj* %argslist94173$f480572)
store volatile %struct.ScmObj* %argslist94173$f480573, %struct.ScmObj** %stackaddr$prim97946, align 8
%clofunc97947 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f48057)
musttail call tailcc void %clofunc97947(%struct.ScmObj* %f48057, %struct.ScmObj* %argslist94173$f480573)
ret void
}

define tailcc void @proc_clo$ae48490(%struct.ScmObj* %env$ae48490,%struct.ScmObj* %current_45args94178) {
%stackaddr$prim97948 = alloca %struct.ScmObj*, align 8
%k48464 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94178)
store volatile %struct.ScmObj* %k48464, %struct.ScmObj** %stackaddr$prim97948, align 8
%stackaddr$prim97949 = alloca %struct.ScmObj*, align 8
%current_45args94179 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94178)
store volatile %struct.ScmObj* %current_45args94179, %struct.ScmObj** %stackaddr$prim97949, align 8
%stackaddr$prim97950 = alloca %struct.ScmObj*, align 8
%y48034 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94179)
store volatile %struct.ScmObj* %y48034, %struct.ScmObj** %stackaddr$prim97950, align 8
%ae48492 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97951 = alloca %struct.ScmObj*, align 8
%fptrToInt97952 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48493 to i64
%ae48493 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt97952)
store volatile %struct.ScmObj* %ae48493, %struct.ScmObj** %stackaddr$makeclosure97951, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48493, %struct.ScmObj* %y48034, i64 0)
%argslist94197$k484640 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97953 = alloca %struct.ScmObj*, align 8
%argslist94197$k484641 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48493, %struct.ScmObj* %argslist94197$k484640)
store volatile %struct.ScmObj* %argslist94197$k484641, %struct.ScmObj** %stackaddr$prim97953, align 8
%stackaddr$prim97954 = alloca %struct.ScmObj*, align 8
%argslist94197$k484642 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48492, %struct.ScmObj* %argslist94197$k484641)
store volatile %struct.ScmObj* %argslist94197$k484642, %struct.ScmObj** %stackaddr$prim97954, align 8
%clofunc97955 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k48464)
musttail call tailcc void %clofunc97955(%struct.ScmObj* %k48464, %struct.ScmObj* %argslist94197$k484642)
ret void
}

define tailcc void @proc_clo$ae48493(%struct.ScmObj* %env$ae48493,%struct.ScmObj* %current_45args94181) {
%stackaddr$env-ref97956 = alloca %struct.ScmObj*, align 8
%y48034 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48493, i64 0)
store %struct.ScmObj* %y48034, %struct.ScmObj** %stackaddr$env-ref97956
%stackaddr$prim97957 = alloca %struct.ScmObj*, align 8
%k48465 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94181)
store volatile %struct.ScmObj* %k48465, %struct.ScmObj** %stackaddr$prim97957, align 8
%stackaddr$prim97958 = alloca %struct.ScmObj*, align 8
%current_45args94182 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94181)
store volatile %struct.ScmObj* %current_45args94182, %struct.ScmObj** %stackaddr$prim97958, align 8
%stackaddr$prim97959 = alloca %struct.ScmObj*, align 8
%f48035 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94182)
store volatile %struct.ScmObj* %f48035, %struct.ScmObj** %stackaddr$prim97959, align 8
%stackaddr$makeclosure97960 = alloca %struct.ScmObj*, align 8
%fptrToInt97961 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48494 to i64
%ae48494 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97961)
store volatile %struct.ScmObj* %ae48494, %struct.ScmObj** %stackaddr$makeclosure97960, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48494, %struct.ScmObj* %f48035, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48494, %struct.ScmObj* %k48465, i64 1)
%ae48495 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure97962 = alloca %struct.ScmObj*, align 8
%fptrToInt97963 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48496 to i64
%ae48496 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97963)
store volatile %struct.ScmObj* %ae48496, %struct.ScmObj** %stackaddr$makeclosure97962, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48496, %struct.ScmObj* %f48035, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48496, %struct.ScmObj* %y48034, i64 1)
%argslist94196$ae484940 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97964 = alloca %struct.ScmObj*, align 8
%argslist94196$ae484941 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48496, %struct.ScmObj* %argslist94196$ae484940)
store volatile %struct.ScmObj* %argslist94196$ae484941, %struct.ScmObj** %stackaddr$prim97964, align 8
%stackaddr$prim97965 = alloca %struct.ScmObj*, align 8
%argslist94196$ae484942 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48495, %struct.ScmObj* %argslist94196$ae484941)
store volatile %struct.ScmObj* %argslist94196$ae484942, %struct.ScmObj** %stackaddr$prim97965, align 8
%clofunc97966 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48494)
musttail call tailcc void %clofunc97966(%struct.ScmObj* %ae48494, %struct.ScmObj* %argslist94196$ae484942)
ret void
}

define tailcc void @proc_clo$ae48494(%struct.ScmObj* %env$ae48494,%struct.ScmObj* %current_45args94184) {
%stackaddr$env-ref97967 = alloca %struct.ScmObj*, align 8
%f48035 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48494, i64 0)
store %struct.ScmObj* %f48035, %struct.ScmObj** %stackaddr$env-ref97967
%stackaddr$env-ref97968 = alloca %struct.ScmObj*, align 8
%k48465 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48494, i64 1)
store %struct.ScmObj* %k48465, %struct.ScmObj** %stackaddr$env-ref97968
%stackaddr$prim97969 = alloca %struct.ScmObj*, align 8
%_95k48466 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94184)
store volatile %struct.ScmObj* %_95k48466, %struct.ScmObj** %stackaddr$prim97969, align 8
%stackaddr$prim97970 = alloca %struct.ScmObj*, align 8
%current_45args94185 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94184)
store volatile %struct.ScmObj* %current_45args94185, %struct.ScmObj** %stackaddr$prim97970, align 8
%stackaddr$prim97971 = alloca %struct.ScmObj*, align 8
%anf_45bind48161 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94185)
store volatile %struct.ScmObj* %anf_45bind48161, %struct.ScmObj** %stackaddr$prim97971, align 8
%argslist94187$f480350 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97972 = alloca %struct.ScmObj*, align 8
%argslist94187$f480351 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind48161, %struct.ScmObj* %argslist94187$f480350)
store volatile %struct.ScmObj* %argslist94187$f480351, %struct.ScmObj** %stackaddr$prim97972, align 8
%stackaddr$prim97973 = alloca %struct.ScmObj*, align 8
%argslist94187$f480352 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48465, %struct.ScmObj* %argslist94187$f480351)
store volatile %struct.ScmObj* %argslist94187$f480352, %struct.ScmObj** %stackaddr$prim97973, align 8
%clofunc97974 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f48035)
musttail call tailcc void %clofunc97974(%struct.ScmObj* %f48035, %struct.ScmObj* %argslist94187$f480352)
ret void
}

define tailcc void @proc_clo$ae48496(%struct.ScmObj* %env$ae48496,%struct.ScmObj* %args4803648467) {
%stackaddr$env-ref97975 = alloca %struct.ScmObj*, align 8
%f48035 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48496, i64 0)
store %struct.ScmObj* %f48035, %struct.ScmObj** %stackaddr$env-ref97975
%stackaddr$env-ref97976 = alloca %struct.ScmObj*, align 8
%y48034 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48496, i64 1)
store %struct.ScmObj* %y48034, %struct.ScmObj** %stackaddr$env-ref97976
%stackaddr$prim97977 = alloca %struct.ScmObj*, align 8
%k48468 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args4803648467)
store volatile %struct.ScmObj* %k48468, %struct.ScmObj** %stackaddr$prim97977, align 8
%stackaddr$prim97978 = alloca %struct.ScmObj*, align 8
%args48036 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args4803648467)
store volatile %struct.ScmObj* %args48036, %struct.ScmObj** %stackaddr$prim97978, align 8
%stackaddr$makeclosure97979 = alloca %struct.ScmObj*, align 8
%fptrToInt97980 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48500 to i64
%ae48500 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt97980)
store volatile %struct.ScmObj* %ae48500, %struct.ScmObj** %stackaddr$makeclosure97979, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48500, %struct.ScmObj* %args48036, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48500, %struct.ScmObj* %k48468, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae48500, %struct.ScmObj* %f48035, i64 2)
%argslist94195$y480340 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97981 = alloca %struct.ScmObj*, align 8
%argslist94195$y480341 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %y48034, %struct.ScmObj* %argslist94195$y480340)
store volatile %struct.ScmObj* %argslist94195$y480341, %struct.ScmObj** %stackaddr$prim97981, align 8
%stackaddr$prim97982 = alloca %struct.ScmObj*, align 8
%argslist94195$y480342 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48500, %struct.ScmObj* %argslist94195$y480341)
store volatile %struct.ScmObj* %argslist94195$y480342, %struct.ScmObj** %stackaddr$prim97982, align 8
%clofunc97983 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %y48034)
musttail call tailcc void %clofunc97983(%struct.ScmObj* %y48034, %struct.ScmObj* %argslist94195$y480342)
ret void
}

define tailcc void @proc_clo$ae48500(%struct.ScmObj* %env$ae48500,%struct.ScmObj* %current_45args94188) {
%stackaddr$env-ref97984 = alloca %struct.ScmObj*, align 8
%args48036 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48500, i64 0)
store %struct.ScmObj* %args48036, %struct.ScmObj** %stackaddr$env-ref97984
%stackaddr$env-ref97985 = alloca %struct.ScmObj*, align 8
%k48468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48500, i64 1)
store %struct.ScmObj* %k48468, %struct.ScmObj** %stackaddr$env-ref97985
%stackaddr$env-ref97986 = alloca %struct.ScmObj*, align 8
%f48035 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48500, i64 2)
store %struct.ScmObj* %f48035, %struct.ScmObj** %stackaddr$env-ref97986
%stackaddr$prim97987 = alloca %struct.ScmObj*, align 8
%_95k48469 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94188)
store volatile %struct.ScmObj* %_95k48469, %struct.ScmObj** %stackaddr$prim97987, align 8
%stackaddr$prim97988 = alloca %struct.ScmObj*, align 8
%current_45args94189 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94188)
store volatile %struct.ScmObj* %current_45args94189, %struct.ScmObj** %stackaddr$prim97988, align 8
%stackaddr$prim97989 = alloca %struct.ScmObj*, align 8
%anf_45bind48159 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94189)
store volatile %struct.ScmObj* %anf_45bind48159, %struct.ScmObj** %stackaddr$prim97989, align 8
%stackaddr$makeclosure97990 = alloca %struct.ScmObj*, align 8
%fptrToInt97991 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48503 to i64
%ae48503 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt97991)
store volatile %struct.ScmObj* %ae48503, %struct.ScmObj** %stackaddr$makeclosure97990, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48503, %struct.ScmObj* %args48036, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae48503, %struct.ScmObj* %k48468, i64 1)
%argslist94194$anf_45bind481590 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim97992 = alloca %struct.ScmObj*, align 8
%argslist94194$anf_45bind481591 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f48035, %struct.ScmObj* %argslist94194$anf_45bind481590)
store volatile %struct.ScmObj* %argslist94194$anf_45bind481591, %struct.ScmObj** %stackaddr$prim97992, align 8
%stackaddr$prim97993 = alloca %struct.ScmObj*, align 8
%argslist94194$anf_45bind481592 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48503, %struct.ScmObj* %argslist94194$anf_45bind481591)
store volatile %struct.ScmObj* %argslist94194$anf_45bind481592, %struct.ScmObj** %stackaddr$prim97993, align 8
%clofunc97994 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind48159)
musttail call tailcc void %clofunc97994(%struct.ScmObj* %anf_45bind48159, %struct.ScmObj* %argslist94194$anf_45bind481592)
ret void
}

define tailcc void @proc_clo$ae48503(%struct.ScmObj* %env$ae48503,%struct.ScmObj* %current_45args94191) {
%stackaddr$env-ref97995 = alloca %struct.ScmObj*, align 8
%args48036 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48503, i64 0)
store %struct.ScmObj* %args48036, %struct.ScmObj** %stackaddr$env-ref97995
%stackaddr$env-ref97996 = alloca %struct.ScmObj*, align 8
%k48468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48503, i64 1)
store %struct.ScmObj* %k48468, %struct.ScmObj** %stackaddr$env-ref97996
%stackaddr$prim97997 = alloca %struct.ScmObj*, align 8
%_95k48470 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94191)
store volatile %struct.ScmObj* %_95k48470, %struct.ScmObj** %stackaddr$prim97997, align 8
%stackaddr$prim97998 = alloca %struct.ScmObj*, align 8
%current_45args94192 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94191)
store volatile %struct.ScmObj* %current_45args94192, %struct.ScmObj** %stackaddr$prim97998, align 8
%stackaddr$prim97999 = alloca %struct.ScmObj*, align 8
%anf_45bind48160 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94192)
store volatile %struct.ScmObj* %anf_45bind48160, %struct.ScmObj** %stackaddr$prim97999, align 8
%stackaddr$prim98000 = alloca %struct.ScmObj*, align 8
%cpsargs48471 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48468, %struct.ScmObj* %args48036)
store volatile %struct.ScmObj* %cpsargs48471, %struct.ScmObj** %stackaddr$prim98000, align 8
%clofunc98001 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind48160)
musttail call tailcc void %clofunc98001(%struct.ScmObj* %anf_45bind48160, %struct.ScmObj* %cpsargs48471)
ret void
}

define tailcc void @proc_clo$ae48475(%struct.ScmObj* %env$ae48475,%struct.ScmObj* %current_45args94199) {
%stackaddr$prim98002 = alloca %struct.ScmObj*, align 8
%k48472 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94199)
store volatile %struct.ScmObj* %k48472, %struct.ScmObj** %stackaddr$prim98002, align 8
%stackaddr$prim98003 = alloca %struct.ScmObj*, align 8
%current_45args94200 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args94199)
store volatile %struct.ScmObj* %current_45args94200, %struct.ScmObj** %stackaddr$prim98003, align 8
%stackaddr$prim98004 = alloca %struct.ScmObj*, align 8
%yu48033 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args94200)
store volatile %struct.ScmObj* %yu48033, %struct.ScmObj** %stackaddr$prim98004, align 8
%argslist94202$yu480330 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim98005 = alloca %struct.ScmObj*, align 8
%argslist94202$yu480331 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %yu48033, %struct.ScmObj* %argslist94202$yu480330)
store volatile %struct.ScmObj* %argslist94202$yu480331, %struct.ScmObj** %stackaddr$prim98005, align 8
%stackaddr$prim98006 = alloca %struct.ScmObj*, align 8
%argslist94202$yu480332 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k48472, %struct.ScmObj* %argslist94202$yu480331)
store volatile %struct.ScmObj* %argslist94202$yu480332, %struct.ScmObj** %stackaddr$prim98006, align 8
%clofunc98007 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %yu48033)
musttail call tailcc void %clofunc98007(%struct.ScmObj* %yu48033, %struct.ScmObj* %argslist94202$yu480332)
ret void
}