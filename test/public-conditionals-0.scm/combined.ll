; ModuleID = '../../header.cpp'
source_filename = "../../header.cpp"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx12.0.0"

%struct.ScmObj = type { i64*, i32 }

@.str = private unnamed_addr constant [22 x i8] c"closure_place_freevar\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"closure_get_fn_part\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"closure_env_get\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"Fatal library run-time error: \00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"unwrap_cons takes a Cons object! Got %d in fn %s\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6 = private unnamed_addr constant [53 x i8] c"unwrap_vector takes a Vector object! Got %d in fn %s\00", align 1
@.str.7 = private unnamed_addr constant [51 x i8] c"unwrap_clo takes a Closure object! Got %d in fn %s\00", align 1
@.str.8 = private unnamed_addr constant [48 x i8] c"unwrap_int takes an Int object! Got %d in fn %s\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"unwrap_bool takes a Bool object! Got %d in fn %s\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"unwrap_str takes a Str object! Got %d in fn %s\00", align 1
@.str.11 = private unnamed_addr constant [47 x i8] c"unwrap_sym takes a Sym object! Got %d in fn %s\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"is_truthy_value\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"Expected cons but got something else for function '%s'\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"applyprim_display\00", align 1
@.str.15 = private unnamed_addr constant [37 x i8] c"function '%s' only takes 1 argument.\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"applyprim_print\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"'()\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"'%s\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"prim_print Sym case.\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"'(\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"applyprim_println\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"#<void>\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"()\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"prim_print_aux bool case\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"#f\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"#t\00", align 1
@.str.28 = private unnamed_addr constant [27 x i8] c"Unknown Boolean value: %lu\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"#<procedure>\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.32 = private unnamed_addr constant [25 x i8] c"prim_print_aux Int case.\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.34 = private unnamed_addr constant [25 x i8] c"prim_print_aux Str case.\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"prim_print_aux Sym case.\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"(print v); unrecognized value %lu\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"print_cons\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c" . \00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"print_vector\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"#(\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"Void\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"Null\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"Bool\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"Closure\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"Cons\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"Int\00", align 1
@.str.48 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"Symbol\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"Vector\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"Other\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"applyprim_halt\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"get_vector_length\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"_get_both\00", align 1
@.str.55 = private unnamed_addr constant [59 x i8] c"Vectors larger than 256 elements are unimplemented. Sorry!\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"applyprim_make_45vector\00", align 1
@.str.57 = private unnamed_addr constant [46 x i8] c"Function '%s' expected 2 arguments but got 1.\00", align 1
@.str.58 = private unnamed_addr constant [38 x i8] c"Function '%s' only takes 2 arguments.\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"make-vector\00", align 1
@.str.60 = private unnamed_addr constant [20 x i8] c"applyprim_vector_63\00", align 1
@.str.61 = private unnamed_addr constant [26 x i8] c"applyprim_vector_45length\00", align 1
@.str.62 = private unnamed_addr constant [21 x i8] c"prim_vector_45length\00", align 1
@.str.63 = private unnamed_addr constant [13 x i8] c"bounds check\00", align 1
@.str.64 = private unnamed_addr constant [53 x i8] c"Bounds check fail, wanted pos %ld, only %ld elements\00", align 1
@.str.65 = private unnamed_addr constant [23 x i8] c"applyprim_vector_45ref\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"vector-ref\00", align 1
@.str.67 = private unnamed_addr constant [21 x i8] c"vector-ref index_pos\00", align 1
@.str.68 = private unnamed_addr constant [26 x i8] c"applyprim_vector_45set_33\00", align 1
@.str.69 = private unnamed_addr constant [46 x i8] c"Function '%s' expected 3 arguments but got 1.\00", align 1
@.str.70 = private unnamed_addr constant [46 x i8] c"Function '%s' expected 3 arguments but got 2.\00", align 1
@.str.71 = private unnamed_addr constant [38 x i8] c"Function '%s' only takes 3 arguments.\00", align 1
@.str.72 = private unnamed_addr constant [12 x i8] c"vector-set!\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"apply vector-set! index_pos\00", align 1
@.str.74 = private unnamed_addr constant [64 x i8] c"Expected an empty list but got something else for function '%s'\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"applyprim_void\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"vec_eq_helper avec\00", align 1
@.str.77 = private unnamed_addr constant [19 x i8] c"vec_eq_helper bvec\00", align 1
@.str.78 = private unnamed_addr constant [19 x i8] c"vec_eq_helper alen\00", align 1
@.str.79 = private unnamed_addr constant [19 x i8] c"vec_eq_helper blen\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"prim_eq_63 Bool a\00", align 1
@.str.81 = private unnamed_addr constant [18 x i8] c"prim_eq_63 Bool b\00", align 1
@.str.82 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Int a\00", align 1
@.str.83 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Int b\00", align 1
@.str.84 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Str a\00", align 1
@.str.85 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Str b\00", align 1
@.str.86 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Sym a\00", align 1
@.str.87 = private unnamed_addr constant [17 x i8] c"prim_eq_63 Sym b\00", align 1
@.str.88 = private unnamed_addr constant [42 x i8] c"I do not know what youre trying to eq?!!.\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"applyprim_eq_63\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"applyprim_eqv_63\00", align 1
@.str.91 = private unnamed_addr constant [19 x i8] c"applyprim_equal_63\00", align 1
@.str.92 = private unnamed_addr constant [20 x i8] c"applyprim_number_63\00", align 1
@.str.93 = private unnamed_addr constant [21 x i8] c"applyprim_integer_63\00", align 1
@.str.94 = private unnamed_addr constant [21 x i8] c"applyprim_boolean_63\00", align 1
@.str.95 = private unnamed_addr constant [18 x i8] c"applyprim_void_63\00", align 1
@.str.96 = private unnamed_addr constant [23 x i8] c"applyprim_procedure_63\00", align 1
@.str.97 = private unnamed_addr constant [18 x i8] c"applyprim_null_63\00", align 1
@.str.98 = private unnamed_addr constant [18 x i8] c"applyprim_cons_63\00", align 1
@.str.99 = private unnamed_addr constant [15 x i8] c"applyprim_cons\00", align 1
@.str.100 = private unnamed_addr constant [14 x i8] c"applyprim_car\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"car\00", align 1
@.str.102 = private unnamed_addr constant [14 x i8] c"applyprim_cdr\00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"cdr\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"+ a\00", align 1
@.str.105 = private unnamed_addr constant [4 x i8] c"+ b\00", align 1
@.str.106 = private unnamed_addr constant [37 x i8] c"Expected Cons in apply +, but got %s\00", align 1
@.str.107 = private unnamed_addr constant [14 x i8] c"apply + final\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"- a\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"- b\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"apply -\00", align 1
@.str.111 = private unnamed_addr constant [15 x i8] c"apply - carval\00", align 1
@.str.112 = private unnamed_addr constant [20 x i8] c"applyprim__45 final\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"* a\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"* b\00", align 1
@.str.115 = private unnamed_addr constant [17 x i8] c"apply * cons_obj\00", align 1
@.str.116 = private unnamed_addr constant [15 x i8] c"apply * carval\00", align 1
@.str.117 = private unnamed_addr constant [15 x i8] c"apply * cdrval\00", align 1
@.str.118 = private unnamed_addr constant [36 x i8] c"apply * taking a non-list argument!\00", align 1
@.str.119 = private unnamed_addr constant [4 x i8] c"/ a\00", align 1
@.str.120 = private unnamed_addr constant [4 x i8] c"/ b\00", align 1
@.str.121 = private unnamed_addr constant [14 x i8] c"applyprim__61\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"= a\00", align 1
@.str.123 = private unnamed_addr constant [4 x i8] c"= b\00", align 1
@.str.124 = private unnamed_addr constant [4 x i8] c"< a\00", align 1
@.str.125 = private unnamed_addr constant [4 x i8] c"< b\00", align 1
@.str.126 = private unnamed_addr constant [17 x i8] c"applyprim__60_61\00", align 1
@.str.127 = private unnamed_addr constant [5 x i8] c"<= a\00", align 1
@.str.128 = private unnamed_addr constant [5 x i8] c"<= b\00", align 1
@.str.129 = private unnamed_addr constant [14 x i8] c"applyprim_not\00", align 1
@.str.130 = private unnamed_addr constant [4 x i8] c"not\00", align 1

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @alloc(i64 %0) #0 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 16)
  %5 = extractvalue { i64, i1 } %4, 1
  %6 = extractvalue { i64, i1 } %4, 0
  %7 = select i1 %5, i64 -1, i64 %6
  %8 = call noalias nonnull i8* @_Znam(i64 %7) #8
  %9 = bitcast i8* %8 to %struct.ScmObj*
  ret %struct.ScmObj* %9
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin allocsize(0)
declare nonnull i8* @_Znam(i64) #2

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @closure_alloc(i64 %0, i64 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj*, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = call %struct.ScmObj* @alloc(i64 2)
  store %struct.ScmObj* %9, %struct.ScmObj** %5, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  store i32 9, i32* %10, align 8
  %11 = load i64, i64* %4, align 8
  %12 = inttoptr i64 %11 to i64*
  %13 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 1
  store i32 9, i32* %14, align 8
  %15 = load i64, i64* %3, align 8
  %16 = call %struct.ScmObj* @const_init_int(i64 %15)
  %17 = call %struct.ScmObj* @const_init_int(i64 0)
  %18 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %16, %struct.ScmObj* %17)
  %19 = bitcast %struct.ScmObj* %18 to i64*
  %20 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  store i64* %19, i64** %20, align 8
  %21 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 0
  %23 = bitcast %struct.ScmObj* %22 to i8*
  %24 = bitcast %struct.ScmObj* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %26 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %25, i64 1
  %27 = bitcast %struct.ScmObj* %26 to i8*
  %28 = bitcast %struct.ScmObj* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false)
  %29 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %29, %struct.ScmObj** %8, align 8
  %30 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %31 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %30, i32 0, i32 1
  store i32 3, i32* %31, align 8
  %32 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %33 = bitcast %struct.ScmObj* %32 to i64*
  %34 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %35 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %34, i32 0, i32 0
  store i64* %33, i64** %35, align 8
  %36 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  ret %struct.ScmObj* %36
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.ScmObj*, align 8
  %9 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %11 = call i64 @unwrap_int(%struct.ScmObj* %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i64 0, i64 0))
  store i64 %11, i64* %5, align 8
  %12 = load i64, i64* %5, align 8
  %13 = add i64 1, %12
  %14 = call %struct.ScmObj* @alloc(i64 %13)
  store %struct.ScmObj* %14, %struct.ScmObj** %6, align 8
  %15 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %16 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %15, i64 0
  %17 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %16, i32 0, i32 1
  store i32 5, i32* %17, align 8
  %18 = load i64, i64* %5, align 8
  %19 = inttoptr i64 %18 to i64*
  %20 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i32 0, i32 0
  store i64* %19, i64** %22, align 8
  store i64 1, i64* %7, align 8
  br label %23

23:                                               ; preds = %49, %2
  %24 = load i64, i64* %7, align 8
  %25 = load i64, i64* %5, align 8
  %26 = icmp ule i64 %24, %25
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  %28 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %28, %struct.ScmObj** %8, align 8
  %29 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %30 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %33 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %32, i32 0, i32 1
  store i32 %31, i32* %33, align 8
  %34 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %35 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %34, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i32 0, i32 0
  store i64* %36, i64** %38, align 8
  %39 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %40 = load i64, i64* %7, align 8
  %41 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %39, i64 %40
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i32 0, i32 1
  store i32 9, i32* %42, align 8
  %43 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %44 = bitcast %struct.ScmObj* %43 to i64*
  %45 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %46 = load i64, i64* %7, align 8
  %47 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %45, i64 %46
  %48 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %47, i32 0, i32 0
  store i64* %44, i64** %48, align 8
  br label %49

49:                                               ; preds = %27
  %50 = load i64, i64* %7, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %7, align 8
  br label %23, !llvm.loop !8

52:                                               ; preds = %23
  %53 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %53, %struct.ScmObj** %9, align 8
  %54 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %55 = bitcast %struct.ScmObj* %54 to i64*
  %56 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %57 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %56, i32 0, i32 0
  store i64* %55, i64** %57, align 8
  %58 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %59 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %58, i32 0, i32 1
  store i32 8, i32* %59, align 8
  %60 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  ret %struct.ScmObj* %60
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_int(i64 %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store i64 %0, i64* %2, align 8
  %4 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %4, %struct.ScmObj** %3, align 8
  %5 = load i64, i64* %2, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  store i64* %6, i64** %8, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  store i32 5, i32* %10, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  ret %struct.ScmObj* %11
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline optnone ssp uwtable mustprogress
define void @closure_place_freevar(%struct.ScmObj* %0, %struct.ScmObj* %1, i64 %2) #0 {
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.ScmObj*, align 8
  %8 = alloca %struct.ScmObj*, align 8
  %9 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %11 = call %struct.ScmObj* @unwrap_clo(%struct.ScmObj* %10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0))
  store %struct.ScmObj* %11, %struct.ScmObj** %7, align 8
  %12 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %13 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %12, i64 1
  %14 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %13, i32 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = bitcast i64* %15 to %struct.ScmObj*
  store %struct.ScmObj* %16, %struct.ScmObj** %8, align 8
  %17 = load i64, i64* %6, align 8
  %18 = call %struct.ScmObj* @const_init_int(i64 %17)
  store %struct.ScmObj* %18, %struct.ScmObj** %9, align 8
  %19 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %21 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %22 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %19, %struct.ScmObj* %20, %struct.ScmObj* %21)
  ret void
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @unwrap_clo(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 3
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = bitcast i64* %20 to %struct.ScmObj*
  ret %struct.ScmObj* %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %0, %struct.ScmObj* %1, %struct.ScmObj* %2) #0 {
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  store %struct.ScmObj* %2, %struct.ScmObj** %6, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %11 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.72, i64 0, i64 0))
  store %struct.ScmObj* %11, %struct.ScmObj** %7, align 8
  %12 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %13 = call i64 @unwrap_int(%struct.ScmObj* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i64 0, i64 0))
  store i64 %13, i64* %8, align 8
  %14 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %15 = load i64, i64* %8, align 8
  call void @bounds_check(%struct.ScmObj* %14, i64 %15)
  %16 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %16, %struct.ScmObj** %9, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i32 0, i32 1
  store i32 %19, i32* %21, align 8
  %22 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %23 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %22, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %26 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %25, i32 0, i32 0
  store i64* %24, i64** %26, align 8
  %27 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %28 = bitcast %struct.ScmObj* %27 to i64*
  %29 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %30 = load i64, i64* %8, align 8
  %31 = add nsw i64 %30, 1
  %32 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %29, i64 %31
  %33 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %32, i32 0, i32 0
  store i64* %28, i64** %33, align 8
  %34 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %34
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define void (%struct.ScmObj*, %struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = call %struct.ScmObj* @unwrap_clo(%struct.ScmObj* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0))
  store %struct.ScmObj* %5, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 0
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast i64* %9 to void (%struct.ScmObj*, %struct.ScmObj*)*
  ret void (%struct.ScmObj*, %struct.ScmObj*)* %10
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @closure_env_get(%struct.ScmObj* %0, i64 %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = call %struct.ScmObj* @unwrap_clo(%struct.ScmObj* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0))
  store %struct.ScmObj* %8, %struct.ScmObj** %5, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i64 1
  %11 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = bitcast i64* %12 to %struct.ScmObj*
  store %struct.ScmObj* %13, %struct.ScmObj** %6, align 8
  %14 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %15 = load i64, i64* %4, align 8
  %16 = call %struct.ScmObj* @const_init_int(i64 %15)
  %17 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %14, %struct.ScmObj* %16)
  ret %struct.ScmObj* %17
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0))
  store %struct.ScmObj* %8, %struct.ScmObj** %5, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %10 = call i64 @unwrap_int(%struct.ScmObj* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.67, i64 0, i64 0))
  store i64 %10, i64* %6, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %12 = load i64, i64* %6, align 8
  call void @bounds_check(%struct.ScmObj* %11, i64 %12)
  %13 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %14 = load i64, i64* %6, align 8
  %15 = add nsw i64 %14, 1
  %16 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %13, i64 %15
  %17 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %16, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = bitcast i64* %18 to %struct.ScmObj*
  ret %struct.ScmObj* %19
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = bitcast i64* %20 to %struct.ScmObj*
  ret %struct.ScmObj* %21
}

declare i32 @printf(i8*, ...) #4

; Function Attrs: noreturn
declare void @exit(i32) #5

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 8
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = bitcast i64* %20 to %struct.ScmObj*
  ret %struct.ScmObj* %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i64 @unwrap_int(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 5
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = ptrtoint i64* %20 to i64
  ret i64 %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i64 @unwrap_bool(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 2
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = ptrtoint i64* %20 to i64
  ret i64 %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i8* @unwrap_str(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 6
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = bitcast i64* %20 to i8*
  ret i8* %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i8* @unwrap_sym(%struct.ScmObj* %0, i8* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 7
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %12 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0), i32 %13, i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %2
  %18 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = bitcast i64* %20 to i8*
  ret i8* %21
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i64 @is_truthy_value(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %9 = call i64 @unwrap_bool(%struct.ScmObj* %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0))
  %10 = icmp eq i64 %9, 0
  br label %11

11:                                               ; preds = %7, %1
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  %13 = zext i1 %12 to i64
  %14 = select i1 %12, i1 false, i1 true
  %15 = zext i1 %14 to i64
  ret i64 %15
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_void() #0 {
  %1 = alloca %struct.ScmObj*, align 8
  %2 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %2, %struct.ScmObj** %1, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_null() #0 {
  %1 = alloca %struct.ScmObj*, align 8
  %2 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %2, %struct.ScmObj** %1, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  store i32 1, i32* %6, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_true() #0 {
  %1 = alloca %struct.ScmObj*, align 8
  %2 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %2, %struct.ScmObj** %1, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 0
  store i64* inttoptr (i64 1 to i64*), i64** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  store i32 2, i32* %6, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_false() #0 {
  %1 = alloca %struct.ScmObj*, align 8
  %2 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %2, %struct.ScmObj** %1, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 0
  store i64* null, i64** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  store i32 2, i32* %6, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %1, align 8
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_string(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store i8* %0, i8** %2, align 8
  %4 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %4, %struct.ScmObj** %3, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = bitcast i8* %5 to i64*
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  store i64* %6, i64** %8, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  store i32 6, i32* %10, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  ret %struct.ScmObj* %11
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @const_init_symbol(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store i8* %0, i8** %2, align 8
  %4 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %4, %struct.ScmObj** %3, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = bitcast i8* %5 to i64*
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  store i64* %6, i64** %8, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  store i32 7, i32* %10, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  ret %struct.ScmObj* %11
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_display(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_display(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_display(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = call %struct.ScmObj* @prim_print(%struct.ScmObj* %3)
  ret %struct.ScmObj* %4
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_print(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca i32, align 4
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* %3, align 4
  switch i32 %7, label %23 [
    i32 1, label %8
    i32 7, label %10
    i32 0, label %14
    i32 4, label %15
    i32 2, label %20
    i32 3, label %20
    i32 5, label %20
    i32 6, label %20
    i32 8, label %20
    i32 9, label %20
  ]

8:                                                ; preds = %1
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0))
  br label %23

10:                                               ; preds = %1
  %11 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %12 = call i8* @unwrap_sym(%struct.ScmObj* %11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i8* %12)
  br label %23

14:                                               ; preds = %1
  br label %23

15:                                               ; preds = %1
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0))
  %17 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %18 = call %struct.ScmObj* @print_cons(%struct.ScmObj* %17)
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  br label %23

20:                                               ; preds = %1, %1, %1, %1, %1, %1
  %21 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %22 = call %struct.ScmObj* @prim_print_aux(%struct.ScmObj* %21)
  br label %23

23:                                               ; preds = %1, %20, %15, %14, %10, %8
  %24 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %24
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_print(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_print(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @print_cons(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i64 0, i64 0))
  store %struct.ScmObj* %7, %struct.ScmObj** %3, align 8
  %8 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %9 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i64 0
  store %struct.ScmObj* %9, %struct.ScmObj** %4, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %11 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %10, i64 1
  store %struct.ScmObj* %11, %struct.ScmObj** %5, align 8
  %12 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %13 = call %struct.ScmObj* @prim_print_aux(%struct.ScmObj* %12)
  %14 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %15 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %28 [
    i32 1, label %17
    i32 0, label %18
    i32 4, label %20
    i32 7, label %24
    i32 2, label %24
    i32 3, label %24
    i32 5, label %24
    i32 6, label %24
    i32 8, label %24
    i32 9, label %24
  ]

17:                                               ; preds = %1
  br label %28

18:                                               ; preds = %1
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0))
  br label %28

20:                                               ; preds = %1
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0))
  %22 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %23 = call %struct.ScmObj* @print_cons(%struct.ScmObj* %22)
  br label %28

24:                                               ; preds = %1, %1, %1, %1, %1, %1, %1
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0))
  %26 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %27 = call %struct.ScmObj* @prim_print_aux(%struct.ScmObj* %26)
  br label %28

28:                                               ; preds = %1, %24, %20, %18, %17
  %29 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %29
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_print_aux(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %3, align 4
  %8 = load i32, i32* %3, align 4
  switch i32 %8, label %58 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %30
    i32 4, label %32
    i32 5, label %37
    i32 6, label %41
    i32 7, label %45
    i32 8, label %49
    i32 9, label %52
  ]

9:                                                ; preds = %1
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0))
  br label %58

11:                                               ; preds = %1
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0))
  br label %58

13:                                               ; preds = %1
  %14 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %15 = call i64 @unwrap_bool(%struct.ScmObj* %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0))
  store i64 %15, i64* %4, align 8
  %16 = load i64, i64* %4, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0))
  br label %29

20:                                               ; preds = %13
  %21 = load i64, i64* %4, align 8
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0))
  br label %28

25:                                               ; preds = %20
  %26 = load i64, i64* %4, align 8
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.28, i64 0, i64 0), i64 %26)
  br label %28

28:                                               ; preds = %25, %23
  br label %29

29:                                               ; preds = %28, %18
  br label %58

30:                                               ; preds = %1
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0))
  br label %58

32:                                               ; preds = %1
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0))
  %34 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %35 = call %struct.ScmObj* @print_cons(%struct.ScmObj* %34)
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  br label %58

37:                                               ; preds = %1
  %38 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %39 = call i64 @unwrap_int(%struct.ScmObj* %38, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.32, i64 0, i64 0))
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %39)
  br label %58

41:                                               ; preds = %1
  %42 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %43 = call i8* @unwrap_str(%struct.ScmObj* %42, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i64 0, i64 0))
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i8* %43)
  br label %58

45:                                               ; preds = %1
  %46 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %47 = call i8* @unwrap_sym(%struct.ScmObj* %46, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0))
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i8* %47)
  br label %58

49:                                               ; preds = %1
  %50 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %51 = call %struct.ScmObj* @print_vector(%struct.ScmObj* %50)
  br label %58

52:                                               ; preds = %1
  %53 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %54 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %53, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = ptrtoint i64* %55 to i64
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i64 0, i64 0), i64 %56)
  br label %58

58:                                               ; preds = %1, %52, %49, %45, %41, %37, %32, %30, %29, %11, %9
  %59 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %59
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_println(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_println(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_println(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = call %struct.ScmObj* @prim_print(%struct.ScmObj* %3)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  %6 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %6
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @print_vector(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %8 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0))
  store %struct.ScmObj* %8, %struct.ScmObj** %3, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = call i64 @_get_vector_length(%struct.ScmObj* %9)
  store i64 %10, i64* %4, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i64 0, i64 0))
  store i64 1, i64* %5, align 8
  br label %12

12:                                               ; preds = %30, %1
  %13 = load i64, i64* %5, align 8
  %14 = load i64, i64* %4, align 8
  %15 = icmp ule i64 %13, %14
  br i1 %15, label %16, label %33

16:                                               ; preds = %12
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0))
  br label %21

21:                                               ; preds = %19, %16
  %22 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %23 = load i64, i64* %5, align 8
  %24 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %22, i64 %23
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = bitcast i64* %26 to %struct.ScmObj*
  store %struct.ScmObj* %27, %struct.ScmObj** %6, align 8
  %28 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %29 = call %struct.ScmObj* @prim_print_aux(%struct.ScmObj* %28)
  br label %30

30:                                               ; preds = %21
  %31 = load i64, i64* %5, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %5, align 8
  br label %12, !llvm.loop !10

33:                                               ; preds = %12
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0))
  %35 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %35
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i64 @_get_vector_length(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i64 0, i64 0))
  store %struct.ScmObj* %5, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 0
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = ptrtoint i64* %9 to i64
  ret i64 %10
}

; Function Attrs: noinline nounwind optnone ssp uwtable mustprogress
define i8* @get_type_name(i32 %0) #6 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %15 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
    i32 6, label %11
    i32 7, label %12
    i32 8, label %13
    i32 9, label %14
  ]

5:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), i8** %2, align 8
  br label %15

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i8** %2, align 8
  br label %15

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0), i8** %2, align 8
  br label %15

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), i8** %2, align 8
  br label %15

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i8** %2, align 8
  br label %15

10:                                               ; preds = %1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0), i8** %2, align 8
  br label %15

11:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i8** %2, align 8
  br label %15

12:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0), i8** %2, align 8
  br label %15

13:                                               ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i8** %2, align 8
  br label %15

14:                                               ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0), i8** %2, align 8
  br label %15

15:                                               ; preds = %5, %6, %7, %8, %9, %10, %11, %12, %13, %14, %1
  %16 = load i8*, i8** %2, align 8
  ret i8* %16
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_halt(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_halt(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = call %struct.ScmObj* @prim_print(%struct.ScmObj* %3)
  %5 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %6 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %11

11:                                               ; preds = %9, %1
  call void @exit(i32 0) #9
  unreachable
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define void @_get_both(%struct.ScmObj* %0, %struct.ScmObj* %1, %struct.ScmObj* %2) #0 {
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  store %struct.ScmObj* %2, %struct.ScmObj** %6, align 8
  %8 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %9 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0))
  store %struct.ScmObj* %9, %struct.ScmObj** %7, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %11 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %10, i64 0
  %12 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %13 = bitcast %struct.ScmObj* %12 to i8*
  %14 = bitcast %struct.ScmObj* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false)
  %15 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %16 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %15, i64 1
  %17 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %18 = bitcast %struct.ScmObj* %17 to i8*
  %19 = bitcast %struct.ScmObj* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false)
  ret void
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_vector(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj, align 8
  %4 = alloca [256 x %struct.ScmObj*], align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.ScmObj, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %12 = bitcast %struct.ScmObj* %3 to i8*
  %13 = bitcast %struct.ScmObj* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = bitcast [256 x %struct.ScmObj*]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 2048, i1 false)
  store i64 0, i64* %5, align 8
  br label %15

15:                                               ; preds = %24, %1
  %16 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 4
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = load i64, i64* %5, align 8
  %21 = icmp ult i64 %20, 256
  br label %22

22:                                               ; preds = %19, %15
  %23 = phi i1 [ false, %15 ], [ %21, %19 ]
  br i1 %23, label %24, label %43

24:                                               ; preds = %22
  call void @_get_both(%struct.ScmObj* %3, %struct.ScmObj* %6, %struct.ScmObj* %7)
  %25 = call %struct.ScmObj* @alloc(i64 1)
  %26 = load i64, i64* %5, align 8
  %27 = getelementptr inbounds [256 x %struct.ScmObj*], [256 x %struct.ScmObj*]* %4, i64 0, i64 %26
  store %struct.ScmObj* %25, %struct.ScmObj** %27, align 8
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = load i64, i64* %5, align 8
  %31 = getelementptr inbounds [256 x %struct.ScmObj*], [256 x %struct.ScmObj*]* %4, i64 0, i64 %30
  %32 = load %struct.ScmObj*, %struct.ScmObj** %31, align 8
  %33 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %32, i32 0, i32 1
  store i32 %29, i32* %33, align 8
  %34 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %5, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %5, align 8
  %38 = getelementptr inbounds [256 x %struct.ScmObj*], [256 x %struct.ScmObj*]* %4, i64 0, i64 %36
  %39 = load %struct.ScmObj*, %struct.ScmObj** %38, align 8
  %40 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %39, i32 0, i32 0
  store i64* %35, i64** %40, align 8
  %41 = bitcast %struct.ScmObj* %3 to i8*
  %42 = bitcast %struct.ScmObj* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false)
  br label %15, !llvm.loop !11

43:                                               ; preds = %22
  %44 = load i64, i64* %5, align 8
  %45 = icmp eq i64 %44, 256
  br i1 %45, label %46, label %54

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp ne i32 %48, 1
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.55, i64 0, i64 0))
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

54:                                               ; preds = %46, %43
  %55 = load i64, i64* %5, align 8
  %56 = add i64 %55, 1
  %57 = call %struct.ScmObj* @alloc(i64 %56)
  store %struct.ScmObj* %57, %struct.ScmObj** %8, align 8
  %58 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %59 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %58, i64 0
  %60 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %59, i32 0, i32 1
  store i32 5, i32* %60, align 8
  %61 = load i64, i64* %5, align 8
  %62 = inttoptr i64 %61 to i64*
  %63 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %64 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %63, i64 0
  %65 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %64, i32 0, i32 0
  store i64* %62, i64** %65, align 8
  store i64 0, i64* %9, align 8
  br label %66

66:                                               ; preds = %85, %54
  %67 = load i64, i64* %9, align 8
  %68 = load i64, i64* %5, align 8
  %69 = icmp ult i64 %67, %68
  br i1 %69, label %70, label %88

70:                                               ; preds = %66
  %71 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %72 = load i64, i64* %9, align 8
  %73 = add i64 %72, 1
  %74 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %71, i64 %73
  %75 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %74, i32 0, i32 1
  store i32 9, i32* %75, align 8
  %76 = load i64, i64* %9, align 8
  %77 = getelementptr inbounds [256 x %struct.ScmObj*], [256 x %struct.ScmObj*]* %4, i64 0, i64 %76
  %78 = load %struct.ScmObj*, %struct.ScmObj** %77, align 8
  %79 = bitcast %struct.ScmObj* %78 to i64*
  %80 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %81 = load i64, i64* %9, align 8
  %82 = add i64 %81, 1
  %83 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %80, i64 %82
  %84 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %83, i32 0, i32 0
  store i64* %79, i64** %84, align 8
  br label %85

85:                                               ; preds = %70
  %86 = load i64, i64* %9, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %9, align 8
  br label %66, !llvm.loop !12

88:                                               ; preds = %66
  %89 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %89, %struct.ScmObj** %10, align 8
  %90 = load %struct.ScmObj*, %struct.ScmObj** %8, align 8
  %91 = bitcast %struct.ScmObj* %90 to i64*
  %92 = load %struct.ScmObj*, %struct.ScmObj** %10, align 8
  %93 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %92, i32 0, i32 0
  store i64* %91, i64** %93, align 8
  %94 = load %struct.ScmObj*, %struct.ScmObj** %10, align 8
  %95 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %94, i32 0, i32 1
  store i32 8, i32* %95, align 8
  %96 = load %struct.ScmObj*, %struct.ScmObj** %10, align 8
  ret %struct.ScmObj* %96
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_make_45vector(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_vector_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.60, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_vector_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_vector_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 8
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = call %struct.ScmObj* @const_init_true()
  br label %11

9:                                                ; preds = %1
  %10 = call %struct.ScmObj* @const_init_false()
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi %struct.ScmObj* [ %8, %7 ], [ %10, %9 ]
  ret %struct.ScmObj* %12
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_vector_45length(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_vector_45length(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_vector_45length(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.62, i64 0, i64 0))
  store %struct.ScmObj* %5, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 0
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define void @bounds_check(%struct.ScmObj* %0, i64 %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 0
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.63, i64 0, i64 0))
  store i64 %8, i64* %5, align 8
  %9 = load i64, i64* %4, align 8
  %10 = add nsw i64 %9, 1
  %11 = load i64, i64* %5, align 8
  %12 = icmp sgt i64 %10, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %2
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = load i64, i64* %4, align 8
  %16 = load i64, i64* %5, align 8
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.64, i64 0, i64 0), i64 %15, i64 %16)
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

19:                                               ; preds = %2
  ret void
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_vector_45ref(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_vector_45set_33(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  %9 = alloca %struct.ScmObj*, align 8
  %10 = alloca %struct.ScmObj, align 8
  %11 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %12 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %13 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 4
  br i1 %15, label %16, label %20

16:                                               ; preds = %1
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

20:                                               ; preds = %1
  %21 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %22 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %21, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  store %struct.ScmObj* %22, %struct.ScmObj** %3, align 8
  %23 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %24 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %23, i64 0
  %25 = bitcast %struct.ScmObj* %4 to i8*
  %26 = bitcast %struct.ScmObj* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false)
  %27 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %27, i64 1
  %29 = bitcast %struct.ScmObj* %5 to i8*
  %30 = bitcast %struct.ScmObj* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false)
  %31 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ne i32 %32, 4
  br i1 %33, label %34, label %38

34:                                               ; preds = %20
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

38:                                               ; preds = %20
  %39 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  store %struct.ScmObj* %39, %struct.ScmObj** %6, align 8
  %40 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %41 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %40, i64 0
  %42 = bitcast %struct.ScmObj* %7 to i8*
  %43 = bitcast %struct.ScmObj* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 16, i1 false)
  %44 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %44, i64 1
  %46 = bitcast %struct.ScmObj* %8 to i8*
  %47 = bitcast %struct.ScmObj* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false)
  %48 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp ne i32 %49, 4
  br i1 %50, label %51, label %55

51:                                               ; preds = %38
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

55:                                               ; preds = %38
  %56 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  store %struct.ScmObj* %56, %struct.ScmObj** %9, align 8
  %57 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %58 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %57, i64 0
  %59 = bitcast %struct.ScmObj* %10 to i8*
  %60 = bitcast %struct.ScmObj* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false)
  %61 = load %struct.ScmObj*, %struct.ScmObj** %9, align 8
  %62 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %61, i64 1
  %63 = bitcast %struct.ScmObj* %11 to i8*
  %64 = bitcast %struct.ScmObj* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 16, i1 false)
  %65 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %11, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp ne i32 %66, 1
  br i1 %67, label %68, label %72

68:                                               ; preds = %55
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0))
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

72:                                               ; preds = %55
  %73 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %4, %struct.ScmObj* %7, %struct.ScmObj* %10)
  ret %struct.ScmObj* %73
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_void(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 1
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i64 0, i64 0))
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

11:                                               ; preds = %1
  %12 = call %struct.ScmObj* @prim_void()
  ret %struct.ScmObj* %12
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_void() #0 {
  %1 = call %struct.ScmObj* @const_init_void()
  ret %struct.ScmObj* %1
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i32 @cons_eq_helper(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  call void @_get_both(%struct.ScmObj* %9, %struct.ScmObj* %5, %struct.ScmObj* %6)
  %10 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  call void @_get_both(%struct.ScmObj* %10, %struct.ScmObj* %7, %struct.ScmObj* %8)
  %11 = call i32 @eq_helper(%struct.ScmObj* %5, %struct.ScmObj* %7)
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = call i32 @eq_helper(%struct.ScmObj* %6, %struct.ScmObj* %8)
  %15 = icmp ne i32 %14, 0
  br label %16

16:                                               ; preds = %13, %2
  %17 = phi i1 [ false, %2 ], [ %15, %13 ]
  %18 = zext i1 %17 to i32
  ret i32 %18
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i32 @eq_helper(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  %10 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %11 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %14 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %12, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %75

18:                                               ; preds = %2
  %19 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %20 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %75 [
    i32 0, label %22
    i32 1, label %23
    i32 2, label %24
    i32 3, label %32
    i32 4, label %33
    i32 5, label %37
    i32 6, label %45
    i32 7, label %56
    i32 8, label %67
    i32 9, label %71
  ]

22:                                               ; preds = %18
  store i32 1, i32* %3, align 4
  br label %75

23:                                               ; preds = %18
  store i32 1, i32* %3, align 4
  br label %75

24:                                               ; preds = %18
  %25 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %26 = call i64 @unwrap_bool(%struct.ScmObj* %25, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0))
  %27 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %28 = call i64 @unwrap_bool(%struct.ScmObj* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.81, i64 0, i64 0))
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %24
  store i32 1, i32* %3, align 4
  br label %75

31:                                               ; preds = %24
  store i32 0, i32* %3, align 4
  br label %75

32:                                               ; preds = %18
  store i32 0, i32* %3, align 4
  br label %75

33:                                               ; preds = %18
  %34 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %35 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %36 = call i32 @cons_eq_helper(%struct.ScmObj* %34, %struct.ScmObj* %35)
  store i32 %36, i32* %3, align 4
  br label %75

37:                                               ; preds = %18
  %38 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %39 = call i64 @unwrap_int(%struct.ScmObj* %38, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.82, i64 0, i64 0))
  %40 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %41 = call i64 @unwrap_int(%struct.ScmObj* %40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.83, i64 0, i64 0))
  %42 = icmp eq i64 %39, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %37
  store i32 1, i32* %3, align 4
  br label %75

44:                                               ; preds = %37
  store i32 0, i32* %3, align 4
  br label %75

45:                                               ; preds = %18
  %46 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %47 = call i8* @unwrap_str(%struct.ScmObj* %46, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.84, i64 0, i64 0))
  store i8* %47, i8** %6, align 8
  %48 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %49 = call i8* @unwrap_str(%struct.ScmObj* %48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.85, i64 0, i64 0))
  store i8* %49, i8** %7, align 8
  %50 = load i8*, i8** %6, align 8
  %51 = load i8*, i8** %7, align 8
  %52 = call i32 @strcmp(i8* %50, i8* %51)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %45
  store i32 1, i32* %3, align 4
  br label %75

55:                                               ; preds = %45
  store i32 0, i32* %3, align 4
  br label %75

56:                                               ; preds = %18
  %57 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %58 = call i8* @unwrap_sym(%struct.ScmObj* %57, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.86, i64 0, i64 0))
  store i8* %58, i8** %8, align 8
  %59 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %60 = call i8* @unwrap_sym(%struct.ScmObj* %59, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.87, i64 0, i64 0))
  store i8* %60, i8** %9, align 8
  %61 = load i8*, i8** %8, align 8
  %62 = load i8*, i8** %9, align 8
  %63 = call i32 @strcmp(i8* %61, i8* %62)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %56
  store i32 1, i32* %3, align 4
  br label %75

66:                                               ; preds = %56
  store i32 0, i32* %3, align 4
  br label %75

67:                                               ; preds = %18
  %68 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %69 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %70 = call i32 @vec_eq_helper(%struct.ScmObj* %68, %struct.ScmObj* %69)
  store i32 %70, i32* %3, align 4
  br label %75

71:                                               ; preds = %18
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.88, i64 0, i64 0))
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

75:                                               ; preds = %17, %22, %23, %30, %31, %32, %33, %43, %44, %54, %55, %65, %66, %67, %18
  %76 = load i32, i32* %3, align 4
  ret i32 %76
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define i32 @vec_eq_helper(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  %11 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %12 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i64 0, i64 0))
  store %struct.ScmObj* %12, %struct.ScmObj** %6, align 8
  %13 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %14 = call %struct.ScmObj* @unwrap_vector(%struct.ScmObj* %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i64 0, i64 0))
  store %struct.ScmObj* %14, %struct.ScmObj** %7, align 8
  %15 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %16 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %15, i64 0
  %17 = call i64 @unwrap_int(%struct.ScmObj* %16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i64 0, i64 0))
  store i64 %17, i64* %8, align 8
  %18 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i64 0
  %20 = call i64 @unwrap_int(%struct.ScmObj* %19, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.79, i64 0, i64 0))
  store i64 %20, i64* %9, align 8
  %21 = load i64, i64* %8, align 8
  %22 = load i64, i64* %9, align 8
  %23 = icmp ne i64 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %45

25:                                               ; preds = %2
  store i64 0, i64* %10, align 8
  br label %26

26:                                               ; preds = %41, %25
  %27 = load i64, i64* %10, align 8
  %28 = load i64, i64* %8, align 8
  %29 = icmp sle i64 %27, %28
  br i1 %29, label %30, label %44

30:                                               ; preds = %26
  %31 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %32 = load i64, i64* %10, align 8
  %33 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %31, i64 %32
  %34 = load %struct.ScmObj*, %struct.ScmObj** %7, align 8
  %35 = load i64, i64* %10, align 8
  %36 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %34, i64 %35
  %37 = call i32 @eq_helper(%struct.ScmObj* %33, %struct.ScmObj* %36)
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %30
  store i32 0, i32* %3, align 4
  br label %45

40:                                               ; preds = %30
  br label %41

41:                                               ; preds = %40
  %42 = load i64, i64* %10, align 8
  %43 = add nsw i64 %42, 1
  store i64 %43, i64* %10, align 8
  br label %26, !llvm.loop !13

44:                                               ; preds = %26
  store i32 1, i32* %3, align 4
  br label %45

45:                                               ; preds = %44, %39, %24
  %46 = load i32, i32* %3, align 4
  ret i32 %46
}

declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_eq_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_eq_63(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_eq_63(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %7 = call i32 @eq_helper(%struct.ScmObj* %5, %struct.ScmObj* %6)
  %8 = icmp eq i32 %7, 1
  %9 = call %struct.ScmObj* @make_predicate(i1 zeroext %8)
  ret %struct.ScmObj* %9
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @make_predicate(i1 zeroext %0) #0 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  %4 = load i8, i8* %2, align 1
  %5 = trunc i8 %4 to i1
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = call %struct.ScmObj* @const_init_true()
  br label %10

8:                                                ; preds = %1
  %9 = call %struct.ScmObj* @const_init_false()
  br label %10

10:                                               ; preds = %8, %6
  %11 = phi %struct.ScmObj* [ %7, %6 ], [ %9, %8 ]
  ret %struct.ScmObj* %11
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_eqv_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_eqv_63(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_eqv_63(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %7 = call %struct.ScmObj* @prim_eq_63(%struct.ScmObj* %5, %struct.ScmObj* %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_equal_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.91, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_equal_63(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_equal_63(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %7 = call %struct.ScmObj* @prim_eq_63(%struct.ScmObj* %5, %struct.ScmObj* %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_number_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.92, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_number_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_number_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = call %struct.ScmObj* @prim_integer_63(%struct.ScmObj* %3)
  ret %struct.ScmObj* %4
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_integer_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 5
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_integer_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.93, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_integer_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_boolean_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.94, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.94, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.94, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_boolean_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_boolean_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_void_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.95, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_void_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_void_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_procedure_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_procedure_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_procedure_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 3
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_null_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.97, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_null_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_cons_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.98, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.98, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.98, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_cons_63(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_cons_63(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %3, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 4
  %7 = call %struct.ScmObj* @make_predicate(i1 zeroext %6)
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_cons(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.99, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_cons(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  %6 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %7 = call %struct.ScmObj* @alloc(i64 2)
  store %struct.ScmObj* %7, %struct.ScmObj** %5, align 8
  %8 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i64 0
  %11 = bitcast %struct.ScmObj* %10 to i8*
  %12 = bitcast %struct.ScmObj* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  %13 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %14 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %15 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %14, i64 1
  %16 = bitcast %struct.ScmObj* %15 to i8*
  %17 = bitcast %struct.ScmObj* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false)
  %18 = call %struct.ScmObj* @alloc(i64 1)
  store %struct.ScmObj* %18, %struct.ScmObj** %6, align 8
  %19 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %20 = bitcast %struct.ScmObj* %19 to i64*
  %21 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i32 0, i32 0
  store i64* %20, i64** %22, align 8
  %23 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %24 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %23, i32 0, i32 1
  store i32 4, i32* %24, align 8
  %25 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  ret %struct.ScmObj* %25
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_car(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_car(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i64 0, i64 0))
  store %struct.ScmObj* %5, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 0
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_cdr(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.102, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.102, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.102, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_cdr(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %4 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %5 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i64 0, i64 0))
  store %struct.ScmObj* %5, %struct.ScmObj** %3, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i64 1
  ret %struct.ScmObj* %7
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__43(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i64 0, i64 0))
  store i64 %8, i64* %5, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %10 = call i64 @unwrap_int(%struct.ScmObj* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.105, i64 0, i64 0))
  store i64 %10, i64* %6, align 8
  %11 = load i64, i64* %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = add nsw i64 %11, %12
  %14 = call %struct.ScmObj* @const_init_int(i64 %13)
  ret %struct.ScmObj* %14
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim__43(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %8 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %3, align 4
  %10 = load i32, i32* %3, align 4
  %11 = icmp ne i32 %10, 4
  br i1 %11, label %12, label %21

12:                                               ; preds = %1
  %13 = load i32, i32* %3, align 4
  %14 = icmp ne i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %17 = load i32, i32* %3, align 4
  %18 = call i8* @get_type_name(i32 %17)
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.106, i64 0, i64 0), i8* %18)
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

21:                                               ; preds = %12, %1
  store i64 0, i64* %4, align 8
  br label %22

22:                                               ; preds = %27, %21
  %23 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %24 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 4
  br i1 %26, label %27, label %32

27:                                               ; preds = %22
  %28 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  call void @_get_both(%struct.ScmObj* %28, %struct.ScmObj* %5, %struct.ScmObj* %6)
  %29 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.107, i64 0, i64 0))
  %30 = load i64, i64* %4, align 8
  %31 = add nsw i64 %30, %29
  store i64 %31, i64* %4, align 8
  store %struct.ScmObj* %6, %struct.ScmObj** %2, align 8
  br label %22, !llvm.loop !14

32:                                               ; preds = %22
  %33 = load i64, i64* %4, align 8
  %34 = call %struct.ScmObj* @const_init_int(i64 %33)
  ret %struct.ScmObj* %34
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__45(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i64 0, i64 0))
  store i64 %8, i64* %5, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %10 = call i64 @unwrap_int(%struct.ScmObj* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i64 0, i64 0))
  store i64 %10, i64* %6, align 8
  %11 = load i64, i64* %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = sub nsw i64 %11, %12
  %14 = call %struct.ScmObj* @const_init_int(i64 %13)
  ret %struct.ScmObj* %14
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim__45(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.ScmObj, align 8
  %10 = alloca %struct.ScmObj, align 8
  %11 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  %12 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %13 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i64 0, i64 0))
  store %struct.ScmObj* %13, %struct.ScmObj** %4, align 8
  %14 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %15 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %14, i64 0
  %16 = bitcast %struct.ScmObj* %5 to i8*
  %17 = bitcast %struct.ScmObj* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false)
  %18 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %19 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %18, i64 1
  %20 = bitcast %struct.ScmObj* %6 to i8*
  %21 = bitcast %struct.ScmObj* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false)
  %22 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.111, i64 0, i64 0))
  store i64 %22, i64* %7, align 8
  %23 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %1
  %27 = load i64, i64* %7, align 8
  %28 = sub nsw i64 0, %27
  %29 = call %struct.ScmObj* @const_init_int(i64 %28)
  store %struct.ScmObj* %29, %struct.ScmObj** %2, align 8
  br label %47

30:                                               ; preds = %1
  %31 = load i64, i64* %7, align 8
  store i64 %31, i64* %8, align 8
  %32 = bitcast %struct.ScmObj* %9 to i8*
  %33 = bitcast %struct.ScmObj* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false)
  br label %34

34:                                               ; preds = %38, %30
  %35 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp ne i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  call void @_get_both(%struct.ScmObj* %9, %struct.ScmObj* %10, %struct.ScmObj* %11)
  %39 = call i64 @unwrap_int(%struct.ScmObj* %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.112, i64 0, i64 0))
  %40 = load i64, i64* %8, align 8
  %41 = sub nsw i64 %40, %39
  store i64 %41, i64* %8, align 8
  %42 = bitcast %struct.ScmObj* %9 to i8*
  %43 = bitcast %struct.ScmObj* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 16, i1 false)
  br label %34, !llvm.loop !15

44:                                               ; preds = %34
  %45 = load i64, i64* %8, align 8
  %46 = call %struct.ScmObj* @const_init_int(i64 %45)
  store %struct.ScmObj* %46, %struct.ScmObj** %2, align 8
  br label %47

47:                                               ; preds = %44, %26
  %48 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  ret %struct.ScmObj* %48
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__42(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i64 0, i64 0))
  %7 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i64 0, i64 0))
  %9 = mul nsw i64 %6, %8
  %10 = call %struct.ScmObj* @const_init_int(i64 %9)
  ret %struct.ScmObj* %10
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim__42(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %1
  %14 = call %struct.ScmObj* @const_init_int(i64 1)
  store %struct.ScmObj* %14, %struct.ScmObj** %2, align 8
  br label %42

15:                                               ; preds = %1
  %16 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %17 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %20, label %38

20:                                               ; preds = %15
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %21, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.115, i64 0, i64 0))
  store %struct.ScmObj* %22, %struct.ScmObj** %4, align 8
  %23 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %24 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %23, i64 0
  %25 = bitcast %struct.ScmObj* %5 to i8*
  %26 = bitcast %struct.ScmObj* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false)
  %27 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %27, i64 1
  %29 = bitcast %struct.ScmObj* %6 to i8*
  %30 = bitcast %struct.ScmObj* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false)
  %31 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.116, i64 0, i64 0))
  store i64 %31, i64* %7, align 8
  %32 = call %struct.ScmObj* @applyprim__42(%struct.ScmObj* %6)
  %33 = call i64 @unwrap_int(%struct.ScmObj* %32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.117, i64 0, i64 0))
  store i64 %33, i64* %8, align 8
  %34 = load i64, i64* %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = mul nsw i64 %34, %35
  %37 = call %struct.ScmObj* @const_init_int(i64 %36)
  store %struct.ScmObj* %37, %struct.ScmObj** %2, align 8
  br label %42

38:                                               ; preds = %15
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.118, i64 0, i64 0))
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

42:                                               ; preds = %20, %13
  %43 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  ret %struct.ScmObj* %43
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__47(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %7 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.119, i64 0, i64 0))
  store i64 %8, i64* %5, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %10 = call i64 @unwrap_int(%struct.ScmObj* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120, i64 0, i64 0))
  store i64 %10, i64* %6, align 8
  %11 = load i64, i64* %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = sdiv i64 %11, %12
  %14 = call %struct.ScmObj* @const_init_int(i64 %13)
  ret %struct.ScmObj* %14
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim__61(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.121, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim__61(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__61(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  %5 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %4, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %5, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %7 = call i64 @unwrap_int(%struct.ScmObj* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.122, i64 0, i64 0))
  %8 = load %struct.ScmObj*, %struct.ScmObj** %5, align 8
  %9 = call i64 @unwrap_int(%struct.ScmObj* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.123, i64 0, i64 0))
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = call %struct.ScmObj* @const_init_true()
  store %struct.ScmObj* %12, %struct.ScmObj** %3, align 8
  br label %15

13:                                               ; preds = %2
  %14 = call %struct.ScmObj* @const_init_false()
  store %struct.ScmObj* %14, %struct.ScmObj** %3, align 8
  br label %15

15:                                               ; preds = %13, %11
  %16 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  ret %struct.ScmObj* %16
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__60(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.124, i64 0, i64 0))
  %7 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.125, i64 0, i64 0))
  %9 = icmp slt i64 %6, %8
  %10 = call %struct.ScmObj* @make_predicate(i1 zeroext %9)
  ret %struct.ScmObj* %10
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim__60_61(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  %6 = alloca %struct.ScmObj*, align 8
  %7 = alloca %struct.ScmObj, align 8
  %8 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %9 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %10 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 4
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

17:                                               ; preds = %1
  %18 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %19 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0))
  store %struct.ScmObj* %19, %struct.ScmObj** %3, align 8
  %20 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %21 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %20, i64 0
  %22 = bitcast %struct.ScmObj* %4 to i8*
  %23 = bitcast %struct.ScmObj* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  %24 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %24, i64 1
  %26 = bitcast %struct.ScmObj* %5 to i8*
  %27 = bitcast %struct.ScmObj* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %17
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

35:                                               ; preds = %17
  %36 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0))
  store %struct.ScmObj* %36, %struct.ScmObj** %6, align 8
  %37 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %38 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %37, i64 0
  %39 = bitcast %struct.ScmObj* %7 to i8*
  %40 = bitcast %struct.ScmObj* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false)
  %41 = load %struct.ScmObj*, %struct.ScmObj** %6, align 8
  %42 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %41, i64 1
  %43 = bitcast %struct.ScmObj* %8 to i8*
  %44 = bitcast %struct.ScmObj* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false)
  %45 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %8, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %35
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

52:                                               ; preds = %35
  %53 = call %struct.ScmObj* @prim__60_61(%struct.ScmObj* %4, %struct.ScmObj* %7)
  ret %struct.ScmObj* %53
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim__60_61(%struct.ScmObj* %0, %struct.ScmObj* %1) #0 {
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %3, align 8
  store %struct.ScmObj* %1, %struct.ScmObj** %4, align 8
  %5 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %6 = call i64 @unwrap_int(%struct.ScmObj* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i64 0, i64 0))
  %7 = load %struct.ScmObj*, %struct.ScmObj** %4, align 8
  %8 = call i64 @unwrap_int(%struct.ScmObj* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.128, i64 0, i64 0))
  %9 = icmp sle i64 %6, %8
  %10 = call %struct.ScmObj* @make_predicate(i1 zeroext %9)
  ret %struct.ScmObj* %10
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @applyprim_not(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  %3 = alloca %struct.ScmObj*, align 8
  %4 = alloca %struct.ScmObj, align 8
  %5 = alloca %struct.ScmObj, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %6 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %7 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

14:                                               ; preds = %1
  %15 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %16 = call %struct.ScmObj* @unwrap_cons(%struct.ScmObj* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i64 0, i64 0))
  store %struct.ScmObj* %16, %struct.ScmObj** %3, align 8
  %17 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %18 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %17, i64 0
  %19 = bitcast %struct.ScmObj* %4 to i8*
  %20 = bitcast %struct.ScmObj* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %21 = load %struct.ScmObj*, %struct.ScmObj** %3, align 8
  %22 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %21, i64 1
  %23 = bitcast %struct.ScmObj* %5 to i8*
  %24 = bitcast %struct.ScmObj* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  %25 = getelementptr inbounds %struct.ScmObj, %struct.ScmObj* %5, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %14
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  call void @exit(i32 1) #9
  unreachable

32:                                               ; preds = %14
  %33 = call %struct.ScmObj* @prim_not(%struct.ScmObj* %4)
  ret %struct.ScmObj* %33
}

; Function Attrs: noinline optnone ssp uwtable mustprogress
define %struct.ScmObj* @prim_not(%struct.ScmObj* %0) #0 {
  %2 = alloca %struct.ScmObj*, align 8
  store %struct.ScmObj* %0, %struct.ScmObj** %2, align 8
  %3 = load %struct.ScmObj*, %struct.ScmObj** %2, align 8
  %4 = call i64 @unwrap_bool(%struct.ScmObj* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.130, i64 0, i64 0))
  %5 = icmp eq i64 %4, 0
  %6 = call %struct.ScmObj* @make_predicate(i1 zeroext %5)
  ret %struct.ScmObj* %6
}

attributes #0 = { noinline optnone ssp uwtable mustprogress "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nobuiltin allocsize(0) "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind optnone ssp uwtable mustprogress "disable-tail-calls"="false" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "probe-stack"="__chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.5a,+zcm,+zcz" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #8 = { builtin allocsize(0) }
attributes #9 = { noreturn }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = !{i32 2, !"SDK Version", [2 x i32] [i32 12, i32 1]}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 1, !"branch-target-enforcement", i32 0}
!3 = !{i32 1, !"sign-return-address", i32 0}
!4 = !{i32 1, !"sign-return-address-all", i32 0}
!5 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!6 = !{i32 7, !"PIC Level", i32 2}
!7 = !{!"Apple clang version 13.0.0 (clang-1300.0.29.3)"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
!10 = distinct !{!10, !9}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !9}
!13 = distinct !{!13, !9}
!14 = distinct !{!14, !9}
!15 = distinct !{!15, !9}


;;;header ended;;;

@global$sym$ae4394789112 = private unnamed_addr constant [8 x i8] c"promise\00", align 8

define ccc i32 @main() {
%mainenv86499 = call %struct.ScmObj* @const_init_null()
%mainargs86500 = call %struct.ScmObj* @const_init_null()
call tailcc void @proc_main(%struct.ScmObj* %mainenv86499, %struct.ScmObj* %mainargs86500)
ret i32 0
}

define tailcc void @proc_main(%struct.ScmObj* %mainenv86497,%struct.ScmObj* %mainargs86498) {
%stackaddr$makeclosure86501 = alloca %struct.ScmObj*, align 8
%fptrToInt86502 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40559 to i64
%ae40559 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86502)
store volatile %struct.ScmObj* %ae40559, %struct.ScmObj** %stackaddr$makeclosure86501, align 8
%ae40560 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86503 = alloca %struct.ScmObj*, align 8
%fptrToInt86504 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40561 to i64
%ae40561 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86504)
store volatile %struct.ScmObj* %ae40561, %struct.ScmObj** %stackaddr$makeclosure86503, align 8
%args86496$ae40559$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86505 = alloca %struct.ScmObj*, align 8
%args86496$ae40559$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40561, %struct.ScmObj* %args86496$ae40559$0)
store volatile %struct.ScmObj* %args86496$ae40559$1, %struct.ScmObj** %stackaddr$prim86505, align 8
%stackaddr$prim86506 = alloca %struct.ScmObj*, align 8
%args86496$ae40559$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40560, %struct.ScmObj* %args86496$ae40559$1)
store volatile %struct.ScmObj* %args86496$ae40559$2, %struct.ScmObj** %stackaddr$prim86506, align 8
%clofunc86507 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae40559)
musttail call tailcc void %clofunc86507(%struct.ScmObj* %ae40559, %struct.ScmObj* %args86496$ae40559$2)
ret void
}

define tailcc void @proc_clo$ae40559(%struct.ScmObj* %env$ae40559,%struct.ScmObj* %current_45args85129) {
%stackaddr$prim86508 = alloca %struct.ScmObj*, align 8
%_95k40377 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85129)
store volatile %struct.ScmObj* %_95k40377, %struct.ScmObj** %stackaddr$prim86508, align 8
%stackaddr$prim86509 = alloca %struct.ScmObj*, align 8
%current_45args85130 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85129)
store volatile %struct.ScmObj* %current_45args85130, %struct.ScmObj** %stackaddr$prim86509, align 8
%stackaddr$prim86510 = alloca %struct.ScmObj*, align 8
%anf_45bind40237 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85130)
store volatile %struct.ScmObj* %anf_45bind40237, %struct.ScmObj** %stackaddr$prim86510, align 8
%stackaddr$makeclosure86511 = alloca %struct.ScmObj*, align 8
%fptrToInt86512 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40574 to i64
%ae40574 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86512)
store volatile %struct.ScmObj* %ae40574, %struct.ScmObj** %stackaddr$makeclosure86511, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40574, %struct.ScmObj* %anf_45bind40237, i64 0)
%ae40575 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86513 = alloca %struct.ScmObj*, align 8
%fptrToInt86514 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40576 to i64
%ae40576 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86514)
store volatile %struct.ScmObj* %ae40576, %struct.ScmObj** %stackaddr$makeclosure86513, align 8
%args86491$ae40574$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86515 = alloca %struct.ScmObj*, align 8
%args86491$ae40574$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40576, %struct.ScmObj* %args86491$ae40574$0)
store volatile %struct.ScmObj* %args86491$ae40574$1, %struct.ScmObj** %stackaddr$prim86515, align 8
%stackaddr$prim86516 = alloca %struct.ScmObj*, align 8
%args86491$ae40574$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40575, %struct.ScmObj* %args86491$ae40574$1)
store volatile %struct.ScmObj* %args86491$ae40574$2, %struct.ScmObj** %stackaddr$prim86516, align 8
%clofunc86517 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae40574)
musttail call tailcc void %clofunc86517(%struct.ScmObj* %ae40574, %struct.ScmObj* %args86491$ae40574$2)
ret void
}

define tailcc void @proc_clo$ae40574(%struct.ScmObj* %env$ae40574,%struct.ScmObj* %current_45args85132) {
%stackaddr$env-ref86518 = alloca %struct.ScmObj*, align 8
%anf_45bind40237 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40574, i64 0)
store %struct.ScmObj* %anf_45bind40237, %struct.ScmObj** %stackaddr$env-ref86518
%stackaddr$prim86519 = alloca %struct.ScmObj*, align 8
%_95k40378 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85132)
store volatile %struct.ScmObj* %_95k40378, %struct.ScmObj** %stackaddr$prim86519, align 8
%stackaddr$prim86520 = alloca %struct.ScmObj*, align 8
%current_45args85133 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85132)
store volatile %struct.ScmObj* %current_45args85133, %struct.ScmObj** %stackaddr$prim86520, align 8
%stackaddr$prim86521 = alloca %struct.ScmObj*, align 8
%anf_45bind40241 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85133)
store volatile %struct.ScmObj* %anf_45bind40241, %struct.ScmObj** %stackaddr$prim86521, align 8
%stackaddr$makeclosure86522 = alloca %struct.ScmObj*, align 8
%fptrToInt86523 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40689 to i64
%ae40689 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86523)
store volatile %struct.ScmObj* %ae40689, %struct.ScmObj** %stackaddr$makeclosure86522, align 8
%args86470$anf_45bind40237$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86524 = alloca %struct.ScmObj*, align 8
%args86470$anf_45bind40237$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40241, %struct.ScmObj* %args86470$anf_45bind40237$0)
store volatile %struct.ScmObj* %args86470$anf_45bind40237$1, %struct.ScmObj** %stackaddr$prim86524, align 8
%stackaddr$prim86525 = alloca %struct.ScmObj*, align 8
%args86470$anf_45bind40237$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40689, %struct.ScmObj* %args86470$anf_45bind40237$1)
store volatile %struct.ScmObj* %args86470$anf_45bind40237$2, %struct.ScmObj** %stackaddr$prim86525, align 8
%clofunc86526 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind40237)
musttail call tailcc void %clofunc86526(%struct.ScmObj* %anf_45bind40237, %struct.ScmObj* %args86470$anf_45bind40237$2)
ret void
}

define tailcc void @proc_clo$ae40689(%struct.ScmObj* %env$ae40689,%struct.ScmObj* %current_45args85135) {
%stackaddr$prim86527 = alloca %struct.ScmObj*, align 8
%_95k40379 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85135)
store volatile %struct.ScmObj* %_95k40379, %struct.ScmObj** %stackaddr$prim86527, align 8
%stackaddr$prim86528 = alloca %struct.ScmObj*, align 8
%current_45args85136 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85135)
store volatile %struct.ScmObj* %current_45args85136, %struct.ScmObj** %stackaddr$prim86528, align 8
%stackaddr$prim86529 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85136)
store volatile %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$prim86529, align 8
%stackaddr$makeclosure86530 = alloca %struct.ScmObj*, align 8
%fptrToInt86531 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40691 to i64
%ae40691 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86531)
store volatile %struct.ScmObj* %ae40691, %struct.ScmObj** %stackaddr$makeclosure86530, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40691, %struct.ScmObj* %Ycmb40109, i64 0)
%ae40692 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86532 = alloca %struct.ScmObj*, align 8
%fptrToInt86533 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40693 to i64
%ae40693 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86533)
store volatile %struct.ScmObj* %ae40693, %struct.ScmObj** %stackaddr$makeclosure86532, align 8
%args86469$ae40691$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86534 = alloca %struct.ScmObj*, align 8
%args86469$ae40691$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40693, %struct.ScmObj* %args86469$ae40691$0)
store volatile %struct.ScmObj* %args86469$ae40691$1, %struct.ScmObj** %stackaddr$prim86534, align 8
%stackaddr$prim86535 = alloca %struct.ScmObj*, align 8
%args86469$ae40691$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40692, %struct.ScmObj* %args86469$ae40691$1)
store volatile %struct.ScmObj* %args86469$ae40691$2, %struct.ScmObj** %stackaddr$prim86535, align 8
%clofunc86536 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae40691)
musttail call tailcc void %clofunc86536(%struct.ScmObj* %ae40691, %struct.ScmObj* %args86469$ae40691$2)
ret void
}

define tailcc void @proc_clo$ae40691(%struct.ScmObj* %env$ae40691,%struct.ScmObj* %current_45args85138) {
%stackaddr$env-ref86537 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40691, i64 0)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86537
%stackaddr$prim86538 = alloca %struct.ScmObj*, align 8
%_95k40380 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85138)
store volatile %struct.ScmObj* %_95k40380, %struct.ScmObj** %stackaddr$prim86538, align 8
%stackaddr$prim86539 = alloca %struct.ScmObj*, align 8
%current_45args85139 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85138)
store volatile %struct.ScmObj* %current_45args85139, %struct.ScmObj** %stackaddr$prim86539, align 8
%stackaddr$prim86540 = alloca %struct.ScmObj*, align 8
%anf_45bind40246 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85139)
store volatile %struct.ScmObj* %anf_45bind40246, %struct.ScmObj** %stackaddr$prim86540, align 8
%stackaddr$makeclosure86541 = alloca %struct.ScmObj*, align 8
%fptrToInt86542 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40769 to i64
%ae40769 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86542)
store volatile %struct.ScmObj* %ae40769, %struct.ScmObj** %stackaddr$makeclosure86541, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40769, %struct.ScmObj* %Ycmb40109, i64 0)
%args86453$Ycmb40109$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86543 = alloca %struct.ScmObj*, align 8
%args86453$Ycmb40109$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40246, %struct.ScmObj* %args86453$Ycmb40109$0)
store volatile %struct.ScmObj* %args86453$Ycmb40109$1, %struct.ScmObj** %stackaddr$prim86543, align 8
%stackaddr$prim86544 = alloca %struct.ScmObj*, align 8
%args86453$Ycmb40109$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40769, %struct.ScmObj* %args86453$Ycmb40109$1)
store volatile %struct.ScmObj* %args86453$Ycmb40109$2, %struct.ScmObj** %stackaddr$prim86544, align 8
%clofunc86545 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb40109)
musttail call tailcc void %clofunc86545(%struct.ScmObj* %Ycmb40109, %struct.ScmObj* %args86453$Ycmb40109$2)
ret void
}

define tailcc void @proc_clo$ae40769(%struct.ScmObj* %env$ae40769,%struct.ScmObj* %current_45args85141) {
%stackaddr$env-ref86546 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40769, i64 0)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86546
%stackaddr$prim86547 = alloca %struct.ScmObj*, align 8
%_95k40381 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85141)
store volatile %struct.ScmObj* %_95k40381, %struct.ScmObj** %stackaddr$prim86547, align 8
%stackaddr$prim86548 = alloca %struct.ScmObj*, align 8
%current_45args85142 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85141)
store volatile %struct.ScmObj* %current_45args85142, %struct.ScmObj** %stackaddr$prim86548, align 8
%stackaddr$prim86549 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85142)
store volatile %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$prim86549, align 8
%stackaddr$makeclosure86550 = alloca %struct.ScmObj*, align 8
%fptrToInt86551 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40771 to i64
%ae40771 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86551)
store volatile %struct.ScmObj* %ae40771, %struct.ScmObj** %stackaddr$makeclosure86550, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40771, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40771, %struct.ScmObj* %Ycmb40109, i64 1)
%ae40772 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86552 = alloca %struct.ScmObj*, align 8
%fptrToInt86553 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40773 to i64
%ae40773 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86553)
store volatile %struct.ScmObj* %ae40773, %struct.ScmObj** %stackaddr$makeclosure86552, align 8
%args86452$ae40771$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86554 = alloca %struct.ScmObj*, align 8
%args86452$ae40771$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40773, %struct.ScmObj* %args86452$ae40771$0)
store volatile %struct.ScmObj* %args86452$ae40771$1, %struct.ScmObj** %stackaddr$prim86554, align 8
%stackaddr$prim86555 = alloca %struct.ScmObj*, align 8
%args86452$ae40771$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40772, %struct.ScmObj* %args86452$ae40771$1)
store volatile %struct.ScmObj* %args86452$ae40771$2, %struct.ScmObj** %stackaddr$prim86555, align 8
%clofunc86556 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae40771)
musttail call tailcc void %clofunc86556(%struct.ScmObj* %ae40771, %struct.ScmObj* %args86452$ae40771$2)
ret void
}

define tailcc void @proc_clo$ae40771(%struct.ScmObj* %env$ae40771,%struct.ScmObj* %current_45args85144) {
%stackaddr$env-ref86557 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40771, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86557
%stackaddr$env-ref86558 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40771, i64 1)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86558
%stackaddr$prim86559 = alloca %struct.ScmObj*, align 8
%_95k40382 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85144)
store volatile %struct.ScmObj* %_95k40382, %struct.ScmObj** %stackaddr$prim86559, align 8
%stackaddr$prim86560 = alloca %struct.ScmObj*, align 8
%current_45args85145 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85144)
store volatile %struct.ScmObj* %current_45args85145, %struct.ScmObj** %stackaddr$prim86560, align 8
%stackaddr$prim86561 = alloca %struct.ScmObj*, align 8
%anf_45bind40252 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85145)
store volatile %struct.ScmObj* %anf_45bind40252, %struct.ScmObj** %stackaddr$prim86561, align 8
%stackaddr$makeclosure86562 = alloca %struct.ScmObj*, align 8
%fptrToInt86563 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40866 to i64
%ae40866 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86563)
store volatile %struct.ScmObj* %ae40866, %struct.ScmObj** %stackaddr$makeclosure86562, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40866, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40866, %struct.ScmObj* %Ycmb40109, i64 1)
%args86433$Ycmb40109$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86564 = alloca %struct.ScmObj*, align 8
%args86433$Ycmb40109$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40252, %struct.ScmObj* %args86433$Ycmb40109$0)
store volatile %struct.ScmObj* %args86433$Ycmb40109$1, %struct.ScmObj** %stackaddr$prim86564, align 8
%stackaddr$prim86565 = alloca %struct.ScmObj*, align 8
%args86433$Ycmb40109$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40866, %struct.ScmObj* %args86433$Ycmb40109$1)
store volatile %struct.ScmObj* %args86433$Ycmb40109$2, %struct.ScmObj** %stackaddr$prim86565, align 8
%clofunc86566 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb40109)
musttail call tailcc void %clofunc86566(%struct.ScmObj* %Ycmb40109, %struct.ScmObj* %args86433$Ycmb40109$2)
ret void
}

define tailcc void @proc_clo$ae40866(%struct.ScmObj* %env$ae40866,%struct.ScmObj* %current_45args85147) {
%stackaddr$env-ref86567 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40866, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86567
%stackaddr$env-ref86568 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40866, i64 1)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86568
%stackaddr$prim86569 = alloca %struct.ScmObj*, align 8
%_95k40383 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85147)
store volatile %struct.ScmObj* %_95k40383, %struct.ScmObj** %stackaddr$prim86569, align 8
%stackaddr$prim86570 = alloca %struct.ScmObj*, align 8
%current_45args85148 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85147)
store volatile %struct.ScmObj* %current_45args85148, %struct.ScmObj** %stackaddr$prim86570, align 8
%stackaddr$prim86571 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85148)
store volatile %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$prim86571, align 8
%stackaddr$makeclosure86572 = alloca %struct.ScmObj*, align 8
%fptrToInt86573 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40868 to i64
%ae40868 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt86573)
store volatile %struct.ScmObj* %ae40868, %struct.ScmObj** %stackaddr$makeclosure86572, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40868, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40868, %struct.ScmObj* %_37map140126, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae40868, %struct.ScmObj* %Ycmb40109, i64 2)
%ae40869 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86574 = alloca %struct.ScmObj*, align 8
%fptrToInt86575 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40870 to i64
%ae40870 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86575)
store volatile %struct.ScmObj* %ae40870, %struct.ScmObj** %stackaddr$makeclosure86574, align 8
%args86432$ae40868$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86576 = alloca %struct.ScmObj*, align 8
%args86432$ae40868$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40870, %struct.ScmObj* %args86432$ae40868$0)
store volatile %struct.ScmObj* %args86432$ae40868$1, %struct.ScmObj** %stackaddr$prim86576, align 8
%stackaddr$prim86577 = alloca %struct.ScmObj*, align 8
%args86432$ae40868$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40869, %struct.ScmObj* %args86432$ae40868$1)
store volatile %struct.ScmObj* %args86432$ae40868$2, %struct.ScmObj** %stackaddr$prim86577, align 8
%clofunc86578 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae40868)
musttail call tailcc void %clofunc86578(%struct.ScmObj* %ae40868, %struct.ScmObj* %args86432$ae40868$2)
ret void
}

define tailcc void @proc_clo$ae40868(%struct.ScmObj* %env$ae40868,%struct.ScmObj* %current_45args85150) {
%stackaddr$env-ref86579 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40868, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86579
%stackaddr$env-ref86580 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40868, i64 1)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref86580
%stackaddr$env-ref86581 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40868, i64 2)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86581
%stackaddr$prim86582 = alloca %struct.ScmObj*, align 8
%_95k40384 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85150)
store volatile %struct.ScmObj* %_95k40384, %struct.ScmObj** %stackaddr$prim86582, align 8
%stackaddr$prim86583 = alloca %struct.ScmObj*, align 8
%current_45args85151 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85150)
store volatile %struct.ScmObj* %current_45args85151, %struct.ScmObj** %stackaddr$prim86583, align 8
%stackaddr$prim86584 = alloca %struct.ScmObj*, align 8
%anf_45bind40259 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85151)
store volatile %struct.ScmObj* %anf_45bind40259, %struct.ScmObj** %stackaddr$prim86584, align 8
%stackaddr$makeclosure86585 = alloca %struct.ScmObj*, align 8
%fptrToInt86586 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41016 to i64
%ae41016 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt86586)
store volatile %struct.ScmObj* %ae41016, %struct.ScmObj** %stackaddr$makeclosure86585, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41016, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41016, %struct.ScmObj* %_37map140126, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41016, %struct.ScmObj* %Ycmb40109, i64 2)
%args86416$Ycmb40109$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86587 = alloca %struct.ScmObj*, align 8
%args86416$Ycmb40109$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40259, %struct.ScmObj* %args86416$Ycmb40109$0)
store volatile %struct.ScmObj* %args86416$Ycmb40109$1, %struct.ScmObj** %stackaddr$prim86587, align 8
%stackaddr$prim86588 = alloca %struct.ScmObj*, align 8
%args86416$Ycmb40109$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41016, %struct.ScmObj* %args86416$Ycmb40109$1)
store volatile %struct.ScmObj* %args86416$Ycmb40109$2, %struct.ScmObj** %stackaddr$prim86588, align 8
%clofunc86589 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb40109)
musttail call tailcc void %clofunc86589(%struct.ScmObj* %Ycmb40109, %struct.ScmObj* %args86416$Ycmb40109$2)
ret void
}

define tailcc void @proc_clo$ae41016(%struct.ScmObj* %env$ae41016,%struct.ScmObj* %current_45args85153) {
%stackaddr$env-ref86590 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41016, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86590
%stackaddr$env-ref86591 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41016, i64 1)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref86591
%stackaddr$env-ref86592 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41016, i64 2)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86592
%stackaddr$prim86593 = alloca %struct.ScmObj*, align 8
%_95k40385 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85153)
store volatile %struct.ScmObj* %_95k40385, %struct.ScmObj** %stackaddr$prim86593, align 8
%stackaddr$prim86594 = alloca %struct.ScmObj*, align 8
%current_45args85154 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85153)
store volatile %struct.ScmObj* %current_45args85154, %struct.ScmObj** %stackaddr$prim86594, align 8
%stackaddr$prim86595 = alloca %struct.ScmObj*, align 8
%_37take40122 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85154)
store volatile %struct.ScmObj* %_37take40122, %struct.ScmObj** %stackaddr$prim86595, align 8
%stackaddr$makeclosure86596 = alloca %struct.ScmObj*, align 8
%fptrToInt86597 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41018 to i64
%ae41018 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt86597)
store volatile %struct.ScmObj* %ae41018, %struct.ScmObj** %stackaddr$makeclosure86596, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41018, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41018, %struct.ScmObj* %_37map140126, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41018, %struct.ScmObj* %Ycmb40109, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41018, %struct.ScmObj* %_37take40122, i64 3)
%ae41019 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86598 = alloca %struct.ScmObj*, align 8
%fptrToInt86599 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41020 to i64
%ae41020 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86599)
store volatile %struct.ScmObj* %ae41020, %struct.ScmObj** %stackaddr$makeclosure86598, align 8
%args86415$ae41018$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86600 = alloca %struct.ScmObj*, align 8
%args86415$ae41018$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41020, %struct.ScmObj* %args86415$ae41018$0)
store volatile %struct.ScmObj* %args86415$ae41018$1, %struct.ScmObj** %stackaddr$prim86600, align 8
%stackaddr$prim86601 = alloca %struct.ScmObj*, align 8
%args86415$ae41018$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41019, %struct.ScmObj* %args86415$ae41018$1)
store volatile %struct.ScmObj* %args86415$ae41018$2, %struct.ScmObj** %stackaddr$prim86601, align 8
%clofunc86602 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41018)
musttail call tailcc void %clofunc86602(%struct.ScmObj* %ae41018, %struct.ScmObj* %args86415$ae41018$2)
ret void
}

define tailcc void @proc_clo$ae41018(%struct.ScmObj* %env$ae41018,%struct.ScmObj* %current_45args85156) {
%stackaddr$env-ref86603 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41018, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86603
%stackaddr$env-ref86604 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41018, i64 1)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref86604
%stackaddr$env-ref86605 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41018, i64 2)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86605
%stackaddr$env-ref86606 = alloca %struct.ScmObj*, align 8
%_37take40122 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41018, i64 3)
store %struct.ScmObj* %_37take40122, %struct.ScmObj** %stackaddr$env-ref86606
%stackaddr$prim86607 = alloca %struct.ScmObj*, align 8
%_95k40386 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85156)
store volatile %struct.ScmObj* %_95k40386, %struct.ScmObj** %stackaddr$prim86607, align 8
%stackaddr$prim86608 = alloca %struct.ScmObj*, align 8
%current_45args85157 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85156)
store volatile %struct.ScmObj* %current_45args85157, %struct.ScmObj** %stackaddr$prim86608, align 8
%stackaddr$prim86609 = alloca %struct.ScmObj*, align 8
%anf_45bind40263 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85157)
store volatile %struct.ScmObj* %anf_45bind40263, %struct.ScmObj** %stackaddr$prim86609, align 8
%stackaddr$makeclosure86610 = alloca %struct.ScmObj*, align 8
%fptrToInt86611 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41099 to i64
%ae41099 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt86611)
store volatile %struct.ScmObj* %ae41099, %struct.ScmObj** %stackaddr$makeclosure86610, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41099, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41099, %struct.ScmObj* %_37map140126, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41099, %struct.ScmObj* %Ycmb40109, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41099, %struct.ScmObj* %_37take40122, i64 3)
%args86401$Ycmb40109$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86612 = alloca %struct.ScmObj*, align 8
%args86401$Ycmb40109$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40263, %struct.ScmObj* %args86401$Ycmb40109$0)
store volatile %struct.ScmObj* %args86401$Ycmb40109$1, %struct.ScmObj** %stackaddr$prim86612, align 8
%stackaddr$prim86613 = alloca %struct.ScmObj*, align 8
%args86401$Ycmb40109$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41099, %struct.ScmObj* %args86401$Ycmb40109$1)
store volatile %struct.ScmObj* %args86401$Ycmb40109$2, %struct.ScmObj** %stackaddr$prim86613, align 8
%clofunc86614 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb40109)
musttail call tailcc void %clofunc86614(%struct.ScmObj* %Ycmb40109, %struct.ScmObj* %args86401$Ycmb40109$2)
ret void
}

define tailcc void @proc_clo$ae41099(%struct.ScmObj* %env$ae41099,%struct.ScmObj* %current_45args85159) {
%stackaddr$env-ref86615 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41099, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86615
%stackaddr$env-ref86616 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41099, i64 1)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref86616
%stackaddr$env-ref86617 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41099, i64 2)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86617
%stackaddr$env-ref86618 = alloca %struct.ScmObj*, align 8
%_37take40122 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41099, i64 3)
store %struct.ScmObj* %_37take40122, %struct.ScmObj** %stackaddr$env-ref86618
%stackaddr$prim86619 = alloca %struct.ScmObj*, align 8
%_95k40387 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85159)
store volatile %struct.ScmObj* %_95k40387, %struct.ScmObj** %stackaddr$prim86619, align 8
%stackaddr$prim86620 = alloca %struct.ScmObj*, align 8
%current_45args85160 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85159)
store volatile %struct.ScmObj* %current_45args85160, %struct.ScmObj** %stackaddr$prim86620, align 8
%stackaddr$prim86621 = alloca %struct.ScmObj*, align 8
%_37length40119 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85160)
store volatile %struct.ScmObj* %_37length40119, %struct.ScmObj** %stackaddr$prim86621, align 8
%stackaddr$makeclosure86622 = alloca %struct.ScmObj*, align 8
%fptrToInt86623 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41101 to i64
%ae41101 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt86623)
store volatile %struct.ScmObj* %ae41101, %struct.ScmObj** %stackaddr$makeclosure86622, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41101, %struct.ScmObj* %_37length40119, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41101, %struct.ScmObj* %_37foldr140130, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41101, %struct.ScmObj* %_37map140126, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41101, %struct.ScmObj* %Ycmb40109, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41101, %struct.ScmObj* %_37take40122, i64 4)
%ae41102 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86624 = alloca %struct.ScmObj*, align 8
%fptrToInt86625 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41103 to i64
%ae41103 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86625)
store volatile %struct.ScmObj* %ae41103, %struct.ScmObj** %stackaddr$makeclosure86624, align 8
%args86400$ae41101$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86626 = alloca %struct.ScmObj*, align 8
%args86400$ae41101$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41103, %struct.ScmObj* %args86400$ae41101$0)
store volatile %struct.ScmObj* %args86400$ae41101$1, %struct.ScmObj** %stackaddr$prim86626, align 8
%stackaddr$prim86627 = alloca %struct.ScmObj*, align 8
%args86400$ae41101$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41102, %struct.ScmObj* %args86400$ae41101$1)
store volatile %struct.ScmObj* %args86400$ae41101$2, %struct.ScmObj** %stackaddr$prim86627, align 8
%clofunc86628 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41101)
musttail call tailcc void %clofunc86628(%struct.ScmObj* %ae41101, %struct.ScmObj* %args86400$ae41101$2)
ret void
}

define tailcc void @proc_clo$ae41101(%struct.ScmObj* %env$ae41101,%struct.ScmObj* %current_45args85162) {
%stackaddr$env-ref86629 = alloca %struct.ScmObj*, align 8
%_37length40119 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41101, i64 0)
store %struct.ScmObj* %_37length40119, %struct.ScmObj** %stackaddr$env-ref86629
%stackaddr$env-ref86630 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41101, i64 1)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86630
%stackaddr$env-ref86631 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41101, i64 2)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref86631
%stackaddr$env-ref86632 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41101, i64 3)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86632
%stackaddr$env-ref86633 = alloca %struct.ScmObj*, align 8
%_37take40122 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41101, i64 4)
store %struct.ScmObj* %_37take40122, %struct.ScmObj** %stackaddr$env-ref86633
%stackaddr$prim86634 = alloca %struct.ScmObj*, align 8
%_95k40388 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85162)
store volatile %struct.ScmObj* %_95k40388, %struct.ScmObj** %stackaddr$prim86634, align 8
%stackaddr$prim86635 = alloca %struct.ScmObj*, align 8
%current_45args85163 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85162)
store volatile %struct.ScmObj* %current_45args85163, %struct.ScmObj** %stackaddr$prim86635, align 8
%stackaddr$prim86636 = alloca %struct.ScmObj*, align 8
%anf_45bind40268 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85163)
store volatile %struct.ScmObj* %anf_45bind40268, %struct.ScmObj** %stackaddr$prim86636, align 8
%stackaddr$makeclosure86637 = alloca %struct.ScmObj*, align 8
%fptrToInt86638 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41178 to i64
%ae41178 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt86638)
store volatile %struct.ScmObj* %ae41178, %struct.ScmObj** %stackaddr$makeclosure86637, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41178, %struct.ScmObj* %_37length40119, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41178, %struct.ScmObj* %_37foldr140130, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41178, %struct.ScmObj* %_37map140126, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41178, %struct.ScmObj* %Ycmb40109, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41178, %struct.ScmObj* %_37take40122, i64 4)
%args86384$Ycmb40109$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86639 = alloca %struct.ScmObj*, align 8
%args86384$Ycmb40109$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40268, %struct.ScmObj* %args86384$Ycmb40109$0)
store volatile %struct.ScmObj* %args86384$Ycmb40109$1, %struct.ScmObj** %stackaddr$prim86639, align 8
%stackaddr$prim86640 = alloca %struct.ScmObj*, align 8
%args86384$Ycmb40109$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41178, %struct.ScmObj* %args86384$Ycmb40109$1)
store volatile %struct.ScmObj* %args86384$Ycmb40109$2, %struct.ScmObj** %stackaddr$prim86640, align 8
%clofunc86641 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb40109)
musttail call tailcc void %clofunc86641(%struct.ScmObj* %Ycmb40109, %struct.ScmObj* %args86384$Ycmb40109$2)
ret void
}

define tailcc void @proc_clo$ae41178(%struct.ScmObj* %env$ae41178,%struct.ScmObj* %current_45args85165) {
%stackaddr$env-ref86642 = alloca %struct.ScmObj*, align 8
%_37length40119 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41178, i64 0)
store %struct.ScmObj* %_37length40119, %struct.ScmObj** %stackaddr$env-ref86642
%stackaddr$env-ref86643 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41178, i64 1)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86643
%stackaddr$env-ref86644 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41178, i64 2)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref86644
%stackaddr$env-ref86645 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41178, i64 3)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86645
%stackaddr$env-ref86646 = alloca %struct.ScmObj*, align 8
%_37take40122 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41178, i64 4)
store %struct.ScmObj* %_37take40122, %struct.ScmObj** %stackaddr$env-ref86646
%stackaddr$prim86647 = alloca %struct.ScmObj*, align 8
%_95k40389 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85165)
store volatile %struct.ScmObj* %_95k40389, %struct.ScmObj** %stackaddr$prim86647, align 8
%stackaddr$prim86648 = alloca %struct.ScmObj*, align 8
%current_45args85166 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85165)
store volatile %struct.ScmObj* %current_45args85166, %struct.ScmObj** %stackaddr$prim86648, align 8
%stackaddr$prim86649 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85166)
store volatile %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$prim86649, align 8
%stackaddr$makeclosure86650 = alloca %struct.ScmObj*, align 8
%fptrToInt86651 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41180 to i64
%ae41180 = call %struct.ScmObj* @closure_alloc(i64 6, i64 %fptrToInt86651)
store volatile %struct.ScmObj* %ae41180, %struct.ScmObj** %stackaddr$makeclosure86650, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41180, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41180, %struct.ScmObj* %_37foldl140114, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41180, %struct.ScmObj* %_37length40119, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41180, %struct.ScmObj* %_37map140126, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41180, %struct.ScmObj* %Ycmb40109, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41180, %struct.ScmObj* %_37take40122, i64 5)
%ae41181 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86652 = alloca %struct.ScmObj*, align 8
%fptrToInt86653 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41182 to i64
%ae41182 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86653)
store volatile %struct.ScmObj* %ae41182, %struct.ScmObj** %stackaddr$makeclosure86652, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41182, %struct.ScmObj* %_37foldl140114, i64 0)
%args86383$ae41180$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86654 = alloca %struct.ScmObj*, align 8
%args86383$ae41180$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41182, %struct.ScmObj* %args86383$ae41180$0)
store volatile %struct.ScmObj* %args86383$ae41180$1, %struct.ScmObj** %stackaddr$prim86654, align 8
%stackaddr$prim86655 = alloca %struct.ScmObj*, align 8
%args86383$ae41180$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41181, %struct.ScmObj* %args86383$ae41180$1)
store volatile %struct.ScmObj* %args86383$ae41180$2, %struct.ScmObj** %stackaddr$prim86655, align 8
%clofunc86656 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41180)
musttail call tailcc void %clofunc86656(%struct.ScmObj* %ae41180, %struct.ScmObj* %args86383$ae41180$2)
ret void
}

define tailcc void @proc_clo$ae41180(%struct.ScmObj* %env$ae41180,%struct.ScmObj* %current_45args85168) {
%stackaddr$env-ref86657 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41180, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86657
%stackaddr$env-ref86658 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41180, i64 1)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86658
%stackaddr$env-ref86659 = alloca %struct.ScmObj*, align 8
%_37length40119 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41180, i64 2)
store %struct.ScmObj* %_37length40119, %struct.ScmObj** %stackaddr$env-ref86659
%stackaddr$env-ref86660 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41180, i64 3)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref86660
%stackaddr$env-ref86661 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41180, i64 4)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86661
%stackaddr$env-ref86662 = alloca %struct.ScmObj*, align 8
%_37take40122 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41180, i64 5)
store %struct.ScmObj* %_37take40122, %struct.ScmObj** %stackaddr$env-ref86662
%stackaddr$prim86663 = alloca %struct.ScmObj*, align 8
%_95k40390 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85168)
store volatile %struct.ScmObj* %_95k40390, %struct.ScmObj** %stackaddr$prim86663, align 8
%stackaddr$prim86664 = alloca %struct.ScmObj*, align 8
%current_45args85169 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85168)
store volatile %struct.ScmObj* %current_45args85169, %struct.ScmObj** %stackaddr$prim86664, align 8
%stackaddr$prim86665 = alloca %struct.ScmObj*, align 8
%_37last40152 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85169)
store volatile %struct.ScmObj* %_37last40152, %struct.ScmObj** %stackaddr$prim86665, align 8
%stackaddr$makeclosure86666 = alloca %struct.ScmObj*, align 8
%fptrToInt86667 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41234 to i64
%ae41234 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt86667)
store volatile %struct.ScmObj* %ae41234, %struct.ScmObj** %stackaddr$makeclosure86666, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41234, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41234, %struct.ScmObj* %_37foldl140114, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41234, %struct.ScmObj* %_37map140126, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41234, %struct.ScmObj* %Ycmb40109, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41234, %struct.ScmObj* %_37last40152, i64 4)
%ae41235 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86668 = alloca %struct.ScmObj*, align 8
%fptrToInt86669 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41236 to i64
%ae41236 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86669)
store volatile %struct.ScmObj* %ae41236, %struct.ScmObj** %stackaddr$makeclosure86668, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41236, %struct.ScmObj* %_37length40119, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41236, %struct.ScmObj* %_37take40122, i64 1)
%args86369$ae41234$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86670 = alloca %struct.ScmObj*, align 8
%args86369$ae41234$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41236, %struct.ScmObj* %args86369$ae41234$0)
store volatile %struct.ScmObj* %args86369$ae41234$1, %struct.ScmObj** %stackaddr$prim86670, align 8
%stackaddr$prim86671 = alloca %struct.ScmObj*, align 8
%args86369$ae41234$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41235, %struct.ScmObj* %args86369$ae41234$1)
store volatile %struct.ScmObj* %args86369$ae41234$2, %struct.ScmObj** %stackaddr$prim86671, align 8
%clofunc86672 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41234)
musttail call tailcc void %clofunc86672(%struct.ScmObj* %ae41234, %struct.ScmObj* %args86369$ae41234$2)
ret void
}

define tailcc void @proc_clo$ae41234(%struct.ScmObj* %env$ae41234,%struct.ScmObj* %current_45args85171) {
%stackaddr$env-ref86673 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41234, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86673
%stackaddr$env-ref86674 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41234, i64 1)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86674
%stackaddr$env-ref86675 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41234, i64 2)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref86675
%stackaddr$env-ref86676 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41234, i64 3)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86676
%stackaddr$env-ref86677 = alloca %struct.ScmObj*, align 8
%_37last40152 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41234, i64 4)
store %struct.ScmObj* %_37last40152, %struct.ScmObj** %stackaddr$env-ref86677
%stackaddr$prim86678 = alloca %struct.ScmObj*, align 8
%_95k40391 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85171)
store volatile %struct.ScmObj* %_95k40391, %struct.ScmObj** %stackaddr$prim86678, align 8
%stackaddr$prim86679 = alloca %struct.ScmObj*, align 8
%current_45args85172 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85171)
store volatile %struct.ScmObj* %current_45args85172, %struct.ScmObj** %stackaddr$prim86679, align 8
%stackaddr$prim86680 = alloca %struct.ScmObj*, align 8
%_37drop_45right40149 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85172)
store volatile %struct.ScmObj* %_37drop_45right40149, %struct.ScmObj** %stackaddr$prim86680, align 8
%stackaddr$makeclosure86681 = alloca %struct.ScmObj*, align 8
%fptrToInt86682 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41264 to i64
%ae41264 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt86682)
store volatile %struct.ScmObj* %ae41264, %struct.ScmObj** %stackaddr$makeclosure86681, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41264, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41264, %struct.ScmObj* %_37foldl140114, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41264, %struct.ScmObj* %_37drop_45right40149, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41264, %struct.ScmObj* %Ycmb40109, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41264, %struct.ScmObj* %_37last40152, i64 4)
%ae41265 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86683 = alloca %struct.ScmObj*, align 8
%fptrToInt86684 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41266 to i64
%ae41266 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86684)
store volatile %struct.ScmObj* %ae41266, %struct.ScmObj** %stackaddr$makeclosure86683, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41266, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41266, %struct.ScmObj* %_37map140126, i64 1)
%args86359$ae41264$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86685 = alloca %struct.ScmObj*, align 8
%args86359$ae41264$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41266, %struct.ScmObj* %args86359$ae41264$0)
store volatile %struct.ScmObj* %args86359$ae41264$1, %struct.ScmObj** %stackaddr$prim86685, align 8
%stackaddr$prim86686 = alloca %struct.ScmObj*, align 8
%args86359$ae41264$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41265, %struct.ScmObj* %args86359$ae41264$1)
store volatile %struct.ScmObj* %args86359$ae41264$2, %struct.ScmObj** %stackaddr$prim86686, align 8
%clofunc86687 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41264)
musttail call tailcc void %clofunc86687(%struct.ScmObj* %ae41264, %struct.ScmObj* %args86359$ae41264$2)
ret void
}

define tailcc void @proc_clo$ae41264(%struct.ScmObj* %env$ae41264,%struct.ScmObj* %current_45args85174) {
%stackaddr$env-ref86688 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41264, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86688
%stackaddr$env-ref86689 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41264, i64 1)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86689
%stackaddr$env-ref86690 = alloca %struct.ScmObj*, align 8
%_37drop_45right40149 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41264, i64 2)
store %struct.ScmObj* %_37drop_45right40149, %struct.ScmObj** %stackaddr$env-ref86690
%stackaddr$env-ref86691 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41264, i64 3)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86691
%stackaddr$env-ref86692 = alloca %struct.ScmObj*, align 8
%_37last40152 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41264, i64 4)
store %struct.ScmObj* %_37last40152, %struct.ScmObj** %stackaddr$env-ref86692
%stackaddr$prim86693 = alloca %struct.ScmObj*, align 8
%_95k40392 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85174)
store volatile %struct.ScmObj* %_95k40392, %struct.ScmObj** %stackaddr$prim86693, align 8
%stackaddr$prim86694 = alloca %struct.ScmObj*, align 8
%current_45args85175 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85174)
store volatile %struct.ScmObj* %current_45args85175, %struct.ScmObj** %stackaddr$prim86694, align 8
%stackaddr$prim86695 = alloca %struct.ScmObj*, align 8
%anf_45bind40284 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85175)
store volatile %struct.ScmObj* %anf_45bind40284, %struct.ScmObj** %stackaddr$prim86695, align 8
%stackaddr$makeclosure86696 = alloca %struct.ScmObj*, align 8
%fptrToInt86697 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41648 to i64
%ae41648 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt86697)
store volatile %struct.ScmObj* %ae41648, %struct.ScmObj** %stackaddr$makeclosure86696, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41648, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41648, %struct.ScmObj* %_37foldl140114, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41648, %struct.ScmObj* %_37drop_45right40149, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41648, %struct.ScmObj* %Ycmb40109, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41648, %struct.ScmObj* %_37last40152, i64 4)
%args86299$Ycmb40109$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86698 = alloca %struct.ScmObj*, align 8
%args86299$Ycmb40109$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40284, %struct.ScmObj* %args86299$Ycmb40109$0)
store volatile %struct.ScmObj* %args86299$Ycmb40109$1, %struct.ScmObj** %stackaddr$prim86698, align 8
%stackaddr$prim86699 = alloca %struct.ScmObj*, align 8
%args86299$Ycmb40109$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41648, %struct.ScmObj* %args86299$Ycmb40109$1)
store volatile %struct.ScmObj* %args86299$Ycmb40109$2, %struct.ScmObj** %stackaddr$prim86699, align 8
%clofunc86700 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb40109)
musttail call tailcc void %clofunc86700(%struct.ScmObj* %Ycmb40109, %struct.ScmObj* %args86299$Ycmb40109$2)
ret void
}

define tailcc void @proc_clo$ae41648(%struct.ScmObj* %env$ae41648,%struct.ScmObj* %current_45args85177) {
%stackaddr$env-ref86701 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41648, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86701
%stackaddr$env-ref86702 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41648, i64 1)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86702
%stackaddr$env-ref86703 = alloca %struct.ScmObj*, align 8
%_37drop_45right40149 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41648, i64 2)
store %struct.ScmObj* %_37drop_45right40149, %struct.ScmObj** %stackaddr$env-ref86703
%stackaddr$env-ref86704 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41648, i64 3)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86704
%stackaddr$env-ref86705 = alloca %struct.ScmObj*, align 8
%_37last40152 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41648, i64 4)
store %struct.ScmObj* %_37last40152, %struct.ScmObj** %stackaddr$env-ref86705
%stackaddr$prim86706 = alloca %struct.ScmObj*, align 8
%_95k40393 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85177)
store volatile %struct.ScmObj* %_95k40393, %struct.ScmObj** %stackaddr$prim86706, align 8
%stackaddr$prim86707 = alloca %struct.ScmObj*, align 8
%current_45args85178 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85177)
store volatile %struct.ScmObj* %current_45args85178, %struct.ScmObj** %stackaddr$prim86707, align 8
%stackaddr$prim86708 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85178)
store volatile %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$prim86708, align 8
%stackaddr$makeclosure86709 = alloca %struct.ScmObj*, align 8
%fptrToInt86710 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41650 to i64
%ae41650 = call %struct.ScmObj* @closure_alloc(i64 6, i64 %fptrToInt86710)
store volatile %struct.ScmObj* %ae41650, %struct.ScmObj** %stackaddr$makeclosure86709, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41650, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41650, %struct.ScmObj* %_37foldl140114, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41650, %struct.ScmObj* %_37foldr40135, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41650, %struct.ScmObj* %_37drop_45right40149, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41650, %struct.ScmObj* %Ycmb40109, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41650, %struct.ScmObj* %_37last40152, i64 5)
%ae41651 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86711 = alloca %struct.ScmObj*, align 8
%fptrToInt86712 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41652 to i64
%ae41652 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86712)
store volatile %struct.ScmObj* %ae41652, %struct.ScmObj** %stackaddr$makeclosure86711, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41652, %struct.ScmObj* %_37foldr140130, i64 0)
%args86298$ae41650$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86713 = alloca %struct.ScmObj*, align 8
%args86298$ae41650$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41652, %struct.ScmObj* %args86298$ae41650$0)
store volatile %struct.ScmObj* %args86298$ae41650$1, %struct.ScmObj** %stackaddr$prim86713, align 8
%stackaddr$prim86714 = alloca %struct.ScmObj*, align 8
%args86298$ae41650$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41651, %struct.ScmObj* %args86298$ae41650$1)
store volatile %struct.ScmObj* %args86298$ae41650$2, %struct.ScmObj** %stackaddr$prim86714, align 8
%clofunc86715 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41650)
musttail call tailcc void %clofunc86715(%struct.ScmObj* %ae41650, %struct.ScmObj* %args86298$ae41650$2)
ret void
}

define tailcc void @proc_clo$ae41650(%struct.ScmObj* %env$ae41650,%struct.ScmObj* %current_45args85180) {
%stackaddr$env-ref86716 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41650, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86716
%stackaddr$env-ref86717 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41650, i64 1)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86717
%stackaddr$env-ref86718 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41650, i64 2)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref86718
%stackaddr$env-ref86719 = alloca %struct.ScmObj*, align 8
%_37drop_45right40149 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41650, i64 3)
store %struct.ScmObj* %_37drop_45right40149, %struct.ScmObj** %stackaddr$env-ref86719
%stackaddr$env-ref86720 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41650, i64 4)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86720
%stackaddr$env-ref86721 = alloca %struct.ScmObj*, align 8
%_37last40152 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41650, i64 5)
store %struct.ScmObj* %_37last40152, %struct.ScmObj** %stackaddr$env-ref86721
%stackaddr$prim86722 = alloca %struct.ScmObj*, align 8
%_95k40394 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85180)
store volatile %struct.ScmObj* %_95k40394, %struct.ScmObj** %stackaddr$prim86722, align 8
%stackaddr$prim86723 = alloca %struct.ScmObj*, align 8
%current_45args85181 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85180)
store volatile %struct.ScmObj* %current_45args85181, %struct.ScmObj** %stackaddr$prim86723, align 8
%stackaddr$prim86724 = alloca %struct.ScmObj*, align 8
%_37map140161 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85181)
store volatile %struct.ScmObj* %_37map140161, %struct.ScmObj** %stackaddr$prim86724, align 8
%stackaddr$makeclosure86725 = alloca %struct.ScmObj*, align 8
%fptrToInt86726 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41727 to i64
%ae41727 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt86726)
store volatile %struct.ScmObj* %ae41727, %struct.ScmObj** %stackaddr$makeclosure86725, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41727, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41727, %struct.ScmObj* %_37foldl140114, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41727, %struct.ScmObj* %_37foldr40135, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41727, %struct.ScmObj* %_37map140161, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41727, %struct.ScmObj* %Ycmb40109, i64 4)
%ae41728 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86727 = alloca %struct.ScmObj*, align 8
%fptrToInt86728 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41729 to i64
%ae41729 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt86728)
store volatile %struct.ScmObj* %ae41729, %struct.ScmObj** %stackaddr$makeclosure86727, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41729, %struct.ScmObj* %_37foldr40135, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41729, %struct.ScmObj* %_37drop_45right40149, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41729, %struct.ScmObj* %_37last40152, i64 2)
%args86279$ae41727$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86729 = alloca %struct.ScmObj*, align 8
%args86279$ae41727$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41729, %struct.ScmObj* %args86279$ae41727$0)
store volatile %struct.ScmObj* %args86279$ae41727$1, %struct.ScmObj** %stackaddr$prim86729, align 8
%stackaddr$prim86730 = alloca %struct.ScmObj*, align 8
%args86279$ae41727$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41728, %struct.ScmObj* %args86279$ae41727$1)
store volatile %struct.ScmObj* %args86279$ae41727$2, %struct.ScmObj** %stackaddr$prim86730, align 8
%clofunc86731 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41727)
musttail call tailcc void %clofunc86731(%struct.ScmObj* %ae41727, %struct.ScmObj* %args86279$ae41727$2)
ret void
}

define tailcc void @proc_clo$ae41727(%struct.ScmObj* %env$ae41727,%struct.ScmObj* %current_45args85183) {
%stackaddr$env-ref86732 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41727, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref86732
%stackaddr$env-ref86733 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41727, i64 1)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86733
%stackaddr$env-ref86734 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41727, i64 2)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref86734
%stackaddr$env-ref86735 = alloca %struct.ScmObj*, align 8
%_37map140161 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41727, i64 3)
store %struct.ScmObj* %_37map140161, %struct.ScmObj** %stackaddr$env-ref86735
%stackaddr$env-ref86736 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41727, i64 4)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86736
%stackaddr$prim86737 = alloca %struct.ScmObj*, align 8
%_95k40395 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85183)
store volatile %struct.ScmObj* %_95k40395, %struct.ScmObj** %stackaddr$prim86737, align 8
%stackaddr$prim86738 = alloca %struct.ScmObj*, align 8
%current_45args85184 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85183)
store volatile %struct.ScmObj* %current_45args85184, %struct.ScmObj** %stackaddr$prim86738, align 8
%stackaddr$prim86739 = alloca %struct.ScmObj*, align 8
%_37map40156 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85184)
store volatile %struct.ScmObj* %_37map40156, %struct.ScmObj** %stackaddr$prim86739, align 8
%stackaddr$makeclosure86740 = alloca %struct.ScmObj*, align 8
%fptrToInt86741 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41873 to i64
%ae41873 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86741)
store volatile %struct.ScmObj* %ae41873, %struct.ScmObj** %stackaddr$makeclosure86740, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41873, %struct.ScmObj* %_37foldl140114, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41873, %struct.ScmObj* %Ycmb40109, i64 1)
%ae41874 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86742 = alloca %struct.ScmObj*, align 8
%fptrToInt86743 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41875 to i64
%ae41875 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt86743)
store volatile %struct.ScmObj* %ae41875, %struct.ScmObj** %stackaddr$makeclosure86742, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41875, %struct.ScmObj* %_37foldr40135, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41875, %struct.ScmObj* %_37foldr140130, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41875, %struct.ScmObj* %_37map140161, i64 2)
%args86262$ae41873$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86744 = alloca %struct.ScmObj*, align 8
%args86262$ae41873$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41875, %struct.ScmObj* %args86262$ae41873$0)
store volatile %struct.ScmObj* %args86262$ae41873$1, %struct.ScmObj** %stackaddr$prim86744, align 8
%stackaddr$prim86745 = alloca %struct.ScmObj*, align 8
%args86262$ae41873$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41874, %struct.ScmObj* %args86262$ae41873$1)
store volatile %struct.ScmObj* %args86262$ae41873$2, %struct.ScmObj** %stackaddr$prim86745, align 8
%clofunc86746 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41873)
musttail call tailcc void %clofunc86746(%struct.ScmObj* %ae41873, %struct.ScmObj* %args86262$ae41873$2)
ret void
}

define tailcc void @proc_clo$ae41873(%struct.ScmObj* %env$ae41873,%struct.ScmObj* %current_45args85186) {
%stackaddr$env-ref86747 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41873, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86747
%stackaddr$env-ref86748 = alloca %struct.ScmObj*, align 8
%Ycmb40109 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41873, i64 1)
store %struct.ScmObj* %Ycmb40109, %struct.ScmObj** %stackaddr$env-ref86748
%stackaddr$prim86749 = alloca %struct.ScmObj*, align 8
%_95k40396 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85186)
store volatile %struct.ScmObj* %_95k40396, %struct.ScmObj** %stackaddr$prim86749, align 8
%stackaddr$prim86750 = alloca %struct.ScmObj*, align 8
%current_45args85187 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85186)
store volatile %struct.ScmObj* %current_45args85187, %struct.ScmObj** %stackaddr$prim86750, align 8
%stackaddr$prim86751 = alloca %struct.ScmObj*, align 8
%anf_45bind40304 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85187)
store volatile %struct.ScmObj* %anf_45bind40304, %struct.ScmObj** %stackaddr$prim86751, align 8
%stackaddr$makeclosure86752 = alloca %struct.ScmObj*, align 8
%fptrToInt86753 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42265 to i64
%ae42265 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86753)
store volatile %struct.ScmObj* %ae42265, %struct.ScmObj** %stackaddr$makeclosure86752, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42265, %struct.ScmObj* %_37foldl140114, i64 0)
%args86202$Ycmb40109$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86754 = alloca %struct.ScmObj*, align 8
%args86202$Ycmb40109$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40304, %struct.ScmObj* %args86202$Ycmb40109$0)
store volatile %struct.ScmObj* %args86202$Ycmb40109$1, %struct.ScmObj** %stackaddr$prim86754, align 8
%stackaddr$prim86755 = alloca %struct.ScmObj*, align 8
%args86202$Ycmb40109$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42265, %struct.ScmObj* %args86202$Ycmb40109$1)
store volatile %struct.ScmObj* %args86202$Ycmb40109$2, %struct.ScmObj** %stackaddr$prim86755, align 8
%clofunc86756 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %Ycmb40109)
musttail call tailcc void %clofunc86756(%struct.ScmObj* %Ycmb40109, %struct.ScmObj* %args86202$Ycmb40109$2)
ret void
}

define tailcc void @proc_clo$ae42265(%struct.ScmObj* %env$ae42265,%struct.ScmObj* %current_45args85189) {
%stackaddr$env-ref86757 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42265, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86757
%stackaddr$prim86758 = alloca %struct.ScmObj*, align 8
%_95k40397 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85189)
store volatile %struct.ScmObj* %_95k40397, %struct.ScmObj** %stackaddr$prim86758, align 8
%stackaddr$prim86759 = alloca %struct.ScmObj*, align 8
%current_45args85190 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85189)
store volatile %struct.ScmObj* %current_45args85190, %struct.ScmObj** %stackaddr$prim86759, align 8
%stackaddr$prim86760 = alloca %struct.ScmObj*, align 8
%_37foldl40212 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85190)
store volatile %struct.ScmObj* %_37foldl40212, %struct.ScmObj** %stackaddr$prim86760, align 8
%stackaddr$makeclosure86761 = alloca %struct.ScmObj*, align 8
%fptrToInt86762 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42267 to i64
%ae42267 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86762)
store volatile %struct.ScmObj* %ae42267, %struct.ScmObj** %stackaddr$makeclosure86761, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42267, %struct.ScmObj* %_37foldl140114, i64 0)
%ae42268 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86763 = alloca %struct.ScmObj*, align 8
%fptrToInt86764 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42269 to i64
%ae42269 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86764)
store volatile %struct.ScmObj* %ae42269, %struct.ScmObj** %stackaddr$makeclosure86763, align 8
%args86201$ae42267$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86765 = alloca %struct.ScmObj*, align 8
%args86201$ae42267$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42269, %struct.ScmObj* %args86201$ae42267$0)
store volatile %struct.ScmObj* %args86201$ae42267$1, %struct.ScmObj** %stackaddr$prim86765, align 8
%stackaddr$prim86766 = alloca %struct.ScmObj*, align 8
%args86201$ae42267$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42268, %struct.ScmObj* %args86201$ae42267$1)
store volatile %struct.ScmObj* %args86201$ae42267$2, %struct.ScmObj** %stackaddr$prim86766, align 8
%clofunc86767 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae42267)
musttail call tailcc void %clofunc86767(%struct.ScmObj* %ae42267, %struct.ScmObj* %args86201$ae42267$2)
ret void
}

define tailcc void @proc_clo$ae42267(%struct.ScmObj* %env$ae42267,%struct.ScmObj* %current_45args85192) {
%stackaddr$env-ref86768 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42267, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86768
%stackaddr$prim86769 = alloca %struct.ScmObj*, align 8
%_95k40398 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85192)
store volatile %struct.ScmObj* %_95k40398, %struct.ScmObj** %stackaddr$prim86769, align 8
%stackaddr$prim86770 = alloca %struct.ScmObj*, align 8
%current_45args85193 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85192)
store volatile %struct.ScmObj* %current_45args85193, %struct.ScmObj** %stackaddr$prim86770, align 8
%stackaddr$prim86771 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85193)
store volatile %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$prim86771, align 8
%stackaddr$makeclosure86772 = alloca %struct.ScmObj*, align 8
%fptrToInt86773 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42291 to i64
%ae42291 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86773)
store volatile %struct.ScmObj* %ae42291, %struct.ScmObj** %stackaddr$makeclosure86772, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42291, %struct.ScmObj* %_37foldl140114, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42291, %struct.ScmObj* %_37_6240209, i64 1)
%ae42292 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86774 = alloca %struct.ScmObj*, align 8
%fptrToInt86775 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42293 to i64
%ae42293 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86775)
store volatile %struct.ScmObj* %ae42293, %struct.ScmObj** %stackaddr$makeclosure86774, align 8
%args86195$ae42291$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86776 = alloca %struct.ScmObj*, align 8
%args86195$ae42291$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42293, %struct.ScmObj* %args86195$ae42291$0)
store volatile %struct.ScmObj* %args86195$ae42291$1, %struct.ScmObj** %stackaddr$prim86776, align 8
%stackaddr$prim86777 = alloca %struct.ScmObj*, align 8
%args86195$ae42291$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42292, %struct.ScmObj* %args86195$ae42291$1)
store volatile %struct.ScmObj* %args86195$ae42291$2, %struct.ScmObj** %stackaddr$prim86777, align 8
%clofunc86778 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae42291)
musttail call tailcc void %clofunc86778(%struct.ScmObj* %ae42291, %struct.ScmObj* %args86195$ae42291$2)
ret void
}

define tailcc void @proc_clo$ae42291(%struct.ScmObj* %env$ae42291,%struct.ScmObj* %current_45args85195) {
%stackaddr$env-ref86779 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42291, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86779
%stackaddr$env-ref86780 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42291, i64 1)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86780
%stackaddr$prim86781 = alloca %struct.ScmObj*, align 8
%_95k40399 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85195)
store volatile %struct.ScmObj* %_95k40399, %struct.ScmObj** %stackaddr$prim86781, align 8
%stackaddr$prim86782 = alloca %struct.ScmObj*, align 8
%current_45args85196 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85195)
store volatile %struct.ScmObj* %current_45args85196, %struct.ScmObj** %stackaddr$prim86782, align 8
%stackaddr$prim86783 = alloca %struct.ScmObj*, align 8
%_37_62_6140206 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85196)
store volatile %struct.ScmObj* %_37_62_6140206, %struct.ScmObj** %stackaddr$prim86783, align 8
%ae42315 = call %struct.ScmObj* @const_init_int(i64 1)
%ae42316 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86784 = alloca %struct.ScmObj*, align 8
%_37append40202 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae42315, %struct.ScmObj* %ae42316)
store volatile %struct.ScmObj* %_37append40202, %struct.ScmObj** %stackaddr$prim86784, align 8
%stackaddr$makeclosure86785 = alloca %struct.ScmObj*, align 8
%fptrToInt86786 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42317 to i64
%ae42317 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt86786)
store volatile %struct.ScmObj* %ae42317, %struct.ScmObj** %stackaddr$makeclosure86785, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42317, %struct.ScmObj* %_37foldl140114, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42317, %struct.ScmObj* %_37_6240209, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae42317, %struct.ScmObj* %_37append40202, i64 2)
%ae42318 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86787 = alloca %struct.ScmObj*, align 8
%fptrToInt86788 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42319 to i64
%ae42319 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86788)
store volatile %struct.ScmObj* %ae42319, %struct.ScmObj** %stackaddr$makeclosure86787, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42319, %struct.ScmObj* %_37append40202, i64 0)
%args86189$ae42317$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86789 = alloca %struct.ScmObj*, align 8
%args86189$ae42317$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42319, %struct.ScmObj* %args86189$ae42317$0)
store volatile %struct.ScmObj* %args86189$ae42317$1, %struct.ScmObj** %stackaddr$prim86789, align 8
%stackaddr$prim86790 = alloca %struct.ScmObj*, align 8
%args86189$ae42317$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42318, %struct.ScmObj* %args86189$ae42317$1)
store volatile %struct.ScmObj* %args86189$ae42317$2, %struct.ScmObj** %stackaddr$prim86790, align 8
%clofunc86791 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae42317)
musttail call tailcc void %clofunc86791(%struct.ScmObj* %ae42317, %struct.ScmObj* %args86189$ae42317$2)
ret void
}

define tailcc void @proc_clo$ae42317(%struct.ScmObj* %env$ae42317,%struct.ScmObj* %current_45args85198) {
%stackaddr$env-ref86792 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42317, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86792
%stackaddr$env-ref86793 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42317, i64 1)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86793
%stackaddr$env-ref86794 = alloca %struct.ScmObj*, align 8
%_37append40202 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42317, i64 2)
store %struct.ScmObj* %_37append40202, %struct.ScmObj** %stackaddr$env-ref86794
%stackaddr$prim86795 = alloca %struct.ScmObj*, align 8
%_95k40400 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85198)
store volatile %struct.ScmObj* %_95k40400, %struct.ScmObj** %stackaddr$prim86795, align 8
%stackaddr$prim86796 = alloca %struct.ScmObj*, align 8
%current_45args85199 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85198)
store volatile %struct.ScmObj* %current_45args85199, %struct.ScmObj** %stackaddr$prim86796, align 8
%stackaddr$prim86797 = alloca %struct.ScmObj*, align 8
%anf_45bind40312 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85199)
store volatile %struct.ScmObj* %anf_45bind40312, %struct.ScmObj** %stackaddr$prim86797, align 8
%ae42385 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86798 = alloca %struct.ScmObj*, align 8
%_95040203 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %_37append40202, %struct.ScmObj* %ae42385, %struct.ScmObj* %anf_45bind40312)
store volatile %struct.ScmObj* %_95040203, %struct.ScmObj** %stackaddr$prim86798, align 8
%ae42388 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86799 = alloca %struct.ScmObj*, align 8
%_37append40201 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %_37append40202, %struct.ScmObj* %ae42388)
store volatile %struct.ScmObj* %_37append40201, %struct.ScmObj** %stackaddr$prim86799, align 8
%stackaddr$makeclosure86800 = alloca %struct.ScmObj*, align 8
%fptrToInt86801 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42389 to i64
%ae42389 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86801)
store volatile %struct.ScmObj* %ae42389, %struct.ScmObj** %stackaddr$makeclosure86800, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42389, %struct.ScmObj* %_37foldl140114, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42389, %struct.ScmObj* %_37_6240209, i64 1)
%ae42390 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86802 = alloca %struct.ScmObj*, align 8
%fptrToInt86803 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42391 to i64
%ae42391 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86803)
store volatile %struct.ScmObj* %ae42391, %struct.ScmObj** %stackaddr$makeclosure86802, align 8
%args86178$ae42389$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86804 = alloca %struct.ScmObj*, align 8
%args86178$ae42389$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42391, %struct.ScmObj* %args86178$ae42389$0)
store volatile %struct.ScmObj* %args86178$ae42389$1, %struct.ScmObj** %stackaddr$prim86804, align 8
%stackaddr$prim86805 = alloca %struct.ScmObj*, align 8
%args86178$ae42389$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42390, %struct.ScmObj* %args86178$ae42389$1)
store volatile %struct.ScmObj* %args86178$ae42389$2, %struct.ScmObj** %stackaddr$prim86805, align 8
%clofunc86806 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae42389)
musttail call tailcc void %clofunc86806(%struct.ScmObj* %ae42389, %struct.ScmObj* %args86178$ae42389$2)
ret void
}

define tailcc void @proc_clo$ae42389(%struct.ScmObj* %env$ae42389,%struct.ScmObj* %current_45args85201) {
%stackaddr$env-ref86807 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42389, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86807
%stackaddr$env-ref86808 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42389, i64 1)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86808
%stackaddr$prim86809 = alloca %struct.ScmObj*, align 8
%_95k40401 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85201)
store volatile %struct.ScmObj* %_95k40401, %struct.ScmObj** %stackaddr$prim86809, align 8
%stackaddr$prim86810 = alloca %struct.ScmObj*, align 8
%current_45args85202 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85201)
store volatile %struct.ScmObj* %current_45args85202, %struct.ScmObj** %stackaddr$prim86810, align 8
%stackaddr$prim86811 = alloca %struct.ScmObj*, align 8
%_37list_6340194 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85202)
store volatile %struct.ScmObj* %_37list_6340194, %struct.ScmObj** %stackaddr$prim86811, align 8
%stackaddr$makeclosure86812 = alloca %struct.ScmObj*, align 8
%fptrToInt86813 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42805 to i64
%ae42805 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86813)
store volatile %struct.ScmObj* %ae42805, %struct.ScmObj** %stackaddr$makeclosure86812, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42805, %struct.ScmObj* %_37foldl140114, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42805, %struct.ScmObj* %_37_6240209, i64 1)
%ae42806 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86814 = alloca %struct.ScmObj*, align 8
%fptrToInt86815 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42807 to i64
%ae42807 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86815)
store volatile %struct.ScmObj* %ae42807, %struct.ScmObj** %stackaddr$makeclosure86814, align 8
%args86153$ae42805$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86816 = alloca %struct.ScmObj*, align 8
%args86153$ae42805$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42807, %struct.ScmObj* %args86153$ae42805$0)
store volatile %struct.ScmObj* %args86153$ae42805$1, %struct.ScmObj** %stackaddr$prim86816, align 8
%stackaddr$prim86817 = alloca %struct.ScmObj*, align 8
%args86153$ae42805$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42806, %struct.ScmObj* %args86153$ae42805$1)
store volatile %struct.ScmObj* %args86153$ae42805$2, %struct.ScmObj** %stackaddr$prim86817, align 8
%clofunc86818 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae42805)
musttail call tailcc void %clofunc86818(%struct.ScmObj* %ae42805, %struct.ScmObj* %args86153$ae42805$2)
ret void
}

define tailcc void @proc_clo$ae42805(%struct.ScmObj* %env$ae42805,%struct.ScmObj* %current_45args85204) {
%stackaddr$env-ref86819 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42805, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86819
%stackaddr$env-ref86820 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42805, i64 1)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86820
%stackaddr$prim86821 = alloca %struct.ScmObj*, align 8
%_95k40402 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85204)
store volatile %struct.ScmObj* %_95k40402, %struct.ScmObj** %stackaddr$prim86821, align 8
%stackaddr$prim86822 = alloca %struct.ScmObj*, align 8
%current_45args85205 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85204)
store volatile %struct.ScmObj* %current_45args85205, %struct.ScmObj** %stackaddr$prim86822, align 8
%stackaddr$prim86823 = alloca %struct.ScmObj*, align 8
%_37drop40185 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85205)
store volatile %struct.ScmObj* %_37drop40185, %struct.ScmObj** %stackaddr$prim86823, align 8
%stackaddr$makeclosure86824 = alloca %struct.ScmObj*, align 8
%fptrToInt86825 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43341 to i64
%ae43341 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86825)
store volatile %struct.ScmObj* %ae43341, %struct.ScmObj** %stackaddr$makeclosure86824, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43341, %struct.ScmObj* %_37foldl140114, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae43341, %struct.ScmObj* %_37_6240209, i64 1)
%ae43342 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86826 = alloca %struct.ScmObj*, align 8
%fptrToInt86827 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43343 to i64
%ae43343 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86827)
store volatile %struct.ScmObj* %ae43343, %struct.ScmObj** %stackaddr$makeclosure86826, align 8
%args86129$ae43341$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86828 = alloca %struct.ScmObj*, align 8
%args86129$ae43341$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43343, %struct.ScmObj* %args86129$ae43341$0)
store volatile %struct.ScmObj* %args86129$ae43341$1, %struct.ScmObj** %stackaddr$prim86828, align 8
%stackaddr$prim86829 = alloca %struct.ScmObj*, align 8
%args86129$ae43341$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43342, %struct.ScmObj* %args86129$ae43341$1)
store volatile %struct.ScmObj* %args86129$ae43341$2, %struct.ScmObj** %stackaddr$prim86829, align 8
%clofunc86830 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae43341)
musttail call tailcc void %clofunc86830(%struct.ScmObj* %ae43341, %struct.ScmObj* %args86129$ae43341$2)
ret void
}

define tailcc void @proc_clo$ae43341(%struct.ScmObj* %env$ae43341,%struct.ScmObj* %current_45args85207) {
%stackaddr$env-ref86831 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43341, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref86831
%stackaddr$env-ref86832 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43341, i64 1)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86832
%stackaddr$prim86833 = alloca %struct.ScmObj*, align 8
%_95k40403 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85207)
store volatile %struct.ScmObj* %_95k40403, %struct.ScmObj** %stackaddr$prim86833, align 8
%stackaddr$prim86834 = alloca %struct.ScmObj*, align 8
%current_45args85208 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85207)
store volatile %struct.ScmObj* %current_45args85208, %struct.ScmObj** %stackaddr$prim86834, align 8
%stackaddr$prim86835 = alloca %struct.ScmObj*, align 8
%_37memv40178 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85208)
store volatile %struct.ScmObj* %_37memv40178, %struct.ScmObj** %stackaddr$prim86835, align 8
%stackaddr$makeclosure86836 = alloca %struct.ScmObj*, align 8
%fptrToInt86837 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43745 to i64
%ae43745 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86837)
store volatile %struct.ScmObj* %ae43745, %struct.ScmObj** %stackaddr$makeclosure86836, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43745, %struct.ScmObj* %_37_6240209, i64 0)
%ae43746 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86838 = alloca %struct.ScmObj*, align 8
%fptrToInt86839 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43747 to i64
%ae43747 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86839)
store volatile %struct.ScmObj* %ae43747, %struct.ScmObj** %stackaddr$makeclosure86838, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43747, %struct.ScmObj* %_37foldl140114, i64 0)
%args86103$ae43745$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86840 = alloca %struct.ScmObj*, align 8
%args86103$ae43745$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43747, %struct.ScmObj* %args86103$ae43745$0)
store volatile %struct.ScmObj* %args86103$ae43745$1, %struct.ScmObj** %stackaddr$prim86840, align 8
%stackaddr$prim86841 = alloca %struct.ScmObj*, align 8
%args86103$ae43745$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43746, %struct.ScmObj* %args86103$ae43745$1)
store volatile %struct.ScmObj* %args86103$ae43745$2, %struct.ScmObj** %stackaddr$prim86841, align 8
%clofunc86842 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae43745)
musttail call tailcc void %clofunc86842(%struct.ScmObj* %ae43745, %struct.ScmObj* %args86103$ae43745$2)
ret void
}

define tailcc void @proc_clo$ae43745(%struct.ScmObj* %env$ae43745,%struct.ScmObj* %current_45args85210) {
%stackaddr$env-ref86843 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43745, i64 0)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86843
%stackaddr$prim86844 = alloca %struct.ScmObj*, align 8
%_95k40404 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85210)
store volatile %struct.ScmObj* %_95k40404, %struct.ScmObj** %stackaddr$prim86844, align 8
%stackaddr$prim86845 = alloca %struct.ScmObj*, align 8
%current_45args85211 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85210)
store volatile %struct.ScmObj* %current_45args85211, %struct.ScmObj** %stackaddr$prim86845, align 8
%stackaddr$prim86846 = alloca %struct.ScmObj*, align 8
%_37_4740174 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85211)
store volatile %struct.ScmObj* %_37_4740174, %struct.ScmObj** %stackaddr$prim86846, align 8
%stackaddr$makeclosure86847 = alloca %struct.ScmObj*, align 8
%fptrToInt86848 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43843 to i64
%ae43843 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86848)
store volatile %struct.ScmObj* %ae43843, %struct.ScmObj** %stackaddr$makeclosure86847, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43843, %struct.ScmObj* %_37_6240209, i64 0)
%ae43844 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86849 = alloca %struct.ScmObj*, align 8
%fptrToInt86850 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43845 to i64
%ae43845 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86850)
store volatile %struct.ScmObj* %ae43845, %struct.ScmObj** %stackaddr$makeclosure86849, align 8
%args86090$ae43843$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86851 = alloca %struct.ScmObj*, align 8
%args86090$ae43843$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43845, %struct.ScmObj* %args86090$ae43843$0)
store volatile %struct.ScmObj* %args86090$ae43843$1, %struct.ScmObj** %stackaddr$prim86851, align 8
%stackaddr$prim86852 = alloca %struct.ScmObj*, align 8
%args86090$ae43843$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43844, %struct.ScmObj* %args86090$ae43843$1)
store volatile %struct.ScmObj* %args86090$ae43843$2, %struct.ScmObj** %stackaddr$prim86852, align 8
%clofunc86853 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae43843)
musttail call tailcc void %clofunc86853(%struct.ScmObj* %ae43843, %struct.ScmObj* %args86090$ae43843$2)
ret void
}

define tailcc void @proc_clo$ae43843(%struct.ScmObj* %env$ae43843,%struct.ScmObj* %current_45args85213) {
%stackaddr$env-ref86854 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43843, i64 0)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86854
%stackaddr$prim86855 = alloca %struct.ScmObj*, align 8
%_95k40405 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85213)
store volatile %struct.ScmObj* %_95k40405, %struct.ScmObj** %stackaddr$prim86855, align 8
%stackaddr$prim86856 = alloca %struct.ScmObj*, align 8
%current_45args85214 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85213)
store volatile %struct.ScmObj* %current_45args85214, %struct.ScmObj** %stackaddr$prim86856, align 8
%stackaddr$prim86857 = alloca %struct.ScmObj*, align 8
%_37first40172 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85214)
store volatile %struct.ScmObj* %_37first40172, %struct.ScmObj** %stackaddr$prim86857, align 8
%stackaddr$makeclosure86858 = alloca %struct.ScmObj*, align 8
%fptrToInt86859 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43863 to i64
%ae43863 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86859)
store volatile %struct.ScmObj* %ae43863, %struct.ScmObj** %stackaddr$makeclosure86858, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43863, %struct.ScmObj* %_37_6240209, i64 0)
%ae43864 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86860 = alloca %struct.ScmObj*, align 8
%fptrToInt86861 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43865 to i64
%ae43865 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86861)
store volatile %struct.ScmObj* %ae43865, %struct.ScmObj** %stackaddr$makeclosure86860, align 8
%args86085$ae43863$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86862 = alloca %struct.ScmObj*, align 8
%args86085$ae43863$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43865, %struct.ScmObj* %args86085$ae43863$0)
store volatile %struct.ScmObj* %args86085$ae43863$1, %struct.ScmObj** %stackaddr$prim86862, align 8
%stackaddr$prim86863 = alloca %struct.ScmObj*, align 8
%args86085$ae43863$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43864, %struct.ScmObj* %args86085$ae43863$1)
store volatile %struct.ScmObj* %args86085$ae43863$2, %struct.ScmObj** %stackaddr$prim86863, align 8
%clofunc86864 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae43863)
musttail call tailcc void %clofunc86864(%struct.ScmObj* %ae43863, %struct.ScmObj* %args86085$ae43863$2)
ret void
}

define tailcc void @proc_clo$ae43863(%struct.ScmObj* %env$ae43863,%struct.ScmObj* %current_45args85216) {
%stackaddr$env-ref86865 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43863, i64 0)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86865
%stackaddr$prim86866 = alloca %struct.ScmObj*, align 8
%_95k40406 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85216)
store volatile %struct.ScmObj* %_95k40406, %struct.ScmObj** %stackaddr$prim86866, align 8
%stackaddr$prim86867 = alloca %struct.ScmObj*, align 8
%current_45args85217 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85216)
store volatile %struct.ScmObj* %current_45args85217, %struct.ScmObj** %stackaddr$prim86867, align 8
%stackaddr$prim86868 = alloca %struct.ScmObj*, align 8
%_37second40170 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85217)
store volatile %struct.ScmObj* %_37second40170, %struct.ScmObj** %stackaddr$prim86868, align 8
%stackaddr$makeclosure86869 = alloca %struct.ScmObj*, align 8
%fptrToInt86870 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43885 to i64
%ae43885 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86870)
store volatile %struct.ScmObj* %ae43885, %struct.ScmObj** %stackaddr$makeclosure86869, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43885, %struct.ScmObj* %_37_6240209, i64 0)
%ae43886 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86871 = alloca %struct.ScmObj*, align 8
%fptrToInt86872 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43887 to i64
%ae43887 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86872)
store volatile %struct.ScmObj* %ae43887, %struct.ScmObj** %stackaddr$makeclosure86871, align 8
%args86080$ae43885$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86873 = alloca %struct.ScmObj*, align 8
%args86080$ae43885$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43887, %struct.ScmObj* %args86080$ae43885$0)
store volatile %struct.ScmObj* %args86080$ae43885$1, %struct.ScmObj** %stackaddr$prim86873, align 8
%stackaddr$prim86874 = alloca %struct.ScmObj*, align 8
%args86080$ae43885$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43886, %struct.ScmObj* %args86080$ae43885$1)
store volatile %struct.ScmObj* %args86080$ae43885$2, %struct.ScmObj** %stackaddr$prim86874, align 8
%clofunc86875 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae43885)
musttail call tailcc void %clofunc86875(%struct.ScmObj* %ae43885, %struct.ScmObj* %args86080$ae43885$2)
ret void
}

define tailcc void @proc_clo$ae43885(%struct.ScmObj* %env$ae43885,%struct.ScmObj* %current_45args85219) {
%stackaddr$env-ref86876 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43885, i64 0)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86876
%stackaddr$prim86877 = alloca %struct.ScmObj*, align 8
%_95k40407 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85219)
store volatile %struct.ScmObj* %_95k40407, %struct.ScmObj** %stackaddr$prim86877, align 8
%stackaddr$prim86878 = alloca %struct.ScmObj*, align 8
%current_45args85220 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85219)
store volatile %struct.ScmObj* %current_45args85220, %struct.ScmObj** %stackaddr$prim86878, align 8
%stackaddr$prim86879 = alloca %struct.ScmObj*, align 8
%_37third40168 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85220)
store volatile %struct.ScmObj* %_37third40168, %struct.ScmObj** %stackaddr$prim86879, align 8
%stackaddr$makeclosure86880 = alloca %struct.ScmObj*, align 8
%fptrToInt86881 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43909 to i64
%ae43909 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86881)
store volatile %struct.ScmObj* %ae43909, %struct.ScmObj** %stackaddr$makeclosure86880, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43909, %struct.ScmObj* %_37_6240209, i64 0)
%ae43910 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86882 = alloca %struct.ScmObj*, align 8
%fptrToInt86883 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43911 to i64
%ae43911 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86883)
store volatile %struct.ScmObj* %ae43911, %struct.ScmObj** %stackaddr$makeclosure86882, align 8
%args86075$ae43909$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86884 = alloca %struct.ScmObj*, align 8
%args86075$ae43909$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43911, %struct.ScmObj* %args86075$ae43909$0)
store volatile %struct.ScmObj* %args86075$ae43909$1, %struct.ScmObj** %stackaddr$prim86884, align 8
%stackaddr$prim86885 = alloca %struct.ScmObj*, align 8
%args86075$ae43909$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43910, %struct.ScmObj* %args86075$ae43909$1)
store volatile %struct.ScmObj* %args86075$ae43909$2, %struct.ScmObj** %stackaddr$prim86885, align 8
%clofunc86886 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae43909)
musttail call tailcc void %clofunc86886(%struct.ScmObj* %ae43909, %struct.ScmObj* %args86075$ae43909$2)
ret void
}

define tailcc void @proc_clo$ae43909(%struct.ScmObj* %env$ae43909,%struct.ScmObj* %current_45args85222) {
%stackaddr$env-ref86887 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43909, i64 0)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86887
%stackaddr$prim86888 = alloca %struct.ScmObj*, align 8
%_95k40408 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85222)
store volatile %struct.ScmObj* %_95k40408, %struct.ScmObj** %stackaddr$prim86888, align 8
%stackaddr$prim86889 = alloca %struct.ScmObj*, align 8
%current_45args85223 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85222)
store volatile %struct.ScmObj* %current_45args85223, %struct.ScmObj** %stackaddr$prim86889, align 8
%stackaddr$prim86890 = alloca %struct.ScmObj*, align 8
%_37fourth40166 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85223)
store volatile %struct.ScmObj* %_37fourth40166, %struct.ScmObj** %stackaddr$prim86890, align 8
%stackaddr$makeclosure86891 = alloca %struct.ScmObj*, align 8
%fptrToInt86892 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43935 to i64
%ae43935 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86892)
store volatile %struct.ScmObj* %ae43935, %struct.ScmObj** %stackaddr$makeclosure86891, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43935, %struct.ScmObj* %_37_6240209, i64 0)
%ae43936 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure86893 = alloca %struct.ScmObj*, align 8
%fptrToInt86894 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43937 to i64
%ae43937 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt86894)
store volatile %struct.ScmObj* %ae43937, %struct.ScmObj** %stackaddr$makeclosure86893, align 8
%args86070$ae43935$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86895 = alloca %struct.ScmObj*, align 8
%args86070$ae43935$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43937, %struct.ScmObj* %args86070$ae43935$0)
store volatile %struct.ScmObj* %args86070$ae43935$1, %struct.ScmObj** %stackaddr$prim86895, align 8
%stackaddr$prim86896 = alloca %struct.ScmObj*, align 8
%args86070$ae43935$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43936, %struct.ScmObj* %args86070$ae43935$1)
store volatile %struct.ScmObj* %args86070$ae43935$2, %struct.ScmObj** %stackaddr$prim86896, align 8
%clofunc86897 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae43935)
musttail call tailcc void %clofunc86897(%struct.ScmObj* %ae43935, %struct.ScmObj* %args86070$ae43935$2)
ret void
}

define tailcc void @proc_clo$ae43935(%struct.ScmObj* %env$ae43935,%struct.ScmObj* %current_45args85225) {
%stackaddr$env-ref86898 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43935, i64 0)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86898
%stackaddr$prim86899 = alloca %struct.ScmObj*, align 8
%_95k40409 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85225)
store volatile %struct.ScmObj* %_95k40409, %struct.ScmObj** %stackaddr$prim86899, align 8
%stackaddr$prim86900 = alloca %struct.ScmObj*, align 8
%current_45args85226 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85225)
store volatile %struct.ScmObj* %current_45args85226, %struct.ScmObj** %stackaddr$prim86900, align 8
%stackaddr$prim86901 = alloca %struct.ScmObj*, align 8
%promise_6340227 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85226)
store volatile %struct.ScmObj* %promise_6340227, %struct.ScmObj** %stackaddr$prim86901, align 8
%ae44022 = call %struct.ScmObj* @const_init_int(i64 1)
%ae44023 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim86902 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae44022, %struct.ScmObj* %ae44023)
store volatile %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$prim86902, align 8
%ae44025 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86903 = alloca %struct.ScmObj*, align 8
%anf_45bind40352 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44025)
store volatile %struct.ScmObj* %anf_45bind40352, %struct.ScmObj** %stackaddr$prim86903, align 8
%ae44027 = call %struct.ScmObj* @const_init_int(i64 3)
%stackaddr$prim86904 = alloca %struct.ScmObj*, align 8
%anf_45bind40353 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40352, %struct.ScmObj* %ae44027)
store volatile %struct.ScmObj* %anf_45bind40353, %struct.ScmObj** %stackaddr$prim86904, align 8
%ae44029 = call %struct.ScmObj* @const_init_int(i64 5)
%stackaddr$prim86905 = alloca %struct.ScmObj*, align 8
%anf_45bind40354 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40353, %struct.ScmObj* %ae44029)
store volatile %struct.ScmObj* %anf_45bind40354, %struct.ScmObj** %stackaddr$prim86905, align 8
%ae44031 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86906 = alloca %struct.ScmObj*, align 8
%t4010240230 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44031, %struct.ScmObj* %anf_45bind40354)
store volatile %struct.ScmObj* %t4010240230, %struct.ScmObj** %stackaddr$prim86906, align 8
%ae44034 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86907 = alloca %struct.ScmObj*, align 8
%anf_45bind40355 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44034)
store volatile %struct.ScmObj* %anf_45bind40355, %struct.ScmObj** %stackaddr$prim86907, align 8
%stackaddr$makeclosure86908 = alloca %struct.ScmObj*, align 8
%fptrToInt86909 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44036 to i64
%ae44036 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86909)
store volatile %struct.ScmObj* %ae44036, %struct.ScmObj** %stackaddr$makeclosure86908, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44036, %struct.ScmObj* %x40229, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae44036, %struct.ScmObj* %_37_6240209, i64 1)
%ae44038 = call %struct.ScmObj* @const_init_int(i64 2)
%args86063$_37_6240209$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86910 = alloca %struct.ScmObj*, align 8
%args86063$_37_6240209$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44038, %struct.ScmObj* %args86063$_37_6240209$0)
store volatile %struct.ScmObj* %args86063$_37_6240209$1, %struct.ScmObj** %stackaddr$prim86910, align 8
%stackaddr$prim86911 = alloca %struct.ScmObj*, align 8
%args86063$_37_6240209$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40355, %struct.ScmObj* %args86063$_37_6240209$1)
store volatile %struct.ScmObj* %args86063$_37_6240209$2, %struct.ScmObj** %stackaddr$prim86911, align 8
%stackaddr$prim86912 = alloca %struct.ScmObj*, align 8
%args86063$_37_6240209$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44036, %struct.ScmObj* %args86063$_37_6240209$2)
store volatile %struct.ScmObj* %args86063$_37_6240209$3, %struct.ScmObj** %stackaddr$prim86912, align 8
%clofunc86913 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37_6240209)
musttail call tailcc void %clofunc86913(%struct.ScmObj* %_37_6240209, %struct.ScmObj* %args86063$_37_6240209$3)
ret void
}

define tailcc void @proc_clo$ae44036(%struct.ScmObj* %env$ae44036,%struct.ScmObj* %current_45args85228) {
%stackaddr$env-ref86914 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44036, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref86914
%stackaddr$env-ref86915 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44036, i64 1)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86915
%stackaddr$prim86916 = alloca %struct.ScmObj*, align 8
%_95k40410 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85228)
store volatile %struct.ScmObj* %_95k40410, %struct.ScmObj** %stackaddr$prim86916, align 8
%stackaddr$prim86917 = alloca %struct.ScmObj*, align 8
%current_45args85229 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85228)
store volatile %struct.ScmObj* %current_45args85229, %struct.ScmObj** %stackaddr$prim86917, align 8
%stackaddr$prim86918 = alloca %struct.ScmObj*, align 8
%anf_45bind40356 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85229)
store volatile %struct.ScmObj* %anf_45bind40356, %struct.ScmObj** %stackaddr$prim86918, align 8
%truthy$cmp86919 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40356)
%cmp$cmp86919 = icmp eq i64 %truthy$cmp86919, 1
br i1 %cmp$cmp86919, label %truebranch$cmp86919, label %falsebranch$cmp86919
truebranch$cmp86919:
%ae44045 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86920 = alloca %struct.ScmObj*, align 8
%anf_45bind40357 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44045)
store volatile %struct.ScmObj* %anf_45bind40357, %struct.ScmObj** %stackaddr$prim86920, align 8
%ae44047 = call %struct.ScmObj* @const_init_int(i64 3)
%stackaddr$prim86921 = alloca %struct.ScmObj*, align 8
%anf_45bind40358 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40357, %struct.ScmObj* %ae44047)
store volatile %struct.ScmObj* %anf_45bind40358, %struct.ScmObj** %stackaddr$prim86921, align 8
%ae44049 = call %struct.ScmObj* @const_init_int(i64 5)
%stackaddr$prim86922 = alloca %struct.ScmObj*, align 8
%anf_45bind40359 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40358, %struct.ScmObj* %ae44049)
store volatile %struct.ScmObj* %anf_45bind40359, %struct.ScmObj** %stackaddr$prim86922, align 8
%ae44051 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86923 = alloca %struct.ScmObj*, align 8
%cpsprim40427 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44051, %struct.ScmObj* %anf_45bind40359)
store volatile %struct.ScmObj* %cpsprim40427, %struct.ScmObj** %stackaddr$prim86923, align 8
%stackaddr$makeclosure86924 = alloca %struct.ScmObj*, align 8
%fptrToInt86925 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44053 to i64
%ae44053 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86925)
store volatile %struct.ScmObj* %ae44053, %struct.ScmObj** %stackaddr$makeclosure86924, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44053, %struct.ScmObj* %x40229, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae44053, %struct.ScmObj* %_37_6240209, i64 1)
%ae44054 = call %struct.ScmObj* @const_init_int(i64 0)
%args85646$ae44053$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86926 = alloca %struct.ScmObj*, align 8
%args85646$ae44053$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40427, %struct.ScmObj* %args85646$ae44053$0)
store volatile %struct.ScmObj* %args85646$ae44053$1, %struct.ScmObj** %stackaddr$prim86926, align 8
%stackaddr$prim86927 = alloca %struct.ScmObj*, align 8
%args85646$ae44053$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44054, %struct.ScmObj* %args85646$ae44053$1)
store volatile %struct.ScmObj* %args85646$ae44053$2, %struct.ScmObj** %stackaddr$prim86927, align 8
%clofunc86928 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44053)
musttail call tailcc void %clofunc86928(%struct.ScmObj* %ae44053, %struct.ScmObj* %args85646$ae44053$2)
ret void
falsebranch$cmp86919:
%stackaddr$prim86929 = alloca %struct.ScmObj*, align 8
%cpsprim40428 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40428, %struct.ScmObj** %stackaddr$prim86929, align 8
%stackaddr$makeclosure86930 = alloca %struct.ScmObj*, align 8
%fptrToInt86931 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57282 to i64
%ae57282 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt86931)
store volatile %struct.ScmObj* %ae57282, %struct.ScmObj** %stackaddr$makeclosure86930, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57282, %struct.ScmObj* %x40229, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae57282, %struct.ScmObj* %_37_6240209, i64 1)
%ae57283 = call %struct.ScmObj* @const_init_int(i64 0)
%args86062$ae57282$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86932 = alloca %struct.ScmObj*, align 8
%args86062$ae57282$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40428, %struct.ScmObj* %args86062$ae57282$0)
store volatile %struct.ScmObj* %args86062$ae57282$1, %struct.ScmObj** %stackaddr$prim86932, align 8
%stackaddr$prim86933 = alloca %struct.ScmObj*, align 8
%args86062$ae57282$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57283, %struct.ScmObj* %args86062$ae57282$1)
store volatile %struct.ScmObj* %args86062$ae57282$2, %struct.ScmObj** %stackaddr$prim86933, align 8
%clofunc86934 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57282)
musttail call tailcc void %clofunc86934(%struct.ScmObj* %ae57282, %struct.ScmObj* %args86062$ae57282$2)
ret void
}

define tailcc void @proc_clo$ae44053(%struct.ScmObj* %env$ae44053,%struct.ScmObj* %current_45args85231) {
%stackaddr$env-ref86935 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44053, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref86935
%stackaddr$env-ref86936 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44053, i64 1)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref86936
%stackaddr$prim86937 = alloca %struct.ScmObj*, align 8
%_95k40411 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85231)
store volatile %struct.ScmObj* %_95k40411, %struct.ScmObj** %stackaddr$prim86937, align 8
%stackaddr$prim86938 = alloca %struct.ScmObj*, align 8
%current_45args85232 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85231)
store volatile %struct.ScmObj* %current_45args85232, %struct.ScmObj** %stackaddr$prim86938, align 8
%stackaddr$prim86939 = alloca %struct.ScmObj*, align 8
%t4010340231 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85232)
store volatile %struct.ScmObj* %t4010340231, %struct.ScmObj** %stackaddr$prim86939, align 8
%ae44060 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86940 = alloca %struct.ScmObj*, align 8
%anf_45bind40360 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44060)
store volatile %struct.ScmObj* %anf_45bind40360, %struct.ScmObj** %stackaddr$prim86940, align 8
%stackaddr$makeclosure86941 = alloca %struct.ScmObj*, align 8
%fptrToInt86942 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44062 to i64
%ae44062 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86942)
store volatile %struct.ScmObj* %ae44062, %struct.ScmObj** %stackaddr$makeclosure86941, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44062, %struct.ScmObj* %x40229, i64 0)
%ae44064 = call %struct.ScmObj* @const_init_int(i64 2)
%args85645$_37_6240209$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86943 = alloca %struct.ScmObj*, align 8
%args85645$_37_6240209$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44064, %struct.ScmObj* %args85645$_37_6240209$0)
store volatile %struct.ScmObj* %args85645$_37_6240209$1, %struct.ScmObj** %stackaddr$prim86943, align 8
%stackaddr$prim86944 = alloca %struct.ScmObj*, align 8
%args85645$_37_6240209$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40360, %struct.ScmObj* %args85645$_37_6240209$1)
store volatile %struct.ScmObj* %args85645$_37_6240209$2, %struct.ScmObj** %stackaddr$prim86944, align 8
%stackaddr$prim86945 = alloca %struct.ScmObj*, align 8
%args85645$_37_6240209$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44062, %struct.ScmObj* %args85645$_37_6240209$2)
store volatile %struct.ScmObj* %args85645$_37_6240209$3, %struct.ScmObj** %stackaddr$prim86945, align 8
%clofunc86946 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37_6240209)
musttail call tailcc void %clofunc86946(%struct.ScmObj* %_37_6240209, %struct.ScmObj* %args85645$_37_6240209$3)
ret void
}

define tailcc void @proc_clo$ae44062(%struct.ScmObj* %env$ae44062,%struct.ScmObj* %current_45args85234) {
%stackaddr$env-ref86947 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44062, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref86947
%stackaddr$prim86948 = alloca %struct.ScmObj*, align 8
%_95k40412 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85234)
store volatile %struct.ScmObj* %_95k40412, %struct.ScmObj** %stackaddr$prim86948, align 8
%stackaddr$prim86949 = alloca %struct.ScmObj*, align 8
%current_45args85235 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85234)
store volatile %struct.ScmObj* %current_45args85235, %struct.ScmObj** %stackaddr$prim86949, align 8
%stackaddr$prim86950 = alloca %struct.ScmObj*, align 8
%anf_45bind40361 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85235)
store volatile %struct.ScmObj* %anf_45bind40361, %struct.ScmObj** %stackaddr$prim86950, align 8
%truthy$cmp86951 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40361)
%cmp$cmp86951 = icmp eq i64 %truthy$cmp86951, 1
br i1 %cmp$cmp86951, label %truebranch$cmp86951, label %falsebranch$cmp86951
truebranch$cmp86951:
%stackaddr$prim86952 = alloca %struct.ScmObj*, align 8
%cpsprim40425 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40425, %struct.ScmObj** %stackaddr$prim86952, align 8
%stackaddr$makeclosure86953 = alloca %struct.ScmObj*, align 8
%fptrToInt86954 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44070 to i64
%ae44070 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86954)
store volatile %struct.ScmObj* %ae44070, %struct.ScmObj** %stackaddr$makeclosure86953, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44070, %struct.ScmObj* %x40229, i64 0)
%ae44071 = call %struct.ScmObj* @const_init_int(i64 0)
%args85440$ae44070$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86955 = alloca %struct.ScmObj*, align 8
%args85440$ae44070$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40425, %struct.ScmObj* %args85440$ae44070$0)
store volatile %struct.ScmObj* %args85440$ae44070$1, %struct.ScmObj** %stackaddr$prim86955, align 8
%stackaddr$prim86956 = alloca %struct.ScmObj*, align 8
%args85440$ae44070$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44071, %struct.ScmObj* %args85440$ae44070$1)
store volatile %struct.ScmObj* %args85440$ae44070$2, %struct.ScmObj** %stackaddr$prim86956, align 8
%clofunc86957 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44070)
musttail call tailcc void %clofunc86957(%struct.ScmObj* %ae44070, %struct.ScmObj* %args85440$ae44070$2)
ret void
falsebranch$cmp86951:
%ae48254 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86958 = alloca %struct.ScmObj*, align 8
%anf_45bind40362 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48254)
store volatile %struct.ScmObj* %anf_45bind40362, %struct.ScmObj** %stackaddr$prim86958, align 8
%ae48256 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim86959 = alloca %struct.ScmObj*, align 8
%anf_45bind40363 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40362, %struct.ScmObj* %ae48256)
store volatile %struct.ScmObj* %anf_45bind40363, %struct.ScmObj** %stackaddr$prim86959, align 8
%ae48258 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim86960 = alloca %struct.ScmObj*, align 8
%anf_45bind40364 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40363, %struct.ScmObj* %ae48258)
store volatile %struct.ScmObj* %anf_45bind40364, %struct.ScmObj** %stackaddr$prim86960, align 8
%ae48260 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86961 = alloca %struct.ScmObj*, align 8
%cpsprim40426 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48260, %struct.ScmObj* %anf_45bind40364)
store volatile %struct.ScmObj* %cpsprim40426, %struct.ScmObj** %stackaddr$prim86961, align 8
%stackaddr$makeclosure86962 = alloca %struct.ScmObj*, align 8
%fptrToInt86963 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48262 to i64
%ae48262 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86963)
store volatile %struct.ScmObj* %ae48262, %struct.ScmObj** %stackaddr$makeclosure86962, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48262, %struct.ScmObj* %x40229, i64 0)
%ae48263 = call %struct.ScmObj* @const_init_int(i64 0)
%args85644$ae48262$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86964 = alloca %struct.ScmObj*, align 8
%args85644$ae48262$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40426, %struct.ScmObj* %args85644$ae48262$0)
store volatile %struct.ScmObj* %args85644$ae48262$1, %struct.ScmObj** %stackaddr$prim86964, align 8
%stackaddr$prim86965 = alloca %struct.ScmObj*, align 8
%args85644$ae48262$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48263, %struct.ScmObj* %args85644$ae48262$1)
store volatile %struct.ScmObj* %args85644$ae48262$2, %struct.ScmObj** %stackaddr$prim86965, align 8
%clofunc86966 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48262)
musttail call tailcc void %clofunc86966(%struct.ScmObj* %ae48262, %struct.ScmObj* %args85644$ae48262$2)
ret void
}

define tailcc void @proc_clo$ae44070(%struct.ScmObj* %env$ae44070,%struct.ScmObj* %current_45args85237) {
%stackaddr$env-ref86967 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44070, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref86967
%stackaddr$prim86968 = alloca %struct.ScmObj*, align 8
%_95k40413 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85237)
store volatile %struct.ScmObj* %_95k40413, %struct.ScmObj** %stackaddr$prim86968, align 8
%stackaddr$prim86969 = alloca %struct.ScmObj*, align 8
%current_45args85238 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85237)
store volatile %struct.ScmObj* %current_45args85238, %struct.ScmObj** %stackaddr$prim86969, align 8
%stackaddr$prim86970 = alloca %struct.ScmObj*, align 8
%t4010440232 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85238)
store volatile %struct.ScmObj* %t4010440232, %struct.ScmObj** %stackaddr$prim86970, align 8
%ae44077 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86971 = alloca %struct.ScmObj*, align 8
%anf_45bind40365 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44077)
store volatile %struct.ScmObj* %anf_45bind40365, %struct.ScmObj** %stackaddr$prim86971, align 8
%ae44079 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim86972 = alloca %struct.ScmObj*, align 8
%anf_45bind40366 = call %struct.ScmObj* @prim__60(%struct.ScmObj* %anf_45bind40365, %struct.ScmObj* %ae44079)
store volatile %struct.ScmObj* %anf_45bind40366, %struct.ScmObj** %stackaddr$prim86972, align 8
%truthy$cmp86973 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40366)
%cmp$cmp86973 = icmp eq i64 %truthy$cmp86973, 1
br i1 %cmp$cmp86973, label %truebranch$cmp86973, label %falsebranch$cmp86973
truebranch$cmp86973:
%ae44082 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86974 = alloca %struct.ScmObj*, align 8
%anf_45bind40367 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44082)
store volatile %struct.ScmObj* %anf_45bind40367, %struct.ScmObj** %stackaddr$prim86974, align 8
%ae44084 = call %struct.ScmObj* @const_init_int(i64 9)
%stackaddr$prim86975 = alloca %struct.ScmObj*, align 8
%anf_45bind40368 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40367, %struct.ScmObj* %ae44084)
store volatile %struct.ScmObj* %anf_45bind40368, %struct.ScmObj** %stackaddr$prim86975, align 8
%ae44086 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim86976 = alloca %struct.ScmObj*, align 8
%anf_45bind40369 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40368, %struct.ScmObj* %ae44086)
store volatile %struct.ScmObj* %anf_45bind40369, %struct.ScmObj** %stackaddr$prim86976, align 8
%ae44088 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim86977 = alloca %struct.ScmObj*, align 8
%cpsprim40423 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44088, %struct.ScmObj* %anf_45bind40369)
store volatile %struct.ScmObj* %cpsprim40423, %struct.ScmObj** %stackaddr$prim86977, align 8
%stackaddr$makeclosure86978 = alloca %struct.ScmObj*, align 8
%fptrToInt86979 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44090 to i64
%ae44090 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86979)
store volatile %struct.ScmObj* %ae44090, %struct.ScmObj** %stackaddr$makeclosure86978, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44090, %struct.ScmObj* %x40229, i64 0)
%ae44091 = call %struct.ScmObj* @const_init_int(i64 0)
%args85339$ae44090$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86980 = alloca %struct.ScmObj*, align 8
%args85339$ae44090$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40423, %struct.ScmObj* %args85339$ae44090$0)
store volatile %struct.ScmObj* %args85339$ae44090$1, %struct.ScmObj** %stackaddr$prim86980, align 8
%stackaddr$prim86981 = alloca %struct.ScmObj*, align 8
%args85339$ae44090$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44091, %struct.ScmObj* %args85339$ae44090$1)
store volatile %struct.ScmObj* %args85339$ae44090$2, %struct.ScmObj** %stackaddr$prim86981, align 8
%clofunc86982 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44090)
musttail call tailcc void %clofunc86982(%struct.ScmObj* %ae44090, %struct.ScmObj* %args85339$ae44090$2)
ret void
falsebranch$cmp86973:
%stackaddr$prim86983 = alloca %struct.ScmObj*, align 8
%cpsprim40424 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40424, %struct.ScmObj** %stackaddr$prim86983, align 8
%stackaddr$makeclosure86984 = alloca %struct.ScmObj*, align 8
%fptrToInt86985 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46169 to i64
%ae46169 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86985)
store volatile %struct.ScmObj* %ae46169, %struct.ScmObj** %stackaddr$makeclosure86984, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46169, %struct.ScmObj* %x40229, i64 0)
%ae46170 = call %struct.ScmObj* @const_init_int(i64 0)
%args85439$ae46169$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86986 = alloca %struct.ScmObj*, align 8
%args85439$ae46169$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40424, %struct.ScmObj* %args85439$ae46169$0)
store volatile %struct.ScmObj* %args85439$ae46169$1, %struct.ScmObj** %stackaddr$prim86986, align 8
%stackaddr$prim86987 = alloca %struct.ScmObj*, align 8
%args85439$ae46169$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46170, %struct.ScmObj* %args85439$ae46169$1)
store volatile %struct.ScmObj* %args85439$ae46169$2, %struct.ScmObj** %stackaddr$prim86987, align 8
%clofunc86988 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46169)
musttail call tailcc void %clofunc86988(%struct.ScmObj* %ae46169, %struct.ScmObj* %args85439$ae46169$2)
ret void
}

define tailcc void @proc_clo$ae44090(%struct.ScmObj* %env$ae44090,%struct.ScmObj* %current_45args85240) {
%stackaddr$env-ref86989 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44090, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref86989
%stackaddr$prim86990 = alloca %struct.ScmObj*, align 8
%_95k40414 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85240)
store volatile %struct.ScmObj* %_95k40414, %struct.ScmObj** %stackaddr$prim86990, align 8
%stackaddr$prim86991 = alloca %struct.ScmObj*, align 8
%current_45args85241 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85240)
store volatile %struct.ScmObj* %current_45args85241, %struct.ScmObj** %stackaddr$prim86991, align 8
%stackaddr$prim86992 = alloca %struct.ScmObj*, align 8
%t4010540233 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85241)
store volatile %struct.ScmObj* %t4010540233, %struct.ScmObj** %stackaddr$prim86992, align 8
%ae44096 = call %struct.ScmObj* @const_init_false()
%truthy$cmp86993 = call i64 @is_truthy_value(%struct.ScmObj* %ae44096)
%cmp$cmp86993 = icmp eq i64 %truthy$cmp86993, 1
br i1 %cmp$cmp86993, label %truebranch$cmp86993, label %falsebranch$cmp86993
truebranch$cmp86993:
%stackaddr$prim86994 = alloca %struct.ScmObj*, align 8
%cpsprim40421 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40421, %struct.ScmObj** %stackaddr$prim86994, align 8
%stackaddr$makeclosure86995 = alloca %struct.ScmObj*, align 8
%fptrToInt86996 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44097 to i64
%ae44097 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt86996)
store volatile %struct.ScmObj* %ae44097, %struct.ScmObj** %stackaddr$makeclosure86995, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44097, %struct.ScmObj* %x40229, i64 0)
%ae44098 = call %struct.ScmObj* @const_init_int(i64 0)
%args85290$ae44097$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim86997 = alloca %struct.ScmObj*, align 8
%args85290$ae44097$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40421, %struct.ScmObj* %args85290$ae44097$0)
store volatile %struct.ScmObj* %args85290$ae44097$1, %struct.ScmObj** %stackaddr$prim86997, align 8
%stackaddr$prim86998 = alloca %struct.ScmObj*, align 8
%args85290$ae44097$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44098, %struct.ScmObj* %args85290$ae44097$1)
store volatile %struct.ScmObj* %args85290$ae44097$2, %struct.ScmObj** %stackaddr$prim86998, align 8
%clofunc86999 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44097)
musttail call tailcc void %clofunc86999(%struct.ScmObj* %ae44097, %struct.ScmObj* %args85290$ae44097$2)
ret void
falsebranch$cmp86993:
%ae44562 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87000 = alloca %struct.ScmObj*, align 8
%anf_45bind40370 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44562)
store volatile %struct.ScmObj* %anf_45bind40370, %struct.ScmObj** %stackaddr$prim87000, align 8
%ae44564 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim87001 = alloca %struct.ScmObj*, align 8
%anf_45bind40371 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40370, %struct.ScmObj* %ae44564)
store volatile %struct.ScmObj* %anf_45bind40371, %struct.ScmObj** %stackaddr$prim87001, align 8
%ae44566 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim87002 = alloca %struct.ScmObj*, align 8
%anf_45bind40372 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40371, %struct.ScmObj* %ae44566)
store volatile %struct.ScmObj* %anf_45bind40372, %struct.ScmObj** %stackaddr$prim87002, align 8
%ae44568 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87003 = alloca %struct.ScmObj*, align 8
%cpsprim40422 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44568, %struct.ScmObj* %anf_45bind40372)
store volatile %struct.ScmObj* %cpsprim40422, %struct.ScmObj** %stackaddr$prim87003, align 8
%stackaddr$makeclosure87004 = alloca %struct.ScmObj*, align 8
%fptrToInt87005 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44570 to i64
%ae44570 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87005)
store volatile %struct.ScmObj* %ae44570, %struct.ScmObj** %stackaddr$makeclosure87004, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44570, %struct.ScmObj* %x40229, i64 0)
%ae44571 = call %struct.ScmObj* @const_init_int(i64 0)
%args85338$ae44570$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87006 = alloca %struct.ScmObj*, align 8
%args85338$ae44570$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40422, %struct.ScmObj* %args85338$ae44570$0)
store volatile %struct.ScmObj* %args85338$ae44570$1, %struct.ScmObj** %stackaddr$prim87006, align 8
%stackaddr$prim87007 = alloca %struct.ScmObj*, align 8
%args85338$ae44570$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44571, %struct.ScmObj* %args85338$ae44570$1)
store volatile %struct.ScmObj* %args85338$ae44570$2, %struct.ScmObj** %stackaddr$prim87007, align 8
%clofunc87008 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44570)
musttail call tailcc void %clofunc87008(%struct.ScmObj* %ae44570, %struct.ScmObj* %args85338$ae44570$2)
ret void
}

define tailcc void @proc_clo$ae44097(%struct.ScmObj* %env$ae44097,%struct.ScmObj* %current_45args85243) {
%stackaddr$env-ref87009 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44097, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87009
%stackaddr$prim87010 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85243)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim87010, align 8
%stackaddr$prim87011 = alloca %struct.ScmObj*, align 8
%current_45args85244 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85243)
store volatile %struct.ScmObj* %current_45args85244, %struct.ScmObj** %stackaddr$prim87011, align 8
%stackaddr$prim87012 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85244)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim87012, align 8
%ae44104 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87013 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44104)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim87013, align 8
%truthy$cmp87014 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp87014 = icmp eq i64 %truthy$cmp87014, 1
br i1 %cmp$cmp87014, label %truebranch$cmp87014, label %falsebranch$cmp87014
truebranch$cmp87014:
%ae44107 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87015 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44107)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim87015, align 8
%ae44109 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87016 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44109)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim87016, align 8
%stackaddr$prim87017 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim87017, align 8
%ae44113 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87018 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44113, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim87018, align 8
%stackaddr$makeclosure87019 = alloca %struct.ScmObj*, align 8
%fptrToInt87020 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44115 to i64
%ae44115 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87020)
store volatile %struct.ScmObj* %ae44115, %struct.ScmObj** %stackaddr$makeclosure87019, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44115, %struct.ScmObj* %x40229, i64 0)
%ae44116 = call %struct.ScmObj* @const_init_int(i64 0)
%args85267$ae44115$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87021 = alloca %struct.ScmObj*, align 8
%args85267$ae44115$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85267$ae44115$0)
store volatile %struct.ScmObj* %args85267$ae44115$1, %struct.ScmObj** %stackaddr$prim87021, align 8
%stackaddr$prim87022 = alloca %struct.ScmObj*, align 8
%args85267$ae44115$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44116, %struct.ScmObj* %args85267$ae44115$1)
store volatile %struct.ScmObj* %args85267$ae44115$2, %struct.ScmObj** %stackaddr$prim87022, align 8
%clofunc87023 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44115)
musttail call tailcc void %clofunc87023(%struct.ScmObj* %ae44115, %struct.ScmObj* %args85267$ae44115$2)
ret void
falsebranch$cmp87014:
%stackaddr$makeclosure87024 = alloca %struct.ScmObj*, align 8
%fptrToInt87025 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44353 to i64
%ae44353 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87025)
store volatile %struct.ScmObj* %ae44353, %struct.ScmObj** %stackaddr$makeclosure87024, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44353, %struct.ScmObj* %x40229, i64 0)
%ae44354 = call %struct.ScmObj* @const_init_int(i64 0)
%ae44355 = call %struct.ScmObj* @const_init_int(i64 7)
%args85289$ae44353$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87026 = alloca %struct.ScmObj*, align 8
%args85289$ae44353$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44355, %struct.ScmObj* %args85289$ae44353$0)
store volatile %struct.ScmObj* %args85289$ae44353$1, %struct.ScmObj** %stackaddr$prim87026, align 8
%stackaddr$prim87027 = alloca %struct.ScmObj*, align 8
%args85289$ae44353$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44354, %struct.ScmObj* %args85289$ae44353$1)
store volatile %struct.ScmObj* %args85289$ae44353$2, %struct.ScmObj** %stackaddr$prim87027, align 8
%clofunc87028 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44353)
musttail call tailcc void %clofunc87028(%struct.ScmObj* %ae44353, %struct.ScmObj* %args85289$ae44353$2)
ret void
}

define tailcc void @proc_clo$ae44115(%struct.ScmObj* %env$ae44115,%struct.ScmObj* %current_45args85246) {
%stackaddr$env-ref87029 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44115, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87029
%stackaddr$prim87030 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85246)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87030, align 8
%stackaddr$prim87031 = alloca %struct.ScmObj*, align 8
%current_45args85247 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85246)
store volatile %struct.ScmObj* %current_45args85247, %struct.ScmObj** %stackaddr$prim87031, align 8
%stackaddr$prim87032 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85247)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87032, align 8
%ae44121 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87033 = call i64 @is_truthy_value(%struct.ScmObj* %ae44121)
%cmp$cmp87033 = icmp eq i64 %truthy$cmp87033, 1
br i1 %cmp$cmp87033, label %truebranch$cmp87033, label %falsebranch$cmp87033
truebranch$cmp87033:
%ae44123 = call %struct.ScmObj* @const_init_int(i64 0)
%ae44124 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87034 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44123, %struct.ScmObj* %ae44124)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87034, align 8
%stackaddr$makeclosure87035 = alloca %struct.ScmObj*, align 8
%fptrToInt87036 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44125 to i64
%ae44125 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87036)
store volatile %struct.ScmObj* %ae44125, %struct.ScmObj** %stackaddr$makeclosure87035, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44125, %struct.ScmObj* %x40229, i64 0)
%ae44126 = call %struct.ScmObj* @const_init_int(i64 0)
%args85257$ae44125$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87037 = alloca %struct.ScmObj*, align 8
%args85257$ae44125$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85257$ae44125$0)
store volatile %struct.ScmObj* %args85257$ae44125$1, %struct.ScmObj** %stackaddr$prim87037, align 8
%stackaddr$prim87038 = alloca %struct.ScmObj*, align 8
%args85257$ae44125$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44126, %struct.ScmObj* %args85257$ae44125$1)
store volatile %struct.ScmObj* %args85257$ae44125$2, %struct.ScmObj** %stackaddr$prim87038, align 8
%clofunc87039 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44125)
musttail call tailcc void %clofunc87039(%struct.ScmObj* %ae44125, %struct.ScmObj* %args85257$ae44125$2)
ret void
falsebranch$cmp87033:
%stackaddr$makeclosure87040 = alloca %struct.ScmObj*, align 8
%fptrToInt87041 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44184 to i64
%ae44184 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87041)
store volatile %struct.ScmObj* %ae44184, %struct.ScmObj** %stackaddr$makeclosure87040, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44184, %struct.ScmObj* %x40229, i64 0)
%ae44185 = call %struct.ScmObj* @const_init_int(i64 0)
%ae44186 = call %struct.ScmObj* @const_init_int(i64 9)
%args85266$ae44184$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87042 = alloca %struct.ScmObj*, align 8
%args85266$ae44184$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44186, %struct.ScmObj* %args85266$ae44184$0)
store volatile %struct.ScmObj* %args85266$ae44184$1, %struct.ScmObj** %stackaddr$prim87042, align 8
%stackaddr$prim87043 = alloca %struct.ScmObj*, align 8
%args85266$ae44184$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44185, %struct.ScmObj* %args85266$ae44184$1)
store volatile %struct.ScmObj* %args85266$ae44184$2, %struct.ScmObj** %stackaddr$prim87043, align 8
%clofunc87044 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44184)
musttail call tailcc void %clofunc87044(%struct.ScmObj* %ae44184, %struct.ScmObj* %args85266$ae44184$2)
ret void
}

define tailcc void @proc_clo$ae44125(%struct.ScmObj* %env$ae44125,%struct.ScmObj* %current_45args85249) {
%stackaddr$env-ref87045 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44125, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87045
%stackaddr$prim87046 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85249)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87046, align 8
%stackaddr$prim87047 = alloca %struct.ScmObj*, align 8
%current_45args85250 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85249)
store volatile %struct.ScmObj* %current_45args85250, %struct.ScmObj** %stackaddr$prim87047, align 8
%stackaddr$prim87048 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85250)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87048, align 8
%ae44132 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87049 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44132)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87049, align 8
%stackaddr$makeclosure87050 = alloca %struct.ScmObj*, align 8
%fptrToInt87051 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44133 to i64
%ae44133 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87051)
store volatile %struct.ScmObj* %ae44133, %struct.ScmObj** %stackaddr$makeclosure87050, align 8
%ae44134 = call %struct.ScmObj* @const_init_int(i64 0)
%args85256$ae44133$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87052 = alloca %struct.ScmObj*, align 8
%args85256$ae44133$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85256$ae44133$0)
store volatile %struct.ScmObj* %args85256$ae44133$1, %struct.ScmObj** %stackaddr$prim87052, align 8
%stackaddr$prim87053 = alloca %struct.ScmObj*, align 8
%args85256$ae44133$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44134, %struct.ScmObj* %args85256$ae44133$1)
store volatile %struct.ScmObj* %args85256$ae44133$2, %struct.ScmObj** %stackaddr$prim87053, align 8
%clofunc87054 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44133)
musttail call tailcc void %clofunc87054(%struct.ScmObj* %ae44133, %struct.ScmObj* %args85256$ae44133$2)
ret void
}

define tailcc void @proc_clo$ae44133(%struct.ScmObj* %env$ae44133,%struct.ScmObj* %current_45args85252) {
%stackaddr$prim87055 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85252)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87055, align 8
%stackaddr$prim87056 = alloca %struct.ScmObj*, align 8
%current_45args85253 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85252)
store volatile %struct.ScmObj* %current_45args85253, %struct.ScmObj** %stackaddr$prim87056, align 8
%stackaddr$prim87057 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85253)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87057, align 8
%stackaddr$prim87058 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87058, align 8
%args85255$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87059 = alloca %struct.ScmObj*, align 8
%args85255$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85255$k$0)
store volatile %struct.ScmObj* %args85255$k$1, %struct.ScmObj** %stackaddr$prim87059, align 8
%clofunc87060 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87060(%struct.ScmObj* %k, %struct.ScmObj* %args85255$k$1)
ret void
}

define tailcc void @proc_clo$ae44184(%struct.ScmObj* %env$ae44184,%struct.ScmObj* %current_45args85258) {
%stackaddr$env-ref87061 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44184, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87061
%stackaddr$prim87062 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85258)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87062, align 8
%stackaddr$prim87063 = alloca %struct.ScmObj*, align 8
%current_45args85259 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85258)
store volatile %struct.ScmObj* %current_45args85259, %struct.ScmObj** %stackaddr$prim87063, align 8
%stackaddr$prim87064 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85259)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87064, align 8
%ae44194 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87065 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44194)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87065, align 8
%stackaddr$makeclosure87066 = alloca %struct.ScmObj*, align 8
%fptrToInt87067 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44195 to i64
%ae44195 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87067)
store volatile %struct.ScmObj* %ae44195, %struct.ScmObj** %stackaddr$makeclosure87066, align 8
%ae44196 = call %struct.ScmObj* @const_init_int(i64 0)
%args85265$ae44195$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87068 = alloca %struct.ScmObj*, align 8
%args85265$ae44195$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85265$ae44195$0)
store volatile %struct.ScmObj* %args85265$ae44195$1, %struct.ScmObj** %stackaddr$prim87068, align 8
%stackaddr$prim87069 = alloca %struct.ScmObj*, align 8
%args85265$ae44195$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44196, %struct.ScmObj* %args85265$ae44195$1)
store volatile %struct.ScmObj* %args85265$ae44195$2, %struct.ScmObj** %stackaddr$prim87069, align 8
%clofunc87070 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44195)
musttail call tailcc void %clofunc87070(%struct.ScmObj* %ae44195, %struct.ScmObj* %args85265$ae44195$2)
ret void
}

define tailcc void @proc_clo$ae44195(%struct.ScmObj* %env$ae44195,%struct.ScmObj* %current_45args85261) {
%stackaddr$prim87071 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85261)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87071, align 8
%stackaddr$prim87072 = alloca %struct.ScmObj*, align 8
%current_45args85262 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85261)
store volatile %struct.ScmObj* %current_45args85262, %struct.ScmObj** %stackaddr$prim87072, align 8
%stackaddr$prim87073 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85262)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87073, align 8
%stackaddr$prim87074 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87074, align 8
%args85264$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87075 = alloca %struct.ScmObj*, align 8
%args85264$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85264$k$0)
store volatile %struct.ScmObj* %args85264$k$1, %struct.ScmObj** %stackaddr$prim87075, align 8
%clofunc87076 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87076(%struct.ScmObj* %k, %struct.ScmObj* %args85264$k$1)
ret void
}

define tailcc void @proc_clo$ae44353(%struct.ScmObj* %env$ae44353,%struct.ScmObj* %current_45args85268) {
%stackaddr$env-ref87077 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44353, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87077
%stackaddr$prim87078 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85268)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87078, align 8
%stackaddr$prim87079 = alloca %struct.ScmObj*, align 8
%current_45args85269 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85268)
store volatile %struct.ScmObj* %current_45args85269, %struct.ScmObj** %stackaddr$prim87079, align 8
%stackaddr$prim87080 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85269)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87080, align 8
%ae44362 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87081 = call i64 @is_truthy_value(%struct.ScmObj* %ae44362)
%cmp$cmp87081 = icmp eq i64 %truthy$cmp87081, 1
br i1 %cmp$cmp87081, label %truebranch$cmp87081, label %falsebranch$cmp87081
truebranch$cmp87081:
%ae44364 = call %struct.ScmObj* @const_init_int(i64 0)
%ae44365 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87082 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44364, %struct.ScmObj* %ae44365)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87082, align 8
%stackaddr$makeclosure87083 = alloca %struct.ScmObj*, align 8
%fptrToInt87084 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44366 to i64
%ae44366 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87084)
store volatile %struct.ScmObj* %ae44366, %struct.ScmObj** %stackaddr$makeclosure87083, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44366, %struct.ScmObj* %x40229, i64 0)
%ae44367 = call %struct.ScmObj* @const_init_int(i64 0)
%args85279$ae44366$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87085 = alloca %struct.ScmObj*, align 8
%args85279$ae44366$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85279$ae44366$0)
store volatile %struct.ScmObj* %args85279$ae44366$1, %struct.ScmObj** %stackaddr$prim87085, align 8
%stackaddr$prim87086 = alloca %struct.ScmObj*, align 8
%args85279$ae44366$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44367, %struct.ScmObj* %args85279$ae44366$1)
store volatile %struct.ScmObj* %args85279$ae44366$2, %struct.ScmObj** %stackaddr$prim87086, align 8
%clofunc87087 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44366)
musttail call tailcc void %clofunc87087(%struct.ScmObj* %ae44366, %struct.ScmObj* %args85279$ae44366$2)
ret void
falsebranch$cmp87081:
%stackaddr$makeclosure87088 = alloca %struct.ScmObj*, align 8
%fptrToInt87089 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44425 to i64
%ae44425 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87089)
store volatile %struct.ScmObj* %ae44425, %struct.ScmObj** %stackaddr$makeclosure87088, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44425, %struct.ScmObj* %x40229, i64 0)
%ae44426 = call %struct.ScmObj* @const_init_int(i64 0)
%ae44427 = call %struct.ScmObj* @const_init_int(i64 9)
%args85288$ae44425$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87090 = alloca %struct.ScmObj*, align 8
%args85288$ae44425$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44427, %struct.ScmObj* %args85288$ae44425$0)
store volatile %struct.ScmObj* %args85288$ae44425$1, %struct.ScmObj** %stackaddr$prim87090, align 8
%stackaddr$prim87091 = alloca %struct.ScmObj*, align 8
%args85288$ae44425$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44426, %struct.ScmObj* %args85288$ae44425$1)
store volatile %struct.ScmObj* %args85288$ae44425$2, %struct.ScmObj** %stackaddr$prim87091, align 8
%clofunc87092 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44425)
musttail call tailcc void %clofunc87092(%struct.ScmObj* %ae44425, %struct.ScmObj* %args85288$ae44425$2)
ret void
}

define tailcc void @proc_clo$ae44366(%struct.ScmObj* %env$ae44366,%struct.ScmObj* %current_45args85271) {
%stackaddr$env-ref87093 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44366, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87093
%stackaddr$prim87094 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85271)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87094, align 8
%stackaddr$prim87095 = alloca %struct.ScmObj*, align 8
%current_45args85272 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85271)
store volatile %struct.ScmObj* %current_45args85272, %struct.ScmObj** %stackaddr$prim87095, align 8
%stackaddr$prim87096 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85272)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87096, align 8
%ae44373 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87097 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44373)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87097, align 8
%stackaddr$makeclosure87098 = alloca %struct.ScmObj*, align 8
%fptrToInt87099 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44374 to i64
%ae44374 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87099)
store volatile %struct.ScmObj* %ae44374, %struct.ScmObj** %stackaddr$makeclosure87098, align 8
%ae44375 = call %struct.ScmObj* @const_init_int(i64 0)
%args85278$ae44374$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87100 = alloca %struct.ScmObj*, align 8
%args85278$ae44374$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85278$ae44374$0)
store volatile %struct.ScmObj* %args85278$ae44374$1, %struct.ScmObj** %stackaddr$prim87100, align 8
%stackaddr$prim87101 = alloca %struct.ScmObj*, align 8
%args85278$ae44374$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44375, %struct.ScmObj* %args85278$ae44374$1)
store volatile %struct.ScmObj* %args85278$ae44374$2, %struct.ScmObj** %stackaddr$prim87101, align 8
%clofunc87102 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44374)
musttail call tailcc void %clofunc87102(%struct.ScmObj* %ae44374, %struct.ScmObj* %args85278$ae44374$2)
ret void
}

define tailcc void @proc_clo$ae44374(%struct.ScmObj* %env$ae44374,%struct.ScmObj* %current_45args85274) {
%stackaddr$prim87103 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85274)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87103, align 8
%stackaddr$prim87104 = alloca %struct.ScmObj*, align 8
%current_45args85275 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85274)
store volatile %struct.ScmObj* %current_45args85275, %struct.ScmObj** %stackaddr$prim87104, align 8
%stackaddr$prim87105 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85275)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87105, align 8
%stackaddr$prim87106 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87106, align 8
%args85277$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87107 = alloca %struct.ScmObj*, align 8
%args85277$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85277$k$0)
store volatile %struct.ScmObj* %args85277$k$1, %struct.ScmObj** %stackaddr$prim87107, align 8
%clofunc87108 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87108(%struct.ScmObj* %k, %struct.ScmObj* %args85277$k$1)
ret void
}

define tailcc void @proc_clo$ae44425(%struct.ScmObj* %env$ae44425,%struct.ScmObj* %current_45args85280) {
%stackaddr$env-ref87109 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44425, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87109
%stackaddr$prim87110 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85280)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87110, align 8
%stackaddr$prim87111 = alloca %struct.ScmObj*, align 8
%current_45args85281 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85280)
store volatile %struct.ScmObj* %current_45args85281, %struct.ScmObj** %stackaddr$prim87111, align 8
%stackaddr$prim87112 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85281)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87112, align 8
%ae44435 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87113 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44435)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87113, align 8
%stackaddr$makeclosure87114 = alloca %struct.ScmObj*, align 8
%fptrToInt87115 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44436 to i64
%ae44436 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87115)
store volatile %struct.ScmObj* %ae44436, %struct.ScmObj** %stackaddr$makeclosure87114, align 8
%ae44437 = call %struct.ScmObj* @const_init_int(i64 0)
%args85287$ae44436$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87116 = alloca %struct.ScmObj*, align 8
%args85287$ae44436$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85287$ae44436$0)
store volatile %struct.ScmObj* %args85287$ae44436$1, %struct.ScmObj** %stackaddr$prim87116, align 8
%stackaddr$prim87117 = alloca %struct.ScmObj*, align 8
%args85287$ae44436$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44437, %struct.ScmObj* %args85287$ae44436$1)
store volatile %struct.ScmObj* %args85287$ae44436$2, %struct.ScmObj** %stackaddr$prim87117, align 8
%clofunc87118 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44436)
musttail call tailcc void %clofunc87118(%struct.ScmObj* %ae44436, %struct.ScmObj* %args85287$ae44436$2)
ret void
}

define tailcc void @proc_clo$ae44436(%struct.ScmObj* %env$ae44436,%struct.ScmObj* %current_45args85283) {
%stackaddr$prim87119 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85283)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87119, align 8
%stackaddr$prim87120 = alloca %struct.ScmObj*, align 8
%current_45args85284 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85283)
store volatile %struct.ScmObj* %current_45args85284, %struct.ScmObj** %stackaddr$prim87120, align 8
%stackaddr$prim87121 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85284)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87121, align 8
%stackaddr$prim87122 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87122, align 8
%args85286$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87123 = alloca %struct.ScmObj*, align 8
%args85286$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85286$k$0)
store volatile %struct.ScmObj* %args85286$k$1, %struct.ScmObj** %stackaddr$prim87123, align 8
%clofunc87124 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87124(%struct.ScmObj* %k, %struct.ScmObj* %args85286$k$1)
ret void
}

define tailcc void @proc_clo$ae44570(%struct.ScmObj* %env$ae44570,%struct.ScmObj* %current_45args85291) {
%stackaddr$env-ref87125 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44570, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87125
%stackaddr$prim87126 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85291)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim87126, align 8
%stackaddr$prim87127 = alloca %struct.ScmObj*, align 8
%current_45args85292 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85291)
store volatile %struct.ScmObj* %current_45args85292, %struct.ScmObj** %stackaddr$prim87127, align 8
%stackaddr$prim87128 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85292)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim87128, align 8
%ae44577 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87129 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44577)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim87129, align 8
%truthy$cmp87130 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp87130 = icmp eq i64 %truthy$cmp87130, 1
br i1 %cmp$cmp87130, label %truebranch$cmp87130, label %falsebranch$cmp87130
truebranch$cmp87130:
%ae44580 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87131 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44580)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim87131, align 8
%ae44582 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87132 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44582)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim87132, align 8
%stackaddr$prim87133 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim87133, align 8
%ae44586 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87134 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44586, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim87134, align 8
%stackaddr$makeclosure87135 = alloca %struct.ScmObj*, align 8
%fptrToInt87136 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44588 to i64
%ae44588 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87136)
store volatile %struct.ScmObj* %ae44588, %struct.ScmObj** %stackaddr$makeclosure87135, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44588, %struct.ScmObj* %x40229, i64 0)
%ae44589 = call %struct.ScmObj* @const_init_int(i64 0)
%args85315$ae44588$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87137 = alloca %struct.ScmObj*, align 8
%args85315$ae44588$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85315$ae44588$0)
store volatile %struct.ScmObj* %args85315$ae44588$1, %struct.ScmObj** %stackaddr$prim87137, align 8
%stackaddr$prim87138 = alloca %struct.ScmObj*, align 8
%args85315$ae44588$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44589, %struct.ScmObj* %args85315$ae44588$1)
store volatile %struct.ScmObj* %args85315$ae44588$2, %struct.ScmObj** %stackaddr$prim87138, align 8
%clofunc87139 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44588)
musttail call tailcc void %clofunc87139(%struct.ScmObj* %ae44588, %struct.ScmObj* %args85315$ae44588$2)
ret void
falsebranch$cmp87130:
%stackaddr$makeclosure87140 = alloca %struct.ScmObj*, align 8
%fptrToInt87141 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44826 to i64
%ae44826 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87141)
store volatile %struct.ScmObj* %ae44826, %struct.ScmObj** %stackaddr$makeclosure87140, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44826, %struct.ScmObj* %x40229, i64 0)
%ae44827 = call %struct.ScmObj* @const_init_int(i64 0)
%ae44828 = call %struct.ScmObj* @const_init_int(i64 7)
%args85337$ae44826$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87142 = alloca %struct.ScmObj*, align 8
%args85337$ae44826$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44828, %struct.ScmObj* %args85337$ae44826$0)
store volatile %struct.ScmObj* %args85337$ae44826$1, %struct.ScmObj** %stackaddr$prim87142, align 8
%stackaddr$prim87143 = alloca %struct.ScmObj*, align 8
%args85337$ae44826$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44827, %struct.ScmObj* %args85337$ae44826$1)
store volatile %struct.ScmObj* %args85337$ae44826$2, %struct.ScmObj** %stackaddr$prim87143, align 8
%clofunc87144 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44826)
musttail call tailcc void %clofunc87144(%struct.ScmObj* %ae44826, %struct.ScmObj* %args85337$ae44826$2)
ret void
}

define tailcc void @proc_clo$ae44588(%struct.ScmObj* %env$ae44588,%struct.ScmObj* %current_45args85294) {
%stackaddr$env-ref87145 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44588, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87145
%stackaddr$prim87146 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85294)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87146, align 8
%stackaddr$prim87147 = alloca %struct.ScmObj*, align 8
%current_45args85295 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85294)
store volatile %struct.ScmObj* %current_45args85295, %struct.ScmObj** %stackaddr$prim87147, align 8
%stackaddr$prim87148 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85295)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87148, align 8
%ae44594 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87149 = call i64 @is_truthy_value(%struct.ScmObj* %ae44594)
%cmp$cmp87149 = icmp eq i64 %truthy$cmp87149, 1
br i1 %cmp$cmp87149, label %truebranch$cmp87149, label %falsebranch$cmp87149
truebranch$cmp87149:
%ae44596 = call %struct.ScmObj* @const_init_int(i64 0)
%ae44597 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87150 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44596, %struct.ScmObj* %ae44597)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87150, align 8
%stackaddr$makeclosure87151 = alloca %struct.ScmObj*, align 8
%fptrToInt87152 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44598 to i64
%ae44598 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87152)
store volatile %struct.ScmObj* %ae44598, %struct.ScmObj** %stackaddr$makeclosure87151, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44598, %struct.ScmObj* %x40229, i64 0)
%ae44599 = call %struct.ScmObj* @const_init_int(i64 0)
%args85305$ae44598$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87153 = alloca %struct.ScmObj*, align 8
%args85305$ae44598$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85305$ae44598$0)
store volatile %struct.ScmObj* %args85305$ae44598$1, %struct.ScmObj** %stackaddr$prim87153, align 8
%stackaddr$prim87154 = alloca %struct.ScmObj*, align 8
%args85305$ae44598$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44599, %struct.ScmObj* %args85305$ae44598$1)
store volatile %struct.ScmObj* %args85305$ae44598$2, %struct.ScmObj** %stackaddr$prim87154, align 8
%clofunc87155 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44598)
musttail call tailcc void %clofunc87155(%struct.ScmObj* %ae44598, %struct.ScmObj* %args85305$ae44598$2)
ret void
falsebranch$cmp87149:
%stackaddr$makeclosure87156 = alloca %struct.ScmObj*, align 8
%fptrToInt87157 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44657 to i64
%ae44657 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87157)
store volatile %struct.ScmObj* %ae44657, %struct.ScmObj** %stackaddr$makeclosure87156, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44657, %struct.ScmObj* %x40229, i64 0)
%ae44658 = call %struct.ScmObj* @const_init_int(i64 0)
%ae44659 = call %struct.ScmObj* @const_init_int(i64 9)
%args85314$ae44657$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87158 = alloca %struct.ScmObj*, align 8
%args85314$ae44657$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44659, %struct.ScmObj* %args85314$ae44657$0)
store volatile %struct.ScmObj* %args85314$ae44657$1, %struct.ScmObj** %stackaddr$prim87158, align 8
%stackaddr$prim87159 = alloca %struct.ScmObj*, align 8
%args85314$ae44657$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44658, %struct.ScmObj* %args85314$ae44657$1)
store volatile %struct.ScmObj* %args85314$ae44657$2, %struct.ScmObj** %stackaddr$prim87159, align 8
%clofunc87160 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44657)
musttail call tailcc void %clofunc87160(%struct.ScmObj* %ae44657, %struct.ScmObj* %args85314$ae44657$2)
ret void
}

define tailcc void @proc_clo$ae44598(%struct.ScmObj* %env$ae44598,%struct.ScmObj* %current_45args85297) {
%stackaddr$env-ref87161 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44598, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87161
%stackaddr$prim87162 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85297)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87162, align 8
%stackaddr$prim87163 = alloca %struct.ScmObj*, align 8
%current_45args85298 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85297)
store volatile %struct.ScmObj* %current_45args85298, %struct.ScmObj** %stackaddr$prim87163, align 8
%stackaddr$prim87164 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85298)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87164, align 8
%ae44605 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87165 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44605)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87165, align 8
%stackaddr$makeclosure87166 = alloca %struct.ScmObj*, align 8
%fptrToInt87167 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44606 to i64
%ae44606 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87167)
store volatile %struct.ScmObj* %ae44606, %struct.ScmObj** %stackaddr$makeclosure87166, align 8
%ae44607 = call %struct.ScmObj* @const_init_int(i64 0)
%args85304$ae44606$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87168 = alloca %struct.ScmObj*, align 8
%args85304$ae44606$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85304$ae44606$0)
store volatile %struct.ScmObj* %args85304$ae44606$1, %struct.ScmObj** %stackaddr$prim87168, align 8
%stackaddr$prim87169 = alloca %struct.ScmObj*, align 8
%args85304$ae44606$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44607, %struct.ScmObj* %args85304$ae44606$1)
store volatile %struct.ScmObj* %args85304$ae44606$2, %struct.ScmObj** %stackaddr$prim87169, align 8
%clofunc87170 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44606)
musttail call tailcc void %clofunc87170(%struct.ScmObj* %ae44606, %struct.ScmObj* %args85304$ae44606$2)
ret void
}

define tailcc void @proc_clo$ae44606(%struct.ScmObj* %env$ae44606,%struct.ScmObj* %current_45args85300) {
%stackaddr$prim87171 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85300)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87171, align 8
%stackaddr$prim87172 = alloca %struct.ScmObj*, align 8
%current_45args85301 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85300)
store volatile %struct.ScmObj* %current_45args85301, %struct.ScmObj** %stackaddr$prim87172, align 8
%stackaddr$prim87173 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85301)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87173, align 8
%stackaddr$prim87174 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87174, align 8
%args85303$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87175 = alloca %struct.ScmObj*, align 8
%args85303$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85303$k$0)
store volatile %struct.ScmObj* %args85303$k$1, %struct.ScmObj** %stackaddr$prim87175, align 8
%clofunc87176 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87176(%struct.ScmObj* %k, %struct.ScmObj* %args85303$k$1)
ret void
}

define tailcc void @proc_clo$ae44657(%struct.ScmObj* %env$ae44657,%struct.ScmObj* %current_45args85306) {
%stackaddr$env-ref87177 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44657, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87177
%stackaddr$prim87178 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85306)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87178, align 8
%stackaddr$prim87179 = alloca %struct.ScmObj*, align 8
%current_45args85307 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85306)
store volatile %struct.ScmObj* %current_45args85307, %struct.ScmObj** %stackaddr$prim87179, align 8
%stackaddr$prim87180 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85307)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87180, align 8
%ae44667 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87181 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44667)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87181, align 8
%stackaddr$makeclosure87182 = alloca %struct.ScmObj*, align 8
%fptrToInt87183 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44668 to i64
%ae44668 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87183)
store volatile %struct.ScmObj* %ae44668, %struct.ScmObj** %stackaddr$makeclosure87182, align 8
%ae44669 = call %struct.ScmObj* @const_init_int(i64 0)
%args85313$ae44668$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87184 = alloca %struct.ScmObj*, align 8
%args85313$ae44668$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85313$ae44668$0)
store volatile %struct.ScmObj* %args85313$ae44668$1, %struct.ScmObj** %stackaddr$prim87184, align 8
%stackaddr$prim87185 = alloca %struct.ScmObj*, align 8
%args85313$ae44668$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44669, %struct.ScmObj* %args85313$ae44668$1)
store volatile %struct.ScmObj* %args85313$ae44668$2, %struct.ScmObj** %stackaddr$prim87185, align 8
%clofunc87186 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44668)
musttail call tailcc void %clofunc87186(%struct.ScmObj* %ae44668, %struct.ScmObj* %args85313$ae44668$2)
ret void
}

define tailcc void @proc_clo$ae44668(%struct.ScmObj* %env$ae44668,%struct.ScmObj* %current_45args85309) {
%stackaddr$prim87187 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85309)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87187, align 8
%stackaddr$prim87188 = alloca %struct.ScmObj*, align 8
%current_45args85310 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85309)
store volatile %struct.ScmObj* %current_45args85310, %struct.ScmObj** %stackaddr$prim87188, align 8
%stackaddr$prim87189 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85310)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87189, align 8
%stackaddr$prim87190 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87190, align 8
%args85312$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87191 = alloca %struct.ScmObj*, align 8
%args85312$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85312$k$0)
store volatile %struct.ScmObj* %args85312$k$1, %struct.ScmObj** %stackaddr$prim87191, align 8
%clofunc87192 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87192(%struct.ScmObj* %k, %struct.ScmObj* %args85312$k$1)
ret void
}

define tailcc void @proc_clo$ae44826(%struct.ScmObj* %env$ae44826,%struct.ScmObj* %current_45args85316) {
%stackaddr$env-ref87193 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44826, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87193
%stackaddr$prim87194 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85316)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87194, align 8
%stackaddr$prim87195 = alloca %struct.ScmObj*, align 8
%current_45args85317 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85316)
store volatile %struct.ScmObj* %current_45args85317, %struct.ScmObj** %stackaddr$prim87195, align 8
%stackaddr$prim87196 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85317)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87196, align 8
%ae44835 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87197 = call i64 @is_truthy_value(%struct.ScmObj* %ae44835)
%cmp$cmp87197 = icmp eq i64 %truthy$cmp87197, 1
br i1 %cmp$cmp87197, label %truebranch$cmp87197, label %falsebranch$cmp87197
truebranch$cmp87197:
%ae44837 = call %struct.ScmObj* @const_init_int(i64 0)
%ae44838 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87198 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44837, %struct.ScmObj* %ae44838)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87198, align 8
%stackaddr$makeclosure87199 = alloca %struct.ScmObj*, align 8
%fptrToInt87200 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44839 to i64
%ae44839 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87200)
store volatile %struct.ScmObj* %ae44839, %struct.ScmObj** %stackaddr$makeclosure87199, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44839, %struct.ScmObj* %x40229, i64 0)
%ae44840 = call %struct.ScmObj* @const_init_int(i64 0)
%args85327$ae44839$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87201 = alloca %struct.ScmObj*, align 8
%args85327$ae44839$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85327$ae44839$0)
store volatile %struct.ScmObj* %args85327$ae44839$1, %struct.ScmObj** %stackaddr$prim87201, align 8
%stackaddr$prim87202 = alloca %struct.ScmObj*, align 8
%args85327$ae44839$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44840, %struct.ScmObj* %args85327$ae44839$1)
store volatile %struct.ScmObj* %args85327$ae44839$2, %struct.ScmObj** %stackaddr$prim87202, align 8
%clofunc87203 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44839)
musttail call tailcc void %clofunc87203(%struct.ScmObj* %ae44839, %struct.ScmObj* %args85327$ae44839$2)
ret void
falsebranch$cmp87197:
%stackaddr$makeclosure87204 = alloca %struct.ScmObj*, align 8
%fptrToInt87205 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44898 to i64
%ae44898 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87205)
store volatile %struct.ScmObj* %ae44898, %struct.ScmObj** %stackaddr$makeclosure87204, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae44898, %struct.ScmObj* %x40229, i64 0)
%ae44899 = call %struct.ScmObj* @const_init_int(i64 0)
%ae44900 = call %struct.ScmObj* @const_init_int(i64 9)
%args85336$ae44898$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87206 = alloca %struct.ScmObj*, align 8
%args85336$ae44898$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44900, %struct.ScmObj* %args85336$ae44898$0)
store volatile %struct.ScmObj* %args85336$ae44898$1, %struct.ScmObj** %stackaddr$prim87206, align 8
%stackaddr$prim87207 = alloca %struct.ScmObj*, align 8
%args85336$ae44898$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44899, %struct.ScmObj* %args85336$ae44898$1)
store volatile %struct.ScmObj* %args85336$ae44898$2, %struct.ScmObj** %stackaddr$prim87207, align 8
%clofunc87208 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44898)
musttail call tailcc void %clofunc87208(%struct.ScmObj* %ae44898, %struct.ScmObj* %args85336$ae44898$2)
ret void
}

define tailcc void @proc_clo$ae44839(%struct.ScmObj* %env$ae44839,%struct.ScmObj* %current_45args85319) {
%stackaddr$env-ref87209 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44839, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87209
%stackaddr$prim87210 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85319)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87210, align 8
%stackaddr$prim87211 = alloca %struct.ScmObj*, align 8
%current_45args85320 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85319)
store volatile %struct.ScmObj* %current_45args85320, %struct.ScmObj** %stackaddr$prim87211, align 8
%stackaddr$prim87212 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85320)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87212, align 8
%ae44846 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87213 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44846)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87213, align 8
%stackaddr$makeclosure87214 = alloca %struct.ScmObj*, align 8
%fptrToInt87215 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44847 to i64
%ae44847 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87215)
store volatile %struct.ScmObj* %ae44847, %struct.ScmObj** %stackaddr$makeclosure87214, align 8
%ae44848 = call %struct.ScmObj* @const_init_int(i64 0)
%args85326$ae44847$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87216 = alloca %struct.ScmObj*, align 8
%args85326$ae44847$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85326$ae44847$0)
store volatile %struct.ScmObj* %args85326$ae44847$1, %struct.ScmObj** %stackaddr$prim87216, align 8
%stackaddr$prim87217 = alloca %struct.ScmObj*, align 8
%args85326$ae44847$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44848, %struct.ScmObj* %args85326$ae44847$1)
store volatile %struct.ScmObj* %args85326$ae44847$2, %struct.ScmObj** %stackaddr$prim87217, align 8
%clofunc87218 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44847)
musttail call tailcc void %clofunc87218(%struct.ScmObj* %ae44847, %struct.ScmObj* %args85326$ae44847$2)
ret void
}

define tailcc void @proc_clo$ae44847(%struct.ScmObj* %env$ae44847,%struct.ScmObj* %current_45args85322) {
%stackaddr$prim87219 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85322)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87219, align 8
%stackaddr$prim87220 = alloca %struct.ScmObj*, align 8
%current_45args85323 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85322)
store volatile %struct.ScmObj* %current_45args85323, %struct.ScmObj** %stackaddr$prim87220, align 8
%stackaddr$prim87221 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85323)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87221, align 8
%stackaddr$prim87222 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87222, align 8
%args85325$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87223 = alloca %struct.ScmObj*, align 8
%args85325$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85325$k$0)
store volatile %struct.ScmObj* %args85325$k$1, %struct.ScmObj** %stackaddr$prim87223, align 8
%clofunc87224 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87224(%struct.ScmObj* %k, %struct.ScmObj* %args85325$k$1)
ret void
}

define tailcc void @proc_clo$ae44898(%struct.ScmObj* %env$ae44898,%struct.ScmObj* %current_45args85328) {
%stackaddr$env-ref87225 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae44898, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87225
%stackaddr$prim87226 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85328)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87226, align 8
%stackaddr$prim87227 = alloca %struct.ScmObj*, align 8
%current_45args85329 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85328)
store volatile %struct.ScmObj* %current_45args85329, %struct.ScmObj** %stackaddr$prim87227, align 8
%stackaddr$prim87228 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85329)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87228, align 8
%ae44908 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87229 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae44908)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87229, align 8
%stackaddr$makeclosure87230 = alloca %struct.ScmObj*, align 8
%fptrToInt87231 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae44909 to i64
%ae44909 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87231)
store volatile %struct.ScmObj* %ae44909, %struct.ScmObj** %stackaddr$makeclosure87230, align 8
%ae44910 = call %struct.ScmObj* @const_init_int(i64 0)
%args85335$ae44909$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87232 = alloca %struct.ScmObj*, align 8
%args85335$ae44909$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85335$ae44909$0)
store volatile %struct.ScmObj* %args85335$ae44909$1, %struct.ScmObj** %stackaddr$prim87232, align 8
%stackaddr$prim87233 = alloca %struct.ScmObj*, align 8
%args85335$ae44909$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae44910, %struct.ScmObj* %args85335$ae44909$1)
store volatile %struct.ScmObj* %args85335$ae44909$2, %struct.ScmObj** %stackaddr$prim87233, align 8
%clofunc87234 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae44909)
musttail call tailcc void %clofunc87234(%struct.ScmObj* %ae44909, %struct.ScmObj* %args85335$ae44909$2)
ret void
}

define tailcc void @proc_clo$ae44909(%struct.ScmObj* %env$ae44909,%struct.ScmObj* %current_45args85331) {
%stackaddr$prim87235 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85331)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87235, align 8
%stackaddr$prim87236 = alloca %struct.ScmObj*, align 8
%current_45args85332 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85331)
store volatile %struct.ScmObj* %current_45args85332, %struct.ScmObj** %stackaddr$prim87236, align 8
%stackaddr$prim87237 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85332)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87237, align 8
%stackaddr$prim87238 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87238, align 8
%args85334$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87239 = alloca %struct.ScmObj*, align 8
%args85334$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85334$k$0)
store volatile %struct.ScmObj* %args85334$k$1, %struct.ScmObj** %stackaddr$prim87239, align 8
%clofunc87240 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87240(%struct.ScmObj* %k, %struct.ScmObj* %args85334$k$1)
ret void
}

define tailcc void @proc_clo$ae46169(%struct.ScmObj* %env$ae46169,%struct.ScmObj* %current_45args85340) {
%stackaddr$env-ref87241 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46169, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87241
%stackaddr$prim87242 = alloca %struct.ScmObj*, align 8
%_95k40414 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85340)
store volatile %struct.ScmObj* %_95k40414, %struct.ScmObj** %stackaddr$prim87242, align 8
%stackaddr$prim87243 = alloca %struct.ScmObj*, align 8
%current_45args85341 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85340)
store volatile %struct.ScmObj* %current_45args85341, %struct.ScmObj** %stackaddr$prim87243, align 8
%stackaddr$prim87244 = alloca %struct.ScmObj*, align 8
%t4010540233 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85341)
store volatile %struct.ScmObj* %t4010540233, %struct.ScmObj** %stackaddr$prim87244, align 8
%ae46175 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87245 = call i64 @is_truthy_value(%struct.ScmObj* %ae46175)
%cmp$cmp87245 = icmp eq i64 %truthy$cmp87245, 1
br i1 %cmp$cmp87245, label %truebranch$cmp87245, label %falsebranch$cmp87245
truebranch$cmp87245:
%stackaddr$prim87246 = alloca %struct.ScmObj*, align 8
%cpsprim40421 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40421, %struct.ScmObj** %stackaddr$prim87246, align 8
%stackaddr$makeclosure87247 = alloca %struct.ScmObj*, align 8
%fptrToInt87248 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46176 to i64
%ae46176 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87248)
store volatile %struct.ScmObj* %ae46176, %struct.ScmObj** %stackaddr$makeclosure87247, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46176, %struct.ScmObj* %x40229, i64 0)
%ae46177 = call %struct.ScmObj* @const_init_int(i64 0)
%args85390$ae46176$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87249 = alloca %struct.ScmObj*, align 8
%args85390$ae46176$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40421, %struct.ScmObj* %args85390$ae46176$0)
store volatile %struct.ScmObj* %args85390$ae46176$1, %struct.ScmObj** %stackaddr$prim87249, align 8
%stackaddr$prim87250 = alloca %struct.ScmObj*, align 8
%args85390$ae46176$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46177, %struct.ScmObj* %args85390$ae46176$1)
store volatile %struct.ScmObj* %args85390$ae46176$2, %struct.ScmObj** %stackaddr$prim87250, align 8
%clofunc87251 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46176)
musttail call tailcc void %clofunc87251(%struct.ScmObj* %ae46176, %struct.ScmObj* %args85390$ae46176$2)
ret void
falsebranch$cmp87245:
%ae46641 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87252 = alloca %struct.ScmObj*, align 8
%anf_45bind40370 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46641)
store volatile %struct.ScmObj* %anf_45bind40370, %struct.ScmObj** %stackaddr$prim87252, align 8
%ae46643 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim87253 = alloca %struct.ScmObj*, align 8
%anf_45bind40371 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40370, %struct.ScmObj* %ae46643)
store volatile %struct.ScmObj* %anf_45bind40371, %struct.ScmObj** %stackaddr$prim87253, align 8
%ae46645 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim87254 = alloca %struct.ScmObj*, align 8
%anf_45bind40372 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40371, %struct.ScmObj* %ae46645)
store volatile %struct.ScmObj* %anf_45bind40372, %struct.ScmObj** %stackaddr$prim87254, align 8
%ae46647 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87255 = alloca %struct.ScmObj*, align 8
%cpsprim40422 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46647, %struct.ScmObj* %anf_45bind40372)
store volatile %struct.ScmObj* %cpsprim40422, %struct.ScmObj** %stackaddr$prim87255, align 8
%stackaddr$makeclosure87256 = alloca %struct.ScmObj*, align 8
%fptrToInt87257 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46649 to i64
%ae46649 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87257)
store volatile %struct.ScmObj* %ae46649, %struct.ScmObj** %stackaddr$makeclosure87256, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46649, %struct.ScmObj* %x40229, i64 0)
%ae46650 = call %struct.ScmObj* @const_init_int(i64 0)
%args85438$ae46649$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87258 = alloca %struct.ScmObj*, align 8
%args85438$ae46649$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40422, %struct.ScmObj* %args85438$ae46649$0)
store volatile %struct.ScmObj* %args85438$ae46649$1, %struct.ScmObj** %stackaddr$prim87258, align 8
%stackaddr$prim87259 = alloca %struct.ScmObj*, align 8
%args85438$ae46649$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46650, %struct.ScmObj* %args85438$ae46649$1)
store volatile %struct.ScmObj* %args85438$ae46649$2, %struct.ScmObj** %stackaddr$prim87259, align 8
%clofunc87260 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46649)
musttail call tailcc void %clofunc87260(%struct.ScmObj* %ae46649, %struct.ScmObj* %args85438$ae46649$2)
ret void
}

define tailcc void @proc_clo$ae46176(%struct.ScmObj* %env$ae46176,%struct.ScmObj* %current_45args85343) {
%stackaddr$env-ref87261 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46176, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87261
%stackaddr$prim87262 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85343)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim87262, align 8
%stackaddr$prim87263 = alloca %struct.ScmObj*, align 8
%current_45args85344 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85343)
store volatile %struct.ScmObj* %current_45args85344, %struct.ScmObj** %stackaddr$prim87263, align 8
%stackaddr$prim87264 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85344)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim87264, align 8
%ae46183 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87265 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46183)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim87265, align 8
%truthy$cmp87266 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp87266 = icmp eq i64 %truthy$cmp87266, 1
br i1 %cmp$cmp87266, label %truebranch$cmp87266, label %falsebranch$cmp87266
truebranch$cmp87266:
%ae46186 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87267 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46186)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim87267, align 8
%ae46188 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87268 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46188)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim87268, align 8
%stackaddr$prim87269 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim87269, align 8
%ae46192 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87270 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46192, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim87270, align 8
%stackaddr$makeclosure87271 = alloca %struct.ScmObj*, align 8
%fptrToInt87272 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46194 to i64
%ae46194 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87272)
store volatile %struct.ScmObj* %ae46194, %struct.ScmObj** %stackaddr$makeclosure87271, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46194, %struct.ScmObj* %x40229, i64 0)
%ae46195 = call %struct.ScmObj* @const_init_int(i64 0)
%args85367$ae46194$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87273 = alloca %struct.ScmObj*, align 8
%args85367$ae46194$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85367$ae46194$0)
store volatile %struct.ScmObj* %args85367$ae46194$1, %struct.ScmObj** %stackaddr$prim87273, align 8
%stackaddr$prim87274 = alloca %struct.ScmObj*, align 8
%args85367$ae46194$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46195, %struct.ScmObj* %args85367$ae46194$1)
store volatile %struct.ScmObj* %args85367$ae46194$2, %struct.ScmObj** %stackaddr$prim87274, align 8
%clofunc87275 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46194)
musttail call tailcc void %clofunc87275(%struct.ScmObj* %ae46194, %struct.ScmObj* %args85367$ae46194$2)
ret void
falsebranch$cmp87266:
%stackaddr$makeclosure87276 = alloca %struct.ScmObj*, align 8
%fptrToInt87277 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46432 to i64
%ae46432 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87277)
store volatile %struct.ScmObj* %ae46432, %struct.ScmObj** %stackaddr$makeclosure87276, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46432, %struct.ScmObj* %x40229, i64 0)
%ae46433 = call %struct.ScmObj* @const_init_int(i64 0)
%ae46434 = call %struct.ScmObj* @const_init_int(i64 7)
%args85389$ae46432$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87278 = alloca %struct.ScmObj*, align 8
%args85389$ae46432$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46434, %struct.ScmObj* %args85389$ae46432$0)
store volatile %struct.ScmObj* %args85389$ae46432$1, %struct.ScmObj** %stackaddr$prim87278, align 8
%stackaddr$prim87279 = alloca %struct.ScmObj*, align 8
%args85389$ae46432$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46433, %struct.ScmObj* %args85389$ae46432$1)
store volatile %struct.ScmObj* %args85389$ae46432$2, %struct.ScmObj** %stackaddr$prim87279, align 8
%clofunc87280 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46432)
musttail call tailcc void %clofunc87280(%struct.ScmObj* %ae46432, %struct.ScmObj* %args85389$ae46432$2)
ret void
}

define tailcc void @proc_clo$ae46194(%struct.ScmObj* %env$ae46194,%struct.ScmObj* %current_45args85346) {
%stackaddr$env-ref87281 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46194, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87281
%stackaddr$prim87282 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85346)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87282, align 8
%stackaddr$prim87283 = alloca %struct.ScmObj*, align 8
%current_45args85347 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85346)
store volatile %struct.ScmObj* %current_45args85347, %struct.ScmObj** %stackaddr$prim87283, align 8
%stackaddr$prim87284 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85347)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87284, align 8
%ae46200 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87285 = call i64 @is_truthy_value(%struct.ScmObj* %ae46200)
%cmp$cmp87285 = icmp eq i64 %truthy$cmp87285, 1
br i1 %cmp$cmp87285, label %truebranch$cmp87285, label %falsebranch$cmp87285
truebranch$cmp87285:
%ae46202 = call %struct.ScmObj* @const_init_int(i64 0)
%ae46203 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87286 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46202, %struct.ScmObj* %ae46203)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87286, align 8
%stackaddr$makeclosure87287 = alloca %struct.ScmObj*, align 8
%fptrToInt87288 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46204 to i64
%ae46204 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87288)
store volatile %struct.ScmObj* %ae46204, %struct.ScmObj** %stackaddr$makeclosure87287, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46204, %struct.ScmObj* %x40229, i64 0)
%ae46205 = call %struct.ScmObj* @const_init_int(i64 0)
%args85357$ae46204$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87289 = alloca %struct.ScmObj*, align 8
%args85357$ae46204$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85357$ae46204$0)
store volatile %struct.ScmObj* %args85357$ae46204$1, %struct.ScmObj** %stackaddr$prim87289, align 8
%stackaddr$prim87290 = alloca %struct.ScmObj*, align 8
%args85357$ae46204$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46205, %struct.ScmObj* %args85357$ae46204$1)
store volatile %struct.ScmObj* %args85357$ae46204$2, %struct.ScmObj** %stackaddr$prim87290, align 8
%clofunc87291 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46204)
musttail call tailcc void %clofunc87291(%struct.ScmObj* %ae46204, %struct.ScmObj* %args85357$ae46204$2)
ret void
falsebranch$cmp87285:
%stackaddr$makeclosure87292 = alloca %struct.ScmObj*, align 8
%fptrToInt87293 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46263 to i64
%ae46263 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87293)
store volatile %struct.ScmObj* %ae46263, %struct.ScmObj** %stackaddr$makeclosure87292, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46263, %struct.ScmObj* %x40229, i64 0)
%ae46264 = call %struct.ScmObj* @const_init_int(i64 0)
%ae46265 = call %struct.ScmObj* @const_init_int(i64 9)
%args85366$ae46263$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87294 = alloca %struct.ScmObj*, align 8
%args85366$ae46263$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46265, %struct.ScmObj* %args85366$ae46263$0)
store volatile %struct.ScmObj* %args85366$ae46263$1, %struct.ScmObj** %stackaddr$prim87294, align 8
%stackaddr$prim87295 = alloca %struct.ScmObj*, align 8
%args85366$ae46263$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46264, %struct.ScmObj* %args85366$ae46263$1)
store volatile %struct.ScmObj* %args85366$ae46263$2, %struct.ScmObj** %stackaddr$prim87295, align 8
%clofunc87296 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46263)
musttail call tailcc void %clofunc87296(%struct.ScmObj* %ae46263, %struct.ScmObj* %args85366$ae46263$2)
ret void
}

define tailcc void @proc_clo$ae46204(%struct.ScmObj* %env$ae46204,%struct.ScmObj* %current_45args85349) {
%stackaddr$env-ref87297 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46204, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87297
%stackaddr$prim87298 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85349)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87298, align 8
%stackaddr$prim87299 = alloca %struct.ScmObj*, align 8
%current_45args85350 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85349)
store volatile %struct.ScmObj* %current_45args85350, %struct.ScmObj** %stackaddr$prim87299, align 8
%stackaddr$prim87300 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85350)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87300, align 8
%ae46211 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87301 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46211)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87301, align 8
%stackaddr$makeclosure87302 = alloca %struct.ScmObj*, align 8
%fptrToInt87303 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46212 to i64
%ae46212 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87303)
store volatile %struct.ScmObj* %ae46212, %struct.ScmObj** %stackaddr$makeclosure87302, align 8
%ae46213 = call %struct.ScmObj* @const_init_int(i64 0)
%args85356$ae46212$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87304 = alloca %struct.ScmObj*, align 8
%args85356$ae46212$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85356$ae46212$0)
store volatile %struct.ScmObj* %args85356$ae46212$1, %struct.ScmObj** %stackaddr$prim87304, align 8
%stackaddr$prim87305 = alloca %struct.ScmObj*, align 8
%args85356$ae46212$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46213, %struct.ScmObj* %args85356$ae46212$1)
store volatile %struct.ScmObj* %args85356$ae46212$2, %struct.ScmObj** %stackaddr$prim87305, align 8
%clofunc87306 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46212)
musttail call tailcc void %clofunc87306(%struct.ScmObj* %ae46212, %struct.ScmObj* %args85356$ae46212$2)
ret void
}

define tailcc void @proc_clo$ae46212(%struct.ScmObj* %env$ae46212,%struct.ScmObj* %current_45args85352) {
%stackaddr$prim87307 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85352)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87307, align 8
%stackaddr$prim87308 = alloca %struct.ScmObj*, align 8
%current_45args85353 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85352)
store volatile %struct.ScmObj* %current_45args85353, %struct.ScmObj** %stackaddr$prim87308, align 8
%stackaddr$prim87309 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85353)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87309, align 8
%stackaddr$prim87310 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87310, align 8
%args85355$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87311 = alloca %struct.ScmObj*, align 8
%args85355$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85355$k$0)
store volatile %struct.ScmObj* %args85355$k$1, %struct.ScmObj** %stackaddr$prim87311, align 8
%clofunc87312 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87312(%struct.ScmObj* %k, %struct.ScmObj* %args85355$k$1)
ret void
}

define tailcc void @proc_clo$ae46263(%struct.ScmObj* %env$ae46263,%struct.ScmObj* %current_45args85358) {
%stackaddr$env-ref87313 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46263, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87313
%stackaddr$prim87314 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85358)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87314, align 8
%stackaddr$prim87315 = alloca %struct.ScmObj*, align 8
%current_45args85359 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85358)
store volatile %struct.ScmObj* %current_45args85359, %struct.ScmObj** %stackaddr$prim87315, align 8
%stackaddr$prim87316 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85359)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87316, align 8
%ae46273 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87317 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46273)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87317, align 8
%stackaddr$makeclosure87318 = alloca %struct.ScmObj*, align 8
%fptrToInt87319 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46274 to i64
%ae46274 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87319)
store volatile %struct.ScmObj* %ae46274, %struct.ScmObj** %stackaddr$makeclosure87318, align 8
%ae46275 = call %struct.ScmObj* @const_init_int(i64 0)
%args85365$ae46274$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87320 = alloca %struct.ScmObj*, align 8
%args85365$ae46274$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85365$ae46274$0)
store volatile %struct.ScmObj* %args85365$ae46274$1, %struct.ScmObj** %stackaddr$prim87320, align 8
%stackaddr$prim87321 = alloca %struct.ScmObj*, align 8
%args85365$ae46274$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46275, %struct.ScmObj* %args85365$ae46274$1)
store volatile %struct.ScmObj* %args85365$ae46274$2, %struct.ScmObj** %stackaddr$prim87321, align 8
%clofunc87322 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46274)
musttail call tailcc void %clofunc87322(%struct.ScmObj* %ae46274, %struct.ScmObj* %args85365$ae46274$2)
ret void
}

define tailcc void @proc_clo$ae46274(%struct.ScmObj* %env$ae46274,%struct.ScmObj* %current_45args85361) {
%stackaddr$prim87323 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85361)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87323, align 8
%stackaddr$prim87324 = alloca %struct.ScmObj*, align 8
%current_45args85362 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85361)
store volatile %struct.ScmObj* %current_45args85362, %struct.ScmObj** %stackaddr$prim87324, align 8
%stackaddr$prim87325 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85362)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87325, align 8
%stackaddr$prim87326 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87326, align 8
%args85364$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87327 = alloca %struct.ScmObj*, align 8
%args85364$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85364$k$0)
store volatile %struct.ScmObj* %args85364$k$1, %struct.ScmObj** %stackaddr$prim87327, align 8
%clofunc87328 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87328(%struct.ScmObj* %k, %struct.ScmObj* %args85364$k$1)
ret void
}

define tailcc void @proc_clo$ae46432(%struct.ScmObj* %env$ae46432,%struct.ScmObj* %current_45args85368) {
%stackaddr$env-ref87329 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46432, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87329
%stackaddr$prim87330 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85368)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87330, align 8
%stackaddr$prim87331 = alloca %struct.ScmObj*, align 8
%current_45args85369 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85368)
store volatile %struct.ScmObj* %current_45args85369, %struct.ScmObj** %stackaddr$prim87331, align 8
%stackaddr$prim87332 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85369)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87332, align 8
%ae46441 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87333 = call i64 @is_truthy_value(%struct.ScmObj* %ae46441)
%cmp$cmp87333 = icmp eq i64 %truthy$cmp87333, 1
br i1 %cmp$cmp87333, label %truebranch$cmp87333, label %falsebranch$cmp87333
truebranch$cmp87333:
%ae46443 = call %struct.ScmObj* @const_init_int(i64 0)
%ae46444 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87334 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46443, %struct.ScmObj* %ae46444)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87334, align 8
%stackaddr$makeclosure87335 = alloca %struct.ScmObj*, align 8
%fptrToInt87336 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46445 to i64
%ae46445 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87336)
store volatile %struct.ScmObj* %ae46445, %struct.ScmObj** %stackaddr$makeclosure87335, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46445, %struct.ScmObj* %x40229, i64 0)
%ae46446 = call %struct.ScmObj* @const_init_int(i64 0)
%args85379$ae46445$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87337 = alloca %struct.ScmObj*, align 8
%args85379$ae46445$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85379$ae46445$0)
store volatile %struct.ScmObj* %args85379$ae46445$1, %struct.ScmObj** %stackaddr$prim87337, align 8
%stackaddr$prim87338 = alloca %struct.ScmObj*, align 8
%args85379$ae46445$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46446, %struct.ScmObj* %args85379$ae46445$1)
store volatile %struct.ScmObj* %args85379$ae46445$2, %struct.ScmObj** %stackaddr$prim87338, align 8
%clofunc87339 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46445)
musttail call tailcc void %clofunc87339(%struct.ScmObj* %ae46445, %struct.ScmObj* %args85379$ae46445$2)
ret void
falsebranch$cmp87333:
%stackaddr$makeclosure87340 = alloca %struct.ScmObj*, align 8
%fptrToInt87341 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46504 to i64
%ae46504 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87341)
store volatile %struct.ScmObj* %ae46504, %struct.ScmObj** %stackaddr$makeclosure87340, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46504, %struct.ScmObj* %x40229, i64 0)
%ae46505 = call %struct.ScmObj* @const_init_int(i64 0)
%ae46506 = call %struct.ScmObj* @const_init_int(i64 9)
%args85388$ae46504$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87342 = alloca %struct.ScmObj*, align 8
%args85388$ae46504$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46506, %struct.ScmObj* %args85388$ae46504$0)
store volatile %struct.ScmObj* %args85388$ae46504$1, %struct.ScmObj** %stackaddr$prim87342, align 8
%stackaddr$prim87343 = alloca %struct.ScmObj*, align 8
%args85388$ae46504$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46505, %struct.ScmObj* %args85388$ae46504$1)
store volatile %struct.ScmObj* %args85388$ae46504$2, %struct.ScmObj** %stackaddr$prim87343, align 8
%clofunc87344 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46504)
musttail call tailcc void %clofunc87344(%struct.ScmObj* %ae46504, %struct.ScmObj* %args85388$ae46504$2)
ret void
}

define tailcc void @proc_clo$ae46445(%struct.ScmObj* %env$ae46445,%struct.ScmObj* %current_45args85371) {
%stackaddr$env-ref87345 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46445, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87345
%stackaddr$prim87346 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85371)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87346, align 8
%stackaddr$prim87347 = alloca %struct.ScmObj*, align 8
%current_45args85372 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85371)
store volatile %struct.ScmObj* %current_45args85372, %struct.ScmObj** %stackaddr$prim87347, align 8
%stackaddr$prim87348 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85372)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87348, align 8
%ae46452 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87349 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46452)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87349, align 8
%stackaddr$makeclosure87350 = alloca %struct.ScmObj*, align 8
%fptrToInt87351 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46453 to i64
%ae46453 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87351)
store volatile %struct.ScmObj* %ae46453, %struct.ScmObj** %stackaddr$makeclosure87350, align 8
%ae46454 = call %struct.ScmObj* @const_init_int(i64 0)
%args85378$ae46453$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87352 = alloca %struct.ScmObj*, align 8
%args85378$ae46453$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85378$ae46453$0)
store volatile %struct.ScmObj* %args85378$ae46453$1, %struct.ScmObj** %stackaddr$prim87352, align 8
%stackaddr$prim87353 = alloca %struct.ScmObj*, align 8
%args85378$ae46453$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46454, %struct.ScmObj* %args85378$ae46453$1)
store volatile %struct.ScmObj* %args85378$ae46453$2, %struct.ScmObj** %stackaddr$prim87353, align 8
%clofunc87354 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46453)
musttail call tailcc void %clofunc87354(%struct.ScmObj* %ae46453, %struct.ScmObj* %args85378$ae46453$2)
ret void
}

define tailcc void @proc_clo$ae46453(%struct.ScmObj* %env$ae46453,%struct.ScmObj* %current_45args85374) {
%stackaddr$prim87355 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85374)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87355, align 8
%stackaddr$prim87356 = alloca %struct.ScmObj*, align 8
%current_45args85375 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85374)
store volatile %struct.ScmObj* %current_45args85375, %struct.ScmObj** %stackaddr$prim87356, align 8
%stackaddr$prim87357 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85375)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87357, align 8
%stackaddr$prim87358 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87358, align 8
%args85377$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87359 = alloca %struct.ScmObj*, align 8
%args85377$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85377$k$0)
store volatile %struct.ScmObj* %args85377$k$1, %struct.ScmObj** %stackaddr$prim87359, align 8
%clofunc87360 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87360(%struct.ScmObj* %k, %struct.ScmObj* %args85377$k$1)
ret void
}

define tailcc void @proc_clo$ae46504(%struct.ScmObj* %env$ae46504,%struct.ScmObj* %current_45args85380) {
%stackaddr$env-ref87361 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46504, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87361
%stackaddr$prim87362 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85380)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87362, align 8
%stackaddr$prim87363 = alloca %struct.ScmObj*, align 8
%current_45args85381 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85380)
store volatile %struct.ScmObj* %current_45args85381, %struct.ScmObj** %stackaddr$prim87363, align 8
%stackaddr$prim87364 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85381)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87364, align 8
%ae46514 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87365 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46514)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87365, align 8
%stackaddr$makeclosure87366 = alloca %struct.ScmObj*, align 8
%fptrToInt87367 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46515 to i64
%ae46515 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87367)
store volatile %struct.ScmObj* %ae46515, %struct.ScmObj** %stackaddr$makeclosure87366, align 8
%ae46516 = call %struct.ScmObj* @const_init_int(i64 0)
%args85387$ae46515$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87368 = alloca %struct.ScmObj*, align 8
%args85387$ae46515$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85387$ae46515$0)
store volatile %struct.ScmObj* %args85387$ae46515$1, %struct.ScmObj** %stackaddr$prim87368, align 8
%stackaddr$prim87369 = alloca %struct.ScmObj*, align 8
%args85387$ae46515$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46516, %struct.ScmObj* %args85387$ae46515$1)
store volatile %struct.ScmObj* %args85387$ae46515$2, %struct.ScmObj** %stackaddr$prim87369, align 8
%clofunc87370 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46515)
musttail call tailcc void %clofunc87370(%struct.ScmObj* %ae46515, %struct.ScmObj* %args85387$ae46515$2)
ret void
}

define tailcc void @proc_clo$ae46515(%struct.ScmObj* %env$ae46515,%struct.ScmObj* %current_45args85383) {
%stackaddr$prim87371 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85383)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87371, align 8
%stackaddr$prim87372 = alloca %struct.ScmObj*, align 8
%current_45args85384 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85383)
store volatile %struct.ScmObj* %current_45args85384, %struct.ScmObj** %stackaddr$prim87372, align 8
%stackaddr$prim87373 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85384)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87373, align 8
%stackaddr$prim87374 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87374, align 8
%args85386$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87375 = alloca %struct.ScmObj*, align 8
%args85386$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85386$k$0)
store volatile %struct.ScmObj* %args85386$k$1, %struct.ScmObj** %stackaddr$prim87375, align 8
%clofunc87376 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87376(%struct.ScmObj* %k, %struct.ScmObj* %args85386$k$1)
ret void
}

define tailcc void @proc_clo$ae46649(%struct.ScmObj* %env$ae46649,%struct.ScmObj* %current_45args85391) {
%stackaddr$env-ref87377 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46649, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87377
%stackaddr$prim87378 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85391)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim87378, align 8
%stackaddr$prim87379 = alloca %struct.ScmObj*, align 8
%current_45args85392 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85391)
store volatile %struct.ScmObj* %current_45args85392, %struct.ScmObj** %stackaddr$prim87379, align 8
%stackaddr$prim87380 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85392)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim87380, align 8
%ae46656 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87381 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46656)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim87381, align 8
%truthy$cmp87382 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp87382 = icmp eq i64 %truthy$cmp87382, 1
br i1 %cmp$cmp87382, label %truebranch$cmp87382, label %falsebranch$cmp87382
truebranch$cmp87382:
%ae46659 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87383 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46659)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim87383, align 8
%ae46661 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87384 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46661)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim87384, align 8
%stackaddr$prim87385 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim87385, align 8
%ae46665 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87386 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46665, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim87386, align 8
%stackaddr$makeclosure87387 = alloca %struct.ScmObj*, align 8
%fptrToInt87388 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46667 to i64
%ae46667 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87388)
store volatile %struct.ScmObj* %ae46667, %struct.ScmObj** %stackaddr$makeclosure87387, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46667, %struct.ScmObj* %x40229, i64 0)
%ae46668 = call %struct.ScmObj* @const_init_int(i64 0)
%args85415$ae46667$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87389 = alloca %struct.ScmObj*, align 8
%args85415$ae46667$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85415$ae46667$0)
store volatile %struct.ScmObj* %args85415$ae46667$1, %struct.ScmObj** %stackaddr$prim87389, align 8
%stackaddr$prim87390 = alloca %struct.ScmObj*, align 8
%args85415$ae46667$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46668, %struct.ScmObj* %args85415$ae46667$1)
store volatile %struct.ScmObj* %args85415$ae46667$2, %struct.ScmObj** %stackaddr$prim87390, align 8
%clofunc87391 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46667)
musttail call tailcc void %clofunc87391(%struct.ScmObj* %ae46667, %struct.ScmObj* %args85415$ae46667$2)
ret void
falsebranch$cmp87382:
%stackaddr$makeclosure87392 = alloca %struct.ScmObj*, align 8
%fptrToInt87393 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46905 to i64
%ae46905 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87393)
store volatile %struct.ScmObj* %ae46905, %struct.ScmObj** %stackaddr$makeclosure87392, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46905, %struct.ScmObj* %x40229, i64 0)
%ae46906 = call %struct.ScmObj* @const_init_int(i64 0)
%ae46907 = call %struct.ScmObj* @const_init_int(i64 7)
%args85437$ae46905$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87394 = alloca %struct.ScmObj*, align 8
%args85437$ae46905$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46907, %struct.ScmObj* %args85437$ae46905$0)
store volatile %struct.ScmObj* %args85437$ae46905$1, %struct.ScmObj** %stackaddr$prim87394, align 8
%stackaddr$prim87395 = alloca %struct.ScmObj*, align 8
%args85437$ae46905$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46906, %struct.ScmObj* %args85437$ae46905$1)
store volatile %struct.ScmObj* %args85437$ae46905$2, %struct.ScmObj** %stackaddr$prim87395, align 8
%clofunc87396 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46905)
musttail call tailcc void %clofunc87396(%struct.ScmObj* %ae46905, %struct.ScmObj* %args85437$ae46905$2)
ret void
}

define tailcc void @proc_clo$ae46667(%struct.ScmObj* %env$ae46667,%struct.ScmObj* %current_45args85394) {
%stackaddr$env-ref87397 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46667, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87397
%stackaddr$prim87398 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85394)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87398, align 8
%stackaddr$prim87399 = alloca %struct.ScmObj*, align 8
%current_45args85395 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85394)
store volatile %struct.ScmObj* %current_45args85395, %struct.ScmObj** %stackaddr$prim87399, align 8
%stackaddr$prim87400 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85395)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87400, align 8
%ae46673 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87401 = call i64 @is_truthy_value(%struct.ScmObj* %ae46673)
%cmp$cmp87401 = icmp eq i64 %truthy$cmp87401, 1
br i1 %cmp$cmp87401, label %truebranch$cmp87401, label %falsebranch$cmp87401
truebranch$cmp87401:
%ae46675 = call %struct.ScmObj* @const_init_int(i64 0)
%ae46676 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87402 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46675, %struct.ScmObj* %ae46676)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87402, align 8
%stackaddr$makeclosure87403 = alloca %struct.ScmObj*, align 8
%fptrToInt87404 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46677 to i64
%ae46677 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87404)
store volatile %struct.ScmObj* %ae46677, %struct.ScmObj** %stackaddr$makeclosure87403, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46677, %struct.ScmObj* %x40229, i64 0)
%ae46678 = call %struct.ScmObj* @const_init_int(i64 0)
%args85405$ae46677$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87405 = alloca %struct.ScmObj*, align 8
%args85405$ae46677$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85405$ae46677$0)
store volatile %struct.ScmObj* %args85405$ae46677$1, %struct.ScmObj** %stackaddr$prim87405, align 8
%stackaddr$prim87406 = alloca %struct.ScmObj*, align 8
%args85405$ae46677$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46678, %struct.ScmObj* %args85405$ae46677$1)
store volatile %struct.ScmObj* %args85405$ae46677$2, %struct.ScmObj** %stackaddr$prim87406, align 8
%clofunc87407 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46677)
musttail call tailcc void %clofunc87407(%struct.ScmObj* %ae46677, %struct.ScmObj* %args85405$ae46677$2)
ret void
falsebranch$cmp87401:
%stackaddr$makeclosure87408 = alloca %struct.ScmObj*, align 8
%fptrToInt87409 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46736 to i64
%ae46736 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87409)
store volatile %struct.ScmObj* %ae46736, %struct.ScmObj** %stackaddr$makeclosure87408, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46736, %struct.ScmObj* %x40229, i64 0)
%ae46737 = call %struct.ScmObj* @const_init_int(i64 0)
%ae46738 = call %struct.ScmObj* @const_init_int(i64 9)
%args85414$ae46736$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87410 = alloca %struct.ScmObj*, align 8
%args85414$ae46736$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46738, %struct.ScmObj* %args85414$ae46736$0)
store volatile %struct.ScmObj* %args85414$ae46736$1, %struct.ScmObj** %stackaddr$prim87410, align 8
%stackaddr$prim87411 = alloca %struct.ScmObj*, align 8
%args85414$ae46736$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46737, %struct.ScmObj* %args85414$ae46736$1)
store volatile %struct.ScmObj* %args85414$ae46736$2, %struct.ScmObj** %stackaddr$prim87411, align 8
%clofunc87412 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46736)
musttail call tailcc void %clofunc87412(%struct.ScmObj* %ae46736, %struct.ScmObj* %args85414$ae46736$2)
ret void
}

define tailcc void @proc_clo$ae46677(%struct.ScmObj* %env$ae46677,%struct.ScmObj* %current_45args85397) {
%stackaddr$env-ref87413 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46677, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87413
%stackaddr$prim87414 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85397)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87414, align 8
%stackaddr$prim87415 = alloca %struct.ScmObj*, align 8
%current_45args85398 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85397)
store volatile %struct.ScmObj* %current_45args85398, %struct.ScmObj** %stackaddr$prim87415, align 8
%stackaddr$prim87416 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85398)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87416, align 8
%ae46684 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87417 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46684)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87417, align 8
%stackaddr$makeclosure87418 = alloca %struct.ScmObj*, align 8
%fptrToInt87419 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46685 to i64
%ae46685 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87419)
store volatile %struct.ScmObj* %ae46685, %struct.ScmObj** %stackaddr$makeclosure87418, align 8
%ae46686 = call %struct.ScmObj* @const_init_int(i64 0)
%args85404$ae46685$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87420 = alloca %struct.ScmObj*, align 8
%args85404$ae46685$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85404$ae46685$0)
store volatile %struct.ScmObj* %args85404$ae46685$1, %struct.ScmObj** %stackaddr$prim87420, align 8
%stackaddr$prim87421 = alloca %struct.ScmObj*, align 8
%args85404$ae46685$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46686, %struct.ScmObj* %args85404$ae46685$1)
store volatile %struct.ScmObj* %args85404$ae46685$2, %struct.ScmObj** %stackaddr$prim87421, align 8
%clofunc87422 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46685)
musttail call tailcc void %clofunc87422(%struct.ScmObj* %ae46685, %struct.ScmObj* %args85404$ae46685$2)
ret void
}

define tailcc void @proc_clo$ae46685(%struct.ScmObj* %env$ae46685,%struct.ScmObj* %current_45args85400) {
%stackaddr$prim87423 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85400)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87423, align 8
%stackaddr$prim87424 = alloca %struct.ScmObj*, align 8
%current_45args85401 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85400)
store volatile %struct.ScmObj* %current_45args85401, %struct.ScmObj** %stackaddr$prim87424, align 8
%stackaddr$prim87425 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85401)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87425, align 8
%stackaddr$prim87426 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87426, align 8
%args85403$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87427 = alloca %struct.ScmObj*, align 8
%args85403$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85403$k$0)
store volatile %struct.ScmObj* %args85403$k$1, %struct.ScmObj** %stackaddr$prim87427, align 8
%clofunc87428 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87428(%struct.ScmObj* %k, %struct.ScmObj* %args85403$k$1)
ret void
}

define tailcc void @proc_clo$ae46736(%struct.ScmObj* %env$ae46736,%struct.ScmObj* %current_45args85406) {
%stackaddr$env-ref87429 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46736, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87429
%stackaddr$prim87430 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85406)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87430, align 8
%stackaddr$prim87431 = alloca %struct.ScmObj*, align 8
%current_45args85407 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85406)
store volatile %struct.ScmObj* %current_45args85407, %struct.ScmObj** %stackaddr$prim87431, align 8
%stackaddr$prim87432 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85407)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87432, align 8
%ae46746 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87433 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46746)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87433, align 8
%stackaddr$makeclosure87434 = alloca %struct.ScmObj*, align 8
%fptrToInt87435 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46747 to i64
%ae46747 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87435)
store volatile %struct.ScmObj* %ae46747, %struct.ScmObj** %stackaddr$makeclosure87434, align 8
%ae46748 = call %struct.ScmObj* @const_init_int(i64 0)
%args85413$ae46747$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87436 = alloca %struct.ScmObj*, align 8
%args85413$ae46747$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85413$ae46747$0)
store volatile %struct.ScmObj* %args85413$ae46747$1, %struct.ScmObj** %stackaddr$prim87436, align 8
%stackaddr$prim87437 = alloca %struct.ScmObj*, align 8
%args85413$ae46747$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46748, %struct.ScmObj* %args85413$ae46747$1)
store volatile %struct.ScmObj* %args85413$ae46747$2, %struct.ScmObj** %stackaddr$prim87437, align 8
%clofunc87438 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46747)
musttail call tailcc void %clofunc87438(%struct.ScmObj* %ae46747, %struct.ScmObj* %args85413$ae46747$2)
ret void
}

define tailcc void @proc_clo$ae46747(%struct.ScmObj* %env$ae46747,%struct.ScmObj* %current_45args85409) {
%stackaddr$prim87439 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85409)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87439, align 8
%stackaddr$prim87440 = alloca %struct.ScmObj*, align 8
%current_45args85410 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85409)
store volatile %struct.ScmObj* %current_45args85410, %struct.ScmObj** %stackaddr$prim87440, align 8
%stackaddr$prim87441 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85410)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87441, align 8
%stackaddr$prim87442 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87442, align 8
%args85412$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87443 = alloca %struct.ScmObj*, align 8
%args85412$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85412$k$0)
store volatile %struct.ScmObj* %args85412$k$1, %struct.ScmObj** %stackaddr$prim87443, align 8
%clofunc87444 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87444(%struct.ScmObj* %k, %struct.ScmObj* %args85412$k$1)
ret void
}

define tailcc void @proc_clo$ae46905(%struct.ScmObj* %env$ae46905,%struct.ScmObj* %current_45args85416) {
%stackaddr$env-ref87445 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46905, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87445
%stackaddr$prim87446 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85416)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87446, align 8
%stackaddr$prim87447 = alloca %struct.ScmObj*, align 8
%current_45args85417 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85416)
store volatile %struct.ScmObj* %current_45args85417, %struct.ScmObj** %stackaddr$prim87447, align 8
%stackaddr$prim87448 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85417)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87448, align 8
%ae46914 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87449 = call i64 @is_truthy_value(%struct.ScmObj* %ae46914)
%cmp$cmp87449 = icmp eq i64 %truthy$cmp87449, 1
br i1 %cmp$cmp87449, label %truebranch$cmp87449, label %falsebranch$cmp87449
truebranch$cmp87449:
%ae46916 = call %struct.ScmObj* @const_init_int(i64 0)
%ae46917 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87450 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46916, %struct.ScmObj* %ae46917)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87450, align 8
%stackaddr$makeclosure87451 = alloca %struct.ScmObj*, align 8
%fptrToInt87452 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46918 to i64
%ae46918 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87452)
store volatile %struct.ScmObj* %ae46918, %struct.ScmObj** %stackaddr$makeclosure87451, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46918, %struct.ScmObj* %x40229, i64 0)
%ae46919 = call %struct.ScmObj* @const_init_int(i64 0)
%args85427$ae46918$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87453 = alloca %struct.ScmObj*, align 8
%args85427$ae46918$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85427$ae46918$0)
store volatile %struct.ScmObj* %args85427$ae46918$1, %struct.ScmObj** %stackaddr$prim87453, align 8
%stackaddr$prim87454 = alloca %struct.ScmObj*, align 8
%args85427$ae46918$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46919, %struct.ScmObj* %args85427$ae46918$1)
store volatile %struct.ScmObj* %args85427$ae46918$2, %struct.ScmObj** %stackaddr$prim87454, align 8
%clofunc87455 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46918)
musttail call tailcc void %clofunc87455(%struct.ScmObj* %ae46918, %struct.ScmObj* %args85427$ae46918$2)
ret void
falsebranch$cmp87449:
%stackaddr$makeclosure87456 = alloca %struct.ScmObj*, align 8
%fptrToInt87457 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46977 to i64
%ae46977 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87457)
store volatile %struct.ScmObj* %ae46977, %struct.ScmObj** %stackaddr$makeclosure87456, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae46977, %struct.ScmObj* %x40229, i64 0)
%ae46978 = call %struct.ScmObj* @const_init_int(i64 0)
%ae46979 = call %struct.ScmObj* @const_init_int(i64 9)
%args85436$ae46977$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87458 = alloca %struct.ScmObj*, align 8
%args85436$ae46977$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46979, %struct.ScmObj* %args85436$ae46977$0)
store volatile %struct.ScmObj* %args85436$ae46977$1, %struct.ScmObj** %stackaddr$prim87458, align 8
%stackaddr$prim87459 = alloca %struct.ScmObj*, align 8
%args85436$ae46977$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46978, %struct.ScmObj* %args85436$ae46977$1)
store volatile %struct.ScmObj* %args85436$ae46977$2, %struct.ScmObj** %stackaddr$prim87459, align 8
%clofunc87460 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46977)
musttail call tailcc void %clofunc87460(%struct.ScmObj* %ae46977, %struct.ScmObj* %args85436$ae46977$2)
ret void
}

define tailcc void @proc_clo$ae46918(%struct.ScmObj* %env$ae46918,%struct.ScmObj* %current_45args85419) {
%stackaddr$env-ref87461 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46918, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87461
%stackaddr$prim87462 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85419)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87462, align 8
%stackaddr$prim87463 = alloca %struct.ScmObj*, align 8
%current_45args85420 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85419)
store volatile %struct.ScmObj* %current_45args85420, %struct.ScmObj** %stackaddr$prim87463, align 8
%stackaddr$prim87464 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85420)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87464, align 8
%ae46925 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87465 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46925)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87465, align 8
%stackaddr$makeclosure87466 = alloca %struct.ScmObj*, align 8
%fptrToInt87467 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46926 to i64
%ae46926 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87467)
store volatile %struct.ScmObj* %ae46926, %struct.ScmObj** %stackaddr$makeclosure87466, align 8
%ae46927 = call %struct.ScmObj* @const_init_int(i64 0)
%args85426$ae46926$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87468 = alloca %struct.ScmObj*, align 8
%args85426$ae46926$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85426$ae46926$0)
store volatile %struct.ScmObj* %args85426$ae46926$1, %struct.ScmObj** %stackaddr$prim87468, align 8
%stackaddr$prim87469 = alloca %struct.ScmObj*, align 8
%args85426$ae46926$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46927, %struct.ScmObj* %args85426$ae46926$1)
store volatile %struct.ScmObj* %args85426$ae46926$2, %struct.ScmObj** %stackaddr$prim87469, align 8
%clofunc87470 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46926)
musttail call tailcc void %clofunc87470(%struct.ScmObj* %ae46926, %struct.ScmObj* %args85426$ae46926$2)
ret void
}

define tailcc void @proc_clo$ae46926(%struct.ScmObj* %env$ae46926,%struct.ScmObj* %current_45args85422) {
%stackaddr$prim87471 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85422)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87471, align 8
%stackaddr$prim87472 = alloca %struct.ScmObj*, align 8
%current_45args85423 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85422)
store volatile %struct.ScmObj* %current_45args85423, %struct.ScmObj** %stackaddr$prim87472, align 8
%stackaddr$prim87473 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85423)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87473, align 8
%stackaddr$prim87474 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87474, align 8
%args85425$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87475 = alloca %struct.ScmObj*, align 8
%args85425$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85425$k$0)
store volatile %struct.ScmObj* %args85425$k$1, %struct.ScmObj** %stackaddr$prim87475, align 8
%clofunc87476 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87476(%struct.ScmObj* %k, %struct.ScmObj* %args85425$k$1)
ret void
}

define tailcc void @proc_clo$ae46977(%struct.ScmObj* %env$ae46977,%struct.ScmObj* %current_45args85428) {
%stackaddr$env-ref87477 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae46977, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87477
%stackaddr$prim87478 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85428)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87478, align 8
%stackaddr$prim87479 = alloca %struct.ScmObj*, align 8
%current_45args85429 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85428)
store volatile %struct.ScmObj* %current_45args85429, %struct.ScmObj** %stackaddr$prim87479, align 8
%stackaddr$prim87480 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85429)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87480, align 8
%ae46987 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87481 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae46987)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87481, align 8
%stackaddr$makeclosure87482 = alloca %struct.ScmObj*, align 8
%fptrToInt87483 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae46988 to i64
%ae46988 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87483)
store volatile %struct.ScmObj* %ae46988, %struct.ScmObj** %stackaddr$makeclosure87482, align 8
%ae46989 = call %struct.ScmObj* @const_init_int(i64 0)
%args85435$ae46988$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87484 = alloca %struct.ScmObj*, align 8
%args85435$ae46988$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85435$ae46988$0)
store volatile %struct.ScmObj* %args85435$ae46988$1, %struct.ScmObj** %stackaddr$prim87484, align 8
%stackaddr$prim87485 = alloca %struct.ScmObj*, align 8
%args85435$ae46988$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae46989, %struct.ScmObj* %args85435$ae46988$1)
store volatile %struct.ScmObj* %args85435$ae46988$2, %struct.ScmObj** %stackaddr$prim87485, align 8
%clofunc87486 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae46988)
musttail call tailcc void %clofunc87486(%struct.ScmObj* %ae46988, %struct.ScmObj* %args85435$ae46988$2)
ret void
}

define tailcc void @proc_clo$ae46988(%struct.ScmObj* %env$ae46988,%struct.ScmObj* %current_45args85431) {
%stackaddr$prim87487 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85431)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87487, align 8
%stackaddr$prim87488 = alloca %struct.ScmObj*, align 8
%current_45args85432 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85431)
store volatile %struct.ScmObj* %current_45args85432, %struct.ScmObj** %stackaddr$prim87488, align 8
%stackaddr$prim87489 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85432)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87489, align 8
%stackaddr$prim87490 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87490, align 8
%args85434$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87491 = alloca %struct.ScmObj*, align 8
%args85434$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85434$k$0)
store volatile %struct.ScmObj* %args85434$k$1, %struct.ScmObj** %stackaddr$prim87491, align 8
%clofunc87492 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87492(%struct.ScmObj* %k, %struct.ScmObj* %args85434$k$1)
ret void
}

define tailcc void @proc_clo$ae48262(%struct.ScmObj* %env$ae48262,%struct.ScmObj* %current_45args85441) {
%stackaddr$env-ref87493 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48262, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87493
%stackaddr$prim87494 = alloca %struct.ScmObj*, align 8
%_95k40413 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85441)
store volatile %struct.ScmObj* %_95k40413, %struct.ScmObj** %stackaddr$prim87494, align 8
%stackaddr$prim87495 = alloca %struct.ScmObj*, align 8
%current_45args85442 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85441)
store volatile %struct.ScmObj* %current_45args85442, %struct.ScmObj** %stackaddr$prim87495, align 8
%stackaddr$prim87496 = alloca %struct.ScmObj*, align 8
%t4010440232 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85442)
store volatile %struct.ScmObj* %t4010440232, %struct.ScmObj** %stackaddr$prim87496, align 8
%ae48269 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87497 = alloca %struct.ScmObj*, align 8
%anf_45bind40365 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48269)
store volatile %struct.ScmObj* %anf_45bind40365, %struct.ScmObj** %stackaddr$prim87497, align 8
%ae48271 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim87498 = alloca %struct.ScmObj*, align 8
%anf_45bind40366 = call %struct.ScmObj* @prim__60(%struct.ScmObj* %anf_45bind40365, %struct.ScmObj* %ae48271)
store volatile %struct.ScmObj* %anf_45bind40366, %struct.ScmObj** %stackaddr$prim87498, align 8
%truthy$cmp87499 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40366)
%cmp$cmp87499 = icmp eq i64 %truthy$cmp87499, 1
br i1 %cmp$cmp87499, label %truebranch$cmp87499, label %falsebranch$cmp87499
truebranch$cmp87499:
%ae48274 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87500 = alloca %struct.ScmObj*, align 8
%anf_45bind40367 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48274)
store volatile %struct.ScmObj* %anf_45bind40367, %struct.ScmObj** %stackaddr$prim87500, align 8
%ae48276 = call %struct.ScmObj* @const_init_int(i64 9)
%stackaddr$prim87501 = alloca %struct.ScmObj*, align 8
%anf_45bind40368 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40367, %struct.ScmObj* %ae48276)
store volatile %struct.ScmObj* %anf_45bind40368, %struct.ScmObj** %stackaddr$prim87501, align 8
%ae48278 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim87502 = alloca %struct.ScmObj*, align 8
%anf_45bind40369 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40368, %struct.ScmObj* %ae48278)
store volatile %struct.ScmObj* %anf_45bind40369, %struct.ScmObj** %stackaddr$prim87502, align 8
%ae48280 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87503 = alloca %struct.ScmObj*, align 8
%cpsprim40423 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48280, %struct.ScmObj* %anf_45bind40369)
store volatile %struct.ScmObj* %cpsprim40423, %struct.ScmObj** %stackaddr$prim87503, align 8
%stackaddr$makeclosure87504 = alloca %struct.ScmObj*, align 8
%fptrToInt87505 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48282 to i64
%ae48282 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87505)
store volatile %struct.ScmObj* %ae48282, %struct.ScmObj** %stackaddr$makeclosure87504, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48282, %struct.ScmObj* %x40229, i64 0)
%ae48283 = call %struct.ScmObj* @const_init_int(i64 0)
%args85543$ae48282$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87506 = alloca %struct.ScmObj*, align 8
%args85543$ae48282$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40423, %struct.ScmObj* %args85543$ae48282$0)
store volatile %struct.ScmObj* %args85543$ae48282$1, %struct.ScmObj** %stackaddr$prim87506, align 8
%stackaddr$prim87507 = alloca %struct.ScmObj*, align 8
%args85543$ae48282$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48283, %struct.ScmObj* %args85543$ae48282$1)
store volatile %struct.ScmObj* %args85543$ae48282$2, %struct.ScmObj** %stackaddr$prim87507, align 8
%clofunc87508 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48282)
musttail call tailcc void %clofunc87508(%struct.ScmObj* %ae48282, %struct.ScmObj* %args85543$ae48282$2)
ret void
falsebranch$cmp87499:
%stackaddr$prim87509 = alloca %struct.ScmObj*, align 8
%cpsprim40424 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40424, %struct.ScmObj** %stackaddr$prim87509, align 8
%stackaddr$makeclosure87510 = alloca %struct.ScmObj*, align 8
%fptrToInt87511 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50361 to i64
%ae50361 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87511)
store volatile %struct.ScmObj* %ae50361, %struct.ScmObj** %stackaddr$makeclosure87510, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50361, %struct.ScmObj* %x40229, i64 0)
%ae50362 = call %struct.ScmObj* @const_init_int(i64 0)
%args85643$ae50361$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87512 = alloca %struct.ScmObj*, align 8
%args85643$ae50361$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40424, %struct.ScmObj* %args85643$ae50361$0)
store volatile %struct.ScmObj* %args85643$ae50361$1, %struct.ScmObj** %stackaddr$prim87512, align 8
%stackaddr$prim87513 = alloca %struct.ScmObj*, align 8
%args85643$ae50361$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50362, %struct.ScmObj* %args85643$ae50361$1)
store volatile %struct.ScmObj* %args85643$ae50361$2, %struct.ScmObj** %stackaddr$prim87513, align 8
%clofunc87514 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50361)
musttail call tailcc void %clofunc87514(%struct.ScmObj* %ae50361, %struct.ScmObj* %args85643$ae50361$2)
ret void
}

define tailcc void @proc_clo$ae48282(%struct.ScmObj* %env$ae48282,%struct.ScmObj* %current_45args85444) {
%stackaddr$env-ref87515 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48282, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87515
%stackaddr$prim87516 = alloca %struct.ScmObj*, align 8
%_95k40414 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85444)
store volatile %struct.ScmObj* %_95k40414, %struct.ScmObj** %stackaddr$prim87516, align 8
%stackaddr$prim87517 = alloca %struct.ScmObj*, align 8
%current_45args85445 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85444)
store volatile %struct.ScmObj* %current_45args85445, %struct.ScmObj** %stackaddr$prim87517, align 8
%stackaddr$prim87518 = alloca %struct.ScmObj*, align 8
%t4010540233 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85445)
store volatile %struct.ScmObj* %t4010540233, %struct.ScmObj** %stackaddr$prim87518, align 8
%ae48288 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87519 = call i64 @is_truthy_value(%struct.ScmObj* %ae48288)
%cmp$cmp87519 = icmp eq i64 %truthy$cmp87519, 1
br i1 %cmp$cmp87519, label %truebranch$cmp87519, label %falsebranch$cmp87519
truebranch$cmp87519:
%stackaddr$prim87520 = alloca %struct.ScmObj*, align 8
%cpsprim40421 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40421, %struct.ScmObj** %stackaddr$prim87520, align 8
%stackaddr$makeclosure87521 = alloca %struct.ScmObj*, align 8
%fptrToInt87522 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48289 to i64
%ae48289 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87522)
store volatile %struct.ScmObj* %ae48289, %struct.ScmObj** %stackaddr$makeclosure87521, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48289, %struct.ScmObj* %x40229, i64 0)
%ae48290 = call %struct.ScmObj* @const_init_int(i64 0)
%args85494$ae48289$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87523 = alloca %struct.ScmObj*, align 8
%args85494$ae48289$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40421, %struct.ScmObj* %args85494$ae48289$0)
store volatile %struct.ScmObj* %args85494$ae48289$1, %struct.ScmObj** %stackaddr$prim87523, align 8
%stackaddr$prim87524 = alloca %struct.ScmObj*, align 8
%args85494$ae48289$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48290, %struct.ScmObj* %args85494$ae48289$1)
store volatile %struct.ScmObj* %args85494$ae48289$2, %struct.ScmObj** %stackaddr$prim87524, align 8
%clofunc87525 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48289)
musttail call tailcc void %clofunc87525(%struct.ScmObj* %ae48289, %struct.ScmObj* %args85494$ae48289$2)
ret void
falsebranch$cmp87519:
%ae48754 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87526 = alloca %struct.ScmObj*, align 8
%anf_45bind40370 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48754)
store volatile %struct.ScmObj* %anf_45bind40370, %struct.ScmObj** %stackaddr$prim87526, align 8
%ae48756 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim87527 = alloca %struct.ScmObj*, align 8
%anf_45bind40371 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40370, %struct.ScmObj* %ae48756)
store volatile %struct.ScmObj* %anf_45bind40371, %struct.ScmObj** %stackaddr$prim87527, align 8
%ae48758 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim87528 = alloca %struct.ScmObj*, align 8
%anf_45bind40372 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40371, %struct.ScmObj* %ae48758)
store volatile %struct.ScmObj* %anf_45bind40372, %struct.ScmObj** %stackaddr$prim87528, align 8
%ae48760 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87529 = alloca %struct.ScmObj*, align 8
%cpsprim40422 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48760, %struct.ScmObj* %anf_45bind40372)
store volatile %struct.ScmObj* %cpsprim40422, %struct.ScmObj** %stackaddr$prim87529, align 8
%stackaddr$makeclosure87530 = alloca %struct.ScmObj*, align 8
%fptrToInt87531 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48762 to i64
%ae48762 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87531)
store volatile %struct.ScmObj* %ae48762, %struct.ScmObj** %stackaddr$makeclosure87530, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48762, %struct.ScmObj* %x40229, i64 0)
%ae48763 = call %struct.ScmObj* @const_init_int(i64 0)
%args85542$ae48762$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87532 = alloca %struct.ScmObj*, align 8
%args85542$ae48762$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40422, %struct.ScmObj* %args85542$ae48762$0)
store volatile %struct.ScmObj* %args85542$ae48762$1, %struct.ScmObj** %stackaddr$prim87532, align 8
%stackaddr$prim87533 = alloca %struct.ScmObj*, align 8
%args85542$ae48762$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48763, %struct.ScmObj* %args85542$ae48762$1)
store volatile %struct.ScmObj* %args85542$ae48762$2, %struct.ScmObj** %stackaddr$prim87533, align 8
%clofunc87534 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48762)
musttail call tailcc void %clofunc87534(%struct.ScmObj* %ae48762, %struct.ScmObj* %args85542$ae48762$2)
ret void
}

define tailcc void @proc_clo$ae48289(%struct.ScmObj* %env$ae48289,%struct.ScmObj* %current_45args85447) {
%stackaddr$env-ref87535 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48289, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87535
%stackaddr$prim87536 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85447)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim87536, align 8
%stackaddr$prim87537 = alloca %struct.ScmObj*, align 8
%current_45args85448 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85447)
store volatile %struct.ScmObj* %current_45args85448, %struct.ScmObj** %stackaddr$prim87537, align 8
%stackaddr$prim87538 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85448)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim87538, align 8
%ae48296 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87539 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48296)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim87539, align 8
%truthy$cmp87540 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp87540 = icmp eq i64 %truthy$cmp87540, 1
br i1 %cmp$cmp87540, label %truebranch$cmp87540, label %falsebranch$cmp87540
truebranch$cmp87540:
%ae48299 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87541 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48299)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim87541, align 8
%ae48301 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87542 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48301)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim87542, align 8
%stackaddr$prim87543 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim87543, align 8
%ae48305 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87544 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48305, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim87544, align 8
%stackaddr$makeclosure87545 = alloca %struct.ScmObj*, align 8
%fptrToInt87546 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48307 to i64
%ae48307 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87546)
store volatile %struct.ScmObj* %ae48307, %struct.ScmObj** %stackaddr$makeclosure87545, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48307, %struct.ScmObj* %x40229, i64 0)
%ae48308 = call %struct.ScmObj* @const_init_int(i64 0)
%args85471$ae48307$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87547 = alloca %struct.ScmObj*, align 8
%args85471$ae48307$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85471$ae48307$0)
store volatile %struct.ScmObj* %args85471$ae48307$1, %struct.ScmObj** %stackaddr$prim87547, align 8
%stackaddr$prim87548 = alloca %struct.ScmObj*, align 8
%args85471$ae48307$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48308, %struct.ScmObj* %args85471$ae48307$1)
store volatile %struct.ScmObj* %args85471$ae48307$2, %struct.ScmObj** %stackaddr$prim87548, align 8
%clofunc87549 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48307)
musttail call tailcc void %clofunc87549(%struct.ScmObj* %ae48307, %struct.ScmObj* %args85471$ae48307$2)
ret void
falsebranch$cmp87540:
%stackaddr$makeclosure87550 = alloca %struct.ScmObj*, align 8
%fptrToInt87551 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48545 to i64
%ae48545 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87551)
store volatile %struct.ScmObj* %ae48545, %struct.ScmObj** %stackaddr$makeclosure87550, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48545, %struct.ScmObj* %x40229, i64 0)
%ae48546 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48547 = call %struct.ScmObj* @const_init_int(i64 7)
%args85493$ae48545$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87552 = alloca %struct.ScmObj*, align 8
%args85493$ae48545$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48547, %struct.ScmObj* %args85493$ae48545$0)
store volatile %struct.ScmObj* %args85493$ae48545$1, %struct.ScmObj** %stackaddr$prim87552, align 8
%stackaddr$prim87553 = alloca %struct.ScmObj*, align 8
%args85493$ae48545$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48546, %struct.ScmObj* %args85493$ae48545$1)
store volatile %struct.ScmObj* %args85493$ae48545$2, %struct.ScmObj** %stackaddr$prim87553, align 8
%clofunc87554 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48545)
musttail call tailcc void %clofunc87554(%struct.ScmObj* %ae48545, %struct.ScmObj* %args85493$ae48545$2)
ret void
}

define tailcc void @proc_clo$ae48307(%struct.ScmObj* %env$ae48307,%struct.ScmObj* %current_45args85450) {
%stackaddr$env-ref87555 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48307, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87555
%stackaddr$prim87556 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85450)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87556, align 8
%stackaddr$prim87557 = alloca %struct.ScmObj*, align 8
%current_45args85451 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85450)
store volatile %struct.ScmObj* %current_45args85451, %struct.ScmObj** %stackaddr$prim87557, align 8
%stackaddr$prim87558 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85451)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87558, align 8
%ae48313 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87559 = call i64 @is_truthy_value(%struct.ScmObj* %ae48313)
%cmp$cmp87559 = icmp eq i64 %truthy$cmp87559, 1
br i1 %cmp$cmp87559, label %truebranch$cmp87559, label %falsebranch$cmp87559
truebranch$cmp87559:
%ae48315 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48316 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87560 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48315, %struct.ScmObj* %ae48316)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87560, align 8
%stackaddr$makeclosure87561 = alloca %struct.ScmObj*, align 8
%fptrToInt87562 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48317 to i64
%ae48317 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87562)
store volatile %struct.ScmObj* %ae48317, %struct.ScmObj** %stackaddr$makeclosure87561, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48317, %struct.ScmObj* %x40229, i64 0)
%ae48318 = call %struct.ScmObj* @const_init_int(i64 0)
%args85461$ae48317$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87563 = alloca %struct.ScmObj*, align 8
%args85461$ae48317$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85461$ae48317$0)
store volatile %struct.ScmObj* %args85461$ae48317$1, %struct.ScmObj** %stackaddr$prim87563, align 8
%stackaddr$prim87564 = alloca %struct.ScmObj*, align 8
%args85461$ae48317$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48318, %struct.ScmObj* %args85461$ae48317$1)
store volatile %struct.ScmObj* %args85461$ae48317$2, %struct.ScmObj** %stackaddr$prim87564, align 8
%clofunc87565 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48317)
musttail call tailcc void %clofunc87565(%struct.ScmObj* %ae48317, %struct.ScmObj* %args85461$ae48317$2)
ret void
falsebranch$cmp87559:
%stackaddr$makeclosure87566 = alloca %struct.ScmObj*, align 8
%fptrToInt87567 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48376 to i64
%ae48376 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87567)
store volatile %struct.ScmObj* %ae48376, %struct.ScmObj** %stackaddr$makeclosure87566, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48376, %struct.ScmObj* %x40229, i64 0)
%ae48377 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48378 = call %struct.ScmObj* @const_init_int(i64 9)
%args85470$ae48376$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87568 = alloca %struct.ScmObj*, align 8
%args85470$ae48376$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48378, %struct.ScmObj* %args85470$ae48376$0)
store volatile %struct.ScmObj* %args85470$ae48376$1, %struct.ScmObj** %stackaddr$prim87568, align 8
%stackaddr$prim87569 = alloca %struct.ScmObj*, align 8
%args85470$ae48376$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48377, %struct.ScmObj* %args85470$ae48376$1)
store volatile %struct.ScmObj* %args85470$ae48376$2, %struct.ScmObj** %stackaddr$prim87569, align 8
%clofunc87570 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48376)
musttail call tailcc void %clofunc87570(%struct.ScmObj* %ae48376, %struct.ScmObj* %args85470$ae48376$2)
ret void
}

define tailcc void @proc_clo$ae48317(%struct.ScmObj* %env$ae48317,%struct.ScmObj* %current_45args85453) {
%stackaddr$env-ref87571 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48317, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87571
%stackaddr$prim87572 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85453)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87572, align 8
%stackaddr$prim87573 = alloca %struct.ScmObj*, align 8
%current_45args85454 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85453)
store volatile %struct.ScmObj* %current_45args85454, %struct.ScmObj** %stackaddr$prim87573, align 8
%stackaddr$prim87574 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85454)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87574, align 8
%ae48324 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87575 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48324)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87575, align 8
%stackaddr$makeclosure87576 = alloca %struct.ScmObj*, align 8
%fptrToInt87577 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48325 to i64
%ae48325 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87577)
store volatile %struct.ScmObj* %ae48325, %struct.ScmObj** %stackaddr$makeclosure87576, align 8
%ae48326 = call %struct.ScmObj* @const_init_int(i64 0)
%args85460$ae48325$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87578 = alloca %struct.ScmObj*, align 8
%args85460$ae48325$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85460$ae48325$0)
store volatile %struct.ScmObj* %args85460$ae48325$1, %struct.ScmObj** %stackaddr$prim87578, align 8
%stackaddr$prim87579 = alloca %struct.ScmObj*, align 8
%args85460$ae48325$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48326, %struct.ScmObj* %args85460$ae48325$1)
store volatile %struct.ScmObj* %args85460$ae48325$2, %struct.ScmObj** %stackaddr$prim87579, align 8
%clofunc87580 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48325)
musttail call tailcc void %clofunc87580(%struct.ScmObj* %ae48325, %struct.ScmObj* %args85460$ae48325$2)
ret void
}

define tailcc void @proc_clo$ae48325(%struct.ScmObj* %env$ae48325,%struct.ScmObj* %current_45args85456) {
%stackaddr$prim87581 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85456)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87581, align 8
%stackaddr$prim87582 = alloca %struct.ScmObj*, align 8
%current_45args85457 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85456)
store volatile %struct.ScmObj* %current_45args85457, %struct.ScmObj** %stackaddr$prim87582, align 8
%stackaddr$prim87583 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85457)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87583, align 8
%stackaddr$prim87584 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87584, align 8
%args85459$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87585 = alloca %struct.ScmObj*, align 8
%args85459$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85459$k$0)
store volatile %struct.ScmObj* %args85459$k$1, %struct.ScmObj** %stackaddr$prim87585, align 8
%clofunc87586 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87586(%struct.ScmObj* %k, %struct.ScmObj* %args85459$k$1)
ret void
}

define tailcc void @proc_clo$ae48376(%struct.ScmObj* %env$ae48376,%struct.ScmObj* %current_45args85462) {
%stackaddr$env-ref87587 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48376, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87587
%stackaddr$prim87588 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85462)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87588, align 8
%stackaddr$prim87589 = alloca %struct.ScmObj*, align 8
%current_45args85463 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85462)
store volatile %struct.ScmObj* %current_45args85463, %struct.ScmObj** %stackaddr$prim87589, align 8
%stackaddr$prim87590 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85463)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87590, align 8
%ae48386 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87591 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48386)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87591, align 8
%stackaddr$makeclosure87592 = alloca %struct.ScmObj*, align 8
%fptrToInt87593 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48387 to i64
%ae48387 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87593)
store volatile %struct.ScmObj* %ae48387, %struct.ScmObj** %stackaddr$makeclosure87592, align 8
%ae48388 = call %struct.ScmObj* @const_init_int(i64 0)
%args85469$ae48387$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87594 = alloca %struct.ScmObj*, align 8
%args85469$ae48387$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85469$ae48387$0)
store volatile %struct.ScmObj* %args85469$ae48387$1, %struct.ScmObj** %stackaddr$prim87594, align 8
%stackaddr$prim87595 = alloca %struct.ScmObj*, align 8
%args85469$ae48387$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48388, %struct.ScmObj* %args85469$ae48387$1)
store volatile %struct.ScmObj* %args85469$ae48387$2, %struct.ScmObj** %stackaddr$prim87595, align 8
%clofunc87596 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48387)
musttail call tailcc void %clofunc87596(%struct.ScmObj* %ae48387, %struct.ScmObj* %args85469$ae48387$2)
ret void
}

define tailcc void @proc_clo$ae48387(%struct.ScmObj* %env$ae48387,%struct.ScmObj* %current_45args85465) {
%stackaddr$prim87597 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85465)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87597, align 8
%stackaddr$prim87598 = alloca %struct.ScmObj*, align 8
%current_45args85466 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85465)
store volatile %struct.ScmObj* %current_45args85466, %struct.ScmObj** %stackaddr$prim87598, align 8
%stackaddr$prim87599 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85466)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87599, align 8
%stackaddr$prim87600 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87600, align 8
%args85468$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87601 = alloca %struct.ScmObj*, align 8
%args85468$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85468$k$0)
store volatile %struct.ScmObj* %args85468$k$1, %struct.ScmObj** %stackaddr$prim87601, align 8
%clofunc87602 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87602(%struct.ScmObj* %k, %struct.ScmObj* %args85468$k$1)
ret void
}

define tailcc void @proc_clo$ae48545(%struct.ScmObj* %env$ae48545,%struct.ScmObj* %current_45args85472) {
%stackaddr$env-ref87603 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48545, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87603
%stackaddr$prim87604 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85472)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87604, align 8
%stackaddr$prim87605 = alloca %struct.ScmObj*, align 8
%current_45args85473 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85472)
store volatile %struct.ScmObj* %current_45args85473, %struct.ScmObj** %stackaddr$prim87605, align 8
%stackaddr$prim87606 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85473)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87606, align 8
%ae48554 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87607 = call i64 @is_truthy_value(%struct.ScmObj* %ae48554)
%cmp$cmp87607 = icmp eq i64 %truthy$cmp87607, 1
br i1 %cmp$cmp87607, label %truebranch$cmp87607, label %falsebranch$cmp87607
truebranch$cmp87607:
%ae48556 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48557 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87608 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48556, %struct.ScmObj* %ae48557)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87608, align 8
%stackaddr$makeclosure87609 = alloca %struct.ScmObj*, align 8
%fptrToInt87610 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48558 to i64
%ae48558 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87610)
store volatile %struct.ScmObj* %ae48558, %struct.ScmObj** %stackaddr$makeclosure87609, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48558, %struct.ScmObj* %x40229, i64 0)
%ae48559 = call %struct.ScmObj* @const_init_int(i64 0)
%args85483$ae48558$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87611 = alloca %struct.ScmObj*, align 8
%args85483$ae48558$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85483$ae48558$0)
store volatile %struct.ScmObj* %args85483$ae48558$1, %struct.ScmObj** %stackaddr$prim87611, align 8
%stackaddr$prim87612 = alloca %struct.ScmObj*, align 8
%args85483$ae48558$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48559, %struct.ScmObj* %args85483$ae48558$1)
store volatile %struct.ScmObj* %args85483$ae48558$2, %struct.ScmObj** %stackaddr$prim87612, align 8
%clofunc87613 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48558)
musttail call tailcc void %clofunc87613(%struct.ScmObj* %ae48558, %struct.ScmObj* %args85483$ae48558$2)
ret void
falsebranch$cmp87607:
%stackaddr$makeclosure87614 = alloca %struct.ScmObj*, align 8
%fptrToInt87615 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48617 to i64
%ae48617 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87615)
store volatile %struct.ScmObj* %ae48617, %struct.ScmObj** %stackaddr$makeclosure87614, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48617, %struct.ScmObj* %x40229, i64 0)
%ae48618 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48619 = call %struct.ScmObj* @const_init_int(i64 9)
%args85492$ae48617$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87616 = alloca %struct.ScmObj*, align 8
%args85492$ae48617$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48619, %struct.ScmObj* %args85492$ae48617$0)
store volatile %struct.ScmObj* %args85492$ae48617$1, %struct.ScmObj** %stackaddr$prim87616, align 8
%stackaddr$prim87617 = alloca %struct.ScmObj*, align 8
%args85492$ae48617$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48618, %struct.ScmObj* %args85492$ae48617$1)
store volatile %struct.ScmObj* %args85492$ae48617$2, %struct.ScmObj** %stackaddr$prim87617, align 8
%clofunc87618 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48617)
musttail call tailcc void %clofunc87618(%struct.ScmObj* %ae48617, %struct.ScmObj* %args85492$ae48617$2)
ret void
}

define tailcc void @proc_clo$ae48558(%struct.ScmObj* %env$ae48558,%struct.ScmObj* %current_45args85475) {
%stackaddr$env-ref87619 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48558, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87619
%stackaddr$prim87620 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85475)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87620, align 8
%stackaddr$prim87621 = alloca %struct.ScmObj*, align 8
%current_45args85476 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85475)
store volatile %struct.ScmObj* %current_45args85476, %struct.ScmObj** %stackaddr$prim87621, align 8
%stackaddr$prim87622 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85476)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87622, align 8
%ae48565 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87623 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48565)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87623, align 8
%stackaddr$makeclosure87624 = alloca %struct.ScmObj*, align 8
%fptrToInt87625 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48566 to i64
%ae48566 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87625)
store volatile %struct.ScmObj* %ae48566, %struct.ScmObj** %stackaddr$makeclosure87624, align 8
%ae48567 = call %struct.ScmObj* @const_init_int(i64 0)
%args85482$ae48566$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87626 = alloca %struct.ScmObj*, align 8
%args85482$ae48566$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85482$ae48566$0)
store volatile %struct.ScmObj* %args85482$ae48566$1, %struct.ScmObj** %stackaddr$prim87626, align 8
%stackaddr$prim87627 = alloca %struct.ScmObj*, align 8
%args85482$ae48566$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48567, %struct.ScmObj* %args85482$ae48566$1)
store volatile %struct.ScmObj* %args85482$ae48566$2, %struct.ScmObj** %stackaddr$prim87627, align 8
%clofunc87628 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48566)
musttail call tailcc void %clofunc87628(%struct.ScmObj* %ae48566, %struct.ScmObj* %args85482$ae48566$2)
ret void
}

define tailcc void @proc_clo$ae48566(%struct.ScmObj* %env$ae48566,%struct.ScmObj* %current_45args85478) {
%stackaddr$prim87629 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85478)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87629, align 8
%stackaddr$prim87630 = alloca %struct.ScmObj*, align 8
%current_45args85479 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85478)
store volatile %struct.ScmObj* %current_45args85479, %struct.ScmObj** %stackaddr$prim87630, align 8
%stackaddr$prim87631 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85479)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87631, align 8
%stackaddr$prim87632 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87632, align 8
%args85481$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87633 = alloca %struct.ScmObj*, align 8
%args85481$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85481$k$0)
store volatile %struct.ScmObj* %args85481$k$1, %struct.ScmObj** %stackaddr$prim87633, align 8
%clofunc87634 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87634(%struct.ScmObj* %k, %struct.ScmObj* %args85481$k$1)
ret void
}

define tailcc void @proc_clo$ae48617(%struct.ScmObj* %env$ae48617,%struct.ScmObj* %current_45args85484) {
%stackaddr$env-ref87635 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48617, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87635
%stackaddr$prim87636 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85484)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87636, align 8
%stackaddr$prim87637 = alloca %struct.ScmObj*, align 8
%current_45args85485 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85484)
store volatile %struct.ScmObj* %current_45args85485, %struct.ScmObj** %stackaddr$prim87637, align 8
%stackaddr$prim87638 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85485)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87638, align 8
%ae48627 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87639 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48627)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87639, align 8
%stackaddr$makeclosure87640 = alloca %struct.ScmObj*, align 8
%fptrToInt87641 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48628 to i64
%ae48628 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87641)
store volatile %struct.ScmObj* %ae48628, %struct.ScmObj** %stackaddr$makeclosure87640, align 8
%ae48629 = call %struct.ScmObj* @const_init_int(i64 0)
%args85491$ae48628$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87642 = alloca %struct.ScmObj*, align 8
%args85491$ae48628$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85491$ae48628$0)
store volatile %struct.ScmObj* %args85491$ae48628$1, %struct.ScmObj** %stackaddr$prim87642, align 8
%stackaddr$prim87643 = alloca %struct.ScmObj*, align 8
%args85491$ae48628$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48629, %struct.ScmObj* %args85491$ae48628$1)
store volatile %struct.ScmObj* %args85491$ae48628$2, %struct.ScmObj** %stackaddr$prim87643, align 8
%clofunc87644 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48628)
musttail call tailcc void %clofunc87644(%struct.ScmObj* %ae48628, %struct.ScmObj* %args85491$ae48628$2)
ret void
}

define tailcc void @proc_clo$ae48628(%struct.ScmObj* %env$ae48628,%struct.ScmObj* %current_45args85487) {
%stackaddr$prim87645 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85487)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87645, align 8
%stackaddr$prim87646 = alloca %struct.ScmObj*, align 8
%current_45args85488 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85487)
store volatile %struct.ScmObj* %current_45args85488, %struct.ScmObj** %stackaddr$prim87646, align 8
%stackaddr$prim87647 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85488)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87647, align 8
%stackaddr$prim87648 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87648, align 8
%args85490$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87649 = alloca %struct.ScmObj*, align 8
%args85490$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85490$k$0)
store volatile %struct.ScmObj* %args85490$k$1, %struct.ScmObj** %stackaddr$prim87649, align 8
%clofunc87650 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87650(%struct.ScmObj* %k, %struct.ScmObj* %args85490$k$1)
ret void
}

define tailcc void @proc_clo$ae48762(%struct.ScmObj* %env$ae48762,%struct.ScmObj* %current_45args85495) {
%stackaddr$env-ref87651 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48762, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87651
%stackaddr$prim87652 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85495)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim87652, align 8
%stackaddr$prim87653 = alloca %struct.ScmObj*, align 8
%current_45args85496 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85495)
store volatile %struct.ScmObj* %current_45args85496, %struct.ScmObj** %stackaddr$prim87653, align 8
%stackaddr$prim87654 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85496)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim87654, align 8
%ae48769 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87655 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48769)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim87655, align 8
%truthy$cmp87656 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp87656 = icmp eq i64 %truthy$cmp87656, 1
br i1 %cmp$cmp87656, label %truebranch$cmp87656, label %falsebranch$cmp87656
truebranch$cmp87656:
%ae48772 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87657 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48772)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim87657, align 8
%ae48774 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87658 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48774)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim87658, align 8
%stackaddr$prim87659 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim87659, align 8
%ae48778 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87660 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48778, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim87660, align 8
%stackaddr$makeclosure87661 = alloca %struct.ScmObj*, align 8
%fptrToInt87662 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48780 to i64
%ae48780 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87662)
store volatile %struct.ScmObj* %ae48780, %struct.ScmObj** %stackaddr$makeclosure87661, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48780, %struct.ScmObj* %x40229, i64 0)
%ae48781 = call %struct.ScmObj* @const_init_int(i64 0)
%args85519$ae48780$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87663 = alloca %struct.ScmObj*, align 8
%args85519$ae48780$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85519$ae48780$0)
store volatile %struct.ScmObj* %args85519$ae48780$1, %struct.ScmObj** %stackaddr$prim87663, align 8
%stackaddr$prim87664 = alloca %struct.ScmObj*, align 8
%args85519$ae48780$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48781, %struct.ScmObj* %args85519$ae48780$1)
store volatile %struct.ScmObj* %args85519$ae48780$2, %struct.ScmObj** %stackaddr$prim87664, align 8
%clofunc87665 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48780)
musttail call tailcc void %clofunc87665(%struct.ScmObj* %ae48780, %struct.ScmObj* %args85519$ae48780$2)
ret void
falsebranch$cmp87656:
%stackaddr$makeclosure87666 = alloca %struct.ScmObj*, align 8
%fptrToInt87667 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49018 to i64
%ae49018 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87667)
store volatile %struct.ScmObj* %ae49018, %struct.ScmObj** %stackaddr$makeclosure87666, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49018, %struct.ScmObj* %x40229, i64 0)
%ae49019 = call %struct.ScmObj* @const_init_int(i64 0)
%ae49020 = call %struct.ScmObj* @const_init_int(i64 7)
%args85541$ae49018$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87668 = alloca %struct.ScmObj*, align 8
%args85541$ae49018$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49020, %struct.ScmObj* %args85541$ae49018$0)
store volatile %struct.ScmObj* %args85541$ae49018$1, %struct.ScmObj** %stackaddr$prim87668, align 8
%stackaddr$prim87669 = alloca %struct.ScmObj*, align 8
%args85541$ae49018$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49019, %struct.ScmObj* %args85541$ae49018$1)
store volatile %struct.ScmObj* %args85541$ae49018$2, %struct.ScmObj** %stackaddr$prim87669, align 8
%clofunc87670 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49018)
musttail call tailcc void %clofunc87670(%struct.ScmObj* %ae49018, %struct.ScmObj* %args85541$ae49018$2)
ret void
}

define tailcc void @proc_clo$ae48780(%struct.ScmObj* %env$ae48780,%struct.ScmObj* %current_45args85498) {
%stackaddr$env-ref87671 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48780, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87671
%stackaddr$prim87672 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85498)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87672, align 8
%stackaddr$prim87673 = alloca %struct.ScmObj*, align 8
%current_45args85499 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85498)
store volatile %struct.ScmObj* %current_45args85499, %struct.ScmObj** %stackaddr$prim87673, align 8
%stackaddr$prim87674 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85499)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87674, align 8
%ae48786 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87675 = call i64 @is_truthy_value(%struct.ScmObj* %ae48786)
%cmp$cmp87675 = icmp eq i64 %truthy$cmp87675, 1
br i1 %cmp$cmp87675, label %truebranch$cmp87675, label %falsebranch$cmp87675
truebranch$cmp87675:
%ae48788 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48789 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87676 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48788, %struct.ScmObj* %ae48789)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87676, align 8
%stackaddr$makeclosure87677 = alloca %struct.ScmObj*, align 8
%fptrToInt87678 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48790 to i64
%ae48790 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87678)
store volatile %struct.ScmObj* %ae48790, %struct.ScmObj** %stackaddr$makeclosure87677, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48790, %struct.ScmObj* %x40229, i64 0)
%ae48791 = call %struct.ScmObj* @const_init_int(i64 0)
%args85509$ae48790$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87679 = alloca %struct.ScmObj*, align 8
%args85509$ae48790$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85509$ae48790$0)
store volatile %struct.ScmObj* %args85509$ae48790$1, %struct.ScmObj** %stackaddr$prim87679, align 8
%stackaddr$prim87680 = alloca %struct.ScmObj*, align 8
%args85509$ae48790$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48791, %struct.ScmObj* %args85509$ae48790$1)
store volatile %struct.ScmObj* %args85509$ae48790$2, %struct.ScmObj** %stackaddr$prim87680, align 8
%clofunc87681 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48790)
musttail call tailcc void %clofunc87681(%struct.ScmObj* %ae48790, %struct.ScmObj* %args85509$ae48790$2)
ret void
falsebranch$cmp87675:
%stackaddr$makeclosure87682 = alloca %struct.ScmObj*, align 8
%fptrToInt87683 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48849 to i64
%ae48849 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87683)
store volatile %struct.ScmObj* %ae48849, %struct.ScmObj** %stackaddr$makeclosure87682, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae48849, %struct.ScmObj* %x40229, i64 0)
%ae48850 = call %struct.ScmObj* @const_init_int(i64 0)
%ae48851 = call %struct.ScmObj* @const_init_int(i64 9)
%args85518$ae48849$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87684 = alloca %struct.ScmObj*, align 8
%args85518$ae48849$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48851, %struct.ScmObj* %args85518$ae48849$0)
store volatile %struct.ScmObj* %args85518$ae48849$1, %struct.ScmObj** %stackaddr$prim87684, align 8
%stackaddr$prim87685 = alloca %struct.ScmObj*, align 8
%args85518$ae48849$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48850, %struct.ScmObj* %args85518$ae48849$1)
store volatile %struct.ScmObj* %args85518$ae48849$2, %struct.ScmObj** %stackaddr$prim87685, align 8
%clofunc87686 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48849)
musttail call tailcc void %clofunc87686(%struct.ScmObj* %ae48849, %struct.ScmObj* %args85518$ae48849$2)
ret void
}

define tailcc void @proc_clo$ae48790(%struct.ScmObj* %env$ae48790,%struct.ScmObj* %current_45args85501) {
%stackaddr$env-ref87687 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48790, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87687
%stackaddr$prim87688 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85501)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87688, align 8
%stackaddr$prim87689 = alloca %struct.ScmObj*, align 8
%current_45args85502 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85501)
store volatile %struct.ScmObj* %current_45args85502, %struct.ScmObj** %stackaddr$prim87689, align 8
%stackaddr$prim87690 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85502)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87690, align 8
%ae48797 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87691 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48797)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87691, align 8
%stackaddr$makeclosure87692 = alloca %struct.ScmObj*, align 8
%fptrToInt87693 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48798 to i64
%ae48798 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87693)
store volatile %struct.ScmObj* %ae48798, %struct.ScmObj** %stackaddr$makeclosure87692, align 8
%ae48799 = call %struct.ScmObj* @const_init_int(i64 0)
%args85508$ae48798$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87694 = alloca %struct.ScmObj*, align 8
%args85508$ae48798$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85508$ae48798$0)
store volatile %struct.ScmObj* %args85508$ae48798$1, %struct.ScmObj** %stackaddr$prim87694, align 8
%stackaddr$prim87695 = alloca %struct.ScmObj*, align 8
%args85508$ae48798$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48799, %struct.ScmObj* %args85508$ae48798$1)
store volatile %struct.ScmObj* %args85508$ae48798$2, %struct.ScmObj** %stackaddr$prim87695, align 8
%clofunc87696 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48798)
musttail call tailcc void %clofunc87696(%struct.ScmObj* %ae48798, %struct.ScmObj* %args85508$ae48798$2)
ret void
}

define tailcc void @proc_clo$ae48798(%struct.ScmObj* %env$ae48798,%struct.ScmObj* %current_45args85504) {
%stackaddr$prim87697 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85504)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87697, align 8
%stackaddr$prim87698 = alloca %struct.ScmObj*, align 8
%current_45args85505 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85504)
store volatile %struct.ScmObj* %current_45args85505, %struct.ScmObj** %stackaddr$prim87698, align 8
%stackaddr$prim87699 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85505)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87699, align 8
%stackaddr$prim87700 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87700, align 8
%args85507$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87701 = alloca %struct.ScmObj*, align 8
%args85507$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85507$k$0)
store volatile %struct.ScmObj* %args85507$k$1, %struct.ScmObj** %stackaddr$prim87701, align 8
%clofunc87702 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87702(%struct.ScmObj* %k, %struct.ScmObj* %args85507$k$1)
ret void
}

define tailcc void @proc_clo$ae48849(%struct.ScmObj* %env$ae48849,%struct.ScmObj* %current_45args85510) {
%stackaddr$env-ref87703 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae48849, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87703
%stackaddr$prim87704 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85510)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87704, align 8
%stackaddr$prim87705 = alloca %struct.ScmObj*, align 8
%current_45args85511 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85510)
store volatile %struct.ScmObj* %current_45args85511, %struct.ScmObj** %stackaddr$prim87705, align 8
%stackaddr$prim87706 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85511)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87706, align 8
%ae48859 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87707 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae48859)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87707, align 8
%stackaddr$makeclosure87708 = alloca %struct.ScmObj*, align 8
%fptrToInt87709 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae48860 to i64
%ae48860 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87709)
store volatile %struct.ScmObj* %ae48860, %struct.ScmObj** %stackaddr$makeclosure87708, align 8
%ae48861 = call %struct.ScmObj* @const_init_int(i64 0)
%args85517$ae48860$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87710 = alloca %struct.ScmObj*, align 8
%args85517$ae48860$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85517$ae48860$0)
store volatile %struct.ScmObj* %args85517$ae48860$1, %struct.ScmObj** %stackaddr$prim87710, align 8
%stackaddr$prim87711 = alloca %struct.ScmObj*, align 8
%args85517$ae48860$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae48861, %struct.ScmObj* %args85517$ae48860$1)
store volatile %struct.ScmObj* %args85517$ae48860$2, %struct.ScmObj** %stackaddr$prim87711, align 8
%clofunc87712 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae48860)
musttail call tailcc void %clofunc87712(%struct.ScmObj* %ae48860, %struct.ScmObj* %args85517$ae48860$2)
ret void
}

define tailcc void @proc_clo$ae48860(%struct.ScmObj* %env$ae48860,%struct.ScmObj* %current_45args85513) {
%stackaddr$prim87713 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85513)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87713, align 8
%stackaddr$prim87714 = alloca %struct.ScmObj*, align 8
%current_45args85514 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85513)
store volatile %struct.ScmObj* %current_45args85514, %struct.ScmObj** %stackaddr$prim87714, align 8
%stackaddr$prim87715 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85514)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87715, align 8
%stackaddr$prim87716 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87716, align 8
%args85516$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87717 = alloca %struct.ScmObj*, align 8
%args85516$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85516$k$0)
store volatile %struct.ScmObj* %args85516$k$1, %struct.ScmObj** %stackaddr$prim87717, align 8
%clofunc87718 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87718(%struct.ScmObj* %k, %struct.ScmObj* %args85516$k$1)
ret void
}

define tailcc void @proc_clo$ae49018(%struct.ScmObj* %env$ae49018,%struct.ScmObj* %current_45args85520) {
%stackaddr$env-ref87719 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49018, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87719
%stackaddr$prim87720 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85520)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87720, align 8
%stackaddr$prim87721 = alloca %struct.ScmObj*, align 8
%current_45args85521 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85520)
store volatile %struct.ScmObj* %current_45args85521, %struct.ScmObj** %stackaddr$prim87721, align 8
%stackaddr$prim87722 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85521)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87722, align 8
%ae49027 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87723 = call i64 @is_truthy_value(%struct.ScmObj* %ae49027)
%cmp$cmp87723 = icmp eq i64 %truthy$cmp87723, 1
br i1 %cmp$cmp87723, label %truebranch$cmp87723, label %falsebranch$cmp87723
truebranch$cmp87723:
%ae49029 = call %struct.ScmObj* @const_init_int(i64 0)
%ae49030 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87724 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae49029, %struct.ScmObj* %ae49030)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87724, align 8
%stackaddr$makeclosure87725 = alloca %struct.ScmObj*, align 8
%fptrToInt87726 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49031 to i64
%ae49031 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87726)
store volatile %struct.ScmObj* %ae49031, %struct.ScmObj** %stackaddr$makeclosure87725, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49031, %struct.ScmObj* %x40229, i64 0)
%ae49032 = call %struct.ScmObj* @const_init_int(i64 0)
%args85531$ae49031$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87727 = alloca %struct.ScmObj*, align 8
%args85531$ae49031$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85531$ae49031$0)
store volatile %struct.ScmObj* %args85531$ae49031$1, %struct.ScmObj** %stackaddr$prim87727, align 8
%stackaddr$prim87728 = alloca %struct.ScmObj*, align 8
%args85531$ae49031$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49032, %struct.ScmObj* %args85531$ae49031$1)
store volatile %struct.ScmObj* %args85531$ae49031$2, %struct.ScmObj** %stackaddr$prim87728, align 8
%clofunc87729 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49031)
musttail call tailcc void %clofunc87729(%struct.ScmObj* %ae49031, %struct.ScmObj* %args85531$ae49031$2)
ret void
falsebranch$cmp87723:
%stackaddr$makeclosure87730 = alloca %struct.ScmObj*, align 8
%fptrToInt87731 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49090 to i64
%ae49090 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87731)
store volatile %struct.ScmObj* %ae49090, %struct.ScmObj** %stackaddr$makeclosure87730, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae49090, %struct.ScmObj* %x40229, i64 0)
%ae49091 = call %struct.ScmObj* @const_init_int(i64 0)
%ae49092 = call %struct.ScmObj* @const_init_int(i64 9)
%args85540$ae49090$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87732 = alloca %struct.ScmObj*, align 8
%args85540$ae49090$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49092, %struct.ScmObj* %args85540$ae49090$0)
store volatile %struct.ScmObj* %args85540$ae49090$1, %struct.ScmObj** %stackaddr$prim87732, align 8
%stackaddr$prim87733 = alloca %struct.ScmObj*, align 8
%args85540$ae49090$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49091, %struct.ScmObj* %args85540$ae49090$1)
store volatile %struct.ScmObj* %args85540$ae49090$2, %struct.ScmObj** %stackaddr$prim87733, align 8
%clofunc87734 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49090)
musttail call tailcc void %clofunc87734(%struct.ScmObj* %ae49090, %struct.ScmObj* %args85540$ae49090$2)
ret void
}

define tailcc void @proc_clo$ae49031(%struct.ScmObj* %env$ae49031,%struct.ScmObj* %current_45args85523) {
%stackaddr$env-ref87735 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49031, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87735
%stackaddr$prim87736 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85523)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87736, align 8
%stackaddr$prim87737 = alloca %struct.ScmObj*, align 8
%current_45args85524 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85523)
store volatile %struct.ScmObj* %current_45args85524, %struct.ScmObj** %stackaddr$prim87737, align 8
%stackaddr$prim87738 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85524)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87738, align 8
%ae49038 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87739 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae49038)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87739, align 8
%stackaddr$makeclosure87740 = alloca %struct.ScmObj*, align 8
%fptrToInt87741 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49039 to i64
%ae49039 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87741)
store volatile %struct.ScmObj* %ae49039, %struct.ScmObj** %stackaddr$makeclosure87740, align 8
%ae49040 = call %struct.ScmObj* @const_init_int(i64 0)
%args85530$ae49039$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87742 = alloca %struct.ScmObj*, align 8
%args85530$ae49039$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85530$ae49039$0)
store volatile %struct.ScmObj* %args85530$ae49039$1, %struct.ScmObj** %stackaddr$prim87742, align 8
%stackaddr$prim87743 = alloca %struct.ScmObj*, align 8
%args85530$ae49039$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49040, %struct.ScmObj* %args85530$ae49039$1)
store volatile %struct.ScmObj* %args85530$ae49039$2, %struct.ScmObj** %stackaddr$prim87743, align 8
%clofunc87744 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49039)
musttail call tailcc void %clofunc87744(%struct.ScmObj* %ae49039, %struct.ScmObj* %args85530$ae49039$2)
ret void
}

define tailcc void @proc_clo$ae49039(%struct.ScmObj* %env$ae49039,%struct.ScmObj* %current_45args85526) {
%stackaddr$prim87745 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85526)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87745, align 8
%stackaddr$prim87746 = alloca %struct.ScmObj*, align 8
%current_45args85527 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85526)
store volatile %struct.ScmObj* %current_45args85527, %struct.ScmObj** %stackaddr$prim87746, align 8
%stackaddr$prim87747 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85527)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87747, align 8
%stackaddr$prim87748 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87748, align 8
%args85529$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87749 = alloca %struct.ScmObj*, align 8
%args85529$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85529$k$0)
store volatile %struct.ScmObj* %args85529$k$1, %struct.ScmObj** %stackaddr$prim87749, align 8
%clofunc87750 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87750(%struct.ScmObj* %k, %struct.ScmObj* %args85529$k$1)
ret void
}

define tailcc void @proc_clo$ae49090(%struct.ScmObj* %env$ae49090,%struct.ScmObj* %current_45args85532) {
%stackaddr$env-ref87751 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae49090, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87751
%stackaddr$prim87752 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85532)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87752, align 8
%stackaddr$prim87753 = alloca %struct.ScmObj*, align 8
%current_45args85533 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85532)
store volatile %struct.ScmObj* %current_45args85533, %struct.ScmObj** %stackaddr$prim87753, align 8
%stackaddr$prim87754 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85533)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87754, align 8
%ae49100 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87755 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae49100)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87755, align 8
%stackaddr$makeclosure87756 = alloca %struct.ScmObj*, align 8
%fptrToInt87757 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae49101 to i64
%ae49101 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87757)
store volatile %struct.ScmObj* %ae49101, %struct.ScmObj** %stackaddr$makeclosure87756, align 8
%ae49102 = call %struct.ScmObj* @const_init_int(i64 0)
%args85539$ae49101$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87758 = alloca %struct.ScmObj*, align 8
%args85539$ae49101$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85539$ae49101$0)
store volatile %struct.ScmObj* %args85539$ae49101$1, %struct.ScmObj** %stackaddr$prim87758, align 8
%stackaddr$prim87759 = alloca %struct.ScmObj*, align 8
%args85539$ae49101$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae49102, %struct.ScmObj* %args85539$ae49101$1)
store volatile %struct.ScmObj* %args85539$ae49101$2, %struct.ScmObj** %stackaddr$prim87759, align 8
%clofunc87760 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae49101)
musttail call tailcc void %clofunc87760(%struct.ScmObj* %ae49101, %struct.ScmObj* %args85539$ae49101$2)
ret void
}

define tailcc void @proc_clo$ae49101(%struct.ScmObj* %env$ae49101,%struct.ScmObj* %current_45args85535) {
%stackaddr$prim87761 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85535)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87761, align 8
%stackaddr$prim87762 = alloca %struct.ScmObj*, align 8
%current_45args85536 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85535)
store volatile %struct.ScmObj* %current_45args85536, %struct.ScmObj** %stackaddr$prim87762, align 8
%stackaddr$prim87763 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85536)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87763, align 8
%stackaddr$prim87764 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87764, align 8
%args85538$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87765 = alloca %struct.ScmObj*, align 8
%args85538$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85538$k$0)
store volatile %struct.ScmObj* %args85538$k$1, %struct.ScmObj** %stackaddr$prim87765, align 8
%clofunc87766 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87766(%struct.ScmObj* %k, %struct.ScmObj* %args85538$k$1)
ret void
}

define tailcc void @proc_clo$ae50361(%struct.ScmObj* %env$ae50361,%struct.ScmObj* %current_45args85544) {
%stackaddr$env-ref87767 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50361, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87767
%stackaddr$prim87768 = alloca %struct.ScmObj*, align 8
%_95k40414 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85544)
store volatile %struct.ScmObj* %_95k40414, %struct.ScmObj** %stackaddr$prim87768, align 8
%stackaddr$prim87769 = alloca %struct.ScmObj*, align 8
%current_45args85545 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85544)
store volatile %struct.ScmObj* %current_45args85545, %struct.ScmObj** %stackaddr$prim87769, align 8
%stackaddr$prim87770 = alloca %struct.ScmObj*, align 8
%t4010540233 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85545)
store volatile %struct.ScmObj* %t4010540233, %struct.ScmObj** %stackaddr$prim87770, align 8
%ae50367 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87771 = call i64 @is_truthy_value(%struct.ScmObj* %ae50367)
%cmp$cmp87771 = icmp eq i64 %truthy$cmp87771, 1
br i1 %cmp$cmp87771, label %truebranch$cmp87771, label %falsebranch$cmp87771
truebranch$cmp87771:
%stackaddr$prim87772 = alloca %struct.ScmObj*, align 8
%cpsprim40421 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40421, %struct.ScmObj** %stackaddr$prim87772, align 8
%stackaddr$makeclosure87773 = alloca %struct.ScmObj*, align 8
%fptrToInt87774 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50368 to i64
%ae50368 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87774)
store volatile %struct.ScmObj* %ae50368, %struct.ScmObj** %stackaddr$makeclosure87773, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50368, %struct.ScmObj* %x40229, i64 0)
%ae50369 = call %struct.ScmObj* @const_init_int(i64 0)
%args85594$ae50368$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87775 = alloca %struct.ScmObj*, align 8
%args85594$ae50368$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40421, %struct.ScmObj* %args85594$ae50368$0)
store volatile %struct.ScmObj* %args85594$ae50368$1, %struct.ScmObj** %stackaddr$prim87775, align 8
%stackaddr$prim87776 = alloca %struct.ScmObj*, align 8
%args85594$ae50368$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50369, %struct.ScmObj* %args85594$ae50368$1)
store volatile %struct.ScmObj* %args85594$ae50368$2, %struct.ScmObj** %stackaddr$prim87776, align 8
%clofunc87777 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50368)
musttail call tailcc void %clofunc87777(%struct.ScmObj* %ae50368, %struct.ScmObj* %args85594$ae50368$2)
ret void
falsebranch$cmp87771:
%ae50833 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87778 = alloca %struct.ScmObj*, align 8
%anf_45bind40370 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50833)
store volatile %struct.ScmObj* %anf_45bind40370, %struct.ScmObj** %stackaddr$prim87778, align 8
%ae50835 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim87779 = alloca %struct.ScmObj*, align 8
%anf_45bind40371 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40370, %struct.ScmObj* %ae50835)
store volatile %struct.ScmObj* %anf_45bind40371, %struct.ScmObj** %stackaddr$prim87779, align 8
%ae50837 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim87780 = alloca %struct.ScmObj*, align 8
%anf_45bind40372 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40371, %struct.ScmObj* %ae50837)
store volatile %struct.ScmObj* %anf_45bind40372, %struct.ScmObj** %stackaddr$prim87780, align 8
%ae50839 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87781 = alloca %struct.ScmObj*, align 8
%cpsprim40422 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50839, %struct.ScmObj* %anf_45bind40372)
store volatile %struct.ScmObj* %cpsprim40422, %struct.ScmObj** %stackaddr$prim87781, align 8
%stackaddr$makeclosure87782 = alloca %struct.ScmObj*, align 8
%fptrToInt87783 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50841 to i64
%ae50841 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87783)
store volatile %struct.ScmObj* %ae50841, %struct.ScmObj** %stackaddr$makeclosure87782, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50841, %struct.ScmObj* %x40229, i64 0)
%ae50842 = call %struct.ScmObj* @const_init_int(i64 0)
%args85642$ae50841$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87784 = alloca %struct.ScmObj*, align 8
%args85642$ae50841$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40422, %struct.ScmObj* %args85642$ae50841$0)
store volatile %struct.ScmObj* %args85642$ae50841$1, %struct.ScmObj** %stackaddr$prim87784, align 8
%stackaddr$prim87785 = alloca %struct.ScmObj*, align 8
%args85642$ae50841$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50842, %struct.ScmObj* %args85642$ae50841$1)
store volatile %struct.ScmObj* %args85642$ae50841$2, %struct.ScmObj** %stackaddr$prim87785, align 8
%clofunc87786 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50841)
musttail call tailcc void %clofunc87786(%struct.ScmObj* %ae50841, %struct.ScmObj* %args85642$ae50841$2)
ret void
}

define tailcc void @proc_clo$ae50368(%struct.ScmObj* %env$ae50368,%struct.ScmObj* %current_45args85547) {
%stackaddr$env-ref87787 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50368, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87787
%stackaddr$prim87788 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85547)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim87788, align 8
%stackaddr$prim87789 = alloca %struct.ScmObj*, align 8
%current_45args85548 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85547)
store volatile %struct.ScmObj* %current_45args85548, %struct.ScmObj** %stackaddr$prim87789, align 8
%stackaddr$prim87790 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85548)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim87790, align 8
%ae50375 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87791 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50375)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim87791, align 8
%truthy$cmp87792 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp87792 = icmp eq i64 %truthy$cmp87792, 1
br i1 %cmp$cmp87792, label %truebranch$cmp87792, label %falsebranch$cmp87792
truebranch$cmp87792:
%ae50378 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87793 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50378)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim87793, align 8
%ae50380 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87794 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50380)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim87794, align 8
%stackaddr$prim87795 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim87795, align 8
%ae50384 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87796 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50384, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim87796, align 8
%stackaddr$makeclosure87797 = alloca %struct.ScmObj*, align 8
%fptrToInt87798 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50386 to i64
%ae50386 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87798)
store volatile %struct.ScmObj* %ae50386, %struct.ScmObj** %stackaddr$makeclosure87797, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50386, %struct.ScmObj* %x40229, i64 0)
%ae50387 = call %struct.ScmObj* @const_init_int(i64 0)
%args85571$ae50386$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87799 = alloca %struct.ScmObj*, align 8
%args85571$ae50386$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85571$ae50386$0)
store volatile %struct.ScmObj* %args85571$ae50386$1, %struct.ScmObj** %stackaddr$prim87799, align 8
%stackaddr$prim87800 = alloca %struct.ScmObj*, align 8
%args85571$ae50386$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50387, %struct.ScmObj* %args85571$ae50386$1)
store volatile %struct.ScmObj* %args85571$ae50386$2, %struct.ScmObj** %stackaddr$prim87800, align 8
%clofunc87801 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50386)
musttail call tailcc void %clofunc87801(%struct.ScmObj* %ae50386, %struct.ScmObj* %args85571$ae50386$2)
ret void
falsebranch$cmp87792:
%stackaddr$makeclosure87802 = alloca %struct.ScmObj*, align 8
%fptrToInt87803 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50624 to i64
%ae50624 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87803)
store volatile %struct.ScmObj* %ae50624, %struct.ScmObj** %stackaddr$makeclosure87802, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50624, %struct.ScmObj* %x40229, i64 0)
%ae50625 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50626 = call %struct.ScmObj* @const_init_int(i64 7)
%args85593$ae50624$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87804 = alloca %struct.ScmObj*, align 8
%args85593$ae50624$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50626, %struct.ScmObj* %args85593$ae50624$0)
store volatile %struct.ScmObj* %args85593$ae50624$1, %struct.ScmObj** %stackaddr$prim87804, align 8
%stackaddr$prim87805 = alloca %struct.ScmObj*, align 8
%args85593$ae50624$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50625, %struct.ScmObj* %args85593$ae50624$1)
store volatile %struct.ScmObj* %args85593$ae50624$2, %struct.ScmObj** %stackaddr$prim87805, align 8
%clofunc87806 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50624)
musttail call tailcc void %clofunc87806(%struct.ScmObj* %ae50624, %struct.ScmObj* %args85593$ae50624$2)
ret void
}

define tailcc void @proc_clo$ae50386(%struct.ScmObj* %env$ae50386,%struct.ScmObj* %current_45args85550) {
%stackaddr$env-ref87807 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50386, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87807
%stackaddr$prim87808 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85550)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87808, align 8
%stackaddr$prim87809 = alloca %struct.ScmObj*, align 8
%current_45args85551 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85550)
store volatile %struct.ScmObj* %current_45args85551, %struct.ScmObj** %stackaddr$prim87809, align 8
%stackaddr$prim87810 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85551)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87810, align 8
%ae50392 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87811 = call i64 @is_truthy_value(%struct.ScmObj* %ae50392)
%cmp$cmp87811 = icmp eq i64 %truthy$cmp87811, 1
br i1 %cmp$cmp87811, label %truebranch$cmp87811, label %falsebranch$cmp87811
truebranch$cmp87811:
%ae50394 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50395 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87812 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50394, %struct.ScmObj* %ae50395)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87812, align 8
%stackaddr$makeclosure87813 = alloca %struct.ScmObj*, align 8
%fptrToInt87814 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50396 to i64
%ae50396 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87814)
store volatile %struct.ScmObj* %ae50396, %struct.ScmObj** %stackaddr$makeclosure87813, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50396, %struct.ScmObj* %x40229, i64 0)
%ae50397 = call %struct.ScmObj* @const_init_int(i64 0)
%args85561$ae50396$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87815 = alloca %struct.ScmObj*, align 8
%args85561$ae50396$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85561$ae50396$0)
store volatile %struct.ScmObj* %args85561$ae50396$1, %struct.ScmObj** %stackaddr$prim87815, align 8
%stackaddr$prim87816 = alloca %struct.ScmObj*, align 8
%args85561$ae50396$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50397, %struct.ScmObj* %args85561$ae50396$1)
store volatile %struct.ScmObj* %args85561$ae50396$2, %struct.ScmObj** %stackaddr$prim87816, align 8
%clofunc87817 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50396)
musttail call tailcc void %clofunc87817(%struct.ScmObj* %ae50396, %struct.ScmObj* %args85561$ae50396$2)
ret void
falsebranch$cmp87811:
%stackaddr$makeclosure87818 = alloca %struct.ScmObj*, align 8
%fptrToInt87819 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50455 to i64
%ae50455 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87819)
store volatile %struct.ScmObj* %ae50455, %struct.ScmObj** %stackaddr$makeclosure87818, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50455, %struct.ScmObj* %x40229, i64 0)
%ae50456 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50457 = call %struct.ScmObj* @const_init_int(i64 9)
%args85570$ae50455$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87820 = alloca %struct.ScmObj*, align 8
%args85570$ae50455$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50457, %struct.ScmObj* %args85570$ae50455$0)
store volatile %struct.ScmObj* %args85570$ae50455$1, %struct.ScmObj** %stackaddr$prim87820, align 8
%stackaddr$prim87821 = alloca %struct.ScmObj*, align 8
%args85570$ae50455$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50456, %struct.ScmObj* %args85570$ae50455$1)
store volatile %struct.ScmObj* %args85570$ae50455$2, %struct.ScmObj** %stackaddr$prim87821, align 8
%clofunc87822 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50455)
musttail call tailcc void %clofunc87822(%struct.ScmObj* %ae50455, %struct.ScmObj* %args85570$ae50455$2)
ret void
}

define tailcc void @proc_clo$ae50396(%struct.ScmObj* %env$ae50396,%struct.ScmObj* %current_45args85553) {
%stackaddr$env-ref87823 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50396, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87823
%stackaddr$prim87824 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85553)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87824, align 8
%stackaddr$prim87825 = alloca %struct.ScmObj*, align 8
%current_45args85554 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85553)
store volatile %struct.ScmObj* %current_45args85554, %struct.ScmObj** %stackaddr$prim87825, align 8
%stackaddr$prim87826 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85554)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87826, align 8
%ae50403 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87827 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50403)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87827, align 8
%stackaddr$makeclosure87828 = alloca %struct.ScmObj*, align 8
%fptrToInt87829 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50404 to i64
%ae50404 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87829)
store volatile %struct.ScmObj* %ae50404, %struct.ScmObj** %stackaddr$makeclosure87828, align 8
%ae50405 = call %struct.ScmObj* @const_init_int(i64 0)
%args85560$ae50404$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87830 = alloca %struct.ScmObj*, align 8
%args85560$ae50404$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85560$ae50404$0)
store volatile %struct.ScmObj* %args85560$ae50404$1, %struct.ScmObj** %stackaddr$prim87830, align 8
%stackaddr$prim87831 = alloca %struct.ScmObj*, align 8
%args85560$ae50404$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50405, %struct.ScmObj* %args85560$ae50404$1)
store volatile %struct.ScmObj* %args85560$ae50404$2, %struct.ScmObj** %stackaddr$prim87831, align 8
%clofunc87832 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50404)
musttail call tailcc void %clofunc87832(%struct.ScmObj* %ae50404, %struct.ScmObj* %args85560$ae50404$2)
ret void
}

define tailcc void @proc_clo$ae50404(%struct.ScmObj* %env$ae50404,%struct.ScmObj* %current_45args85556) {
%stackaddr$prim87833 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85556)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87833, align 8
%stackaddr$prim87834 = alloca %struct.ScmObj*, align 8
%current_45args85557 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85556)
store volatile %struct.ScmObj* %current_45args85557, %struct.ScmObj** %stackaddr$prim87834, align 8
%stackaddr$prim87835 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85557)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87835, align 8
%stackaddr$prim87836 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87836, align 8
%args85559$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87837 = alloca %struct.ScmObj*, align 8
%args85559$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85559$k$0)
store volatile %struct.ScmObj* %args85559$k$1, %struct.ScmObj** %stackaddr$prim87837, align 8
%clofunc87838 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87838(%struct.ScmObj* %k, %struct.ScmObj* %args85559$k$1)
ret void
}

define tailcc void @proc_clo$ae50455(%struct.ScmObj* %env$ae50455,%struct.ScmObj* %current_45args85562) {
%stackaddr$env-ref87839 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50455, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87839
%stackaddr$prim87840 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85562)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87840, align 8
%stackaddr$prim87841 = alloca %struct.ScmObj*, align 8
%current_45args85563 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85562)
store volatile %struct.ScmObj* %current_45args85563, %struct.ScmObj** %stackaddr$prim87841, align 8
%stackaddr$prim87842 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85563)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87842, align 8
%ae50465 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87843 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50465)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87843, align 8
%stackaddr$makeclosure87844 = alloca %struct.ScmObj*, align 8
%fptrToInt87845 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50466 to i64
%ae50466 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87845)
store volatile %struct.ScmObj* %ae50466, %struct.ScmObj** %stackaddr$makeclosure87844, align 8
%ae50467 = call %struct.ScmObj* @const_init_int(i64 0)
%args85569$ae50466$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87846 = alloca %struct.ScmObj*, align 8
%args85569$ae50466$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85569$ae50466$0)
store volatile %struct.ScmObj* %args85569$ae50466$1, %struct.ScmObj** %stackaddr$prim87846, align 8
%stackaddr$prim87847 = alloca %struct.ScmObj*, align 8
%args85569$ae50466$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50467, %struct.ScmObj* %args85569$ae50466$1)
store volatile %struct.ScmObj* %args85569$ae50466$2, %struct.ScmObj** %stackaddr$prim87847, align 8
%clofunc87848 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50466)
musttail call tailcc void %clofunc87848(%struct.ScmObj* %ae50466, %struct.ScmObj* %args85569$ae50466$2)
ret void
}

define tailcc void @proc_clo$ae50466(%struct.ScmObj* %env$ae50466,%struct.ScmObj* %current_45args85565) {
%stackaddr$prim87849 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85565)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87849, align 8
%stackaddr$prim87850 = alloca %struct.ScmObj*, align 8
%current_45args85566 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85565)
store volatile %struct.ScmObj* %current_45args85566, %struct.ScmObj** %stackaddr$prim87850, align 8
%stackaddr$prim87851 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85566)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87851, align 8
%stackaddr$prim87852 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87852, align 8
%args85568$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87853 = alloca %struct.ScmObj*, align 8
%args85568$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85568$k$0)
store volatile %struct.ScmObj* %args85568$k$1, %struct.ScmObj** %stackaddr$prim87853, align 8
%clofunc87854 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87854(%struct.ScmObj* %k, %struct.ScmObj* %args85568$k$1)
ret void
}

define tailcc void @proc_clo$ae50624(%struct.ScmObj* %env$ae50624,%struct.ScmObj* %current_45args85572) {
%stackaddr$env-ref87855 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50624, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87855
%stackaddr$prim87856 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85572)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87856, align 8
%stackaddr$prim87857 = alloca %struct.ScmObj*, align 8
%current_45args85573 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85572)
store volatile %struct.ScmObj* %current_45args85573, %struct.ScmObj** %stackaddr$prim87857, align 8
%stackaddr$prim87858 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85573)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87858, align 8
%ae50633 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87859 = call i64 @is_truthy_value(%struct.ScmObj* %ae50633)
%cmp$cmp87859 = icmp eq i64 %truthy$cmp87859, 1
br i1 %cmp$cmp87859, label %truebranch$cmp87859, label %falsebranch$cmp87859
truebranch$cmp87859:
%ae50635 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50636 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87860 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50635, %struct.ScmObj* %ae50636)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87860, align 8
%stackaddr$makeclosure87861 = alloca %struct.ScmObj*, align 8
%fptrToInt87862 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50637 to i64
%ae50637 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87862)
store volatile %struct.ScmObj* %ae50637, %struct.ScmObj** %stackaddr$makeclosure87861, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50637, %struct.ScmObj* %x40229, i64 0)
%ae50638 = call %struct.ScmObj* @const_init_int(i64 0)
%args85583$ae50637$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87863 = alloca %struct.ScmObj*, align 8
%args85583$ae50637$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85583$ae50637$0)
store volatile %struct.ScmObj* %args85583$ae50637$1, %struct.ScmObj** %stackaddr$prim87863, align 8
%stackaddr$prim87864 = alloca %struct.ScmObj*, align 8
%args85583$ae50637$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50638, %struct.ScmObj* %args85583$ae50637$1)
store volatile %struct.ScmObj* %args85583$ae50637$2, %struct.ScmObj** %stackaddr$prim87864, align 8
%clofunc87865 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50637)
musttail call tailcc void %clofunc87865(%struct.ScmObj* %ae50637, %struct.ScmObj* %args85583$ae50637$2)
ret void
falsebranch$cmp87859:
%stackaddr$makeclosure87866 = alloca %struct.ScmObj*, align 8
%fptrToInt87867 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50696 to i64
%ae50696 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87867)
store volatile %struct.ScmObj* %ae50696, %struct.ScmObj** %stackaddr$makeclosure87866, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50696, %struct.ScmObj* %x40229, i64 0)
%ae50697 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50698 = call %struct.ScmObj* @const_init_int(i64 9)
%args85592$ae50696$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87868 = alloca %struct.ScmObj*, align 8
%args85592$ae50696$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50698, %struct.ScmObj* %args85592$ae50696$0)
store volatile %struct.ScmObj* %args85592$ae50696$1, %struct.ScmObj** %stackaddr$prim87868, align 8
%stackaddr$prim87869 = alloca %struct.ScmObj*, align 8
%args85592$ae50696$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50697, %struct.ScmObj* %args85592$ae50696$1)
store volatile %struct.ScmObj* %args85592$ae50696$2, %struct.ScmObj** %stackaddr$prim87869, align 8
%clofunc87870 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50696)
musttail call tailcc void %clofunc87870(%struct.ScmObj* %ae50696, %struct.ScmObj* %args85592$ae50696$2)
ret void
}

define tailcc void @proc_clo$ae50637(%struct.ScmObj* %env$ae50637,%struct.ScmObj* %current_45args85575) {
%stackaddr$env-ref87871 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50637, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87871
%stackaddr$prim87872 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85575)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87872, align 8
%stackaddr$prim87873 = alloca %struct.ScmObj*, align 8
%current_45args85576 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85575)
store volatile %struct.ScmObj* %current_45args85576, %struct.ScmObj** %stackaddr$prim87873, align 8
%stackaddr$prim87874 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85576)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87874, align 8
%ae50644 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87875 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50644)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87875, align 8
%stackaddr$makeclosure87876 = alloca %struct.ScmObj*, align 8
%fptrToInt87877 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50645 to i64
%ae50645 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87877)
store volatile %struct.ScmObj* %ae50645, %struct.ScmObj** %stackaddr$makeclosure87876, align 8
%ae50646 = call %struct.ScmObj* @const_init_int(i64 0)
%args85582$ae50645$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87878 = alloca %struct.ScmObj*, align 8
%args85582$ae50645$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85582$ae50645$0)
store volatile %struct.ScmObj* %args85582$ae50645$1, %struct.ScmObj** %stackaddr$prim87878, align 8
%stackaddr$prim87879 = alloca %struct.ScmObj*, align 8
%args85582$ae50645$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50646, %struct.ScmObj* %args85582$ae50645$1)
store volatile %struct.ScmObj* %args85582$ae50645$2, %struct.ScmObj** %stackaddr$prim87879, align 8
%clofunc87880 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50645)
musttail call tailcc void %clofunc87880(%struct.ScmObj* %ae50645, %struct.ScmObj* %args85582$ae50645$2)
ret void
}

define tailcc void @proc_clo$ae50645(%struct.ScmObj* %env$ae50645,%struct.ScmObj* %current_45args85578) {
%stackaddr$prim87881 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85578)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87881, align 8
%stackaddr$prim87882 = alloca %struct.ScmObj*, align 8
%current_45args85579 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85578)
store volatile %struct.ScmObj* %current_45args85579, %struct.ScmObj** %stackaddr$prim87882, align 8
%stackaddr$prim87883 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85579)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87883, align 8
%stackaddr$prim87884 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87884, align 8
%args85581$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87885 = alloca %struct.ScmObj*, align 8
%args85581$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85581$k$0)
store volatile %struct.ScmObj* %args85581$k$1, %struct.ScmObj** %stackaddr$prim87885, align 8
%clofunc87886 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87886(%struct.ScmObj* %k, %struct.ScmObj* %args85581$k$1)
ret void
}

define tailcc void @proc_clo$ae50696(%struct.ScmObj* %env$ae50696,%struct.ScmObj* %current_45args85584) {
%stackaddr$env-ref87887 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50696, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87887
%stackaddr$prim87888 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85584)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87888, align 8
%stackaddr$prim87889 = alloca %struct.ScmObj*, align 8
%current_45args85585 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85584)
store volatile %struct.ScmObj* %current_45args85585, %struct.ScmObj** %stackaddr$prim87889, align 8
%stackaddr$prim87890 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85585)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87890, align 8
%ae50706 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87891 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50706)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87891, align 8
%stackaddr$makeclosure87892 = alloca %struct.ScmObj*, align 8
%fptrToInt87893 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50707 to i64
%ae50707 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87893)
store volatile %struct.ScmObj* %ae50707, %struct.ScmObj** %stackaddr$makeclosure87892, align 8
%ae50708 = call %struct.ScmObj* @const_init_int(i64 0)
%args85591$ae50707$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87894 = alloca %struct.ScmObj*, align 8
%args85591$ae50707$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85591$ae50707$0)
store volatile %struct.ScmObj* %args85591$ae50707$1, %struct.ScmObj** %stackaddr$prim87894, align 8
%stackaddr$prim87895 = alloca %struct.ScmObj*, align 8
%args85591$ae50707$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50708, %struct.ScmObj* %args85591$ae50707$1)
store volatile %struct.ScmObj* %args85591$ae50707$2, %struct.ScmObj** %stackaddr$prim87895, align 8
%clofunc87896 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50707)
musttail call tailcc void %clofunc87896(%struct.ScmObj* %ae50707, %struct.ScmObj* %args85591$ae50707$2)
ret void
}

define tailcc void @proc_clo$ae50707(%struct.ScmObj* %env$ae50707,%struct.ScmObj* %current_45args85587) {
%stackaddr$prim87897 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85587)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87897, align 8
%stackaddr$prim87898 = alloca %struct.ScmObj*, align 8
%current_45args85588 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85587)
store volatile %struct.ScmObj* %current_45args85588, %struct.ScmObj** %stackaddr$prim87898, align 8
%stackaddr$prim87899 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85588)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87899, align 8
%stackaddr$prim87900 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87900, align 8
%args85590$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87901 = alloca %struct.ScmObj*, align 8
%args85590$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85590$k$0)
store volatile %struct.ScmObj* %args85590$k$1, %struct.ScmObj** %stackaddr$prim87901, align 8
%clofunc87902 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87902(%struct.ScmObj* %k, %struct.ScmObj* %args85590$k$1)
ret void
}

define tailcc void @proc_clo$ae50841(%struct.ScmObj* %env$ae50841,%struct.ScmObj* %current_45args85595) {
%stackaddr$env-ref87903 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50841, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87903
%stackaddr$prim87904 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85595)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim87904, align 8
%stackaddr$prim87905 = alloca %struct.ScmObj*, align 8
%current_45args85596 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85595)
store volatile %struct.ScmObj* %current_45args85596, %struct.ScmObj** %stackaddr$prim87905, align 8
%stackaddr$prim87906 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85596)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim87906, align 8
%ae50848 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87907 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50848)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim87907, align 8
%truthy$cmp87908 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp87908 = icmp eq i64 %truthy$cmp87908, 1
br i1 %cmp$cmp87908, label %truebranch$cmp87908, label %falsebranch$cmp87908
truebranch$cmp87908:
%ae50851 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87909 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50851)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim87909, align 8
%ae50853 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87910 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50853)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim87910, align 8
%stackaddr$prim87911 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim87911, align 8
%ae50857 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87912 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50857, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim87912, align 8
%stackaddr$makeclosure87913 = alloca %struct.ScmObj*, align 8
%fptrToInt87914 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50859 to i64
%ae50859 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87914)
store volatile %struct.ScmObj* %ae50859, %struct.ScmObj** %stackaddr$makeclosure87913, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50859, %struct.ScmObj* %x40229, i64 0)
%ae50860 = call %struct.ScmObj* @const_init_int(i64 0)
%args85619$ae50859$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87915 = alloca %struct.ScmObj*, align 8
%args85619$ae50859$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85619$ae50859$0)
store volatile %struct.ScmObj* %args85619$ae50859$1, %struct.ScmObj** %stackaddr$prim87915, align 8
%stackaddr$prim87916 = alloca %struct.ScmObj*, align 8
%args85619$ae50859$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50860, %struct.ScmObj* %args85619$ae50859$1)
store volatile %struct.ScmObj* %args85619$ae50859$2, %struct.ScmObj** %stackaddr$prim87916, align 8
%clofunc87917 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50859)
musttail call tailcc void %clofunc87917(%struct.ScmObj* %ae50859, %struct.ScmObj* %args85619$ae50859$2)
ret void
falsebranch$cmp87908:
%stackaddr$makeclosure87918 = alloca %struct.ScmObj*, align 8
%fptrToInt87919 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51097 to i64
%ae51097 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87919)
store volatile %struct.ScmObj* %ae51097, %struct.ScmObj** %stackaddr$makeclosure87918, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51097, %struct.ScmObj* %x40229, i64 0)
%ae51098 = call %struct.ScmObj* @const_init_int(i64 0)
%ae51099 = call %struct.ScmObj* @const_init_int(i64 7)
%args85641$ae51097$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87920 = alloca %struct.ScmObj*, align 8
%args85641$ae51097$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51099, %struct.ScmObj* %args85641$ae51097$0)
store volatile %struct.ScmObj* %args85641$ae51097$1, %struct.ScmObj** %stackaddr$prim87920, align 8
%stackaddr$prim87921 = alloca %struct.ScmObj*, align 8
%args85641$ae51097$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51098, %struct.ScmObj* %args85641$ae51097$1)
store volatile %struct.ScmObj* %args85641$ae51097$2, %struct.ScmObj** %stackaddr$prim87921, align 8
%clofunc87922 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51097)
musttail call tailcc void %clofunc87922(%struct.ScmObj* %ae51097, %struct.ScmObj* %args85641$ae51097$2)
ret void
}

define tailcc void @proc_clo$ae50859(%struct.ScmObj* %env$ae50859,%struct.ScmObj* %current_45args85598) {
%stackaddr$env-ref87923 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50859, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87923
%stackaddr$prim87924 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85598)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87924, align 8
%stackaddr$prim87925 = alloca %struct.ScmObj*, align 8
%current_45args85599 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85598)
store volatile %struct.ScmObj* %current_45args85599, %struct.ScmObj** %stackaddr$prim87925, align 8
%stackaddr$prim87926 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85599)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87926, align 8
%ae50865 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87927 = call i64 @is_truthy_value(%struct.ScmObj* %ae50865)
%cmp$cmp87927 = icmp eq i64 %truthy$cmp87927, 1
br i1 %cmp$cmp87927, label %truebranch$cmp87927, label %falsebranch$cmp87927
truebranch$cmp87927:
%ae50867 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50868 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87928 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50867, %struct.ScmObj* %ae50868)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87928, align 8
%stackaddr$makeclosure87929 = alloca %struct.ScmObj*, align 8
%fptrToInt87930 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50869 to i64
%ae50869 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87930)
store volatile %struct.ScmObj* %ae50869, %struct.ScmObj** %stackaddr$makeclosure87929, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50869, %struct.ScmObj* %x40229, i64 0)
%ae50870 = call %struct.ScmObj* @const_init_int(i64 0)
%args85609$ae50869$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87931 = alloca %struct.ScmObj*, align 8
%args85609$ae50869$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85609$ae50869$0)
store volatile %struct.ScmObj* %args85609$ae50869$1, %struct.ScmObj** %stackaddr$prim87931, align 8
%stackaddr$prim87932 = alloca %struct.ScmObj*, align 8
%args85609$ae50869$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50870, %struct.ScmObj* %args85609$ae50869$1)
store volatile %struct.ScmObj* %args85609$ae50869$2, %struct.ScmObj** %stackaddr$prim87932, align 8
%clofunc87933 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50869)
musttail call tailcc void %clofunc87933(%struct.ScmObj* %ae50869, %struct.ScmObj* %args85609$ae50869$2)
ret void
falsebranch$cmp87927:
%stackaddr$makeclosure87934 = alloca %struct.ScmObj*, align 8
%fptrToInt87935 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50928 to i64
%ae50928 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87935)
store volatile %struct.ScmObj* %ae50928, %struct.ScmObj** %stackaddr$makeclosure87934, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae50928, %struct.ScmObj* %x40229, i64 0)
%ae50929 = call %struct.ScmObj* @const_init_int(i64 0)
%ae50930 = call %struct.ScmObj* @const_init_int(i64 9)
%args85618$ae50928$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87936 = alloca %struct.ScmObj*, align 8
%args85618$ae50928$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50930, %struct.ScmObj* %args85618$ae50928$0)
store volatile %struct.ScmObj* %args85618$ae50928$1, %struct.ScmObj** %stackaddr$prim87936, align 8
%stackaddr$prim87937 = alloca %struct.ScmObj*, align 8
%args85618$ae50928$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50929, %struct.ScmObj* %args85618$ae50928$1)
store volatile %struct.ScmObj* %args85618$ae50928$2, %struct.ScmObj** %stackaddr$prim87937, align 8
%clofunc87938 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50928)
musttail call tailcc void %clofunc87938(%struct.ScmObj* %ae50928, %struct.ScmObj* %args85618$ae50928$2)
ret void
}

define tailcc void @proc_clo$ae50869(%struct.ScmObj* %env$ae50869,%struct.ScmObj* %current_45args85601) {
%stackaddr$env-ref87939 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50869, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87939
%stackaddr$prim87940 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85601)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87940, align 8
%stackaddr$prim87941 = alloca %struct.ScmObj*, align 8
%current_45args85602 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85601)
store volatile %struct.ScmObj* %current_45args85602, %struct.ScmObj** %stackaddr$prim87941, align 8
%stackaddr$prim87942 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85602)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87942, align 8
%ae50876 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87943 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50876)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87943, align 8
%stackaddr$makeclosure87944 = alloca %struct.ScmObj*, align 8
%fptrToInt87945 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50877 to i64
%ae50877 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87945)
store volatile %struct.ScmObj* %ae50877, %struct.ScmObj** %stackaddr$makeclosure87944, align 8
%ae50878 = call %struct.ScmObj* @const_init_int(i64 0)
%args85608$ae50877$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87946 = alloca %struct.ScmObj*, align 8
%args85608$ae50877$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85608$ae50877$0)
store volatile %struct.ScmObj* %args85608$ae50877$1, %struct.ScmObj** %stackaddr$prim87946, align 8
%stackaddr$prim87947 = alloca %struct.ScmObj*, align 8
%args85608$ae50877$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50878, %struct.ScmObj* %args85608$ae50877$1)
store volatile %struct.ScmObj* %args85608$ae50877$2, %struct.ScmObj** %stackaddr$prim87947, align 8
%clofunc87948 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50877)
musttail call tailcc void %clofunc87948(%struct.ScmObj* %ae50877, %struct.ScmObj* %args85608$ae50877$2)
ret void
}

define tailcc void @proc_clo$ae50877(%struct.ScmObj* %env$ae50877,%struct.ScmObj* %current_45args85604) {
%stackaddr$prim87949 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85604)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87949, align 8
%stackaddr$prim87950 = alloca %struct.ScmObj*, align 8
%current_45args85605 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85604)
store volatile %struct.ScmObj* %current_45args85605, %struct.ScmObj** %stackaddr$prim87950, align 8
%stackaddr$prim87951 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85605)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87951, align 8
%stackaddr$prim87952 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87952, align 8
%args85607$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87953 = alloca %struct.ScmObj*, align 8
%args85607$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85607$k$0)
store volatile %struct.ScmObj* %args85607$k$1, %struct.ScmObj** %stackaddr$prim87953, align 8
%clofunc87954 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87954(%struct.ScmObj* %k, %struct.ScmObj* %args85607$k$1)
ret void
}

define tailcc void @proc_clo$ae50928(%struct.ScmObj* %env$ae50928,%struct.ScmObj* %current_45args85610) {
%stackaddr$env-ref87955 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae50928, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87955
%stackaddr$prim87956 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85610)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87956, align 8
%stackaddr$prim87957 = alloca %struct.ScmObj*, align 8
%current_45args85611 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85610)
store volatile %struct.ScmObj* %current_45args85611, %struct.ScmObj** %stackaddr$prim87957, align 8
%stackaddr$prim87958 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85611)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87958, align 8
%ae50938 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87959 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae50938)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87959, align 8
%stackaddr$makeclosure87960 = alloca %struct.ScmObj*, align 8
%fptrToInt87961 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae50939 to i64
%ae50939 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87961)
store volatile %struct.ScmObj* %ae50939, %struct.ScmObj** %stackaddr$makeclosure87960, align 8
%ae50940 = call %struct.ScmObj* @const_init_int(i64 0)
%args85617$ae50939$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87962 = alloca %struct.ScmObj*, align 8
%args85617$ae50939$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85617$ae50939$0)
store volatile %struct.ScmObj* %args85617$ae50939$1, %struct.ScmObj** %stackaddr$prim87962, align 8
%stackaddr$prim87963 = alloca %struct.ScmObj*, align 8
%args85617$ae50939$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae50940, %struct.ScmObj* %args85617$ae50939$1)
store volatile %struct.ScmObj* %args85617$ae50939$2, %struct.ScmObj** %stackaddr$prim87963, align 8
%clofunc87964 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae50939)
musttail call tailcc void %clofunc87964(%struct.ScmObj* %ae50939, %struct.ScmObj* %args85617$ae50939$2)
ret void
}

define tailcc void @proc_clo$ae50939(%struct.ScmObj* %env$ae50939,%struct.ScmObj* %current_45args85613) {
%stackaddr$prim87965 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85613)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87965, align 8
%stackaddr$prim87966 = alloca %struct.ScmObj*, align 8
%current_45args85614 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85613)
store volatile %struct.ScmObj* %current_45args85614, %struct.ScmObj** %stackaddr$prim87966, align 8
%stackaddr$prim87967 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85614)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87967, align 8
%stackaddr$prim87968 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim87968, align 8
%args85616$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87969 = alloca %struct.ScmObj*, align 8
%args85616$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85616$k$0)
store volatile %struct.ScmObj* %args85616$k$1, %struct.ScmObj** %stackaddr$prim87969, align 8
%clofunc87970 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc87970(%struct.ScmObj* %k, %struct.ScmObj* %args85616$k$1)
ret void
}

define tailcc void @proc_clo$ae51097(%struct.ScmObj* %env$ae51097,%struct.ScmObj* %current_45args85620) {
%stackaddr$env-ref87971 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51097, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87971
%stackaddr$prim87972 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85620)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim87972, align 8
%stackaddr$prim87973 = alloca %struct.ScmObj*, align 8
%current_45args85621 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85620)
store volatile %struct.ScmObj* %current_45args85621, %struct.ScmObj** %stackaddr$prim87973, align 8
%stackaddr$prim87974 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85621)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim87974, align 8
%ae51106 = call %struct.ScmObj* @const_init_false()
%truthy$cmp87975 = call i64 @is_truthy_value(%struct.ScmObj* %ae51106)
%cmp$cmp87975 = icmp eq i64 %truthy$cmp87975, 1
br i1 %cmp$cmp87975, label %truebranch$cmp87975, label %falsebranch$cmp87975
truebranch$cmp87975:
%ae51108 = call %struct.ScmObj* @const_init_int(i64 0)
%ae51109 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87976 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae51108, %struct.ScmObj* %ae51109)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim87976, align 8
%stackaddr$makeclosure87977 = alloca %struct.ScmObj*, align 8
%fptrToInt87978 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51110 to i64
%ae51110 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87978)
store volatile %struct.ScmObj* %ae51110, %struct.ScmObj** %stackaddr$makeclosure87977, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51110, %struct.ScmObj* %x40229, i64 0)
%ae51111 = call %struct.ScmObj* @const_init_int(i64 0)
%args85631$ae51110$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87979 = alloca %struct.ScmObj*, align 8
%args85631$ae51110$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85631$ae51110$0)
store volatile %struct.ScmObj* %args85631$ae51110$1, %struct.ScmObj** %stackaddr$prim87979, align 8
%stackaddr$prim87980 = alloca %struct.ScmObj*, align 8
%args85631$ae51110$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51111, %struct.ScmObj* %args85631$ae51110$1)
store volatile %struct.ScmObj* %args85631$ae51110$2, %struct.ScmObj** %stackaddr$prim87980, align 8
%clofunc87981 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51110)
musttail call tailcc void %clofunc87981(%struct.ScmObj* %ae51110, %struct.ScmObj* %args85631$ae51110$2)
ret void
falsebranch$cmp87975:
%stackaddr$makeclosure87982 = alloca %struct.ScmObj*, align 8
%fptrToInt87983 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51169 to i64
%ae51169 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt87983)
store volatile %struct.ScmObj* %ae51169, %struct.ScmObj** %stackaddr$makeclosure87982, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae51169, %struct.ScmObj* %x40229, i64 0)
%ae51170 = call %struct.ScmObj* @const_init_int(i64 0)
%ae51171 = call %struct.ScmObj* @const_init_int(i64 9)
%args85640$ae51169$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87984 = alloca %struct.ScmObj*, align 8
%args85640$ae51169$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51171, %struct.ScmObj* %args85640$ae51169$0)
store volatile %struct.ScmObj* %args85640$ae51169$1, %struct.ScmObj** %stackaddr$prim87984, align 8
%stackaddr$prim87985 = alloca %struct.ScmObj*, align 8
%args85640$ae51169$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51170, %struct.ScmObj* %args85640$ae51169$1)
store volatile %struct.ScmObj* %args85640$ae51169$2, %struct.ScmObj** %stackaddr$prim87985, align 8
%clofunc87986 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51169)
musttail call tailcc void %clofunc87986(%struct.ScmObj* %ae51169, %struct.ScmObj* %args85640$ae51169$2)
ret void
}

define tailcc void @proc_clo$ae51110(%struct.ScmObj* %env$ae51110,%struct.ScmObj* %current_45args85623) {
%stackaddr$env-ref87987 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51110, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref87987
%stackaddr$prim87988 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85623)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim87988, align 8
%stackaddr$prim87989 = alloca %struct.ScmObj*, align 8
%current_45args85624 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85623)
store volatile %struct.ScmObj* %current_45args85624, %struct.ScmObj** %stackaddr$prim87989, align 8
%stackaddr$prim87990 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85624)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim87990, align 8
%ae51117 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim87991 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae51117)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim87991, align 8
%stackaddr$makeclosure87992 = alloca %struct.ScmObj*, align 8
%fptrToInt87993 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51118 to i64
%ae51118 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt87993)
store volatile %struct.ScmObj* %ae51118, %struct.ScmObj** %stackaddr$makeclosure87992, align 8
%ae51119 = call %struct.ScmObj* @const_init_int(i64 0)
%args85630$ae51118$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim87994 = alloca %struct.ScmObj*, align 8
%args85630$ae51118$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85630$ae51118$0)
store volatile %struct.ScmObj* %args85630$ae51118$1, %struct.ScmObj** %stackaddr$prim87994, align 8
%stackaddr$prim87995 = alloca %struct.ScmObj*, align 8
%args85630$ae51118$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51119, %struct.ScmObj* %args85630$ae51118$1)
store volatile %struct.ScmObj* %args85630$ae51118$2, %struct.ScmObj** %stackaddr$prim87995, align 8
%clofunc87996 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51118)
musttail call tailcc void %clofunc87996(%struct.ScmObj* %ae51118, %struct.ScmObj* %args85630$ae51118$2)
ret void
}

define tailcc void @proc_clo$ae51118(%struct.ScmObj* %env$ae51118,%struct.ScmObj* %current_45args85626) {
%stackaddr$prim87997 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85626)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim87997, align 8
%stackaddr$prim87998 = alloca %struct.ScmObj*, align 8
%current_45args85627 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85626)
store volatile %struct.ScmObj* %current_45args85627, %struct.ScmObj** %stackaddr$prim87998, align 8
%stackaddr$prim87999 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85627)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim87999, align 8
%stackaddr$prim88000 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88000, align 8
%args85629$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88001 = alloca %struct.ScmObj*, align 8
%args85629$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85629$k$0)
store volatile %struct.ScmObj* %args85629$k$1, %struct.ScmObj** %stackaddr$prim88001, align 8
%clofunc88002 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88002(%struct.ScmObj* %k, %struct.ScmObj* %args85629$k$1)
ret void
}

define tailcc void @proc_clo$ae51169(%struct.ScmObj* %env$ae51169,%struct.ScmObj* %current_45args85632) {
%stackaddr$env-ref88003 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae51169, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88003
%stackaddr$prim88004 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85632)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88004, align 8
%stackaddr$prim88005 = alloca %struct.ScmObj*, align 8
%current_45args85633 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85632)
store volatile %struct.ScmObj* %current_45args85633, %struct.ScmObj** %stackaddr$prim88005, align 8
%stackaddr$prim88006 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85633)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88006, align 8
%ae51179 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88007 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae51179)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88007, align 8
%stackaddr$makeclosure88008 = alloca %struct.ScmObj*, align 8
%fptrToInt88009 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae51180 to i64
%ae51180 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88009)
store volatile %struct.ScmObj* %ae51180, %struct.ScmObj** %stackaddr$makeclosure88008, align 8
%ae51181 = call %struct.ScmObj* @const_init_int(i64 0)
%args85639$ae51180$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88010 = alloca %struct.ScmObj*, align 8
%args85639$ae51180$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85639$ae51180$0)
store volatile %struct.ScmObj* %args85639$ae51180$1, %struct.ScmObj** %stackaddr$prim88010, align 8
%stackaddr$prim88011 = alloca %struct.ScmObj*, align 8
%args85639$ae51180$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae51181, %struct.ScmObj* %args85639$ae51180$1)
store volatile %struct.ScmObj* %args85639$ae51180$2, %struct.ScmObj** %stackaddr$prim88011, align 8
%clofunc88012 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae51180)
musttail call tailcc void %clofunc88012(%struct.ScmObj* %ae51180, %struct.ScmObj* %args85639$ae51180$2)
ret void
}

define tailcc void @proc_clo$ae51180(%struct.ScmObj* %env$ae51180,%struct.ScmObj* %current_45args85635) {
%stackaddr$prim88013 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85635)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88013, align 8
%stackaddr$prim88014 = alloca %struct.ScmObj*, align 8
%current_45args85636 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85635)
store volatile %struct.ScmObj* %current_45args85636, %struct.ScmObj** %stackaddr$prim88014, align 8
%stackaddr$prim88015 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85636)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88015, align 8
%stackaddr$prim88016 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88016, align 8
%args85638$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88017 = alloca %struct.ScmObj*, align 8
%args85638$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85638$k$0)
store volatile %struct.ScmObj* %args85638$k$1, %struct.ScmObj** %stackaddr$prim88017, align 8
%clofunc88018 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88018(%struct.ScmObj* %k, %struct.ScmObj* %args85638$k$1)
ret void
}

define tailcc void @proc_clo$ae57282(%struct.ScmObj* %env$ae57282,%struct.ScmObj* %current_45args85647) {
%stackaddr$env-ref88019 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57282, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88019
%stackaddr$env-ref88020 = alloca %struct.ScmObj*, align 8
%_37_6240209 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57282, i64 1)
store %struct.ScmObj* %_37_6240209, %struct.ScmObj** %stackaddr$env-ref88020
%stackaddr$prim88021 = alloca %struct.ScmObj*, align 8
%_95k40411 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85647)
store volatile %struct.ScmObj* %_95k40411, %struct.ScmObj** %stackaddr$prim88021, align 8
%stackaddr$prim88022 = alloca %struct.ScmObj*, align 8
%current_45args85648 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85647)
store volatile %struct.ScmObj* %current_45args85648, %struct.ScmObj** %stackaddr$prim88022, align 8
%stackaddr$prim88023 = alloca %struct.ScmObj*, align 8
%t4010340231 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85648)
store volatile %struct.ScmObj* %t4010340231, %struct.ScmObj** %stackaddr$prim88023, align 8
%ae57289 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88024 = alloca %struct.ScmObj*, align 8
%anf_45bind40360 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57289)
store volatile %struct.ScmObj* %anf_45bind40360, %struct.ScmObj** %stackaddr$prim88024, align 8
%stackaddr$makeclosure88025 = alloca %struct.ScmObj*, align 8
%fptrToInt88026 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57291 to i64
%ae57291 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88026)
store volatile %struct.ScmObj* %ae57291, %struct.ScmObj** %stackaddr$makeclosure88025, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57291, %struct.ScmObj* %x40229, i64 0)
%ae57293 = call %struct.ScmObj* @const_init_int(i64 2)
%args86061$_37_6240209$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88027 = alloca %struct.ScmObj*, align 8
%args86061$_37_6240209$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57293, %struct.ScmObj* %args86061$_37_6240209$0)
store volatile %struct.ScmObj* %args86061$_37_6240209$1, %struct.ScmObj** %stackaddr$prim88027, align 8
%stackaddr$prim88028 = alloca %struct.ScmObj*, align 8
%args86061$_37_6240209$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40360, %struct.ScmObj* %args86061$_37_6240209$1)
store volatile %struct.ScmObj* %args86061$_37_6240209$2, %struct.ScmObj** %stackaddr$prim88028, align 8
%stackaddr$prim88029 = alloca %struct.ScmObj*, align 8
%args86061$_37_6240209$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57291, %struct.ScmObj* %args86061$_37_6240209$2)
store volatile %struct.ScmObj* %args86061$_37_6240209$3, %struct.ScmObj** %stackaddr$prim88029, align 8
%clofunc88030 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37_6240209)
musttail call tailcc void %clofunc88030(%struct.ScmObj* %_37_6240209, %struct.ScmObj* %args86061$_37_6240209$3)
ret void
}

define tailcc void @proc_clo$ae57291(%struct.ScmObj* %env$ae57291,%struct.ScmObj* %current_45args85650) {
%stackaddr$env-ref88031 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57291, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88031
%stackaddr$prim88032 = alloca %struct.ScmObj*, align 8
%_95k40412 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85650)
store volatile %struct.ScmObj* %_95k40412, %struct.ScmObj** %stackaddr$prim88032, align 8
%stackaddr$prim88033 = alloca %struct.ScmObj*, align 8
%current_45args85651 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85650)
store volatile %struct.ScmObj* %current_45args85651, %struct.ScmObj** %stackaddr$prim88033, align 8
%stackaddr$prim88034 = alloca %struct.ScmObj*, align 8
%anf_45bind40361 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85651)
store volatile %struct.ScmObj* %anf_45bind40361, %struct.ScmObj** %stackaddr$prim88034, align 8
%truthy$cmp88035 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40361)
%cmp$cmp88035 = icmp eq i64 %truthy$cmp88035, 1
br i1 %cmp$cmp88035, label %truebranch$cmp88035, label %falsebranch$cmp88035
truebranch$cmp88035:
%stackaddr$prim88036 = alloca %struct.ScmObj*, align 8
%cpsprim40425 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40425, %struct.ScmObj** %stackaddr$prim88036, align 8
%stackaddr$makeclosure88037 = alloca %struct.ScmObj*, align 8
%fptrToInt88038 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57299 to i64
%ae57299 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88038)
store volatile %struct.ScmObj* %ae57299, %struct.ScmObj** %stackaddr$makeclosure88037, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57299, %struct.ScmObj* %x40229, i64 0)
%ae57300 = call %struct.ScmObj* @const_init_int(i64 0)
%args85856$ae57299$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88039 = alloca %struct.ScmObj*, align 8
%args85856$ae57299$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40425, %struct.ScmObj* %args85856$ae57299$0)
store volatile %struct.ScmObj* %args85856$ae57299$1, %struct.ScmObj** %stackaddr$prim88039, align 8
%stackaddr$prim88040 = alloca %struct.ScmObj*, align 8
%args85856$ae57299$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57300, %struct.ScmObj* %args85856$ae57299$1)
store volatile %struct.ScmObj* %args85856$ae57299$2, %struct.ScmObj** %stackaddr$prim88040, align 8
%clofunc88041 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57299)
musttail call tailcc void %clofunc88041(%struct.ScmObj* %ae57299, %struct.ScmObj* %args85856$ae57299$2)
ret void
falsebranch$cmp88035:
%ae61483 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88042 = alloca %struct.ScmObj*, align 8
%anf_45bind40362 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61483)
store volatile %struct.ScmObj* %anf_45bind40362, %struct.ScmObj** %stackaddr$prim88042, align 8
%ae61485 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim88043 = alloca %struct.ScmObj*, align 8
%anf_45bind40363 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40362, %struct.ScmObj* %ae61485)
store volatile %struct.ScmObj* %anf_45bind40363, %struct.ScmObj** %stackaddr$prim88043, align 8
%ae61487 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim88044 = alloca %struct.ScmObj*, align 8
%anf_45bind40364 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40363, %struct.ScmObj* %ae61487)
store volatile %struct.ScmObj* %anf_45bind40364, %struct.ScmObj** %stackaddr$prim88044, align 8
%ae61489 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88045 = alloca %struct.ScmObj*, align 8
%cpsprim40426 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61489, %struct.ScmObj* %anf_45bind40364)
store volatile %struct.ScmObj* %cpsprim40426, %struct.ScmObj** %stackaddr$prim88045, align 8
%stackaddr$makeclosure88046 = alloca %struct.ScmObj*, align 8
%fptrToInt88047 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61491 to i64
%ae61491 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88047)
store volatile %struct.ScmObj* %ae61491, %struct.ScmObj** %stackaddr$makeclosure88046, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae61491, %struct.ScmObj* %x40229, i64 0)
%ae61492 = call %struct.ScmObj* @const_init_int(i64 0)
%args86060$ae61491$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88048 = alloca %struct.ScmObj*, align 8
%args86060$ae61491$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40426, %struct.ScmObj* %args86060$ae61491$0)
store volatile %struct.ScmObj* %args86060$ae61491$1, %struct.ScmObj** %stackaddr$prim88048, align 8
%stackaddr$prim88049 = alloca %struct.ScmObj*, align 8
%args86060$ae61491$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61492, %struct.ScmObj* %args86060$ae61491$1)
store volatile %struct.ScmObj* %args86060$ae61491$2, %struct.ScmObj** %stackaddr$prim88049, align 8
%clofunc88050 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61491)
musttail call tailcc void %clofunc88050(%struct.ScmObj* %ae61491, %struct.ScmObj* %args86060$ae61491$2)
ret void
}

define tailcc void @proc_clo$ae57299(%struct.ScmObj* %env$ae57299,%struct.ScmObj* %current_45args85653) {
%stackaddr$env-ref88051 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57299, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88051
%stackaddr$prim88052 = alloca %struct.ScmObj*, align 8
%_95k40413 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85653)
store volatile %struct.ScmObj* %_95k40413, %struct.ScmObj** %stackaddr$prim88052, align 8
%stackaddr$prim88053 = alloca %struct.ScmObj*, align 8
%current_45args85654 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85653)
store volatile %struct.ScmObj* %current_45args85654, %struct.ScmObj** %stackaddr$prim88053, align 8
%stackaddr$prim88054 = alloca %struct.ScmObj*, align 8
%t4010440232 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85654)
store volatile %struct.ScmObj* %t4010440232, %struct.ScmObj** %stackaddr$prim88054, align 8
%ae57306 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88055 = alloca %struct.ScmObj*, align 8
%anf_45bind40365 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57306)
store volatile %struct.ScmObj* %anf_45bind40365, %struct.ScmObj** %stackaddr$prim88055, align 8
%ae57308 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim88056 = alloca %struct.ScmObj*, align 8
%anf_45bind40366 = call %struct.ScmObj* @prim__60(%struct.ScmObj* %anf_45bind40365, %struct.ScmObj* %ae57308)
store volatile %struct.ScmObj* %anf_45bind40366, %struct.ScmObj** %stackaddr$prim88056, align 8
%truthy$cmp88057 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40366)
%cmp$cmp88057 = icmp eq i64 %truthy$cmp88057, 1
br i1 %cmp$cmp88057, label %truebranch$cmp88057, label %falsebranch$cmp88057
truebranch$cmp88057:
%ae57311 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88058 = alloca %struct.ScmObj*, align 8
%anf_45bind40367 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57311)
store volatile %struct.ScmObj* %anf_45bind40367, %struct.ScmObj** %stackaddr$prim88058, align 8
%ae57313 = call %struct.ScmObj* @const_init_int(i64 9)
%stackaddr$prim88059 = alloca %struct.ScmObj*, align 8
%anf_45bind40368 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40367, %struct.ScmObj* %ae57313)
store volatile %struct.ScmObj* %anf_45bind40368, %struct.ScmObj** %stackaddr$prim88059, align 8
%ae57315 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim88060 = alloca %struct.ScmObj*, align 8
%anf_45bind40369 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40368, %struct.ScmObj* %ae57315)
store volatile %struct.ScmObj* %anf_45bind40369, %struct.ScmObj** %stackaddr$prim88060, align 8
%ae57317 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88061 = alloca %struct.ScmObj*, align 8
%cpsprim40423 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57317, %struct.ScmObj* %anf_45bind40369)
store volatile %struct.ScmObj* %cpsprim40423, %struct.ScmObj** %stackaddr$prim88061, align 8
%stackaddr$makeclosure88062 = alloca %struct.ScmObj*, align 8
%fptrToInt88063 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57319 to i64
%ae57319 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88063)
store volatile %struct.ScmObj* %ae57319, %struct.ScmObj** %stackaddr$makeclosure88062, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57319, %struct.ScmObj* %x40229, i64 0)
%ae57320 = call %struct.ScmObj* @const_init_int(i64 0)
%args85755$ae57319$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88064 = alloca %struct.ScmObj*, align 8
%args85755$ae57319$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40423, %struct.ScmObj* %args85755$ae57319$0)
store volatile %struct.ScmObj* %args85755$ae57319$1, %struct.ScmObj** %stackaddr$prim88064, align 8
%stackaddr$prim88065 = alloca %struct.ScmObj*, align 8
%args85755$ae57319$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57320, %struct.ScmObj* %args85755$ae57319$1)
store volatile %struct.ScmObj* %args85755$ae57319$2, %struct.ScmObj** %stackaddr$prim88065, align 8
%clofunc88066 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57319)
musttail call tailcc void %clofunc88066(%struct.ScmObj* %ae57319, %struct.ScmObj* %args85755$ae57319$2)
ret void
falsebranch$cmp88057:
%stackaddr$prim88067 = alloca %struct.ScmObj*, align 8
%cpsprim40424 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40424, %struct.ScmObj** %stackaddr$prim88067, align 8
%stackaddr$makeclosure88068 = alloca %struct.ScmObj*, align 8
%fptrToInt88069 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59398 to i64
%ae59398 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88069)
store volatile %struct.ScmObj* %ae59398, %struct.ScmObj** %stackaddr$makeclosure88068, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59398, %struct.ScmObj* %x40229, i64 0)
%ae59399 = call %struct.ScmObj* @const_init_int(i64 0)
%args85855$ae59398$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88070 = alloca %struct.ScmObj*, align 8
%args85855$ae59398$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40424, %struct.ScmObj* %args85855$ae59398$0)
store volatile %struct.ScmObj* %args85855$ae59398$1, %struct.ScmObj** %stackaddr$prim88070, align 8
%stackaddr$prim88071 = alloca %struct.ScmObj*, align 8
%args85855$ae59398$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59399, %struct.ScmObj* %args85855$ae59398$1)
store volatile %struct.ScmObj* %args85855$ae59398$2, %struct.ScmObj** %stackaddr$prim88071, align 8
%clofunc88072 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59398)
musttail call tailcc void %clofunc88072(%struct.ScmObj* %ae59398, %struct.ScmObj* %args85855$ae59398$2)
ret void
}

define tailcc void @proc_clo$ae57319(%struct.ScmObj* %env$ae57319,%struct.ScmObj* %current_45args85656) {
%stackaddr$env-ref88073 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57319, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88073
%stackaddr$prim88074 = alloca %struct.ScmObj*, align 8
%_95k40414 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85656)
store volatile %struct.ScmObj* %_95k40414, %struct.ScmObj** %stackaddr$prim88074, align 8
%stackaddr$prim88075 = alloca %struct.ScmObj*, align 8
%current_45args85657 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85656)
store volatile %struct.ScmObj* %current_45args85657, %struct.ScmObj** %stackaddr$prim88075, align 8
%stackaddr$prim88076 = alloca %struct.ScmObj*, align 8
%t4010540233 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85657)
store volatile %struct.ScmObj* %t4010540233, %struct.ScmObj** %stackaddr$prim88076, align 8
%ae57325 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88077 = call i64 @is_truthy_value(%struct.ScmObj* %ae57325)
%cmp$cmp88077 = icmp eq i64 %truthy$cmp88077, 1
br i1 %cmp$cmp88077, label %truebranch$cmp88077, label %falsebranch$cmp88077
truebranch$cmp88077:
%stackaddr$prim88078 = alloca %struct.ScmObj*, align 8
%cpsprim40421 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40421, %struct.ScmObj** %stackaddr$prim88078, align 8
%stackaddr$makeclosure88079 = alloca %struct.ScmObj*, align 8
%fptrToInt88080 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57326 to i64
%ae57326 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88080)
store volatile %struct.ScmObj* %ae57326, %struct.ScmObj** %stackaddr$makeclosure88079, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57326, %struct.ScmObj* %x40229, i64 0)
%ae57327 = call %struct.ScmObj* @const_init_int(i64 0)
%args85706$ae57326$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88081 = alloca %struct.ScmObj*, align 8
%args85706$ae57326$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40421, %struct.ScmObj* %args85706$ae57326$0)
store volatile %struct.ScmObj* %args85706$ae57326$1, %struct.ScmObj** %stackaddr$prim88081, align 8
%stackaddr$prim88082 = alloca %struct.ScmObj*, align 8
%args85706$ae57326$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57327, %struct.ScmObj* %args85706$ae57326$1)
store volatile %struct.ScmObj* %args85706$ae57326$2, %struct.ScmObj** %stackaddr$prim88082, align 8
%clofunc88083 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57326)
musttail call tailcc void %clofunc88083(%struct.ScmObj* %ae57326, %struct.ScmObj* %args85706$ae57326$2)
ret void
falsebranch$cmp88077:
%ae57791 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88084 = alloca %struct.ScmObj*, align 8
%anf_45bind40370 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57791)
store volatile %struct.ScmObj* %anf_45bind40370, %struct.ScmObj** %stackaddr$prim88084, align 8
%ae57793 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim88085 = alloca %struct.ScmObj*, align 8
%anf_45bind40371 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40370, %struct.ScmObj* %ae57793)
store volatile %struct.ScmObj* %anf_45bind40371, %struct.ScmObj** %stackaddr$prim88085, align 8
%ae57795 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim88086 = alloca %struct.ScmObj*, align 8
%anf_45bind40372 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40371, %struct.ScmObj* %ae57795)
store volatile %struct.ScmObj* %anf_45bind40372, %struct.ScmObj** %stackaddr$prim88086, align 8
%ae57797 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88087 = alloca %struct.ScmObj*, align 8
%cpsprim40422 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57797, %struct.ScmObj* %anf_45bind40372)
store volatile %struct.ScmObj* %cpsprim40422, %struct.ScmObj** %stackaddr$prim88087, align 8
%stackaddr$makeclosure88088 = alloca %struct.ScmObj*, align 8
%fptrToInt88089 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57799 to i64
%ae57799 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88089)
store volatile %struct.ScmObj* %ae57799, %struct.ScmObj** %stackaddr$makeclosure88088, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57799, %struct.ScmObj* %x40229, i64 0)
%ae57800 = call %struct.ScmObj* @const_init_int(i64 0)
%args85754$ae57799$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88090 = alloca %struct.ScmObj*, align 8
%args85754$ae57799$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40422, %struct.ScmObj* %args85754$ae57799$0)
store volatile %struct.ScmObj* %args85754$ae57799$1, %struct.ScmObj** %stackaddr$prim88090, align 8
%stackaddr$prim88091 = alloca %struct.ScmObj*, align 8
%args85754$ae57799$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57800, %struct.ScmObj* %args85754$ae57799$1)
store volatile %struct.ScmObj* %args85754$ae57799$2, %struct.ScmObj** %stackaddr$prim88091, align 8
%clofunc88092 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57799)
musttail call tailcc void %clofunc88092(%struct.ScmObj* %ae57799, %struct.ScmObj* %args85754$ae57799$2)
ret void
}

define tailcc void @proc_clo$ae57326(%struct.ScmObj* %env$ae57326,%struct.ScmObj* %current_45args85659) {
%stackaddr$env-ref88093 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57326, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88093
%stackaddr$prim88094 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85659)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim88094, align 8
%stackaddr$prim88095 = alloca %struct.ScmObj*, align 8
%current_45args85660 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85659)
store volatile %struct.ScmObj* %current_45args85660, %struct.ScmObj** %stackaddr$prim88095, align 8
%stackaddr$prim88096 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85660)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim88096, align 8
%ae57333 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88097 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57333)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim88097, align 8
%truthy$cmp88098 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp88098 = icmp eq i64 %truthy$cmp88098, 1
br i1 %cmp$cmp88098, label %truebranch$cmp88098, label %falsebranch$cmp88098
truebranch$cmp88098:
%ae57336 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88099 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57336)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim88099, align 8
%ae57338 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88100 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57338)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim88100, align 8
%stackaddr$prim88101 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim88101, align 8
%ae57342 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88102 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57342, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim88102, align 8
%stackaddr$makeclosure88103 = alloca %struct.ScmObj*, align 8
%fptrToInt88104 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57344 to i64
%ae57344 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88104)
store volatile %struct.ScmObj* %ae57344, %struct.ScmObj** %stackaddr$makeclosure88103, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57344, %struct.ScmObj* %x40229, i64 0)
%ae57345 = call %struct.ScmObj* @const_init_int(i64 0)
%args85683$ae57344$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88105 = alloca %struct.ScmObj*, align 8
%args85683$ae57344$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85683$ae57344$0)
store volatile %struct.ScmObj* %args85683$ae57344$1, %struct.ScmObj** %stackaddr$prim88105, align 8
%stackaddr$prim88106 = alloca %struct.ScmObj*, align 8
%args85683$ae57344$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57345, %struct.ScmObj* %args85683$ae57344$1)
store volatile %struct.ScmObj* %args85683$ae57344$2, %struct.ScmObj** %stackaddr$prim88106, align 8
%clofunc88107 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57344)
musttail call tailcc void %clofunc88107(%struct.ScmObj* %ae57344, %struct.ScmObj* %args85683$ae57344$2)
ret void
falsebranch$cmp88098:
%stackaddr$makeclosure88108 = alloca %struct.ScmObj*, align 8
%fptrToInt88109 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57582 to i64
%ae57582 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88109)
store volatile %struct.ScmObj* %ae57582, %struct.ScmObj** %stackaddr$makeclosure88108, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57582, %struct.ScmObj* %x40229, i64 0)
%ae57583 = call %struct.ScmObj* @const_init_int(i64 0)
%ae57584 = call %struct.ScmObj* @const_init_int(i64 7)
%args85705$ae57582$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88110 = alloca %struct.ScmObj*, align 8
%args85705$ae57582$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57584, %struct.ScmObj* %args85705$ae57582$0)
store volatile %struct.ScmObj* %args85705$ae57582$1, %struct.ScmObj** %stackaddr$prim88110, align 8
%stackaddr$prim88111 = alloca %struct.ScmObj*, align 8
%args85705$ae57582$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57583, %struct.ScmObj* %args85705$ae57582$1)
store volatile %struct.ScmObj* %args85705$ae57582$2, %struct.ScmObj** %stackaddr$prim88111, align 8
%clofunc88112 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57582)
musttail call tailcc void %clofunc88112(%struct.ScmObj* %ae57582, %struct.ScmObj* %args85705$ae57582$2)
ret void
}

define tailcc void @proc_clo$ae57344(%struct.ScmObj* %env$ae57344,%struct.ScmObj* %current_45args85662) {
%stackaddr$env-ref88113 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57344, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88113
%stackaddr$prim88114 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85662)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88114, align 8
%stackaddr$prim88115 = alloca %struct.ScmObj*, align 8
%current_45args85663 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85662)
store volatile %struct.ScmObj* %current_45args85663, %struct.ScmObj** %stackaddr$prim88115, align 8
%stackaddr$prim88116 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85663)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88116, align 8
%ae57350 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88117 = call i64 @is_truthy_value(%struct.ScmObj* %ae57350)
%cmp$cmp88117 = icmp eq i64 %truthy$cmp88117, 1
br i1 %cmp$cmp88117, label %truebranch$cmp88117, label %falsebranch$cmp88117
truebranch$cmp88117:
%ae57352 = call %struct.ScmObj* @const_init_int(i64 0)
%ae57353 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88118 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57352, %struct.ScmObj* %ae57353)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88118, align 8
%stackaddr$makeclosure88119 = alloca %struct.ScmObj*, align 8
%fptrToInt88120 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57354 to i64
%ae57354 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88120)
store volatile %struct.ScmObj* %ae57354, %struct.ScmObj** %stackaddr$makeclosure88119, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57354, %struct.ScmObj* %x40229, i64 0)
%ae57355 = call %struct.ScmObj* @const_init_int(i64 0)
%args85673$ae57354$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88121 = alloca %struct.ScmObj*, align 8
%args85673$ae57354$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85673$ae57354$0)
store volatile %struct.ScmObj* %args85673$ae57354$1, %struct.ScmObj** %stackaddr$prim88121, align 8
%stackaddr$prim88122 = alloca %struct.ScmObj*, align 8
%args85673$ae57354$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57355, %struct.ScmObj* %args85673$ae57354$1)
store volatile %struct.ScmObj* %args85673$ae57354$2, %struct.ScmObj** %stackaddr$prim88122, align 8
%clofunc88123 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57354)
musttail call tailcc void %clofunc88123(%struct.ScmObj* %ae57354, %struct.ScmObj* %args85673$ae57354$2)
ret void
falsebranch$cmp88117:
%stackaddr$makeclosure88124 = alloca %struct.ScmObj*, align 8
%fptrToInt88125 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57413 to i64
%ae57413 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88125)
store volatile %struct.ScmObj* %ae57413, %struct.ScmObj** %stackaddr$makeclosure88124, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57413, %struct.ScmObj* %x40229, i64 0)
%ae57414 = call %struct.ScmObj* @const_init_int(i64 0)
%ae57415 = call %struct.ScmObj* @const_init_int(i64 9)
%args85682$ae57413$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88126 = alloca %struct.ScmObj*, align 8
%args85682$ae57413$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57415, %struct.ScmObj* %args85682$ae57413$0)
store volatile %struct.ScmObj* %args85682$ae57413$1, %struct.ScmObj** %stackaddr$prim88126, align 8
%stackaddr$prim88127 = alloca %struct.ScmObj*, align 8
%args85682$ae57413$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57414, %struct.ScmObj* %args85682$ae57413$1)
store volatile %struct.ScmObj* %args85682$ae57413$2, %struct.ScmObj** %stackaddr$prim88127, align 8
%clofunc88128 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57413)
musttail call tailcc void %clofunc88128(%struct.ScmObj* %ae57413, %struct.ScmObj* %args85682$ae57413$2)
ret void
}

define tailcc void @proc_clo$ae57354(%struct.ScmObj* %env$ae57354,%struct.ScmObj* %current_45args85665) {
%stackaddr$env-ref88129 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57354, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88129
%stackaddr$prim88130 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85665)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88130, align 8
%stackaddr$prim88131 = alloca %struct.ScmObj*, align 8
%current_45args85666 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85665)
store volatile %struct.ScmObj* %current_45args85666, %struct.ScmObj** %stackaddr$prim88131, align 8
%stackaddr$prim88132 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85666)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88132, align 8
%ae57361 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88133 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57361)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88133, align 8
%stackaddr$makeclosure88134 = alloca %struct.ScmObj*, align 8
%fptrToInt88135 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57362 to i64
%ae57362 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88135)
store volatile %struct.ScmObj* %ae57362, %struct.ScmObj** %stackaddr$makeclosure88134, align 8
%ae57363 = call %struct.ScmObj* @const_init_int(i64 0)
%args85672$ae57362$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88136 = alloca %struct.ScmObj*, align 8
%args85672$ae57362$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85672$ae57362$0)
store volatile %struct.ScmObj* %args85672$ae57362$1, %struct.ScmObj** %stackaddr$prim88136, align 8
%stackaddr$prim88137 = alloca %struct.ScmObj*, align 8
%args85672$ae57362$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57363, %struct.ScmObj* %args85672$ae57362$1)
store volatile %struct.ScmObj* %args85672$ae57362$2, %struct.ScmObj** %stackaddr$prim88137, align 8
%clofunc88138 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57362)
musttail call tailcc void %clofunc88138(%struct.ScmObj* %ae57362, %struct.ScmObj* %args85672$ae57362$2)
ret void
}

define tailcc void @proc_clo$ae57362(%struct.ScmObj* %env$ae57362,%struct.ScmObj* %current_45args85668) {
%stackaddr$prim88139 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85668)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88139, align 8
%stackaddr$prim88140 = alloca %struct.ScmObj*, align 8
%current_45args85669 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85668)
store volatile %struct.ScmObj* %current_45args85669, %struct.ScmObj** %stackaddr$prim88140, align 8
%stackaddr$prim88141 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85669)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88141, align 8
%stackaddr$prim88142 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88142, align 8
%args85671$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88143 = alloca %struct.ScmObj*, align 8
%args85671$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85671$k$0)
store volatile %struct.ScmObj* %args85671$k$1, %struct.ScmObj** %stackaddr$prim88143, align 8
%clofunc88144 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88144(%struct.ScmObj* %k, %struct.ScmObj* %args85671$k$1)
ret void
}

define tailcc void @proc_clo$ae57413(%struct.ScmObj* %env$ae57413,%struct.ScmObj* %current_45args85674) {
%stackaddr$env-ref88145 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57413, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88145
%stackaddr$prim88146 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85674)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88146, align 8
%stackaddr$prim88147 = alloca %struct.ScmObj*, align 8
%current_45args85675 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85674)
store volatile %struct.ScmObj* %current_45args85675, %struct.ScmObj** %stackaddr$prim88147, align 8
%stackaddr$prim88148 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85675)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88148, align 8
%ae57423 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88149 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57423)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88149, align 8
%stackaddr$makeclosure88150 = alloca %struct.ScmObj*, align 8
%fptrToInt88151 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57424 to i64
%ae57424 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88151)
store volatile %struct.ScmObj* %ae57424, %struct.ScmObj** %stackaddr$makeclosure88150, align 8
%ae57425 = call %struct.ScmObj* @const_init_int(i64 0)
%args85681$ae57424$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88152 = alloca %struct.ScmObj*, align 8
%args85681$ae57424$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85681$ae57424$0)
store volatile %struct.ScmObj* %args85681$ae57424$1, %struct.ScmObj** %stackaddr$prim88152, align 8
%stackaddr$prim88153 = alloca %struct.ScmObj*, align 8
%args85681$ae57424$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57425, %struct.ScmObj* %args85681$ae57424$1)
store volatile %struct.ScmObj* %args85681$ae57424$2, %struct.ScmObj** %stackaddr$prim88153, align 8
%clofunc88154 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57424)
musttail call tailcc void %clofunc88154(%struct.ScmObj* %ae57424, %struct.ScmObj* %args85681$ae57424$2)
ret void
}

define tailcc void @proc_clo$ae57424(%struct.ScmObj* %env$ae57424,%struct.ScmObj* %current_45args85677) {
%stackaddr$prim88155 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85677)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88155, align 8
%stackaddr$prim88156 = alloca %struct.ScmObj*, align 8
%current_45args85678 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85677)
store volatile %struct.ScmObj* %current_45args85678, %struct.ScmObj** %stackaddr$prim88156, align 8
%stackaddr$prim88157 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85678)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88157, align 8
%stackaddr$prim88158 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88158, align 8
%args85680$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88159 = alloca %struct.ScmObj*, align 8
%args85680$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85680$k$0)
store volatile %struct.ScmObj* %args85680$k$1, %struct.ScmObj** %stackaddr$prim88159, align 8
%clofunc88160 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88160(%struct.ScmObj* %k, %struct.ScmObj* %args85680$k$1)
ret void
}

define tailcc void @proc_clo$ae57582(%struct.ScmObj* %env$ae57582,%struct.ScmObj* %current_45args85684) {
%stackaddr$env-ref88161 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57582, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88161
%stackaddr$prim88162 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85684)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88162, align 8
%stackaddr$prim88163 = alloca %struct.ScmObj*, align 8
%current_45args85685 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85684)
store volatile %struct.ScmObj* %current_45args85685, %struct.ScmObj** %stackaddr$prim88163, align 8
%stackaddr$prim88164 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85685)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88164, align 8
%ae57591 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88165 = call i64 @is_truthy_value(%struct.ScmObj* %ae57591)
%cmp$cmp88165 = icmp eq i64 %truthy$cmp88165, 1
br i1 %cmp$cmp88165, label %truebranch$cmp88165, label %falsebranch$cmp88165
truebranch$cmp88165:
%ae57593 = call %struct.ScmObj* @const_init_int(i64 0)
%ae57594 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88166 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57593, %struct.ScmObj* %ae57594)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88166, align 8
%stackaddr$makeclosure88167 = alloca %struct.ScmObj*, align 8
%fptrToInt88168 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57595 to i64
%ae57595 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88168)
store volatile %struct.ScmObj* %ae57595, %struct.ScmObj** %stackaddr$makeclosure88167, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57595, %struct.ScmObj* %x40229, i64 0)
%ae57596 = call %struct.ScmObj* @const_init_int(i64 0)
%args85695$ae57595$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88169 = alloca %struct.ScmObj*, align 8
%args85695$ae57595$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85695$ae57595$0)
store volatile %struct.ScmObj* %args85695$ae57595$1, %struct.ScmObj** %stackaddr$prim88169, align 8
%stackaddr$prim88170 = alloca %struct.ScmObj*, align 8
%args85695$ae57595$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57596, %struct.ScmObj* %args85695$ae57595$1)
store volatile %struct.ScmObj* %args85695$ae57595$2, %struct.ScmObj** %stackaddr$prim88170, align 8
%clofunc88171 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57595)
musttail call tailcc void %clofunc88171(%struct.ScmObj* %ae57595, %struct.ScmObj* %args85695$ae57595$2)
ret void
falsebranch$cmp88165:
%stackaddr$makeclosure88172 = alloca %struct.ScmObj*, align 8
%fptrToInt88173 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57654 to i64
%ae57654 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88173)
store volatile %struct.ScmObj* %ae57654, %struct.ScmObj** %stackaddr$makeclosure88172, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57654, %struct.ScmObj* %x40229, i64 0)
%ae57655 = call %struct.ScmObj* @const_init_int(i64 0)
%ae57656 = call %struct.ScmObj* @const_init_int(i64 9)
%args85704$ae57654$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88174 = alloca %struct.ScmObj*, align 8
%args85704$ae57654$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57656, %struct.ScmObj* %args85704$ae57654$0)
store volatile %struct.ScmObj* %args85704$ae57654$1, %struct.ScmObj** %stackaddr$prim88174, align 8
%stackaddr$prim88175 = alloca %struct.ScmObj*, align 8
%args85704$ae57654$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57655, %struct.ScmObj* %args85704$ae57654$1)
store volatile %struct.ScmObj* %args85704$ae57654$2, %struct.ScmObj** %stackaddr$prim88175, align 8
%clofunc88176 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57654)
musttail call tailcc void %clofunc88176(%struct.ScmObj* %ae57654, %struct.ScmObj* %args85704$ae57654$2)
ret void
}

define tailcc void @proc_clo$ae57595(%struct.ScmObj* %env$ae57595,%struct.ScmObj* %current_45args85687) {
%stackaddr$env-ref88177 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57595, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88177
%stackaddr$prim88178 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85687)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88178, align 8
%stackaddr$prim88179 = alloca %struct.ScmObj*, align 8
%current_45args85688 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85687)
store volatile %struct.ScmObj* %current_45args85688, %struct.ScmObj** %stackaddr$prim88179, align 8
%stackaddr$prim88180 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85688)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88180, align 8
%ae57602 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88181 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57602)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88181, align 8
%stackaddr$makeclosure88182 = alloca %struct.ScmObj*, align 8
%fptrToInt88183 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57603 to i64
%ae57603 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88183)
store volatile %struct.ScmObj* %ae57603, %struct.ScmObj** %stackaddr$makeclosure88182, align 8
%ae57604 = call %struct.ScmObj* @const_init_int(i64 0)
%args85694$ae57603$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88184 = alloca %struct.ScmObj*, align 8
%args85694$ae57603$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85694$ae57603$0)
store volatile %struct.ScmObj* %args85694$ae57603$1, %struct.ScmObj** %stackaddr$prim88184, align 8
%stackaddr$prim88185 = alloca %struct.ScmObj*, align 8
%args85694$ae57603$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57604, %struct.ScmObj* %args85694$ae57603$1)
store volatile %struct.ScmObj* %args85694$ae57603$2, %struct.ScmObj** %stackaddr$prim88185, align 8
%clofunc88186 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57603)
musttail call tailcc void %clofunc88186(%struct.ScmObj* %ae57603, %struct.ScmObj* %args85694$ae57603$2)
ret void
}

define tailcc void @proc_clo$ae57603(%struct.ScmObj* %env$ae57603,%struct.ScmObj* %current_45args85690) {
%stackaddr$prim88187 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85690)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88187, align 8
%stackaddr$prim88188 = alloca %struct.ScmObj*, align 8
%current_45args85691 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85690)
store volatile %struct.ScmObj* %current_45args85691, %struct.ScmObj** %stackaddr$prim88188, align 8
%stackaddr$prim88189 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85691)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88189, align 8
%stackaddr$prim88190 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88190, align 8
%args85693$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88191 = alloca %struct.ScmObj*, align 8
%args85693$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85693$k$0)
store volatile %struct.ScmObj* %args85693$k$1, %struct.ScmObj** %stackaddr$prim88191, align 8
%clofunc88192 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88192(%struct.ScmObj* %k, %struct.ScmObj* %args85693$k$1)
ret void
}

define tailcc void @proc_clo$ae57654(%struct.ScmObj* %env$ae57654,%struct.ScmObj* %current_45args85696) {
%stackaddr$env-ref88193 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57654, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88193
%stackaddr$prim88194 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85696)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88194, align 8
%stackaddr$prim88195 = alloca %struct.ScmObj*, align 8
%current_45args85697 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85696)
store volatile %struct.ScmObj* %current_45args85697, %struct.ScmObj** %stackaddr$prim88195, align 8
%stackaddr$prim88196 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85697)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88196, align 8
%ae57664 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88197 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57664)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88197, align 8
%stackaddr$makeclosure88198 = alloca %struct.ScmObj*, align 8
%fptrToInt88199 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57665 to i64
%ae57665 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88199)
store volatile %struct.ScmObj* %ae57665, %struct.ScmObj** %stackaddr$makeclosure88198, align 8
%ae57666 = call %struct.ScmObj* @const_init_int(i64 0)
%args85703$ae57665$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88200 = alloca %struct.ScmObj*, align 8
%args85703$ae57665$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85703$ae57665$0)
store volatile %struct.ScmObj* %args85703$ae57665$1, %struct.ScmObj** %stackaddr$prim88200, align 8
%stackaddr$prim88201 = alloca %struct.ScmObj*, align 8
%args85703$ae57665$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57666, %struct.ScmObj* %args85703$ae57665$1)
store volatile %struct.ScmObj* %args85703$ae57665$2, %struct.ScmObj** %stackaddr$prim88201, align 8
%clofunc88202 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57665)
musttail call tailcc void %clofunc88202(%struct.ScmObj* %ae57665, %struct.ScmObj* %args85703$ae57665$2)
ret void
}

define tailcc void @proc_clo$ae57665(%struct.ScmObj* %env$ae57665,%struct.ScmObj* %current_45args85699) {
%stackaddr$prim88203 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85699)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88203, align 8
%stackaddr$prim88204 = alloca %struct.ScmObj*, align 8
%current_45args85700 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85699)
store volatile %struct.ScmObj* %current_45args85700, %struct.ScmObj** %stackaddr$prim88204, align 8
%stackaddr$prim88205 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85700)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88205, align 8
%stackaddr$prim88206 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88206, align 8
%args85702$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88207 = alloca %struct.ScmObj*, align 8
%args85702$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85702$k$0)
store volatile %struct.ScmObj* %args85702$k$1, %struct.ScmObj** %stackaddr$prim88207, align 8
%clofunc88208 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88208(%struct.ScmObj* %k, %struct.ScmObj* %args85702$k$1)
ret void
}

define tailcc void @proc_clo$ae57799(%struct.ScmObj* %env$ae57799,%struct.ScmObj* %current_45args85707) {
%stackaddr$env-ref88209 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57799, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88209
%stackaddr$prim88210 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85707)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim88210, align 8
%stackaddr$prim88211 = alloca %struct.ScmObj*, align 8
%current_45args85708 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85707)
store volatile %struct.ScmObj* %current_45args85708, %struct.ScmObj** %stackaddr$prim88211, align 8
%stackaddr$prim88212 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85708)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim88212, align 8
%ae57806 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88213 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57806)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim88213, align 8
%truthy$cmp88214 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp88214 = icmp eq i64 %truthy$cmp88214, 1
br i1 %cmp$cmp88214, label %truebranch$cmp88214, label %falsebranch$cmp88214
truebranch$cmp88214:
%ae57809 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88215 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57809)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim88215, align 8
%ae57811 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88216 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57811)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim88216, align 8
%stackaddr$prim88217 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim88217, align 8
%ae57815 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88218 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57815, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim88218, align 8
%stackaddr$makeclosure88219 = alloca %struct.ScmObj*, align 8
%fptrToInt88220 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57817 to i64
%ae57817 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88220)
store volatile %struct.ScmObj* %ae57817, %struct.ScmObj** %stackaddr$makeclosure88219, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57817, %struct.ScmObj* %x40229, i64 0)
%ae57818 = call %struct.ScmObj* @const_init_int(i64 0)
%args85731$ae57817$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88221 = alloca %struct.ScmObj*, align 8
%args85731$ae57817$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85731$ae57817$0)
store volatile %struct.ScmObj* %args85731$ae57817$1, %struct.ScmObj** %stackaddr$prim88221, align 8
%stackaddr$prim88222 = alloca %struct.ScmObj*, align 8
%args85731$ae57817$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57818, %struct.ScmObj* %args85731$ae57817$1)
store volatile %struct.ScmObj* %args85731$ae57817$2, %struct.ScmObj** %stackaddr$prim88222, align 8
%clofunc88223 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57817)
musttail call tailcc void %clofunc88223(%struct.ScmObj* %ae57817, %struct.ScmObj* %args85731$ae57817$2)
ret void
falsebranch$cmp88214:
%stackaddr$makeclosure88224 = alloca %struct.ScmObj*, align 8
%fptrToInt88225 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58055 to i64
%ae58055 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88225)
store volatile %struct.ScmObj* %ae58055, %struct.ScmObj** %stackaddr$makeclosure88224, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58055, %struct.ScmObj* %x40229, i64 0)
%ae58056 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58057 = call %struct.ScmObj* @const_init_int(i64 7)
%args85753$ae58055$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88226 = alloca %struct.ScmObj*, align 8
%args85753$ae58055$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58057, %struct.ScmObj* %args85753$ae58055$0)
store volatile %struct.ScmObj* %args85753$ae58055$1, %struct.ScmObj** %stackaddr$prim88226, align 8
%stackaddr$prim88227 = alloca %struct.ScmObj*, align 8
%args85753$ae58055$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58056, %struct.ScmObj* %args85753$ae58055$1)
store volatile %struct.ScmObj* %args85753$ae58055$2, %struct.ScmObj** %stackaddr$prim88227, align 8
%clofunc88228 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58055)
musttail call tailcc void %clofunc88228(%struct.ScmObj* %ae58055, %struct.ScmObj* %args85753$ae58055$2)
ret void
}

define tailcc void @proc_clo$ae57817(%struct.ScmObj* %env$ae57817,%struct.ScmObj* %current_45args85710) {
%stackaddr$env-ref88229 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57817, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88229
%stackaddr$prim88230 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85710)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88230, align 8
%stackaddr$prim88231 = alloca %struct.ScmObj*, align 8
%current_45args85711 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85710)
store volatile %struct.ScmObj* %current_45args85711, %struct.ScmObj** %stackaddr$prim88231, align 8
%stackaddr$prim88232 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85711)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88232, align 8
%ae57823 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88233 = call i64 @is_truthy_value(%struct.ScmObj* %ae57823)
%cmp$cmp88233 = icmp eq i64 %truthy$cmp88233, 1
br i1 %cmp$cmp88233, label %truebranch$cmp88233, label %falsebranch$cmp88233
truebranch$cmp88233:
%ae57825 = call %struct.ScmObj* @const_init_int(i64 0)
%ae57826 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88234 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57825, %struct.ScmObj* %ae57826)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88234, align 8
%stackaddr$makeclosure88235 = alloca %struct.ScmObj*, align 8
%fptrToInt88236 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57827 to i64
%ae57827 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88236)
store volatile %struct.ScmObj* %ae57827, %struct.ScmObj** %stackaddr$makeclosure88235, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57827, %struct.ScmObj* %x40229, i64 0)
%ae57828 = call %struct.ScmObj* @const_init_int(i64 0)
%args85721$ae57827$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88237 = alloca %struct.ScmObj*, align 8
%args85721$ae57827$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85721$ae57827$0)
store volatile %struct.ScmObj* %args85721$ae57827$1, %struct.ScmObj** %stackaddr$prim88237, align 8
%stackaddr$prim88238 = alloca %struct.ScmObj*, align 8
%args85721$ae57827$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57828, %struct.ScmObj* %args85721$ae57827$1)
store volatile %struct.ScmObj* %args85721$ae57827$2, %struct.ScmObj** %stackaddr$prim88238, align 8
%clofunc88239 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57827)
musttail call tailcc void %clofunc88239(%struct.ScmObj* %ae57827, %struct.ScmObj* %args85721$ae57827$2)
ret void
falsebranch$cmp88233:
%stackaddr$makeclosure88240 = alloca %struct.ScmObj*, align 8
%fptrToInt88241 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57886 to i64
%ae57886 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88241)
store volatile %struct.ScmObj* %ae57886, %struct.ScmObj** %stackaddr$makeclosure88240, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae57886, %struct.ScmObj* %x40229, i64 0)
%ae57887 = call %struct.ScmObj* @const_init_int(i64 0)
%ae57888 = call %struct.ScmObj* @const_init_int(i64 9)
%args85730$ae57886$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88242 = alloca %struct.ScmObj*, align 8
%args85730$ae57886$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57888, %struct.ScmObj* %args85730$ae57886$0)
store volatile %struct.ScmObj* %args85730$ae57886$1, %struct.ScmObj** %stackaddr$prim88242, align 8
%stackaddr$prim88243 = alloca %struct.ScmObj*, align 8
%args85730$ae57886$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57887, %struct.ScmObj* %args85730$ae57886$1)
store volatile %struct.ScmObj* %args85730$ae57886$2, %struct.ScmObj** %stackaddr$prim88243, align 8
%clofunc88244 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57886)
musttail call tailcc void %clofunc88244(%struct.ScmObj* %ae57886, %struct.ScmObj* %args85730$ae57886$2)
ret void
}

define tailcc void @proc_clo$ae57827(%struct.ScmObj* %env$ae57827,%struct.ScmObj* %current_45args85713) {
%stackaddr$env-ref88245 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57827, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88245
%stackaddr$prim88246 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85713)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88246, align 8
%stackaddr$prim88247 = alloca %struct.ScmObj*, align 8
%current_45args85714 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85713)
store volatile %struct.ScmObj* %current_45args85714, %struct.ScmObj** %stackaddr$prim88247, align 8
%stackaddr$prim88248 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85714)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88248, align 8
%ae57834 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88249 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57834)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88249, align 8
%stackaddr$makeclosure88250 = alloca %struct.ScmObj*, align 8
%fptrToInt88251 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57835 to i64
%ae57835 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88251)
store volatile %struct.ScmObj* %ae57835, %struct.ScmObj** %stackaddr$makeclosure88250, align 8
%ae57836 = call %struct.ScmObj* @const_init_int(i64 0)
%args85720$ae57835$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88252 = alloca %struct.ScmObj*, align 8
%args85720$ae57835$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85720$ae57835$0)
store volatile %struct.ScmObj* %args85720$ae57835$1, %struct.ScmObj** %stackaddr$prim88252, align 8
%stackaddr$prim88253 = alloca %struct.ScmObj*, align 8
%args85720$ae57835$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57836, %struct.ScmObj* %args85720$ae57835$1)
store volatile %struct.ScmObj* %args85720$ae57835$2, %struct.ScmObj** %stackaddr$prim88253, align 8
%clofunc88254 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57835)
musttail call tailcc void %clofunc88254(%struct.ScmObj* %ae57835, %struct.ScmObj* %args85720$ae57835$2)
ret void
}

define tailcc void @proc_clo$ae57835(%struct.ScmObj* %env$ae57835,%struct.ScmObj* %current_45args85716) {
%stackaddr$prim88255 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85716)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88255, align 8
%stackaddr$prim88256 = alloca %struct.ScmObj*, align 8
%current_45args85717 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85716)
store volatile %struct.ScmObj* %current_45args85717, %struct.ScmObj** %stackaddr$prim88256, align 8
%stackaddr$prim88257 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85717)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88257, align 8
%stackaddr$prim88258 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88258, align 8
%args85719$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88259 = alloca %struct.ScmObj*, align 8
%args85719$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85719$k$0)
store volatile %struct.ScmObj* %args85719$k$1, %struct.ScmObj** %stackaddr$prim88259, align 8
%clofunc88260 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88260(%struct.ScmObj* %k, %struct.ScmObj* %args85719$k$1)
ret void
}

define tailcc void @proc_clo$ae57886(%struct.ScmObj* %env$ae57886,%struct.ScmObj* %current_45args85722) {
%stackaddr$env-ref88261 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae57886, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88261
%stackaddr$prim88262 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85722)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88262, align 8
%stackaddr$prim88263 = alloca %struct.ScmObj*, align 8
%current_45args85723 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85722)
store volatile %struct.ScmObj* %current_45args85723, %struct.ScmObj** %stackaddr$prim88263, align 8
%stackaddr$prim88264 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85723)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88264, align 8
%ae57896 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88265 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae57896)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88265, align 8
%stackaddr$makeclosure88266 = alloca %struct.ScmObj*, align 8
%fptrToInt88267 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae57897 to i64
%ae57897 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88267)
store volatile %struct.ScmObj* %ae57897, %struct.ScmObj** %stackaddr$makeclosure88266, align 8
%ae57898 = call %struct.ScmObj* @const_init_int(i64 0)
%args85729$ae57897$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88268 = alloca %struct.ScmObj*, align 8
%args85729$ae57897$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85729$ae57897$0)
store volatile %struct.ScmObj* %args85729$ae57897$1, %struct.ScmObj** %stackaddr$prim88268, align 8
%stackaddr$prim88269 = alloca %struct.ScmObj*, align 8
%args85729$ae57897$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae57898, %struct.ScmObj* %args85729$ae57897$1)
store volatile %struct.ScmObj* %args85729$ae57897$2, %struct.ScmObj** %stackaddr$prim88269, align 8
%clofunc88270 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae57897)
musttail call tailcc void %clofunc88270(%struct.ScmObj* %ae57897, %struct.ScmObj* %args85729$ae57897$2)
ret void
}

define tailcc void @proc_clo$ae57897(%struct.ScmObj* %env$ae57897,%struct.ScmObj* %current_45args85725) {
%stackaddr$prim88271 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85725)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88271, align 8
%stackaddr$prim88272 = alloca %struct.ScmObj*, align 8
%current_45args85726 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85725)
store volatile %struct.ScmObj* %current_45args85726, %struct.ScmObj** %stackaddr$prim88272, align 8
%stackaddr$prim88273 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85726)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88273, align 8
%stackaddr$prim88274 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88274, align 8
%args85728$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88275 = alloca %struct.ScmObj*, align 8
%args85728$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85728$k$0)
store volatile %struct.ScmObj* %args85728$k$1, %struct.ScmObj** %stackaddr$prim88275, align 8
%clofunc88276 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88276(%struct.ScmObj* %k, %struct.ScmObj* %args85728$k$1)
ret void
}

define tailcc void @proc_clo$ae58055(%struct.ScmObj* %env$ae58055,%struct.ScmObj* %current_45args85732) {
%stackaddr$env-ref88277 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58055, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88277
%stackaddr$prim88278 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85732)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88278, align 8
%stackaddr$prim88279 = alloca %struct.ScmObj*, align 8
%current_45args85733 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85732)
store volatile %struct.ScmObj* %current_45args85733, %struct.ScmObj** %stackaddr$prim88279, align 8
%stackaddr$prim88280 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85733)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88280, align 8
%ae58064 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88281 = call i64 @is_truthy_value(%struct.ScmObj* %ae58064)
%cmp$cmp88281 = icmp eq i64 %truthy$cmp88281, 1
br i1 %cmp$cmp88281, label %truebranch$cmp88281, label %falsebranch$cmp88281
truebranch$cmp88281:
%ae58066 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58067 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88282 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae58066, %struct.ScmObj* %ae58067)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88282, align 8
%stackaddr$makeclosure88283 = alloca %struct.ScmObj*, align 8
%fptrToInt88284 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58068 to i64
%ae58068 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88284)
store volatile %struct.ScmObj* %ae58068, %struct.ScmObj** %stackaddr$makeclosure88283, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58068, %struct.ScmObj* %x40229, i64 0)
%ae58069 = call %struct.ScmObj* @const_init_int(i64 0)
%args85743$ae58068$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88285 = alloca %struct.ScmObj*, align 8
%args85743$ae58068$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85743$ae58068$0)
store volatile %struct.ScmObj* %args85743$ae58068$1, %struct.ScmObj** %stackaddr$prim88285, align 8
%stackaddr$prim88286 = alloca %struct.ScmObj*, align 8
%args85743$ae58068$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58069, %struct.ScmObj* %args85743$ae58068$1)
store volatile %struct.ScmObj* %args85743$ae58068$2, %struct.ScmObj** %stackaddr$prim88286, align 8
%clofunc88287 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58068)
musttail call tailcc void %clofunc88287(%struct.ScmObj* %ae58068, %struct.ScmObj* %args85743$ae58068$2)
ret void
falsebranch$cmp88281:
%stackaddr$makeclosure88288 = alloca %struct.ScmObj*, align 8
%fptrToInt88289 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58127 to i64
%ae58127 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88289)
store volatile %struct.ScmObj* %ae58127, %struct.ScmObj** %stackaddr$makeclosure88288, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae58127, %struct.ScmObj* %x40229, i64 0)
%ae58128 = call %struct.ScmObj* @const_init_int(i64 0)
%ae58129 = call %struct.ScmObj* @const_init_int(i64 9)
%args85752$ae58127$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88290 = alloca %struct.ScmObj*, align 8
%args85752$ae58127$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58129, %struct.ScmObj* %args85752$ae58127$0)
store volatile %struct.ScmObj* %args85752$ae58127$1, %struct.ScmObj** %stackaddr$prim88290, align 8
%stackaddr$prim88291 = alloca %struct.ScmObj*, align 8
%args85752$ae58127$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58128, %struct.ScmObj* %args85752$ae58127$1)
store volatile %struct.ScmObj* %args85752$ae58127$2, %struct.ScmObj** %stackaddr$prim88291, align 8
%clofunc88292 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58127)
musttail call tailcc void %clofunc88292(%struct.ScmObj* %ae58127, %struct.ScmObj* %args85752$ae58127$2)
ret void
}

define tailcc void @proc_clo$ae58068(%struct.ScmObj* %env$ae58068,%struct.ScmObj* %current_45args85735) {
%stackaddr$env-ref88293 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58068, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88293
%stackaddr$prim88294 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85735)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88294, align 8
%stackaddr$prim88295 = alloca %struct.ScmObj*, align 8
%current_45args85736 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85735)
store volatile %struct.ScmObj* %current_45args85736, %struct.ScmObj** %stackaddr$prim88295, align 8
%stackaddr$prim88296 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85736)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88296, align 8
%ae58075 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88297 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae58075)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88297, align 8
%stackaddr$makeclosure88298 = alloca %struct.ScmObj*, align 8
%fptrToInt88299 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58076 to i64
%ae58076 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88299)
store volatile %struct.ScmObj* %ae58076, %struct.ScmObj** %stackaddr$makeclosure88298, align 8
%ae58077 = call %struct.ScmObj* @const_init_int(i64 0)
%args85742$ae58076$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88300 = alloca %struct.ScmObj*, align 8
%args85742$ae58076$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85742$ae58076$0)
store volatile %struct.ScmObj* %args85742$ae58076$1, %struct.ScmObj** %stackaddr$prim88300, align 8
%stackaddr$prim88301 = alloca %struct.ScmObj*, align 8
%args85742$ae58076$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58077, %struct.ScmObj* %args85742$ae58076$1)
store volatile %struct.ScmObj* %args85742$ae58076$2, %struct.ScmObj** %stackaddr$prim88301, align 8
%clofunc88302 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58076)
musttail call tailcc void %clofunc88302(%struct.ScmObj* %ae58076, %struct.ScmObj* %args85742$ae58076$2)
ret void
}

define tailcc void @proc_clo$ae58076(%struct.ScmObj* %env$ae58076,%struct.ScmObj* %current_45args85738) {
%stackaddr$prim88303 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85738)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88303, align 8
%stackaddr$prim88304 = alloca %struct.ScmObj*, align 8
%current_45args85739 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85738)
store volatile %struct.ScmObj* %current_45args85739, %struct.ScmObj** %stackaddr$prim88304, align 8
%stackaddr$prim88305 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85739)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88305, align 8
%stackaddr$prim88306 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88306, align 8
%args85741$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88307 = alloca %struct.ScmObj*, align 8
%args85741$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85741$k$0)
store volatile %struct.ScmObj* %args85741$k$1, %struct.ScmObj** %stackaddr$prim88307, align 8
%clofunc88308 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88308(%struct.ScmObj* %k, %struct.ScmObj* %args85741$k$1)
ret void
}

define tailcc void @proc_clo$ae58127(%struct.ScmObj* %env$ae58127,%struct.ScmObj* %current_45args85744) {
%stackaddr$env-ref88309 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae58127, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88309
%stackaddr$prim88310 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85744)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88310, align 8
%stackaddr$prim88311 = alloca %struct.ScmObj*, align 8
%current_45args85745 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85744)
store volatile %struct.ScmObj* %current_45args85745, %struct.ScmObj** %stackaddr$prim88311, align 8
%stackaddr$prim88312 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85745)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88312, align 8
%ae58137 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88313 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae58137)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88313, align 8
%stackaddr$makeclosure88314 = alloca %struct.ScmObj*, align 8
%fptrToInt88315 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae58138 to i64
%ae58138 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88315)
store volatile %struct.ScmObj* %ae58138, %struct.ScmObj** %stackaddr$makeclosure88314, align 8
%ae58139 = call %struct.ScmObj* @const_init_int(i64 0)
%args85751$ae58138$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88316 = alloca %struct.ScmObj*, align 8
%args85751$ae58138$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85751$ae58138$0)
store volatile %struct.ScmObj* %args85751$ae58138$1, %struct.ScmObj** %stackaddr$prim88316, align 8
%stackaddr$prim88317 = alloca %struct.ScmObj*, align 8
%args85751$ae58138$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae58139, %struct.ScmObj* %args85751$ae58138$1)
store volatile %struct.ScmObj* %args85751$ae58138$2, %struct.ScmObj** %stackaddr$prim88317, align 8
%clofunc88318 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae58138)
musttail call tailcc void %clofunc88318(%struct.ScmObj* %ae58138, %struct.ScmObj* %args85751$ae58138$2)
ret void
}

define tailcc void @proc_clo$ae58138(%struct.ScmObj* %env$ae58138,%struct.ScmObj* %current_45args85747) {
%stackaddr$prim88319 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85747)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88319, align 8
%stackaddr$prim88320 = alloca %struct.ScmObj*, align 8
%current_45args85748 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85747)
store volatile %struct.ScmObj* %current_45args85748, %struct.ScmObj** %stackaddr$prim88320, align 8
%stackaddr$prim88321 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85748)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88321, align 8
%stackaddr$prim88322 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88322, align 8
%args85750$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88323 = alloca %struct.ScmObj*, align 8
%args85750$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85750$k$0)
store volatile %struct.ScmObj* %args85750$k$1, %struct.ScmObj** %stackaddr$prim88323, align 8
%clofunc88324 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88324(%struct.ScmObj* %k, %struct.ScmObj* %args85750$k$1)
ret void
}

define tailcc void @proc_clo$ae59398(%struct.ScmObj* %env$ae59398,%struct.ScmObj* %current_45args85756) {
%stackaddr$env-ref88325 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59398, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88325
%stackaddr$prim88326 = alloca %struct.ScmObj*, align 8
%_95k40414 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85756)
store volatile %struct.ScmObj* %_95k40414, %struct.ScmObj** %stackaddr$prim88326, align 8
%stackaddr$prim88327 = alloca %struct.ScmObj*, align 8
%current_45args85757 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85756)
store volatile %struct.ScmObj* %current_45args85757, %struct.ScmObj** %stackaddr$prim88327, align 8
%stackaddr$prim88328 = alloca %struct.ScmObj*, align 8
%t4010540233 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85757)
store volatile %struct.ScmObj* %t4010540233, %struct.ScmObj** %stackaddr$prim88328, align 8
%ae59404 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88329 = call i64 @is_truthy_value(%struct.ScmObj* %ae59404)
%cmp$cmp88329 = icmp eq i64 %truthy$cmp88329, 1
br i1 %cmp$cmp88329, label %truebranch$cmp88329, label %falsebranch$cmp88329
truebranch$cmp88329:
%stackaddr$prim88330 = alloca %struct.ScmObj*, align 8
%cpsprim40421 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40421, %struct.ScmObj** %stackaddr$prim88330, align 8
%stackaddr$makeclosure88331 = alloca %struct.ScmObj*, align 8
%fptrToInt88332 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59405 to i64
%ae59405 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88332)
store volatile %struct.ScmObj* %ae59405, %struct.ScmObj** %stackaddr$makeclosure88331, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59405, %struct.ScmObj* %x40229, i64 0)
%ae59406 = call %struct.ScmObj* @const_init_int(i64 0)
%args85806$ae59405$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88333 = alloca %struct.ScmObj*, align 8
%args85806$ae59405$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40421, %struct.ScmObj* %args85806$ae59405$0)
store volatile %struct.ScmObj* %args85806$ae59405$1, %struct.ScmObj** %stackaddr$prim88333, align 8
%stackaddr$prim88334 = alloca %struct.ScmObj*, align 8
%args85806$ae59405$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59406, %struct.ScmObj* %args85806$ae59405$1)
store volatile %struct.ScmObj* %args85806$ae59405$2, %struct.ScmObj** %stackaddr$prim88334, align 8
%clofunc88335 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59405)
musttail call tailcc void %clofunc88335(%struct.ScmObj* %ae59405, %struct.ScmObj* %args85806$ae59405$2)
ret void
falsebranch$cmp88329:
%ae59870 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88336 = alloca %struct.ScmObj*, align 8
%anf_45bind40370 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59870)
store volatile %struct.ScmObj* %anf_45bind40370, %struct.ScmObj** %stackaddr$prim88336, align 8
%ae59872 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim88337 = alloca %struct.ScmObj*, align 8
%anf_45bind40371 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40370, %struct.ScmObj* %ae59872)
store volatile %struct.ScmObj* %anf_45bind40371, %struct.ScmObj** %stackaddr$prim88337, align 8
%ae59874 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim88338 = alloca %struct.ScmObj*, align 8
%anf_45bind40372 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40371, %struct.ScmObj* %ae59874)
store volatile %struct.ScmObj* %anf_45bind40372, %struct.ScmObj** %stackaddr$prim88338, align 8
%ae59876 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88339 = alloca %struct.ScmObj*, align 8
%cpsprim40422 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59876, %struct.ScmObj* %anf_45bind40372)
store volatile %struct.ScmObj* %cpsprim40422, %struct.ScmObj** %stackaddr$prim88339, align 8
%stackaddr$makeclosure88340 = alloca %struct.ScmObj*, align 8
%fptrToInt88341 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59878 to i64
%ae59878 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88341)
store volatile %struct.ScmObj* %ae59878, %struct.ScmObj** %stackaddr$makeclosure88340, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59878, %struct.ScmObj* %x40229, i64 0)
%ae59879 = call %struct.ScmObj* @const_init_int(i64 0)
%args85854$ae59878$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88342 = alloca %struct.ScmObj*, align 8
%args85854$ae59878$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40422, %struct.ScmObj* %args85854$ae59878$0)
store volatile %struct.ScmObj* %args85854$ae59878$1, %struct.ScmObj** %stackaddr$prim88342, align 8
%stackaddr$prim88343 = alloca %struct.ScmObj*, align 8
%args85854$ae59878$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59879, %struct.ScmObj* %args85854$ae59878$1)
store volatile %struct.ScmObj* %args85854$ae59878$2, %struct.ScmObj** %stackaddr$prim88343, align 8
%clofunc88344 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59878)
musttail call tailcc void %clofunc88344(%struct.ScmObj* %ae59878, %struct.ScmObj* %args85854$ae59878$2)
ret void
}

define tailcc void @proc_clo$ae59405(%struct.ScmObj* %env$ae59405,%struct.ScmObj* %current_45args85759) {
%stackaddr$env-ref88345 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59405, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88345
%stackaddr$prim88346 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85759)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim88346, align 8
%stackaddr$prim88347 = alloca %struct.ScmObj*, align 8
%current_45args85760 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85759)
store volatile %struct.ScmObj* %current_45args85760, %struct.ScmObj** %stackaddr$prim88347, align 8
%stackaddr$prim88348 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85760)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim88348, align 8
%ae59412 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88349 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59412)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim88349, align 8
%truthy$cmp88350 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp88350 = icmp eq i64 %truthy$cmp88350, 1
br i1 %cmp$cmp88350, label %truebranch$cmp88350, label %falsebranch$cmp88350
truebranch$cmp88350:
%ae59415 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88351 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59415)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim88351, align 8
%ae59417 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88352 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59417)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim88352, align 8
%stackaddr$prim88353 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim88353, align 8
%ae59421 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88354 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59421, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim88354, align 8
%stackaddr$makeclosure88355 = alloca %struct.ScmObj*, align 8
%fptrToInt88356 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59423 to i64
%ae59423 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88356)
store volatile %struct.ScmObj* %ae59423, %struct.ScmObj** %stackaddr$makeclosure88355, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59423, %struct.ScmObj* %x40229, i64 0)
%ae59424 = call %struct.ScmObj* @const_init_int(i64 0)
%args85783$ae59423$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88357 = alloca %struct.ScmObj*, align 8
%args85783$ae59423$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85783$ae59423$0)
store volatile %struct.ScmObj* %args85783$ae59423$1, %struct.ScmObj** %stackaddr$prim88357, align 8
%stackaddr$prim88358 = alloca %struct.ScmObj*, align 8
%args85783$ae59423$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59424, %struct.ScmObj* %args85783$ae59423$1)
store volatile %struct.ScmObj* %args85783$ae59423$2, %struct.ScmObj** %stackaddr$prim88358, align 8
%clofunc88359 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59423)
musttail call tailcc void %clofunc88359(%struct.ScmObj* %ae59423, %struct.ScmObj* %args85783$ae59423$2)
ret void
falsebranch$cmp88350:
%stackaddr$makeclosure88360 = alloca %struct.ScmObj*, align 8
%fptrToInt88361 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59661 to i64
%ae59661 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88361)
store volatile %struct.ScmObj* %ae59661, %struct.ScmObj** %stackaddr$makeclosure88360, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59661, %struct.ScmObj* %x40229, i64 0)
%ae59662 = call %struct.ScmObj* @const_init_int(i64 0)
%ae59663 = call %struct.ScmObj* @const_init_int(i64 7)
%args85805$ae59661$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88362 = alloca %struct.ScmObj*, align 8
%args85805$ae59661$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59663, %struct.ScmObj* %args85805$ae59661$0)
store volatile %struct.ScmObj* %args85805$ae59661$1, %struct.ScmObj** %stackaddr$prim88362, align 8
%stackaddr$prim88363 = alloca %struct.ScmObj*, align 8
%args85805$ae59661$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59662, %struct.ScmObj* %args85805$ae59661$1)
store volatile %struct.ScmObj* %args85805$ae59661$2, %struct.ScmObj** %stackaddr$prim88363, align 8
%clofunc88364 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59661)
musttail call tailcc void %clofunc88364(%struct.ScmObj* %ae59661, %struct.ScmObj* %args85805$ae59661$2)
ret void
}

define tailcc void @proc_clo$ae59423(%struct.ScmObj* %env$ae59423,%struct.ScmObj* %current_45args85762) {
%stackaddr$env-ref88365 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59423, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88365
%stackaddr$prim88366 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85762)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88366, align 8
%stackaddr$prim88367 = alloca %struct.ScmObj*, align 8
%current_45args85763 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85762)
store volatile %struct.ScmObj* %current_45args85763, %struct.ScmObj** %stackaddr$prim88367, align 8
%stackaddr$prim88368 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85763)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88368, align 8
%ae59429 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88369 = call i64 @is_truthy_value(%struct.ScmObj* %ae59429)
%cmp$cmp88369 = icmp eq i64 %truthy$cmp88369, 1
br i1 %cmp$cmp88369, label %truebranch$cmp88369, label %falsebranch$cmp88369
truebranch$cmp88369:
%ae59431 = call %struct.ScmObj* @const_init_int(i64 0)
%ae59432 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88370 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59431, %struct.ScmObj* %ae59432)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88370, align 8
%stackaddr$makeclosure88371 = alloca %struct.ScmObj*, align 8
%fptrToInt88372 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59433 to i64
%ae59433 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88372)
store volatile %struct.ScmObj* %ae59433, %struct.ScmObj** %stackaddr$makeclosure88371, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59433, %struct.ScmObj* %x40229, i64 0)
%ae59434 = call %struct.ScmObj* @const_init_int(i64 0)
%args85773$ae59433$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88373 = alloca %struct.ScmObj*, align 8
%args85773$ae59433$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85773$ae59433$0)
store volatile %struct.ScmObj* %args85773$ae59433$1, %struct.ScmObj** %stackaddr$prim88373, align 8
%stackaddr$prim88374 = alloca %struct.ScmObj*, align 8
%args85773$ae59433$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59434, %struct.ScmObj* %args85773$ae59433$1)
store volatile %struct.ScmObj* %args85773$ae59433$2, %struct.ScmObj** %stackaddr$prim88374, align 8
%clofunc88375 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59433)
musttail call tailcc void %clofunc88375(%struct.ScmObj* %ae59433, %struct.ScmObj* %args85773$ae59433$2)
ret void
falsebranch$cmp88369:
%stackaddr$makeclosure88376 = alloca %struct.ScmObj*, align 8
%fptrToInt88377 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59492 to i64
%ae59492 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88377)
store volatile %struct.ScmObj* %ae59492, %struct.ScmObj** %stackaddr$makeclosure88376, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59492, %struct.ScmObj* %x40229, i64 0)
%ae59493 = call %struct.ScmObj* @const_init_int(i64 0)
%ae59494 = call %struct.ScmObj* @const_init_int(i64 9)
%args85782$ae59492$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88378 = alloca %struct.ScmObj*, align 8
%args85782$ae59492$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59494, %struct.ScmObj* %args85782$ae59492$0)
store volatile %struct.ScmObj* %args85782$ae59492$1, %struct.ScmObj** %stackaddr$prim88378, align 8
%stackaddr$prim88379 = alloca %struct.ScmObj*, align 8
%args85782$ae59492$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59493, %struct.ScmObj* %args85782$ae59492$1)
store volatile %struct.ScmObj* %args85782$ae59492$2, %struct.ScmObj** %stackaddr$prim88379, align 8
%clofunc88380 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59492)
musttail call tailcc void %clofunc88380(%struct.ScmObj* %ae59492, %struct.ScmObj* %args85782$ae59492$2)
ret void
}

define tailcc void @proc_clo$ae59433(%struct.ScmObj* %env$ae59433,%struct.ScmObj* %current_45args85765) {
%stackaddr$env-ref88381 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59433, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88381
%stackaddr$prim88382 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85765)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88382, align 8
%stackaddr$prim88383 = alloca %struct.ScmObj*, align 8
%current_45args85766 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85765)
store volatile %struct.ScmObj* %current_45args85766, %struct.ScmObj** %stackaddr$prim88383, align 8
%stackaddr$prim88384 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85766)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88384, align 8
%ae59440 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88385 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59440)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88385, align 8
%stackaddr$makeclosure88386 = alloca %struct.ScmObj*, align 8
%fptrToInt88387 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59441 to i64
%ae59441 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88387)
store volatile %struct.ScmObj* %ae59441, %struct.ScmObj** %stackaddr$makeclosure88386, align 8
%ae59442 = call %struct.ScmObj* @const_init_int(i64 0)
%args85772$ae59441$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88388 = alloca %struct.ScmObj*, align 8
%args85772$ae59441$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85772$ae59441$0)
store volatile %struct.ScmObj* %args85772$ae59441$1, %struct.ScmObj** %stackaddr$prim88388, align 8
%stackaddr$prim88389 = alloca %struct.ScmObj*, align 8
%args85772$ae59441$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59442, %struct.ScmObj* %args85772$ae59441$1)
store volatile %struct.ScmObj* %args85772$ae59441$2, %struct.ScmObj** %stackaddr$prim88389, align 8
%clofunc88390 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59441)
musttail call tailcc void %clofunc88390(%struct.ScmObj* %ae59441, %struct.ScmObj* %args85772$ae59441$2)
ret void
}

define tailcc void @proc_clo$ae59441(%struct.ScmObj* %env$ae59441,%struct.ScmObj* %current_45args85768) {
%stackaddr$prim88391 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85768)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88391, align 8
%stackaddr$prim88392 = alloca %struct.ScmObj*, align 8
%current_45args85769 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85768)
store volatile %struct.ScmObj* %current_45args85769, %struct.ScmObj** %stackaddr$prim88392, align 8
%stackaddr$prim88393 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85769)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88393, align 8
%stackaddr$prim88394 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88394, align 8
%args85771$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88395 = alloca %struct.ScmObj*, align 8
%args85771$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85771$k$0)
store volatile %struct.ScmObj* %args85771$k$1, %struct.ScmObj** %stackaddr$prim88395, align 8
%clofunc88396 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88396(%struct.ScmObj* %k, %struct.ScmObj* %args85771$k$1)
ret void
}

define tailcc void @proc_clo$ae59492(%struct.ScmObj* %env$ae59492,%struct.ScmObj* %current_45args85774) {
%stackaddr$env-ref88397 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59492, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88397
%stackaddr$prim88398 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85774)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88398, align 8
%stackaddr$prim88399 = alloca %struct.ScmObj*, align 8
%current_45args85775 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85774)
store volatile %struct.ScmObj* %current_45args85775, %struct.ScmObj** %stackaddr$prim88399, align 8
%stackaddr$prim88400 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85775)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88400, align 8
%ae59502 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88401 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59502)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88401, align 8
%stackaddr$makeclosure88402 = alloca %struct.ScmObj*, align 8
%fptrToInt88403 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59503 to i64
%ae59503 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88403)
store volatile %struct.ScmObj* %ae59503, %struct.ScmObj** %stackaddr$makeclosure88402, align 8
%ae59504 = call %struct.ScmObj* @const_init_int(i64 0)
%args85781$ae59503$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88404 = alloca %struct.ScmObj*, align 8
%args85781$ae59503$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85781$ae59503$0)
store volatile %struct.ScmObj* %args85781$ae59503$1, %struct.ScmObj** %stackaddr$prim88404, align 8
%stackaddr$prim88405 = alloca %struct.ScmObj*, align 8
%args85781$ae59503$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59504, %struct.ScmObj* %args85781$ae59503$1)
store volatile %struct.ScmObj* %args85781$ae59503$2, %struct.ScmObj** %stackaddr$prim88405, align 8
%clofunc88406 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59503)
musttail call tailcc void %clofunc88406(%struct.ScmObj* %ae59503, %struct.ScmObj* %args85781$ae59503$2)
ret void
}

define tailcc void @proc_clo$ae59503(%struct.ScmObj* %env$ae59503,%struct.ScmObj* %current_45args85777) {
%stackaddr$prim88407 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85777)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88407, align 8
%stackaddr$prim88408 = alloca %struct.ScmObj*, align 8
%current_45args85778 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85777)
store volatile %struct.ScmObj* %current_45args85778, %struct.ScmObj** %stackaddr$prim88408, align 8
%stackaddr$prim88409 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85778)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88409, align 8
%stackaddr$prim88410 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88410, align 8
%args85780$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88411 = alloca %struct.ScmObj*, align 8
%args85780$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85780$k$0)
store volatile %struct.ScmObj* %args85780$k$1, %struct.ScmObj** %stackaddr$prim88411, align 8
%clofunc88412 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88412(%struct.ScmObj* %k, %struct.ScmObj* %args85780$k$1)
ret void
}

define tailcc void @proc_clo$ae59661(%struct.ScmObj* %env$ae59661,%struct.ScmObj* %current_45args85784) {
%stackaddr$env-ref88413 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59661, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88413
%stackaddr$prim88414 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85784)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88414, align 8
%stackaddr$prim88415 = alloca %struct.ScmObj*, align 8
%current_45args85785 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85784)
store volatile %struct.ScmObj* %current_45args85785, %struct.ScmObj** %stackaddr$prim88415, align 8
%stackaddr$prim88416 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85785)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88416, align 8
%ae59670 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88417 = call i64 @is_truthy_value(%struct.ScmObj* %ae59670)
%cmp$cmp88417 = icmp eq i64 %truthy$cmp88417, 1
br i1 %cmp$cmp88417, label %truebranch$cmp88417, label %falsebranch$cmp88417
truebranch$cmp88417:
%ae59672 = call %struct.ScmObj* @const_init_int(i64 0)
%ae59673 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88418 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59672, %struct.ScmObj* %ae59673)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88418, align 8
%stackaddr$makeclosure88419 = alloca %struct.ScmObj*, align 8
%fptrToInt88420 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59674 to i64
%ae59674 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88420)
store volatile %struct.ScmObj* %ae59674, %struct.ScmObj** %stackaddr$makeclosure88419, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59674, %struct.ScmObj* %x40229, i64 0)
%ae59675 = call %struct.ScmObj* @const_init_int(i64 0)
%args85795$ae59674$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88421 = alloca %struct.ScmObj*, align 8
%args85795$ae59674$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85795$ae59674$0)
store volatile %struct.ScmObj* %args85795$ae59674$1, %struct.ScmObj** %stackaddr$prim88421, align 8
%stackaddr$prim88422 = alloca %struct.ScmObj*, align 8
%args85795$ae59674$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59675, %struct.ScmObj* %args85795$ae59674$1)
store volatile %struct.ScmObj* %args85795$ae59674$2, %struct.ScmObj** %stackaddr$prim88422, align 8
%clofunc88423 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59674)
musttail call tailcc void %clofunc88423(%struct.ScmObj* %ae59674, %struct.ScmObj* %args85795$ae59674$2)
ret void
falsebranch$cmp88417:
%stackaddr$makeclosure88424 = alloca %struct.ScmObj*, align 8
%fptrToInt88425 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59733 to i64
%ae59733 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88425)
store volatile %struct.ScmObj* %ae59733, %struct.ScmObj** %stackaddr$makeclosure88424, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59733, %struct.ScmObj* %x40229, i64 0)
%ae59734 = call %struct.ScmObj* @const_init_int(i64 0)
%ae59735 = call %struct.ScmObj* @const_init_int(i64 9)
%args85804$ae59733$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88426 = alloca %struct.ScmObj*, align 8
%args85804$ae59733$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59735, %struct.ScmObj* %args85804$ae59733$0)
store volatile %struct.ScmObj* %args85804$ae59733$1, %struct.ScmObj** %stackaddr$prim88426, align 8
%stackaddr$prim88427 = alloca %struct.ScmObj*, align 8
%args85804$ae59733$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59734, %struct.ScmObj* %args85804$ae59733$1)
store volatile %struct.ScmObj* %args85804$ae59733$2, %struct.ScmObj** %stackaddr$prim88427, align 8
%clofunc88428 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59733)
musttail call tailcc void %clofunc88428(%struct.ScmObj* %ae59733, %struct.ScmObj* %args85804$ae59733$2)
ret void
}

define tailcc void @proc_clo$ae59674(%struct.ScmObj* %env$ae59674,%struct.ScmObj* %current_45args85787) {
%stackaddr$env-ref88429 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59674, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88429
%stackaddr$prim88430 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85787)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88430, align 8
%stackaddr$prim88431 = alloca %struct.ScmObj*, align 8
%current_45args85788 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85787)
store volatile %struct.ScmObj* %current_45args85788, %struct.ScmObj** %stackaddr$prim88431, align 8
%stackaddr$prim88432 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85788)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88432, align 8
%ae59681 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88433 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59681)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88433, align 8
%stackaddr$makeclosure88434 = alloca %struct.ScmObj*, align 8
%fptrToInt88435 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59682 to i64
%ae59682 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88435)
store volatile %struct.ScmObj* %ae59682, %struct.ScmObj** %stackaddr$makeclosure88434, align 8
%ae59683 = call %struct.ScmObj* @const_init_int(i64 0)
%args85794$ae59682$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88436 = alloca %struct.ScmObj*, align 8
%args85794$ae59682$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85794$ae59682$0)
store volatile %struct.ScmObj* %args85794$ae59682$1, %struct.ScmObj** %stackaddr$prim88436, align 8
%stackaddr$prim88437 = alloca %struct.ScmObj*, align 8
%args85794$ae59682$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59683, %struct.ScmObj* %args85794$ae59682$1)
store volatile %struct.ScmObj* %args85794$ae59682$2, %struct.ScmObj** %stackaddr$prim88437, align 8
%clofunc88438 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59682)
musttail call tailcc void %clofunc88438(%struct.ScmObj* %ae59682, %struct.ScmObj* %args85794$ae59682$2)
ret void
}

define tailcc void @proc_clo$ae59682(%struct.ScmObj* %env$ae59682,%struct.ScmObj* %current_45args85790) {
%stackaddr$prim88439 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85790)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88439, align 8
%stackaddr$prim88440 = alloca %struct.ScmObj*, align 8
%current_45args85791 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85790)
store volatile %struct.ScmObj* %current_45args85791, %struct.ScmObj** %stackaddr$prim88440, align 8
%stackaddr$prim88441 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85791)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88441, align 8
%stackaddr$prim88442 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88442, align 8
%args85793$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88443 = alloca %struct.ScmObj*, align 8
%args85793$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85793$k$0)
store volatile %struct.ScmObj* %args85793$k$1, %struct.ScmObj** %stackaddr$prim88443, align 8
%clofunc88444 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88444(%struct.ScmObj* %k, %struct.ScmObj* %args85793$k$1)
ret void
}

define tailcc void @proc_clo$ae59733(%struct.ScmObj* %env$ae59733,%struct.ScmObj* %current_45args85796) {
%stackaddr$env-ref88445 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59733, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88445
%stackaddr$prim88446 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85796)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88446, align 8
%stackaddr$prim88447 = alloca %struct.ScmObj*, align 8
%current_45args85797 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85796)
store volatile %struct.ScmObj* %current_45args85797, %struct.ScmObj** %stackaddr$prim88447, align 8
%stackaddr$prim88448 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85797)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88448, align 8
%ae59743 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88449 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59743)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88449, align 8
%stackaddr$makeclosure88450 = alloca %struct.ScmObj*, align 8
%fptrToInt88451 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59744 to i64
%ae59744 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88451)
store volatile %struct.ScmObj* %ae59744, %struct.ScmObj** %stackaddr$makeclosure88450, align 8
%ae59745 = call %struct.ScmObj* @const_init_int(i64 0)
%args85803$ae59744$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88452 = alloca %struct.ScmObj*, align 8
%args85803$ae59744$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85803$ae59744$0)
store volatile %struct.ScmObj* %args85803$ae59744$1, %struct.ScmObj** %stackaddr$prim88452, align 8
%stackaddr$prim88453 = alloca %struct.ScmObj*, align 8
%args85803$ae59744$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59745, %struct.ScmObj* %args85803$ae59744$1)
store volatile %struct.ScmObj* %args85803$ae59744$2, %struct.ScmObj** %stackaddr$prim88453, align 8
%clofunc88454 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59744)
musttail call tailcc void %clofunc88454(%struct.ScmObj* %ae59744, %struct.ScmObj* %args85803$ae59744$2)
ret void
}

define tailcc void @proc_clo$ae59744(%struct.ScmObj* %env$ae59744,%struct.ScmObj* %current_45args85799) {
%stackaddr$prim88455 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85799)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88455, align 8
%stackaddr$prim88456 = alloca %struct.ScmObj*, align 8
%current_45args85800 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85799)
store volatile %struct.ScmObj* %current_45args85800, %struct.ScmObj** %stackaddr$prim88456, align 8
%stackaddr$prim88457 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85800)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88457, align 8
%stackaddr$prim88458 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88458, align 8
%args85802$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88459 = alloca %struct.ScmObj*, align 8
%args85802$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85802$k$0)
store volatile %struct.ScmObj* %args85802$k$1, %struct.ScmObj** %stackaddr$prim88459, align 8
%clofunc88460 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88460(%struct.ScmObj* %k, %struct.ScmObj* %args85802$k$1)
ret void
}

define tailcc void @proc_clo$ae59878(%struct.ScmObj* %env$ae59878,%struct.ScmObj* %current_45args85807) {
%stackaddr$env-ref88461 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59878, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88461
%stackaddr$prim88462 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85807)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim88462, align 8
%stackaddr$prim88463 = alloca %struct.ScmObj*, align 8
%current_45args85808 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85807)
store volatile %struct.ScmObj* %current_45args85808, %struct.ScmObj** %stackaddr$prim88463, align 8
%stackaddr$prim88464 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85808)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim88464, align 8
%ae59885 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88465 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59885)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim88465, align 8
%truthy$cmp88466 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp88466 = icmp eq i64 %truthy$cmp88466, 1
br i1 %cmp$cmp88466, label %truebranch$cmp88466, label %falsebranch$cmp88466
truebranch$cmp88466:
%ae59888 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88467 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59888)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim88467, align 8
%ae59890 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88468 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59890)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim88468, align 8
%stackaddr$prim88469 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim88469, align 8
%ae59894 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88470 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59894, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim88470, align 8
%stackaddr$makeclosure88471 = alloca %struct.ScmObj*, align 8
%fptrToInt88472 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59896 to i64
%ae59896 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88472)
store volatile %struct.ScmObj* %ae59896, %struct.ScmObj** %stackaddr$makeclosure88471, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59896, %struct.ScmObj* %x40229, i64 0)
%ae59897 = call %struct.ScmObj* @const_init_int(i64 0)
%args85831$ae59896$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88473 = alloca %struct.ScmObj*, align 8
%args85831$ae59896$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85831$ae59896$0)
store volatile %struct.ScmObj* %args85831$ae59896$1, %struct.ScmObj** %stackaddr$prim88473, align 8
%stackaddr$prim88474 = alloca %struct.ScmObj*, align 8
%args85831$ae59896$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59897, %struct.ScmObj* %args85831$ae59896$1)
store volatile %struct.ScmObj* %args85831$ae59896$2, %struct.ScmObj** %stackaddr$prim88474, align 8
%clofunc88475 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59896)
musttail call tailcc void %clofunc88475(%struct.ScmObj* %ae59896, %struct.ScmObj* %args85831$ae59896$2)
ret void
falsebranch$cmp88466:
%stackaddr$makeclosure88476 = alloca %struct.ScmObj*, align 8
%fptrToInt88477 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae60134 to i64
%ae60134 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88477)
store volatile %struct.ScmObj* %ae60134, %struct.ScmObj** %stackaddr$makeclosure88476, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae60134, %struct.ScmObj* %x40229, i64 0)
%ae60135 = call %struct.ScmObj* @const_init_int(i64 0)
%ae60136 = call %struct.ScmObj* @const_init_int(i64 7)
%args85853$ae60134$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88478 = alloca %struct.ScmObj*, align 8
%args85853$ae60134$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae60136, %struct.ScmObj* %args85853$ae60134$0)
store volatile %struct.ScmObj* %args85853$ae60134$1, %struct.ScmObj** %stackaddr$prim88478, align 8
%stackaddr$prim88479 = alloca %struct.ScmObj*, align 8
%args85853$ae60134$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae60135, %struct.ScmObj* %args85853$ae60134$1)
store volatile %struct.ScmObj* %args85853$ae60134$2, %struct.ScmObj** %stackaddr$prim88479, align 8
%clofunc88480 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae60134)
musttail call tailcc void %clofunc88480(%struct.ScmObj* %ae60134, %struct.ScmObj* %args85853$ae60134$2)
ret void
}

define tailcc void @proc_clo$ae59896(%struct.ScmObj* %env$ae59896,%struct.ScmObj* %current_45args85810) {
%stackaddr$env-ref88481 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59896, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88481
%stackaddr$prim88482 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85810)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88482, align 8
%stackaddr$prim88483 = alloca %struct.ScmObj*, align 8
%current_45args85811 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85810)
store volatile %struct.ScmObj* %current_45args85811, %struct.ScmObj** %stackaddr$prim88483, align 8
%stackaddr$prim88484 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85811)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88484, align 8
%ae59902 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88485 = call i64 @is_truthy_value(%struct.ScmObj* %ae59902)
%cmp$cmp88485 = icmp eq i64 %truthy$cmp88485, 1
br i1 %cmp$cmp88485, label %truebranch$cmp88485, label %falsebranch$cmp88485
truebranch$cmp88485:
%ae59904 = call %struct.ScmObj* @const_init_int(i64 0)
%ae59905 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88486 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59904, %struct.ScmObj* %ae59905)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88486, align 8
%stackaddr$makeclosure88487 = alloca %struct.ScmObj*, align 8
%fptrToInt88488 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59906 to i64
%ae59906 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88488)
store volatile %struct.ScmObj* %ae59906, %struct.ScmObj** %stackaddr$makeclosure88487, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59906, %struct.ScmObj* %x40229, i64 0)
%ae59907 = call %struct.ScmObj* @const_init_int(i64 0)
%args85821$ae59906$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88489 = alloca %struct.ScmObj*, align 8
%args85821$ae59906$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85821$ae59906$0)
store volatile %struct.ScmObj* %args85821$ae59906$1, %struct.ScmObj** %stackaddr$prim88489, align 8
%stackaddr$prim88490 = alloca %struct.ScmObj*, align 8
%args85821$ae59906$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59907, %struct.ScmObj* %args85821$ae59906$1)
store volatile %struct.ScmObj* %args85821$ae59906$2, %struct.ScmObj** %stackaddr$prim88490, align 8
%clofunc88491 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59906)
musttail call tailcc void %clofunc88491(%struct.ScmObj* %ae59906, %struct.ScmObj* %args85821$ae59906$2)
ret void
falsebranch$cmp88485:
%stackaddr$makeclosure88492 = alloca %struct.ScmObj*, align 8
%fptrToInt88493 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59965 to i64
%ae59965 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88493)
store volatile %struct.ScmObj* %ae59965, %struct.ScmObj** %stackaddr$makeclosure88492, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae59965, %struct.ScmObj* %x40229, i64 0)
%ae59966 = call %struct.ScmObj* @const_init_int(i64 0)
%ae59967 = call %struct.ScmObj* @const_init_int(i64 9)
%args85830$ae59965$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88494 = alloca %struct.ScmObj*, align 8
%args85830$ae59965$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59967, %struct.ScmObj* %args85830$ae59965$0)
store volatile %struct.ScmObj* %args85830$ae59965$1, %struct.ScmObj** %stackaddr$prim88494, align 8
%stackaddr$prim88495 = alloca %struct.ScmObj*, align 8
%args85830$ae59965$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59966, %struct.ScmObj* %args85830$ae59965$1)
store volatile %struct.ScmObj* %args85830$ae59965$2, %struct.ScmObj** %stackaddr$prim88495, align 8
%clofunc88496 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59965)
musttail call tailcc void %clofunc88496(%struct.ScmObj* %ae59965, %struct.ScmObj* %args85830$ae59965$2)
ret void
}

define tailcc void @proc_clo$ae59906(%struct.ScmObj* %env$ae59906,%struct.ScmObj* %current_45args85813) {
%stackaddr$env-ref88497 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59906, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88497
%stackaddr$prim88498 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85813)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88498, align 8
%stackaddr$prim88499 = alloca %struct.ScmObj*, align 8
%current_45args85814 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85813)
store volatile %struct.ScmObj* %current_45args85814, %struct.ScmObj** %stackaddr$prim88499, align 8
%stackaddr$prim88500 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85814)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88500, align 8
%ae59913 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88501 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59913)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88501, align 8
%stackaddr$makeclosure88502 = alloca %struct.ScmObj*, align 8
%fptrToInt88503 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59914 to i64
%ae59914 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88503)
store volatile %struct.ScmObj* %ae59914, %struct.ScmObj** %stackaddr$makeclosure88502, align 8
%ae59915 = call %struct.ScmObj* @const_init_int(i64 0)
%args85820$ae59914$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88504 = alloca %struct.ScmObj*, align 8
%args85820$ae59914$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85820$ae59914$0)
store volatile %struct.ScmObj* %args85820$ae59914$1, %struct.ScmObj** %stackaddr$prim88504, align 8
%stackaddr$prim88505 = alloca %struct.ScmObj*, align 8
%args85820$ae59914$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59915, %struct.ScmObj* %args85820$ae59914$1)
store volatile %struct.ScmObj* %args85820$ae59914$2, %struct.ScmObj** %stackaddr$prim88505, align 8
%clofunc88506 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59914)
musttail call tailcc void %clofunc88506(%struct.ScmObj* %ae59914, %struct.ScmObj* %args85820$ae59914$2)
ret void
}

define tailcc void @proc_clo$ae59914(%struct.ScmObj* %env$ae59914,%struct.ScmObj* %current_45args85816) {
%stackaddr$prim88507 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85816)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88507, align 8
%stackaddr$prim88508 = alloca %struct.ScmObj*, align 8
%current_45args85817 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85816)
store volatile %struct.ScmObj* %current_45args85817, %struct.ScmObj** %stackaddr$prim88508, align 8
%stackaddr$prim88509 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85817)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88509, align 8
%stackaddr$prim88510 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88510, align 8
%args85819$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88511 = alloca %struct.ScmObj*, align 8
%args85819$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85819$k$0)
store volatile %struct.ScmObj* %args85819$k$1, %struct.ScmObj** %stackaddr$prim88511, align 8
%clofunc88512 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88512(%struct.ScmObj* %k, %struct.ScmObj* %args85819$k$1)
ret void
}

define tailcc void @proc_clo$ae59965(%struct.ScmObj* %env$ae59965,%struct.ScmObj* %current_45args85822) {
%stackaddr$env-ref88513 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae59965, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88513
%stackaddr$prim88514 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85822)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88514, align 8
%stackaddr$prim88515 = alloca %struct.ScmObj*, align 8
%current_45args85823 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85822)
store volatile %struct.ScmObj* %current_45args85823, %struct.ScmObj** %stackaddr$prim88515, align 8
%stackaddr$prim88516 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85823)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88516, align 8
%ae59975 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88517 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae59975)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88517, align 8
%stackaddr$makeclosure88518 = alloca %struct.ScmObj*, align 8
%fptrToInt88519 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae59976 to i64
%ae59976 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88519)
store volatile %struct.ScmObj* %ae59976, %struct.ScmObj** %stackaddr$makeclosure88518, align 8
%ae59977 = call %struct.ScmObj* @const_init_int(i64 0)
%args85829$ae59976$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88520 = alloca %struct.ScmObj*, align 8
%args85829$ae59976$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85829$ae59976$0)
store volatile %struct.ScmObj* %args85829$ae59976$1, %struct.ScmObj** %stackaddr$prim88520, align 8
%stackaddr$prim88521 = alloca %struct.ScmObj*, align 8
%args85829$ae59976$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae59977, %struct.ScmObj* %args85829$ae59976$1)
store volatile %struct.ScmObj* %args85829$ae59976$2, %struct.ScmObj** %stackaddr$prim88521, align 8
%clofunc88522 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae59976)
musttail call tailcc void %clofunc88522(%struct.ScmObj* %ae59976, %struct.ScmObj* %args85829$ae59976$2)
ret void
}

define tailcc void @proc_clo$ae59976(%struct.ScmObj* %env$ae59976,%struct.ScmObj* %current_45args85825) {
%stackaddr$prim88523 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85825)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88523, align 8
%stackaddr$prim88524 = alloca %struct.ScmObj*, align 8
%current_45args85826 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85825)
store volatile %struct.ScmObj* %current_45args85826, %struct.ScmObj** %stackaddr$prim88524, align 8
%stackaddr$prim88525 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85826)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88525, align 8
%stackaddr$prim88526 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88526, align 8
%args85828$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88527 = alloca %struct.ScmObj*, align 8
%args85828$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85828$k$0)
store volatile %struct.ScmObj* %args85828$k$1, %struct.ScmObj** %stackaddr$prim88527, align 8
%clofunc88528 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88528(%struct.ScmObj* %k, %struct.ScmObj* %args85828$k$1)
ret void
}

define tailcc void @proc_clo$ae60134(%struct.ScmObj* %env$ae60134,%struct.ScmObj* %current_45args85832) {
%stackaddr$env-ref88529 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae60134, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88529
%stackaddr$prim88530 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85832)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88530, align 8
%stackaddr$prim88531 = alloca %struct.ScmObj*, align 8
%current_45args85833 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85832)
store volatile %struct.ScmObj* %current_45args85833, %struct.ScmObj** %stackaddr$prim88531, align 8
%stackaddr$prim88532 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85833)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88532, align 8
%ae60143 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88533 = call i64 @is_truthy_value(%struct.ScmObj* %ae60143)
%cmp$cmp88533 = icmp eq i64 %truthy$cmp88533, 1
br i1 %cmp$cmp88533, label %truebranch$cmp88533, label %falsebranch$cmp88533
truebranch$cmp88533:
%ae60145 = call %struct.ScmObj* @const_init_int(i64 0)
%ae60146 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88534 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae60145, %struct.ScmObj* %ae60146)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88534, align 8
%stackaddr$makeclosure88535 = alloca %struct.ScmObj*, align 8
%fptrToInt88536 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae60147 to i64
%ae60147 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88536)
store volatile %struct.ScmObj* %ae60147, %struct.ScmObj** %stackaddr$makeclosure88535, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae60147, %struct.ScmObj* %x40229, i64 0)
%ae60148 = call %struct.ScmObj* @const_init_int(i64 0)
%args85843$ae60147$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88537 = alloca %struct.ScmObj*, align 8
%args85843$ae60147$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85843$ae60147$0)
store volatile %struct.ScmObj* %args85843$ae60147$1, %struct.ScmObj** %stackaddr$prim88537, align 8
%stackaddr$prim88538 = alloca %struct.ScmObj*, align 8
%args85843$ae60147$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae60148, %struct.ScmObj* %args85843$ae60147$1)
store volatile %struct.ScmObj* %args85843$ae60147$2, %struct.ScmObj** %stackaddr$prim88538, align 8
%clofunc88539 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae60147)
musttail call tailcc void %clofunc88539(%struct.ScmObj* %ae60147, %struct.ScmObj* %args85843$ae60147$2)
ret void
falsebranch$cmp88533:
%stackaddr$makeclosure88540 = alloca %struct.ScmObj*, align 8
%fptrToInt88541 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae60206 to i64
%ae60206 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88541)
store volatile %struct.ScmObj* %ae60206, %struct.ScmObj** %stackaddr$makeclosure88540, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae60206, %struct.ScmObj* %x40229, i64 0)
%ae60207 = call %struct.ScmObj* @const_init_int(i64 0)
%ae60208 = call %struct.ScmObj* @const_init_int(i64 9)
%args85852$ae60206$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88542 = alloca %struct.ScmObj*, align 8
%args85852$ae60206$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae60208, %struct.ScmObj* %args85852$ae60206$0)
store volatile %struct.ScmObj* %args85852$ae60206$1, %struct.ScmObj** %stackaddr$prim88542, align 8
%stackaddr$prim88543 = alloca %struct.ScmObj*, align 8
%args85852$ae60206$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae60207, %struct.ScmObj* %args85852$ae60206$1)
store volatile %struct.ScmObj* %args85852$ae60206$2, %struct.ScmObj** %stackaddr$prim88543, align 8
%clofunc88544 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae60206)
musttail call tailcc void %clofunc88544(%struct.ScmObj* %ae60206, %struct.ScmObj* %args85852$ae60206$2)
ret void
}

define tailcc void @proc_clo$ae60147(%struct.ScmObj* %env$ae60147,%struct.ScmObj* %current_45args85835) {
%stackaddr$env-ref88545 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae60147, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88545
%stackaddr$prim88546 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85835)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88546, align 8
%stackaddr$prim88547 = alloca %struct.ScmObj*, align 8
%current_45args85836 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85835)
store volatile %struct.ScmObj* %current_45args85836, %struct.ScmObj** %stackaddr$prim88547, align 8
%stackaddr$prim88548 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85836)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88548, align 8
%ae60154 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88549 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae60154)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88549, align 8
%stackaddr$makeclosure88550 = alloca %struct.ScmObj*, align 8
%fptrToInt88551 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae60155 to i64
%ae60155 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88551)
store volatile %struct.ScmObj* %ae60155, %struct.ScmObj** %stackaddr$makeclosure88550, align 8
%ae60156 = call %struct.ScmObj* @const_init_int(i64 0)
%args85842$ae60155$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88552 = alloca %struct.ScmObj*, align 8
%args85842$ae60155$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85842$ae60155$0)
store volatile %struct.ScmObj* %args85842$ae60155$1, %struct.ScmObj** %stackaddr$prim88552, align 8
%stackaddr$prim88553 = alloca %struct.ScmObj*, align 8
%args85842$ae60155$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae60156, %struct.ScmObj* %args85842$ae60155$1)
store volatile %struct.ScmObj* %args85842$ae60155$2, %struct.ScmObj** %stackaddr$prim88553, align 8
%clofunc88554 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae60155)
musttail call tailcc void %clofunc88554(%struct.ScmObj* %ae60155, %struct.ScmObj* %args85842$ae60155$2)
ret void
}

define tailcc void @proc_clo$ae60155(%struct.ScmObj* %env$ae60155,%struct.ScmObj* %current_45args85838) {
%stackaddr$prim88555 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85838)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88555, align 8
%stackaddr$prim88556 = alloca %struct.ScmObj*, align 8
%current_45args85839 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85838)
store volatile %struct.ScmObj* %current_45args85839, %struct.ScmObj** %stackaddr$prim88556, align 8
%stackaddr$prim88557 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85839)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88557, align 8
%stackaddr$prim88558 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88558, align 8
%args85841$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88559 = alloca %struct.ScmObj*, align 8
%args85841$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85841$k$0)
store volatile %struct.ScmObj* %args85841$k$1, %struct.ScmObj** %stackaddr$prim88559, align 8
%clofunc88560 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88560(%struct.ScmObj* %k, %struct.ScmObj* %args85841$k$1)
ret void
}

define tailcc void @proc_clo$ae60206(%struct.ScmObj* %env$ae60206,%struct.ScmObj* %current_45args85844) {
%stackaddr$env-ref88561 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae60206, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88561
%stackaddr$prim88562 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85844)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88562, align 8
%stackaddr$prim88563 = alloca %struct.ScmObj*, align 8
%current_45args85845 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85844)
store volatile %struct.ScmObj* %current_45args85845, %struct.ScmObj** %stackaddr$prim88563, align 8
%stackaddr$prim88564 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85845)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88564, align 8
%ae60216 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88565 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae60216)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88565, align 8
%stackaddr$makeclosure88566 = alloca %struct.ScmObj*, align 8
%fptrToInt88567 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae60217 to i64
%ae60217 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88567)
store volatile %struct.ScmObj* %ae60217, %struct.ScmObj** %stackaddr$makeclosure88566, align 8
%ae60218 = call %struct.ScmObj* @const_init_int(i64 0)
%args85851$ae60217$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88568 = alloca %struct.ScmObj*, align 8
%args85851$ae60217$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85851$ae60217$0)
store volatile %struct.ScmObj* %args85851$ae60217$1, %struct.ScmObj** %stackaddr$prim88568, align 8
%stackaddr$prim88569 = alloca %struct.ScmObj*, align 8
%args85851$ae60217$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae60218, %struct.ScmObj* %args85851$ae60217$1)
store volatile %struct.ScmObj* %args85851$ae60217$2, %struct.ScmObj** %stackaddr$prim88569, align 8
%clofunc88570 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae60217)
musttail call tailcc void %clofunc88570(%struct.ScmObj* %ae60217, %struct.ScmObj* %args85851$ae60217$2)
ret void
}

define tailcc void @proc_clo$ae60217(%struct.ScmObj* %env$ae60217,%struct.ScmObj* %current_45args85847) {
%stackaddr$prim88571 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85847)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88571, align 8
%stackaddr$prim88572 = alloca %struct.ScmObj*, align 8
%current_45args85848 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85847)
store volatile %struct.ScmObj* %current_45args85848, %struct.ScmObj** %stackaddr$prim88572, align 8
%stackaddr$prim88573 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85848)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88573, align 8
%stackaddr$prim88574 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88574, align 8
%args85850$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88575 = alloca %struct.ScmObj*, align 8
%args85850$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85850$k$0)
store volatile %struct.ScmObj* %args85850$k$1, %struct.ScmObj** %stackaddr$prim88575, align 8
%clofunc88576 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88576(%struct.ScmObj* %k, %struct.ScmObj* %args85850$k$1)
ret void
}

define tailcc void @proc_clo$ae61491(%struct.ScmObj* %env$ae61491,%struct.ScmObj* %current_45args85857) {
%stackaddr$env-ref88577 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae61491, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88577
%stackaddr$prim88578 = alloca %struct.ScmObj*, align 8
%_95k40413 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85857)
store volatile %struct.ScmObj* %_95k40413, %struct.ScmObj** %stackaddr$prim88578, align 8
%stackaddr$prim88579 = alloca %struct.ScmObj*, align 8
%current_45args85858 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85857)
store volatile %struct.ScmObj* %current_45args85858, %struct.ScmObj** %stackaddr$prim88579, align 8
%stackaddr$prim88580 = alloca %struct.ScmObj*, align 8
%t4010440232 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85858)
store volatile %struct.ScmObj* %t4010440232, %struct.ScmObj** %stackaddr$prim88580, align 8
%ae61498 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88581 = alloca %struct.ScmObj*, align 8
%anf_45bind40365 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61498)
store volatile %struct.ScmObj* %anf_45bind40365, %struct.ScmObj** %stackaddr$prim88581, align 8
%ae61500 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim88582 = alloca %struct.ScmObj*, align 8
%anf_45bind40366 = call %struct.ScmObj* @prim__60(%struct.ScmObj* %anf_45bind40365, %struct.ScmObj* %ae61500)
store volatile %struct.ScmObj* %anf_45bind40366, %struct.ScmObj** %stackaddr$prim88582, align 8
%truthy$cmp88583 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40366)
%cmp$cmp88583 = icmp eq i64 %truthy$cmp88583, 1
br i1 %cmp$cmp88583, label %truebranch$cmp88583, label %falsebranch$cmp88583
truebranch$cmp88583:
%ae61503 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88584 = alloca %struct.ScmObj*, align 8
%anf_45bind40367 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61503)
store volatile %struct.ScmObj* %anf_45bind40367, %struct.ScmObj** %stackaddr$prim88584, align 8
%ae61505 = call %struct.ScmObj* @const_init_int(i64 9)
%stackaddr$prim88585 = alloca %struct.ScmObj*, align 8
%anf_45bind40368 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40367, %struct.ScmObj* %ae61505)
store volatile %struct.ScmObj* %anf_45bind40368, %struct.ScmObj** %stackaddr$prim88585, align 8
%ae61507 = call %struct.ScmObj* @const_init_int(i64 4)
%stackaddr$prim88586 = alloca %struct.ScmObj*, align 8
%anf_45bind40369 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40368, %struct.ScmObj* %ae61507)
store volatile %struct.ScmObj* %anf_45bind40369, %struct.ScmObj** %stackaddr$prim88586, align 8
%ae61509 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88587 = alloca %struct.ScmObj*, align 8
%cpsprim40423 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61509, %struct.ScmObj* %anf_45bind40369)
store volatile %struct.ScmObj* %cpsprim40423, %struct.ScmObj** %stackaddr$prim88587, align 8
%stackaddr$makeclosure88588 = alloca %struct.ScmObj*, align 8
%fptrToInt88589 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61511 to i64
%ae61511 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88589)
store volatile %struct.ScmObj* %ae61511, %struct.ScmObj** %stackaddr$makeclosure88588, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae61511, %struct.ScmObj* %x40229, i64 0)
%ae61512 = call %struct.ScmObj* @const_init_int(i64 0)
%args85959$ae61511$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88590 = alloca %struct.ScmObj*, align 8
%args85959$ae61511$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40423, %struct.ScmObj* %args85959$ae61511$0)
store volatile %struct.ScmObj* %args85959$ae61511$1, %struct.ScmObj** %stackaddr$prim88590, align 8
%stackaddr$prim88591 = alloca %struct.ScmObj*, align 8
%args85959$ae61511$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61512, %struct.ScmObj* %args85959$ae61511$1)
store volatile %struct.ScmObj* %args85959$ae61511$2, %struct.ScmObj** %stackaddr$prim88591, align 8
%clofunc88592 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61511)
musttail call tailcc void %clofunc88592(%struct.ScmObj* %ae61511, %struct.ScmObj* %args85959$ae61511$2)
ret void
falsebranch$cmp88583:
%stackaddr$prim88593 = alloca %struct.ScmObj*, align 8
%cpsprim40424 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40424, %struct.ScmObj** %stackaddr$prim88593, align 8
%stackaddr$makeclosure88594 = alloca %struct.ScmObj*, align 8
%fptrToInt88595 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63590 to i64
%ae63590 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88595)
store volatile %struct.ScmObj* %ae63590, %struct.ScmObj** %stackaddr$makeclosure88594, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae63590, %struct.ScmObj* %x40229, i64 0)
%ae63591 = call %struct.ScmObj* @const_init_int(i64 0)
%args86059$ae63590$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88596 = alloca %struct.ScmObj*, align 8
%args86059$ae63590$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40424, %struct.ScmObj* %args86059$ae63590$0)
store volatile %struct.ScmObj* %args86059$ae63590$1, %struct.ScmObj** %stackaddr$prim88596, align 8
%stackaddr$prim88597 = alloca %struct.ScmObj*, align 8
%args86059$ae63590$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63591, %struct.ScmObj* %args86059$ae63590$1)
store volatile %struct.ScmObj* %args86059$ae63590$2, %struct.ScmObj** %stackaddr$prim88597, align 8
%clofunc88598 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63590)
musttail call tailcc void %clofunc88598(%struct.ScmObj* %ae63590, %struct.ScmObj* %args86059$ae63590$2)
ret void
}

define tailcc void @proc_clo$ae61511(%struct.ScmObj* %env$ae61511,%struct.ScmObj* %current_45args85860) {
%stackaddr$env-ref88599 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae61511, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88599
%stackaddr$prim88600 = alloca %struct.ScmObj*, align 8
%_95k40414 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85860)
store volatile %struct.ScmObj* %_95k40414, %struct.ScmObj** %stackaddr$prim88600, align 8
%stackaddr$prim88601 = alloca %struct.ScmObj*, align 8
%current_45args85861 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85860)
store volatile %struct.ScmObj* %current_45args85861, %struct.ScmObj** %stackaddr$prim88601, align 8
%stackaddr$prim88602 = alloca %struct.ScmObj*, align 8
%t4010540233 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85861)
store volatile %struct.ScmObj* %t4010540233, %struct.ScmObj** %stackaddr$prim88602, align 8
%ae61517 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88603 = call i64 @is_truthy_value(%struct.ScmObj* %ae61517)
%cmp$cmp88603 = icmp eq i64 %truthy$cmp88603, 1
br i1 %cmp$cmp88603, label %truebranch$cmp88603, label %falsebranch$cmp88603
truebranch$cmp88603:
%stackaddr$prim88604 = alloca %struct.ScmObj*, align 8
%cpsprim40421 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40421, %struct.ScmObj** %stackaddr$prim88604, align 8
%stackaddr$makeclosure88605 = alloca %struct.ScmObj*, align 8
%fptrToInt88606 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61518 to i64
%ae61518 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88606)
store volatile %struct.ScmObj* %ae61518, %struct.ScmObj** %stackaddr$makeclosure88605, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae61518, %struct.ScmObj* %x40229, i64 0)
%ae61519 = call %struct.ScmObj* @const_init_int(i64 0)
%args85910$ae61518$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88607 = alloca %struct.ScmObj*, align 8
%args85910$ae61518$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40421, %struct.ScmObj* %args85910$ae61518$0)
store volatile %struct.ScmObj* %args85910$ae61518$1, %struct.ScmObj** %stackaddr$prim88607, align 8
%stackaddr$prim88608 = alloca %struct.ScmObj*, align 8
%args85910$ae61518$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61519, %struct.ScmObj* %args85910$ae61518$1)
store volatile %struct.ScmObj* %args85910$ae61518$2, %struct.ScmObj** %stackaddr$prim88608, align 8
%clofunc88609 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61518)
musttail call tailcc void %clofunc88609(%struct.ScmObj* %ae61518, %struct.ScmObj* %args85910$ae61518$2)
ret void
falsebranch$cmp88603:
%ae61983 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88610 = alloca %struct.ScmObj*, align 8
%anf_45bind40370 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61983)
store volatile %struct.ScmObj* %anf_45bind40370, %struct.ScmObj** %stackaddr$prim88610, align 8
%ae61985 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim88611 = alloca %struct.ScmObj*, align 8
%anf_45bind40371 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40370, %struct.ScmObj* %ae61985)
store volatile %struct.ScmObj* %anf_45bind40371, %struct.ScmObj** %stackaddr$prim88611, align 8
%ae61987 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim88612 = alloca %struct.ScmObj*, align 8
%anf_45bind40372 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40371, %struct.ScmObj* %ae61987)
store volatile %struct.ScmObj* %anf_45bind40372, %struct.ScmObj** %stackaddr$prim88612, align 8
%ae61989 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88613 = alloca %struct.ScmObj*, align 8
%cpsprim40422 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61989, %struct.ScmObj* %anf_45bind40372)
store volatile %struct.ScmObj* %cpsprim40422, %struct.ScmObj** %stackaddr$prim88613, align 8
%stackaddr$makeclosure88614 = alloca %struct.ScmObj*, align 8
%fptrToInt88615 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61991 to i64
%ae61991 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88615)
store volatile %struct.ScmObj* %ae61991, %struct.ScmObj** %stackaddr$makeclosure88614, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae61991, %struct.ScmObj* %x40229, i64 0)
%ae61992 = call %struct.ScmObj* @const_init_int(i64 0)
%args85958$ae61991$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88616 = alloca %struct.ScmObj*, align 8
%args85958$ae61991$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40422, %struct.ScmObj* %args85958$ae61991$0)
store volatile %struct.ScmObj* %args85958$ae61991$1, %struct.ScmObj** %stackaddr$prim88616, align 8
%stackaddr$prim88617 = alloca %struct.ScmObj*, align 8
%args85958$ae61991$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61992, %struct.ScmObj* %args85958$ae61991$1)
store volatile %struct.ScmObj* %args85958$ae61991$2, %struct.ScmObj** %stackaddr$prim88617, align 8
%clofunc88618 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61991)
musttail call tailcc void %clofunc88618(%struct.ScmObj* %ae61991, %struct.ScmObj* %args85958$ae61991$2)
ret void
}

define tailcc void @proc_clo$ae61518(%struct.ScmObj* %env$ae61518,%struct.ScmObj* %current_45args85863) {
%stackaddr$env-ref88619 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae61518, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88619
%stackaddr$prim88620 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85863)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim88620, align 8
%stackaddr$prim88621 = alloca %struct.ScmObj*, align 8
%current_45args85864 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85863)
store volatile %struct.ScmObj* %current_45args85864, %struct.ScmObj** %stackaddr$prim88621, align 8
%stackaddr$prim88622 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85864)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim88622, align 8
%ae61525 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88623 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61525)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim88623, align 8
%truthy$cmp88624 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp88624 = icmp eq i64 %truthy$cmp88624, 1
br i1 %cmp$cmp88624, label %truebranch$cmp88624, label %falsebranch$cmp88624
truebranch$cmp88624:
%ae61528 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88625 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61528)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim88625, align 8
%ae61530 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88626 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61530)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim88626, align 8
%stackaddr$prim88627 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim88627, align 8
%ae61534 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88628 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61534, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim88628, align 8
%stackaddr$makeclosure88629 = alloca %struct.ScmObj*, align 8
%fptrToInt88630 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61536 to i64
%ae61536 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88630)
store volatile %struct.ScmObj* %ae61536, %struct.ScmObj** %stackaddr$makeclosure88629, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae61536, %struct.ScmObj* %x40229, i64 0)
%ae61537 = call %struct.ScmObj* @const_init_int(i64 0)
%args85887$ae61536$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88631 = alloca %struct.ScmObj*, align 8
%args85887$ae61536$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85887$ae61536$0)
store volatile %struct.ScmObj* %args85887$ae61536$1, %struct.ScmObj** %stackaddr$prim88631, align 8
%stackaddr$prim88632 = alloca %struct.ScmObj*, align 8
%args85887$ae61536$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61537, %struct.ScmObj* %args85887$ae61536$1)
store volatile %struct.ScmObj* %args85887$ae61536$2, %struct.ScmObj** %stackaddr$prim88632, align 8
%clofunc88633 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61536)
musttail call tailcc void %clofunc88633(%struct.ScmObj* %ae61536, %struct.ScmObj* %args85887$ae61536$2)
ret void
falsebranch$cmp88624:
%stackaddr$makeclosure88634 = alloca %struct.ScmObj*, align 8
%fptrToInt88635 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61774 to i64
%ae61774 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88635)
store volatile %struct.ScmObj* %ae61774, %struct.ScmObj** %stackaddr$makeclosure88634, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae61774, %struct.ScmObj* %x40229, i64 0)
%ae61775 = call %struct.ScmObj* @const_init_int(i64 0)
%ae61776 = call %struct.ScmObj* @const_init_int(i64 7)
%args85909$ae61774$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88636 = alloca %struct.ScmObj*, align 8
%args85909$ae61774$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61776, %struct.ScmObj* %args85909$ae61774$0)
store volatile %struct.ScmObj* %args85909$ae61774$1, %struct.ScmObj** %stackaddr$prim88636, align 8
%stackaddr$prim88637 = alloca %struct.ScmObj*, align 8
%args85909$ae61774$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61775, %struct.ScmObj* %args85909$ae61774$1)
store volatile %struct.ScmObj* %args85909$ae61774$2, %struct.ScmObj** %stackaddr$prim88637, align 8
%clofunc88638 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61774)
musttail call tailcc void %clofunc88638(%struct.ScmObj* %ae61774, %struct.ScmObj* %args85909$ae61774$2)
ret void
}

define tailcc void @proc_clo$ae61536(%struct.ScmObj* %env$ae61536,%struct.ScmObj* %current_45args85866) {
%stackaddr$env-ref88639 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae61536, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88639
%stackaddr$prim88640 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85866)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88640, align 8
%stackaddr$prim88641 = alloca %struct.ScmObj*, align 8
%current_45args85867 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85866)
store volatile %struct.ScmObj* %current_45args85867, %struct.ScmObj** %stackaddr$prim88641, align 8
%stackaddr$prim88642 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85867)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88642, align 8
%ae61542 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88643 = call i64 @is_truthy_value(%struct.ScmObj* %ae61542)
%cmp$cmp88643 = icmp eq i64 %truthy$cmp88643, 1
br i1 %cmp$cmp88643, label %truebranch$cmp88643, label %falsebranch$cmp88643
truebranch$cmp88643:
%ae61544 = call %struct.ScmObj* @const_init_int(i64 0)
%ae61545 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88644 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61544, %struct.ScmObj* %ae61545)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88644, align 8
%stackaddr$makeclosure88645 = alloca %struct.ScmObj*, align 8
%fptrToInt88646 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61546 to i64
%ae61546 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88646)
store volatile %struct.ScmObj* %ae61546, %struct.ScmObj** %stackaddr$makeclosure88645, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae61546, %struct.ScmObj* %x40229, i64 0)
%ae61547 = call %struct.ScmObj* @const_init_int(i64 0)
%args85877$ae61546$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88647 = alloca %struct.ScmObj*, align 8
%args85877$ae61546$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85877$ae61546$0)
store volatile %struct.ScmObj* %args85877$ae61546$1, %struct.ScmObj** %stackaddr$prim88647, align 8
%stackaddr$prim88648 = alloca %struct.ScmObj*, align 8
%args85877$ae61546$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61547, %struct.ScmObj* %args85877$ae61546$1)
store volatile %struct.ScmObj* %args85877$ae61546$2, %struct.ScmObj** %stackaddr$prim88648, align 8
%clofunc88649 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61546)
musttail call tailcc void %clofunc88649(%struct.ScmObj* %ae61546, %struct.ScmObj* %args85877$ae61546$2)
ret void
falsebranch$cmp88643:
%stackaddr$makeclosure88650 = alloca %struct.ScmObj*, align 8
%fptrToInt88651 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61605 to i64
%ae61605 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88651)
store volatile %struct.ScmObj* %ae61605, %struct.ScmObj** %stackaddr$makeclosure88650, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae61605, %struct.ScmObj* %x40229, i64 0)
%ae61606 = call %struct.ScmObj* @const_init_int(i64 0)
%ae61607 = call %struct.ScmObj* @const_init_int(i64 9)
%args85886$ae61605$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88652 = alloca %struct.ScmObj*, align 8
%args85886$ae61605$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61607, %struct.ScmObj* %args85886$ae61605$0)
store volatile %struct.ScmObj* %args85886$ae61605$1, %struct.ScmObj** %stackaddr$prim88652, align 8
%stackaddr$prim88653 = alloca %struct.ScmObj*, align 8
%args85886$ae61605$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61606, %struct.ScmObj* %args85886$ae61605$1)
store volatile %struct.ScmObj* %args85886$ae61605$2, %struct.ScmObj** %stackaddr$prim88653, align 8
%clofunc88654 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61605)
musttail call tailcc void %clofunc88654(%struct.ScmObj* %ae61605, %struct.ScmObj* %args85886$ae61605$2)
ret void
}

define tailcc void @proc_clo$ae61546(%struct.ScmObj* %env$ae61546,%struct.ScmObj* %current_45args85869) {
%stackaddr$env-ref88655 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae61546, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88655
%stackaddr$prim88656 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85869)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88656, align 8
%stackaddr$prim88657 = alloca %struct.ScmObj*, align 8
%current_45args85870 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85869)
store volatile %struct.ScmObj* %current_45args85870, %struct.ScmObj** %stackaddr$prim88657, align 8
%stackaddr$prim88658 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85870)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88658, align 8
%ae61553 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88659 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61553)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88659, align 8
%stackaddr$makeclosure88660 = alloca %struct.ScmObj*, align 8
%fptrToInt88661 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61554 to i64
%ae61554 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88661)
store volatile %struct.ScmObj* %ae61554, %struct.ScmObj** %stackaddr$makeclosure88660, align 8
%ae61555 = call %struct.ScmObj* @const_init_int(i64 0)
%args85876$ae61554$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88662 = alloca %struct.ScmObj*, align 8
%args85876$ae61554$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85876$ae61554$0)
store volatile %struct.ScmObj* %args85876$ae61554$1, %struct.ScmObj** %stackaddr$prim88662, align 8
%stackaddr$prim88663 = alloca %struct.ScmObj*, align 8
%args85876$ae61554$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61555, %struct.ScmObj* %args85876$ae61554$1)
store volatile %struct.ScmObj* %args85876$ae61554$2, %struct.ScmObj** %stackaddr$prim88663, align 8
%clofunc88664 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61554)
musttail call tailcc void %clofunc88664(%struct.ScmObj* %ae61554, %struct.ScmObj* %args85876$ae61554$2)
ret void
}

define tailcc void @proc_clo$ae61554(%struct.ScmObj* %env$ae61554,%struct.ScmObj* %current_45args85872) {
%stackaddr$prim88665 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85872)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88665, align 8
%stackaddr$prim88666 = alloca %struct.ScmObj*, align 8
%current_45args85873 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85872)
store volatile %struct.ScmObj* %current_45args85873, %struct.ScmObj** %stackaddr$prim88666, align 8
%stackaddr$prim88667 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85873)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88667, align 8
%stackaddr$prim88668 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88668, align 8
%args85875$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88669 = alloca %struct.ScmObj*, align 8
%args85875$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85875$k$0)
store volatile %struct.ScmObj* %args85875$k$1, %struct.ScmObj** %stackaddr$prim88669, align 8
%clofunc88670 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88670(%struct.ScmObj* %k, %struct.ScmObj* %args85875$k$1)
ret void
}

define tailcc void @proc_clo$ae61605(%struct.ScmObj* %env$ae61605,%struct.ScmObj* %current_45args85878) {
%stackaddr$env-ref88671 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae61605, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88671
%stackaddr$prim88672 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85878)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88672, align 8
%stackaddr$prim88673 = alloca %struct.ScmObj*, align 8
%current_45args85879 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85878)
store volatile %struct.ScmObj* %current_45args85879, %struct.ScmObj** %stackaddr$prim88673, align 8
%stackaddr$prim88674 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85879)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88674, align 8
%ae61615 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88675 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61615)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88675, align 8
%stackaddr$makeclosure88676 = alloca %struct.ScmObj*, align 8
%fptrToInt88677 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61616 to i64
%ae61616 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88677)
store volatile %struct.ScmObj* %ae61616, %struct.ScmObj** %stackaddr$makeclosure88676, align 8
%ae61617 = call %struct.ScmObj* @const_init_int(i64 0)
%args85885$ae61616$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88678 = alloca %struct.ScmObj*, align 8
%args85885$ae61616$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85885$ae61616$0)
store volatile %struct.ScmObj* %args85885$ae61616$1, %struct.ScmObj** %stackaddr$prim88678, align 8
%stackaddr$prim88679 = alloca %struct.ScmObj*, align 8
%args85885$ae61616$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61617, %struct.ScmObj* %args85885$ae61616$1)
store volatile %struct.ScmObj* %args85885$ae61616$2, %struct.ScmObj** %stackaddr$prim88679, align 8
%clofunc88680 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61616)
musttail call tailcc void %clofunc88680(%struct.ScmObj* %ae61616, %struct.ScmObj* %args85885$ae61616$2)
ret void
}

define tailcc void @proc_clo$ae61616(%struct.ScmObj* %env$ae61616,%struct.ScmObj* %current_45args85881) {
%stackaddr$prim88681 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85881)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88681, align 8
%stackaddr$prim88682 = alloca %struct.ScmObj*, align 8
%current_45args85882 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85881)
store volatile %struct.ScmObj* %current_45args85882, %struct.ScmObj** %stackaddr$prim88682, align 8
%stackaddr$prim88683 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85882)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88683, align 8
%stackaddr$prim88684 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88684, align 8
%args85884$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88685 = alloca %struct.ScmObj*, align 8
%args85884$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85884$k$0)
store volatile %struct.ScmObj* %args85884$k$1, %struct.ScmObj** %stackaddr$prim88685, align 8
%clofunc88686 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88686(%struct.ScmObj* %k, %struct.ScmObj* %args85884$k$1)
ret void
}

define tailcc void @proc_clo$ae61774(%struct.ScmObj* %env$ae61774,%struct.ScmObj* %current_45args85888) {
%stackaddr$env-ref88687 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae61774, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88687
%stackaddr$prim88688 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85888)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88688, align 8
%stackaddr$prim88689 = alloca %struct.ScmObj*, align 8
%current_45args85889 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85888)
store volatile %struct.ScmObj* %current_45args85889, %struct.ScmObj** %stackaddr$prim88689, align 8
%stackaddr$prim88690 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85889)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88690, align 8
%ae61783 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88691 = call i64 @is_truthy_value(%struct.ScmObj* %ae61783)
%cmp$cmp88691 = icmp eq i64 %truthy$cmp88691, 1
br i1 %cmp$cmp88691, label %truebranch$cmp88691, label %falsebranch$cmp88691
truebranch$cmp88691:
%ae61785 = call %struct.ScmObj* @const_init_int(i64 0)
%ae61786 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88692 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61785, %struct.ScmObj* %ae61786)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88692, align 8
%stackaddr$makeclosure88693 = alloca %struct.ScmObj*, align 8
%fptrToInt88694 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61787 to i64
%ae61787 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88694)
store volatile %struct.ScmObj* %ae61787, %struct.ScmObj** %stackaddr$makeclosure88693, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae61787, %struct.ScmObj* %x40229, i64 0)
%ae61788 = call %struct.ScmObj* @const_init_int(i64 0)
%args85899$ae61787$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88695 = alloca %struct.ScmObj*, align 8
%args85899$ae61787$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85899$ae61787$0)
store volatile %struct.ScmObj* %args85899$ae61787$1, %struct.ScmObj** %stackaddr$prim88695, align 8
%stackaddr$prim88696 = alloca %struct.ScmObj*, align 8
%args85899$ae61787$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61788, %struct.ScmObj* %args85899$ae61787$1)
store volatile %struct.ScmObj* %args85899$ae61787$2, %struct.ScmObj** %stackaddr$prim88696, align 8
%clofunc88697 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61787)
musttail call tailcc void %clofunc88697(%struct.ScmObj* %ae61787, %struct.ScmObj* %args85899$ae61787$2)
ret void
falsebranch$cmp88691:
%stackaddr$makeclosure88698 = alloca %struct.ScmObj*, align 8
%fptrToInt88699 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61846 to i64
%ae61846 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88699)
store volatile %struct.ScmObj* %ae61846, %struct.ScmObj** %stackaddr$makeclosure88698, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae61846, %struct.ScmObj* %x40229, i64 0)
%ae61847 = call %struct.ScmObj* @const_init_int(i64 0)
%ae61848 = call %struct.ScmObj* @const_init_int(i64 9)
%args85908$ae61846$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88700 = alloca %struct.ScmObj*, align 8
%args85908$ae61846$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61848, %struct.ScmObj* %args85908$ae61846$0)
store volatile %struct.ScmObj* %args85908$ae61846$1, %struct.ScmObj** %stackaddr$prim88700, align 8
%stackaddr$prim88701 = alloca %struct.ScmObj*, align 8
%args85908$ae61846$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61847, %struct.ScmObj* %args85908$ae61846$1)
store volatile %struct.ScmObj* %args85908$ae61846$2, %struct.ScmObj** %stackaddr$prim88701, align 8
%clofunc88702 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61846)
musttail call tailcc void %clofunc88702(%struct.ScmObj* %ae61846, %struct.ScmObj* %args85908$ae61846$2)
ret void
}

define tailcc void @proc_clo$ae61787(%struct.ScmObj* %env$ae61787,%struct.ScmObj* %current_45args85891) {
%stackaddr$env-ref88703 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae61787, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88703
%stackaddr$prim88704 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85891)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88704, align 8
%stackaddr$prim88705 = alloca %struct.ScmObj*, align 8
%current_45args85892 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85891)
store volatile %struct.ScmObj* %current_45args85892, %struct.ScmObj** %stackaddr$prim88705, align 8
%stackaddr$prim88706 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85892)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88706, align 8
%ae61794 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88707 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61794)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88707, align 8
%stackaddr$makeclosure88708 = alloca %struct.ScmObj*, align 8
%fptrToInt88709 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61795 to i64
%ae61795 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88709)
store volatile %struct.ScmObj* %ae61795, %struct.ScmObj** %stackaddr$makeclosure88708, align 8
%ae61796 = call %struct.ScmObj* @const_init_int(i64 0)
%args85898$ae61795$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88710 = alloca %struct.ScmObj*, align 8
%args85898$ae61795$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85898$ae61795$0)
store volatile %struct.ScmObj* %args85898$ae61795$1, %struct.ScmObj** %stackaddr$prim88710, align 8
%stackaddr$prim88711 = alloca %struct.ScmObj*, align 8
%args85898$ae61795$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61796, %struct.ScmObj* %args85898$ae61795$1)
store volatile %struct.ScmObj* %args85898$ae61795$2, %struct.ScmObj** %stackaddr$prim88711, align 8
%clofunc88712 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61795)
musttail call tailcc void %clofunc88712(%struct.ScmObj* %ae61795, %struct.ScmObj* %args85898$ae61795$2)
ret void
}

define tailcc void @proc_clo$ae61795(%struct.ScmObj* %env$ae61795,%struct.ScmObj* %current_45args85894) {
%stackaddr$prim88713 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85894)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88713, align 8
%stackaddr$prim88714 = alloca %struct.ScmObj*, align 8
%current_45args85895 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85894)
store volatile %struct.ScmObj* %current_45args85895, %struct.ScmObj** %stackaddr$prim88714, align 8
%stackaddr$prim88715 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85895)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88715, align 8
%stackaddr$prim88716 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88716, align 8
%args85897$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88717 = alloca %struct.ScmObj*, align 8
%args85897$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85897$k$0)
store volatile %struct.ScmObj* %args85897$k$1, %struct.ScmObj** %stackaddr$prim88717, align 8
%clofunc88718 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88718(%struct.ScmObj* %k, %struct.ScmObj* %args85897$k$1)
ret void
}

define tailcc void @proc_clo$ae61846(%struct.ScmObj* %env$ae61846,%struct.ScmObj* %current_45args85900) {
%stackaddr$env-ref88719 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae61846, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88719
%stackaddr$prim88720 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85900)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88720, align 8
%stackaddr$prim88721 = alloca %struct.ScmObj*, align 8
%current_45args85901 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85900)
store volatile %struct.ScmObj* %current_45args85901, %struct.ScmObj** %stackaddr$prim88721, align 8
%stackaddr$prim88722 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85901)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88722, align 8
%ae61856 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88723 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61856)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88723, align 8
%stackaddr$makeclosure88724 = alloca %struct.ScmObj*, align 8
%fptrToInt88725 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae61857 to i64
%ae61857 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88725)
store volatile %struct.ScmObj* %ae61857, %struct.ScmObj** %stackaddr$makeclosure88724, align 8
%ae61858 = call %struct.ScmObj* @const_init_int(i64 0)
%args85907$ae61857$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88726 = alloca %struct.ScmObj*, align 8
%args85907$ae61857$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85907$ae61857$0)
store volatile %struct.ScmObj* %args85907$ae61857$1, %struct.ScmObj** %stackaddr$prim88726, align 8
%stackaddr$prim88727 = alloca %struct.ScmObj*, align 8
%args85907$ae61857$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae61858, %struct.ScmObj* %args85907$ae61857$1)
store volatile %struct.ScmObj* %args85907$ae61857$2, %struct.ScmObj** %stackaddr$prim88727, align 8
%clofunc88728 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae61857)
musttail call tailcc void %clofunc88728(%struct.ScmObj* %ae61857, %struct.ScmObj* %args85907$ae61857$2)
ret void
}

define tailcc void @proc_clo$ae61857(%struct.ScmObj* %env$ae61857,%struct.ScmObj* %current_45args85903) {
%stackaddr$prim88729 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85903)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88729, align 8
%stackaddr$prim88730 = alloca %struct.ScmObj*, align 8
%current_45args85904 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85903)
store volatile %struct.ScmObj* %current_45args85904, %struct.ScmObj** %stackaddr$prim88730, align 8
%stackaddr$prim88731 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85904)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88731, align 8
%stackaddr$prim88732 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88732, align 8
%args85906$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88733 = alloca %struct.ScmObj*, align 8
%args85906$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85906$k$0)
store volatile %struct.ScmObj* %args85906$k$1, %struct.ScmObj** %stackaddr$prim88733, align 8
%clofunc88734 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88734(%struct.ScmObj* %k, %struct.ScmObj* %args85906$k$1)
ret void
}

define tailcc void @proc_clo$ae61991(%struct.ScmObj* %env$ae61991,%struct.ScmObj* %current_45args85911) {
%stackaddr$env-ref88735 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae61991, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88735
%stackaddr$prim88736 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85911)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim88736, align 8
%stackaddr$prim88737 = alloca %struct.ScmObj*, align 8
%current_45args85912 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85911)
store volatile %struct.ScmObj* %current_45args85912, %struct.ScmObj** %stackaddr$prim88737, align 8
%stackaddr$prim88738 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85912)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim88738, align 8
%ae61998 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88739 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae61998)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim88739, align 8
%truthy$cmp88740 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp88740 = icmp eq i64 %truthy$cmp88740, 1
br i1 %cmp$cmp88740, label %truebranch$cmp88740, label %falsebranch$cmp88740
truebranch$cmp88740:
%ae62001 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88741 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae62001)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim88741, align 8
%ae62003 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88742 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae62003)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim88742, align 8
%stackaddr$prim88743 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim88743, align 8
%ae62007 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88744 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae62007, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim88744, align 8
%stackaddr$makeclosure88745 = alloca %struct.ScmObj*, align 8
%fptrToInt88746 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae62009 to i64
%ae62009 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88746)
store volatile %struct.ScmObj* %ae62009, %struct.ScmObj** %stackaddr$makeclosure88745, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae62009, %struct.ScmObj* %x40229, i64 0)
%ae62010 = call %struct.ScmObj* @const_init_int(i64 0)
%args85935$ae62009$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88747 = alloca %struct.ScmObj*, align 8
%args85935$ae62009$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85935$ae62009$0)
store volatile %struct.ScmObj* %args85935$ae62009$1, %struct.ScmObj** %stackaddr$prim88747, align 8
%stackaddr$prim88748 = alloca %struct.ScmObj*, align 8
%args85935$ae62009$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62010, %struct.ScmObj* %args85935$ae62009$1)
store volatile %struct.ScmObj* %args85935$ae62009$2, %struct.ScmObj** %stackaddr$prim88748, align 8
%clofunc88749 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae62009)
musttail call tailcc void %clofunc88749(%struct.ScmObj* %ae62009, %struct.ScmObj* %args85935$ae62009$2)
ret void
falsebranch$cmp88740:
%stackaddr$makeclosure88750 = alloca %struct.ScmObj*, align 8
%fptrToInt88751 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae62247 to i64
%ae62247 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88751)
store volatile %struct.ScmObj* %ae62247, %struct.ScmObj** %stackaddr$makeclosure88750, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae62247, %struct.ScmObj* %x40229, i64 0)
%ae62248 = call %struct.ScmObj* @const_init_int(i64 0)
%ae62249 = call %struct.ScmObj* @const_init_int(i64 7)
%args85957$ae62247$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88752 = alloca %struct.ScmObj*, align 8
%args85957$ae62247$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62249, %struct.ScmObj* %args85957$ae62247$0)
store volatile %struct.ScmObj* %args85957$ae62247$1, %struct.ScmObj** %stackaddr$prim88752, align 8
%stackaddr$prim88753 = alloca %struct.ScmObj*, align 8
%args85957$ae62247$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62248, %struct.ScmObj* %args85957$ae62247$1)
store volatile %struct.ScmObj* %args85957$ae62247$2, %struct.ScmObj** %stackaddr$prim88753, align 8
%clofunc88754 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae62247)
musttail call tailcc void %clofunc88754(%struct.ScmObj* %ae62247, %struct.ScmObj* %args85957$ae62247$2)
ret void
}

define tailcc void @proc_clo$ae62009(%struct.ScmObj* %env$ae62009,%struct.ScmObj* %current_45args85914) {
%stackaddr$env-ref88755 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae62009, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88755
%stackaddr$prim88756 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85914)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88756, align 8
%stackaddr$prim88757 = alloca %struct.ScmObj*, align 8
%current_45args85915 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85914)
store volatile %struct.ScmObj* %current_45args85915, %struct.ScmObj** %stackaddr$prim88757, align 8
%stackaddr$prim88758 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85915)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88758, align 8
%ae62015 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88759 = call i64 @is_truthy_value(%struct.ScmObj* %ae62015)
%cmp$cmp88759 = icmp eq i64 %truthy$cmp88759, 1
br i1 %cmp$cmp88759, label %truebranch$cmp88759, label %falsebranch$cmp88759
truebranch$cmp88759:
%ae62017 = call %struct.ScmObj* @const_init_int(i64 0)
%ae62018 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88760 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae62017, %struct.ScmObj* %ae62018)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88760, align 8
%stackaddr$makeclosure88761 = alloca %struct.ScmObj*, align 8
%fptrToInt88762 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae62019 to i64
%ae62019 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88762)
store volatile %struct.ScmObj* %ae62019, %struct.ScmObj** %stackaddr$makeclosure88761, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae62019, %struct.ScmObj* %x40229, i64 0)
%ae62020 = call %struct.ScmObj* @const_init_int(i64 0)
%args85925$ae62019$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88763 = alloca %struct.ScmObj*, align 8
%args85925$ae62019$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85925$ae62019$0)
store volatile %struct.ScmObj* %args85925$ae62019$1, %struct.ScmObj** %stackaddr$prim88763, align 8
%stackaddr$prim88764 = alloca %struct.ScmObj*, align 8
%args85925$ae62019$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62020, %struct.ScmObj* %args85925$ae62019$1)
store volatile %struct.ScmObj* %args85925$ae62019$2, %struct.ScmObj** %stackaddr$prim88764, align 8
%clofunc88765 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae62019)
musttail call tailcc void %clofunc88765(%struct.ScmObj* %ae62019, %struct.ScmObj* %args85925$ae62019$2)
ret void
falsebranch$cmp88759:
%stackaddr$makeclosure88766 = alloca %struct.ScmObj*, align 8
%fptrToInt88767 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae62078 to i64
%ae62078 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88767)
store volatile %struct.ScmObj* %ae62078, %struct.ScmObj** %stackaddr$makeclosure88766, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae62078, %struct.ScmObj* %x40229, i64 0)
%ae62079 = call %struct.ScmObj* @const_init_int(i64 0)
%ae62080 = call %struct.ScmObj* @const_init_int(i64 9)
%args85934$ae62078$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88768 = alloca %struct.ScmObj*, align 8
%args85934$ae62078$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62080, %struct.ScmObj* %args85934$ae62078$0)
store volatile %struct.ScmObj* %args85934$ae62078$1, %struct.ScmObj** %stackaddr$prim88768, align 8
%stackaddr$prim88769 = alloca %struct.ScmObj*, align 8
%args85934$ae62078$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62079, %struct.ScmObj* %args85934$ae62078$1)
store volatile %struct.ScmObj* %args85934$ae62078$2, %struct.ScmObj** %stackaddr$prim88769, align 8
%clofunc88770 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae62078)
musttail call tailcc void %clofunc88770(%struct.ScmObj* %ae62078, %struct.ScmObj* %args85934$ae62078$2)
ret void
}

define tailcc void @proc_clo$ae62019(%struct.ScmObj* %env$ae62019,%struct.ScmObj* %current_45args85917) {
%stackaddr$env-ref88771 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae62019, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88771
%stackaddr$prim88772 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85917)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88772, align 8
%stackaddr$prim88773 = alloca %struct.ScmObj*, align 8
%current_45args85918 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85917)
store volatile %struct.ScmObj* %current_45args85918, %struct.ScmObj** %stackaddr$prim88773, align 8
%stackaddr$prim88774 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85918)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88774, align 8
%ae62026 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88775 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae62026)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88775, align 8
%stackaddr$makeclosure88776 = alloca %struct.ScmObj*, align 8
%fptrToInt88777 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae62027 to i64
%ae62027 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88777)
store volatile %struct.ScmObj* %ae62027, %struct.ScmObj** %stackaddr$makeclosure88776, align 8
%ae62028 = call %struct.ScmObj* @const_init_int(i64 0)
%args85924$ae62027$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88778 = alloca %struct.ScmObj*, align 8
%args85924$ae62027$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85924$ae62027$0)
store volatile %struct.ScmObj* %args85924$ae62027$1, %struct.ScmObj** %stackaddr$prim88778, align 8
%stackaddr$prim88779 = alloca %struct.ScmObj*, align 8
%args85924$ae62027$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62028, %struct.ScmObj* %args85924$ae62027$1)
store volatile %struct.ScmObj* %args85924$ae62027$2, %struct.ScmObj** %stackaddr$prim88779, align 8
%clofunc88780 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae62027)
musttail call tailcc void %clofunc88780(%struct.ScmObj* %ae62027, %struct.ScmObj* %args85924$ae62027$2)
ret void
}

define tailcc void @proc_clo$ae62027(%struct.ScmObj* %env$ae62027,%struct.ScmObj* %current_45args85920) {
%stackaddr$prim88781 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85920)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88781, align 8
%stackaddr$prim88782 = alloca %struct.ScmObj*, align 8
%current_45args85921 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85920)
store volatile %struct.ScmObj* %current_45args85921, %struct.ScmObj** %stackaddr$prim88782, align 8
%stackaddr$prim88783 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85921)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88783, align 8
%stackaddr$prim88784 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88784, align 8
%args85923$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88785 = alloca %struct.ScmObj*, align 8
%args85923$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85923$k$0)
store volatile %struct.ScmObj* %args85923$k$1, %struct.ScmObj** %stackaddr$prim88785, align 8
%clofunc88786 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88786(%struct.ScmObj* %k, %struct.ScmObj* %args85923$k$1)
ret void
}

define tailcc void @proc_clo$ae62078(%struct.ScmObj* %env$ae62078,%struct.ScmObj* %current_45args85926) {
%stackaddr$env-ref88787 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae62078, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88787
%stackaddr$prim88788 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85926)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88788, align 8
%stackaddr$prim88789 = alloca %struct.ScmObj*, align 8
%current_45args85927 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85926)
store volatile %struct.ScmObj* %current_45args85927, %struct.ScmObj** %stackaddr$prim88789, align 8
%stackaddr$prim88790 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85927)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88790, align 8
%ae62088 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88791 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae62088)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88791, align 8
%stackaddr$makeclosure88792 = alloca %struct.ScmObj*, align 8
%fptrToInt88793 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae62089 to i64
%ae62089 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88793)
store volatile %struct.ScmObj* %ae62089, %struct.ScmObj** %stackaddr$makeclosure88792, align 8
%ae62090 = call %struct.ScmObj* @const_init_int(i64 0)
%args85933$ae62089$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88794 = alloca %struct.ScmObj*, align 8
%args85933$ae62089$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85933$ae62089$0)
store volatile %struct.ScmObj* %args85933$ae62089$1, %struct.ScmObj** %stackaddr$prim88794, align 8
%stackaddr$prim88795 = alloca %struct.ScmObj*, align 8
%args85933$ae62089$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62090, %struct.ScmObj* %args85933$ae62089$1)
store volatile %struct.ScmObj* %args85933$ae62089$2, %struct.ScmObj** %stackaddr$prim88795, align 8
%clofunc88796 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae62089)
musttail call tailcc void %clofunc88796(%struct.ScmObj* %ae62089, %struct.ScmObj* %args85933$ae62089$2)
ret void
}

define tailcc void @proc_clo$ae62089(%struct.ScmObj* %env$ae62089,%struct.ScmObj* %current_45args85929) {
%stackaddr$prim88797 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85929)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88797, align 8
%stackaddr$prim88798 = alloca %struct.ScmObj*, align 8
%current_45args85930 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85929)
store volatile %struct.ScmObj* %current_45args85930, %struct.ScmObj** %stackaddr$prim88798, align 8
%stackaddr$prim88799 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85930)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88799, align 8
%stackaddr$prim88800 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88800, align 8
%args85932$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88801 = alloca %struct.ScmObj*, align 8
%args85932$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85932$k$0)
store volatile %struct.ScmObj* %args85932$k$1, %struct.ScmObj** %stackaddr$prim88801, align 8
%clofunc88802 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88802(%struct.ScmObj* %k, %struct.ScmObj* %args85932$k$1)
ret void
}

define tailcc void @proc_clo$ae62247(%struct.ScmObj* %env$ae62247,%struct.ScmObj* %current_45args85936) {
%stackaddr$env-ref88803 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae62247, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88803
%stackaddr$prim88804 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85936)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88804, align 8
%stackaddr$prim88805 = alloca %struct.ScmObj*, align 8
%current_45args85937 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85936)
store volatile %struct.ScmObj* %current_45args85937, %struct.ScmObj** %stackaddr$prim88805, align 8
%stackaddr$prim88806 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85937)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88806, align 8
%ae62256 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88807 = call i64 @is_truthy_value(%struct.ScmObj* %ae62256)
%cmp$cmp88807 = icmp eq i64 %truthy$cmp88807, 1
br i1 %cmp$cmp88807, label %truebranch$cmp88807, label %falsebranch$cmp88807
truebranch$cmp88807:
%ae62258 = call %struct.ScmObj* @const_init_int(i64 0)
%ae62259 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88808 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae62258, %struct.ScmObj* %ae62259)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88808, align 8
%stackaddr$makeclosure88809 = alloca %struct.ScmObj*, align 8
%fptrToInt88810 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae62260 to i64
%ae62260 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88810)
store volatile %struct.ScmObj* %ae62260, %struct.ScmObj** %stackaddr$makeclosure88809, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae62260, %struct.ScmObj* %x40229, i64 0)
%ae62261 = call %struct.ScmObj* @const_init_int(i64 0)
%args85947$ae62260$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88811 = alloca %struct.ScmObj*, align 8
%args85947$ae62260$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85947$ae62260$0)
store volatile %struct.ScmObj* %args85947$ae62260$1, %struct.ScmObj** %stackaddr$prim88811, align 8
%stackaddr$prim88812 = alloca %struct.ScmObj*, align 8
%args85947$ae62260$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62261, %struct.ScmObj* %args85947$ae62260$1)
store volatile %struct.ScmObj* %args85947$ae62260$2, %struct.ScmObj** %stackaddr$prim88812, align 8
%clofunc88813 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae62260)
musttail call tailcc void %clofunc88813(%struct.ScmObj* %ae62260, %struct.ScmObj* %args85947$ae62260$2)
ret void
falsebranch$cmp88807:
%stackaddr$makeclosure88814 = alloca %struct.ScmObj*, align 8
%fptrToInt88815 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae62319 to i64
%ae62319 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88815)
store volatile %struct.ScmObj* %ae62319, %struct.ScmObj** %stackaddr$makeclosure88814, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae62319, %struct.ScmObj* %x40229, i64 0)
%ae62320 = call %struct.ScmObj* @const_init_int(i64 0)
%ae62321 = call %struct.ScmObj* @const_init_int(i64 9)
%args85956$ae62319$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88816 = alloca %struct.ScmObj*, align 8
%args85956$ae62319$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62321, %struct.ScmObj* %args85956$ae62319$0)
store volatile %struct.ScmObj* %args85956$ae62319$1, %struct.ScmObj** %stackaddr$prim88816, align 8
%stackaddr$prim88817 = alloca %struct.ScmObj*, align 8
%args85956$ae62319$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62320, %struct.ScmObj* %args85956$ae62319$1)
store volatile %struct.ScmObj* %args85956$ae62319$2, %struct.ScmObj** %stackaddr$prim88817, align 8
%clofunc88818 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae62319)
musttail call tailcc void %clofunc88818(%struct.ScmObj* %ae62319, %struct.ScmObj* %args85956$ae62319$2)
ret void
}

define tailcc void @proc_clo$ae62260(%struct.ScmObj* %env$ae62260,%struct.ScmObj* %current_45args85939) {
%stackaddr$env-ref88819 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae62260, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88819
%stackaddr$prim88820 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85939)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88820, align 8
%stackaddr$prim88821 = alloca %struct.ScmObj*, align 8
%current_45args85940 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85939)
store volatile %struct.ScmObj* %current_45args85940, %struct.ScmObj** %stackaddr$prim88821, align 8
%stackaddr$prim88822 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85940)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88822, align 8
%ae62267 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88823 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae62267)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88823, align 8
%stackaddr$makeclosure88824 = alloca %struct.ScmObj*, align 8
%fptrToInt88825 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae62268 to i64
%ae62268 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88825)
store volatile %struct.ScmObj* %ae62268, %struct.ScmObj** %stackaddr$makeclosure88824, align 8
%ae62269 = call %struct.ScmObj* @const_init_int(i64 0)
%args85946$ae62268$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88826 = alloca %struct.ScmObj*, align 8
%args85946$ae62268$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85946$ae62268$0)
store volatile %struct.ScmObj* %args85946$ae62268$1, %struct.ScmObj** %stackaddr$prim88826, align 8
%stackaddr$prim88827 = alloca %struct.ScmObj*, align 8
%args85946$ae62268$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62269, %struct.ScmObj* %args85946$ae62268$1)
store volatile %struct.ScmObj* %args85946$ae62268$2, %struct.ScmObj** %stackaddr$prim88827, align 8
%clofunc88828 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae62268)
musttail call tailcc void %clofunc88828(%struct.ScmObj* %ae62268, %struct.ScmObj* %args85946$ae62268$2)
ret void
}

define tailcc void @proc_clo$ae62268(%struct.ScmObj* %env$ae62268,%struct.ScmObj* %current_45args85942) {
%stackaddr$prim88829 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85942)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88829, align 8
%stackaddr$prim88830 = alloca %struct.ScmObj*, align 8
%current_45args85943 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85942)
store volatile %struct.ScmObj* %current_45args85943, %struct.ScmObj** %stackaddr$prim88830, align 8
%stackaddr$prim88831 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85943)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88831, align 8
%stackaddr$prim88832 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88832, align 8
%args85945$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88833 = alloca %struct.ScmObj*, align 8
%args85945$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85945$k$0)
store volatile %struct.ScmObj* %args85945$k$1, %struct.ScmObj** %stackaddr$prim88833, align 8
%clofunc88834 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88834(%struct.ScmObj* %k, %struct.ScmObj* %args85945$k$1)
ret void
}

define tailcc void @proc_clo$ae62319(%struct.ScmObj* %env$ae62319,%struct.ScmObj* %current_45args85948) {
%stackaddr$env-ref88835 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae62319, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88835
%stackaddr$prim88836 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85948)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88836, align 8
%stackaddr$prim88837 = alloca %struct.ScmObj*, align 8
%current_45args85949 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85948)
store volatile %struct.ScmObj* %current_45args85949, %struct.ScmObj** %stackaddr$prim88837, align 8
%stackaddr$prim88838 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85949)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88838, align 8
%ae62329 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88839 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae62329)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88839, align 8
%stackaddr$makeclosure88840 = alloca %struct.ScmObj*, align 8
%fptrToInt88841 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae62330 to i64
%ae62330 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88841)
store volatile %struct.ScmObj* %ae62330, %struct.ScmObj** %stackaddr$makeclosure88840, align 8
%ae62331 = call %struct.ScmObj* @const_init_int(i64 0)
%args85955$ae62330$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88842 = alloca %struct.ScmObj*, align 8
%args85955$ae62330$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85955$ae62330$0)
store volatile %struct.ScmObj* %args85955$ae62330$1, %struct.ScmObj** %stackaddr$prim88842, align 8
%stackaddr$prim88843 = alloca %struct.ScmObj*, align 8
%args85955$ae62330$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae62331, %struct.ScmObj* %args85955$ae62330$1)
store volatile %struct.ScmObj* %args85955$ae62330$2, %struct.ScmObj** %stackaddr$prim88843, align 8
%clofunc88844 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae62330)
musttail call tailcc void %clofunc88844(%struct.ScmObj* %ae62330, %struct.ScmObj* %args85955$ae62330$2)
ret void
}

define tailcc void @proc_clo$ae62330(%struct.ScmObj* %env$ae62330,%struct.ScmObj* %current_45args85951) {
%stackaddr$prim88845 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85951)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88845, align 8
%stackaddr$prim88846 = alloca %struct.ScmObj*, align 8
%current_45args85952 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85951)
store volatile %struct.ScmObj* %current_45args85952, %struct.ScmObj** %stackaddr$prim88846, align 8
%stackaddr$prim88847 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85952)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88847, align 8
%stackaddr$prim88848 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88848, align 8
%args85954$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88849 = alloca %struct.ScmObj*, align 8
%args85954$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85954$k$0)
store volatile %struct.ScmObj* %args85954$k$1, %struct.ScmObj** %stackaddr$prim88849, align 8
%clofunc88850 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88850(%struct.ScmObj* %k, %struct.ScmObj* %args85954$k$1)
ret void
}

define tailcc void @proc_clo$ae63590(%struct.ScmObj* %env$ae63590,%struct.ScmObj* %current_45args85960) {
%stackaddr$env-ref88851 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae63590, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88851
%stackaddr$prim88852 = alloca %struct.ScmObj*, align 8
%_95k40414 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85960)
store volatile %struct.ScmObj* %_95k40414, %struct.ScmObj** %stackaddr$prim88852, align 8
%stackaddr$prim88853 = alloca %struct.ScmObj*, align 8
%current_45args85961 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85960)
store volatile %struct.ScmObj* %current_45args85961, %struct.ScmObj** %stackaddr$prim88853, align 8
%stackaddr$prim88854 = alloca %struct.ScmObj*, align 8
%t4010540233 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85961)
store volatile %struct.ScmObj* %t4010540233, %struct.ScmObj** %stackaddr$prim88854, align 8
%ae63596 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88855 = call i64 @is_truthy_value(%struct.ScmObj* %ae63596)
%cmp$cmp88855 = icmp eq i64 %truthy$cmp88855, 1
br i1 %cmp$cmp88855, label %truebranch$cmp88855, label %falsebranch$cmp88855
truebranch$cmp88855:
%stackaddr$prim88856 = alloca %struct.ScmObj*, align 8
%cpsprim40421 = call %struct.ScmObj* @prim_void()
store volatile %struct.ScmObj* %cpsprim40421, %struct.ScmObj** %stackaddr$prim88856, align 8
%stackaddr$makeclosure88857 = alloca %struct.ScmObj*, align 8
%fptrToInt88858 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63597 to i64
%ae63597 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88858)
store volatile %struct.ScmObj* %ae63597, %struct.ScmObj** %stackaddr$makeclosure88857, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae63597, %struct.ScmObj* %x40229, i64 0)
%ae63598 = call %struct.ScmObj* @const_init_int(i64 0)
%args86010$ae63597$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88859 = alloca %struct.ScmObj*, align 8
%args86010$ae63597$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40421, %struct.ScmObj* %args86010$ae63597$0)
store volatile %struct.ScmObj* %args86010$ae63597$1, %struct.ScmObj** %stackaddr$prim88859, align 8
%stackaddr$prim88860 = alloca %struct.ScmObj*, align 8
%args86010$ae63597$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63598, %struct.ScmObj* %args86010$ae63597$1)
store volatile %struct.ScmObj* %args86010$ae63597$2, %struct.ScmObj** %stackaddr$prim88860, align 8
%clofunc88861 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63597)
musttail call tailcc void %clofunc88861(%struct.ScmObj* %ae63597, %struct.ScmObj* %args86010$ae63597$2)
ret void
falsebranch$cmp88855:
%ae64062 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88862 = alloca %struct.ScmObj*, align 8
%anf_45bind40370 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64062)
store volatile %struct.ScmObj* %anf_45bind40370, %struct.ScmObj** %stackaddr$prim88862, align 8
%ae64064 = call %struct.ScmObj* @const_init_int(i64 2)
%stackaddr$prim88863 = alloca %struct.ScmObj*, align 8
%anf_45bind40371 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %anf_45bind40370, %struct.ScmObj* %ae64064)
store volatile %struct.ScmObj* %anf_45bind40371, %struct.ScmObj** %stackaddr$prim88863, align 8
%ae64066 = call %struct.ScmObj* @const_init_int(i64 7)
%stackaddr$prim88864 = alloca %struct.ScmObj*, align 8
%anf_45bind40372 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40371, %struct.ScmObj* %ae64066)
store volatile %struct.ScmObj* %anf_45bind40372, %struct.ScmObj** %stackaddr$prim88864, align 8
%ae64068 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88865 = alloca %struct.ScmObj*, align 8
%cpsprim40422 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64068, %struct.ScmObj* %anf_45bind40372)
store volatile %struct.ScmObj* %cpsprim40422, %struct.ScmObj** %stackaddr$prim88865, align 8
%stackaddr$makeclosure88866 = alloca %struct.ScmObj*, align 8
%fptrToInt88867 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64070 to i64
%ae64070 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88867)
store volatile %struct.ScmObj* %ae64070, %struct.ScmObj** %stackaddr$makeclosure88866, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae64070, %struct.ScmObj* %x40229, i64 0)
%ae64071 = call %struct.ScmObj* @const_init_int(i64 0)
%args86058$ae64070$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88868 = alloca %struct.ScmObj*, align 8
%args86058$ae64070$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40422, %struct.ScmObj* %args86058$ae64070$0)
store volatile %struct.ScmObj* %args86058$ae64070$1, %struct.ScmObj** %stackaddr$prim88868, align 8
%stackaddr$prim88869 = alloca %struct.ScmObj*, align 8
%args86058$ae64070$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64071, %struct.ScmObj* %args86058$ae64070$1)
store volatile %struct.ScmObj* %args86058$ae64070$2, %struct.ScmObj** %stackaddr$prim88869, align 8
%clofunc88870 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64070)
musttail call tailcc void %clofunc88870(%struct.ScmObj* %ae64070, %struct.ScmObj* %args86058$ae64070$2)
ret void
}

define tailcc void @proc_clo$ae63597(%struct.ScmObj* %env$ae63597,%struct.ScmObj* %current_45args85963) {
%stackaddr$env-ref88871 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae63597, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88871
%stackaddr$prim88872 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85963)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim88872, align 8
%stackaddr$prim88873 = alloca %struct.ScmObj*, align 8
%current_45args85964 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85963)
store volatile %struct.ScmObj* %current_45args85964, %struct.ScmObj** %stackaddr$prim88873, align 8
%stackaddr$prim88874 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85964)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim88874, align 8
%ae63604 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88875 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae63604)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim88875, align 8
%truthy$cmp88876 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp88876 = icmp eq i64 %truthy$cmp88876, 1
br i1 %cmp$cmp88876, label %truebranch$cmp88876, label %falsebranch$cmp88876
truebranch$cmp88876:
%ae63607 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88877 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae63607)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim88877, align 8
%ae63609 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88878 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae63609)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim88878, align 8
%stackaddr$prim88879 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim88879, align 8
%ae63613 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88880 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae63613, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim88880, align 8
%stackaddr$makeclosure88881 = alloca %struct.ScmObj*, align 8
%fptrToInt88882 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63615 to i64
%ae63615 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88882)
store volatile %struct.ScmObj* %ae63615, %struct.ScmObj** %stackaddr$makeclosure88881, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae63615, %struct.ScmObj* %x40229, i64 0)
%ae63616 = call %struct.ScmObj* @const_init_int(i64 0)
%args85987$ae63615$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88883 = alloca %struct.ScmObj*, align 8
%args85987$ae63615$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args85987$ae63615$0)
store volatile %struct.ScmObj* %args85987$ae63615$1, %struct.ScmObj** %stackaddr$prim88883, align 8
%stackaddr$prim88884 = alloca %struct.ScmObj*, align 8
%args85987$ae63615$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63616, %struct.ScmObj* %args85987$ae63615$1)
store volatile %struct.ScmObj* %args85987$ae63615$2, %struct.ScmObj** %stackaddr$prim88884, align 8
%clofunc88885 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63615)
musttail call tailcc void %clofunc88885(%struct.ScmObj* %ae63615, %struct.ScmObj* %args85987$ae63615$2)
ret void
falsebranch$cmp88876:
%stackaddr$makeclosure88886 = alloca %struct.ScmObj*, align 8
%fptrToInt88887 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63853 to i64
%ae63853 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88887)
store volatile %struct.ScmObj* %ae63853, %struct.ScmObj** %stackaddr$makeclosure88886, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae63853, %struct.ScmObj* %x40229, i64 0)
%ae63854 = call %struct.ScmObj* @const_init_int(i64 0)
%ae63855 = call %struct.ScmObj* @const_init_int(i64 7)
%args86009$ae63853$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88888 = alloca %struct.ScmObj*, align 8
%args86009$ae63853$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63855, %struct.ScmObj* %args86009$ae63853$0)
store volatile %struct.ScmObj* %args86009$ae63853$1, %struct.ScmObj** %stackaddr$prim88888, align 8
%stackaddr$prim88889 = alloca %struct.ScmObj*, align 8
%args86009$ae63853$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63854, %struct.ScmObj* %args86009$ae63853$1)
store volatile %struct.ScmObj* %args86009$ae63853$2, %struct.ScmObj** %stackaddr$prim88889, align 8
%clofunc88890 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63853)
musttail call tailcc void %clofunc88890(%struct.ScmObj* %ae63853, %struct.ScmObj* %args86009$ae63853$2)
ret void
}

define tailcc void @proc_clo$ae63615(%struct.ScmObj* %env$ae63615,%struct.ScmObj* %current_45args85966) {
%stackaddr$env-ref88891 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae63615, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88891
%stackaddr$prim88892 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85966)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88892, align 8
%stackaddr$prim88893 = alloca %struct.ScmObj*, align 8
%current_45args85967 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85966)
store volatile %struct.ScmObj* %current_45args85967, %struct.ScmObj** %stackaddr$prim88893, align 8
%stackaddr$prim88894 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85967)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88894, align 8
%ae63621 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88895 = call i64 @is_truthy_value(%struct.ScmObj* %ae63621)
%cmp$cmp88895 = icmp eq i64 %truthy$cmp88895, 1
br i1 %cmp$cmp88895, label %truebranch$cmp88895, label %falsebranch$cmp88895
truebranch$cmp88895:
%ae63623 = call %struct.ScmObj* @const_init_int(i64 0)
%ae63624 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88896 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae63623, %struct.ScmObj* %ae63624)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88896, align 8
%stackaddr$makeclosure88897 = alloca %struct.ScmObj*, align 8
%fptrToInt88898 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63625 to i64
%ae63625 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88898)
store volatile %struct.ScmObj* %ae63625, %struct.ScmObj** %stackaddr$makeclosure88897, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae63625, %struct.ScmObj* %x40229, i64 0)
%ae63626 = call %struct.ScmObj* @const_init_int(i64 0)
%args85977$ae63625$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88899 = alloca %struct.ScmObj*, align 8
%args85977$ae63625$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85977$ae63625$0)
store volatile %struct.ScmObj* %args85977$ae63625$1, %struct.ScmObj** %stackaddr$prim88899, align 8
%stackaddr$prim88900 = alloca %struct.ScmObj*, align 8
%args85977$ae63625$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63626, %struct.ScmObj* %args85977$ae63625$1)
store volatile %struct.ScmObj* %args85977$ae63625$2, %struct.ScmObj** %stackaddr$prim88900, align 8
%clofunc88901 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63625)
musttail call tailcc void %clofunc88901(%struct.ScmObj* %ae63625, %struct.ScmObj* %args85977$ae63625$2)
ret void
falsebranch$cmp88895:
%stackaddr$makeclosure88902 = alloca %struct.ScmObj*, align 8
%fptrToInt88903 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63684 to i64
%ae63684 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88903)
store volatile %struct.ScmObj* %ae63684, %struct.ScmObj** %stackaddr$makeclosure88902, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae63684, %struct.ScmObj* %x40229, i64 0)
%ae63685 = call %struct.ScmObj* @const_init_int(i64 0)
%ae63686 = call %struct.ScmObj* @const_init_int(i64 9)
%args85986$ae63684$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88904 = alloca %struct.ScmObj*, align 8
%args85986$ae63684$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63686, %struct.ScmObj* %args85986$ae63684$0)
store volatile %struct.ScmObj* %args85986$ae63684$1, %struct.ScmObj** %stackaddr$prim88904, align 8
%stackaddr$prim88905 = alloca %struct.ScmObj*, align 8
%args85986$ae63684$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63685, %struct.ScmObj* %args85986$ae63684$1)
store volatile %struct.ScmObj* %args85986$ae63684$2, %struct.ScmObj** %stackaddr$prim88905, align 8
%clofunc88906 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63684)
musttail call tailcc void %clofunc88906(%struct.ScmObj* %ae63684, %struct.ScmObj* %args85986$ae63684$2)
ret void
}

define tailcc void @proc_clo$ae63625(%struct.ScmObj* %env$ae63625,%struct.ScmObj* %current_45args85969) {
%stackaddr$env-ref88907 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae63625, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88907
%stackaddr$prim88908 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85969)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88908, align 8
%stackaddr$prim88909 = alloca %struct.ScmObj*, align 8
%current_45args85970 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85969)
store volatile %struct.ScmObj* %current_45args85970, %struct.ScmObj** %stackaddr$prim88909, align 8
%stackaddr$prim88910 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85970)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88910, align 8
%ae63632 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88911 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae63632)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88911, align 8
%stackaddr$makeclosure88912 = alloca %struct.ScmObj*, align 8
%fptrToInt88913 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63633 to i64
%ae63633 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88913)
store volatile %struct.ScmObj* %ae63633, %struct.ScmObj** %stackaddr$makeclosure88912, align 8
%ae63634 = call %struct.ScmObj* @const_init_int(i64 0)
%args85976$ae63633$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88914 = alloca %struct.ScmObj*, align 8
%args85976$ae63633$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85976$ae63633$0)
store volatile %struct.ScmObj* %args85976$ae63633$1, %struct.ScmObj** %stackaddr$prim88914, align 8
%stackaddr$prim88915 = alloca %struct.ScmObj*, align 8
%args85976$ae63633$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63634, %struct.ScmObj* %args85976$ae63633$1)
store volatile %struct.ScmObj* %args85976$ae63633$2, %struct.ScmObj** %stackaddr$prim88915, align 8
%clofunc88916 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63633)
musttail call tailcc void %clofunc88916(%struct.ScmObj* %ae63633, %struct.ScmObj* %args85976$ae63633$2)
ret void
}

define tailcc void @proc_clo$ae63633(%struct.ScmObj* %env$ae63633,%struct.ScmObj* %current_45args85972) {
%stackaddr$prim88917 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85972)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88917, align 8
%stackaddr$prim88918 = alloca %struct.ScmObj*, align 8
%current_45args85973 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85972)
store volatile %struct.ScmObj* %current_45args85973, %struct.ScmObj** %stackaddr$prim88918, align 8
%stackaddr$prim88919 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85973)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88919, align 8
%stackaddr$prim88920 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88920, align 8
%args85975$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88921 = alloca %struct.ScmObj*, align 8
%args85975$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85975$k$0)
store volatile %struct.ScmObj* %args85975$k$1, %struct.ScmObj** %stackaddr$prim88921, align 8
%clofunc88922 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88922(%struct.ScmObj* %k, %struct.ScmObj* %args85975$k$1)
ret void
}

define tailcc void @proc_clo$ae63684(%struct.ScmObj* %env$ae63684,%struct.ScmObj* %current_45args85978) {
%stackaddr$env-ref88923 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae63684, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88923
%stackaddr$prim88924 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85978)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88924, align 8
%stackaddr$prim88925 = alloca %struct.ScmObj*, align 8
%current_45args85979 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85978)
store volatile %struct.ScmObj* %current_45args85979, %struct.ScmObj** %stackaddr$prim88925, align 8
%stackaddr$prim88926 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85979)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88926, align 8
%ae63694 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88927 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae63694)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88927, align 8
%stackaddr$makeclosure88928 = alloca %struct.ScmObj*, align 8
%fptrToInt88929 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63695 to i64
%ae63695 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88929)
store volatile %struct.ScmObj* %ae63695, %struct.ScmObj** %stackaddr$makeclosure88928, align 8
%ae63696 = call %struct.ScmObj* @const_init_int(i64 0)
%args85985$ae63695$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88930 = alloca %struct.ScmObj*, align 8
%args85985$ae63695$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85985$ae63695$0)
store volatile %struct.ScmObj* %args85985$ae63695$1, %struct.ScmObj** %stackaddr$prim88930, align 8
%stackaddr$prim88931 = alloca %struct.ScmObj*, align 8
%args85985$ae63695$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63696, %struct.ScmObj* %args85985$ae63695$1)
store volatile %struct.ScmObj* %args85985$ae63695$2, %struct.ScmObj** %stackaddr$prim88931, align 8
%clofunc88932 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63695)
musttail call tailcc void %clofunc88932(%struct.ScmObj* %ae63695, %struct.ScmObj* %args85985$ae63695$2)
ret void
}

define tailcc void @proc_clo$ae63695(%struct.ScmObj* %env$ae63695,%struct.ScmObj* %current_45args85981) {
%stackaddr$prim88933 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85981)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88933, align 8
%stackaddr$prim88934 = alloca %struct.ScmObj*, align 8
%current_45args85982 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85981)
store volatile %struct.ScmObj* %current_45args85982, %struct.ScmObj** %stackaddr$prim88934, align 8
%stackaddr$prim88935 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85982)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88935, align 8
%stackaddr$prim88936 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88936, align 8
%args85984$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88937 = alloca %struct.ScmObj*, align 8
%args85984$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85984$k$0)
store volatile %struct.ScmObj* %args85984$k$1, %struct.ScmObj** %stackaddr$prim88937, align 8
%clofunc88938 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88938(%struct.ScmObj* %k, %struct.ScmObj* %args85984$k$1)
ret void
}

define tailcc void @proc_clo$ae63853(%struct.ScmObj* %env$ae63853,%struct.ScmObj* %current_45args85988) {
%stackaddr$env-ref88939 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae63853, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88939
%stackaddr$prim88940 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85988)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim88940, align 8
%stackaddr$prim88941 = alloca %struct.ScmObj*, align 8
%current_45args85989 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85988)
store volatile %struct.ScmObj* %current_45args85989, %struct.ScmObj** %stackaddr$prim88941, align 8
%stackaddr$prim88942 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85989)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim88942, align 8
%ae63862 = call %struct.ScmObj* @const_init_false()
%truthy$cmp88943 = call i64 @is_truthy_value(%struct.ScmObj* %ae63862)
%cmp$cmp88943 = icmp eq i64 %truthy$cmp88943, 1
br i1 %cmp$cmp88943, label %truebranch$cmp88943, label %falsebranch$cmp88943
truebranch$cmp88943:
%ae63864 = call %struct.ScmObj* @const_init_int(i64 0)
%ae63865 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88944 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae63864, %struct.ScmObj* %ae63865)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim88944, align 8
%stackaddr$makeclosure88945 = alloca %struct.ScmObj*, align 8
%fptrToInt88946 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63866 to i64
%ae63866 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88946)
store volatile %struct.ScmObj* %ae63866, %struct.ScmObj** %stackaddr$makeclosure88945, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae63866, %struct.ScmObj* %x40229, i64 0)
%ae63867 = call %struct.ScmObj* @const_init_int(i64 0)
%args85999$ae63866$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88947 = alloca %struct.ScmObj*, align 8
%args85999$ae63866$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args85999$ae63866$0)
store volatile %struct.ScmObj* %args85999$ae63866$1, %struct.ScmObj** %stackaddr$prim88947, align 8
%stackaddr$prim88948 = alloca %struct.ScmObj*, align 8
%args85999$ae63866$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63867, %struct.ScmObj* %args85999$ae63866$1)
store volatile %struct.ScmObj* %args85999$ae63866$2, %struct.ScmObj** %stackaddr$prim88948, align 8
%clofunc88949 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63866)
musttail call tailcc void %clofunc88949(%struct.ScmObj* %ae63866, %struct.ScmObj* %args85999$ae63866$2)
ret void
falsebranch$cmp88943:
%stackaddr$makeclosure88950 = alloca %struct.ScmObj*, align 8
%fptrToInt88951 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63925 to i64
%ae63925 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88951)
store volatile %struct.ScmObj* %ae63925, %struct.ScmObj** %stackaddr$makeclosure88950, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae63925, %struct.ScmObj* %x40229, i64 0)
%ae63926 = call %struct.ScmObj* @const_init_int(i64 0)
%ae63927 = call %struct.ScmObj* @const_init_int(i64 9)
%args86008$ae63925$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88952 = alloca %struct.ScmObj*, align 8
%args86008$ae63925$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63927, %struct.ScmObj* %args86008$ae63925$0)
store volatile %struct.ScmObj* %args86008$ae63925$1, %struct.ScmObj** %stackaddr$prim88952, align 8
%stackaddr$prim88953 = alloca %struct.ScmObj*, align 8
%args86008$ae63925$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63926, %struct.ScmObj* %args86008$ae63925$1)
store volatile %struct.ScmObj* %args86008$ae63925$2, %struct.ScmObj** %stackaddr$prim88953, align 8
%clofunc88954 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63925)
musttail call tailcc void %clofunc88954(%struct.ScmObj* %ae63925, %struct.ScmObj* %args86008$ae63925$2)
ret void
}

define tailcc void @proc_clo$ae63866(%struct.ScmObj* %env$ae63866,%struct.ScmObj* %current_45args85991) {
%stackaddr$env-ref88955 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae63866, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88955
%stackaddr$prim88956 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85991)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88956, align 8
%stackaddr$prim88957 = alloca %struct.ScmObj*, align 8
%current_45args85992 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85991)
store volatile %struct.ScmObj* %current_45args85992, %struct.ScmObj** %stackaddr$prim88957, align 8
%stackaddr$prim88958 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85992)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88958, align 8
%ae63873 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88959 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae63873)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88959, align 8
%stackaddr$makeclosure88960 = alloca %struct.ScmObj*, align 8
%fptrToInt88961 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63874 to i64
%ae63874 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88961)
store volatile %struct.ScmObj* %ae63874, %struct.ScmObj** %stackaddr$makeclosure88960, align 8
%ae63875 = call %struct.ScmObj* @const_init_int(i64 0)
%args85998$ae63874$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88962 = alloca %struct.ScmObj*, align 8
%args85998$ae63874$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args85998$ae63874$0)
store volatile %struct.ScmObj* %args85998$ae63874$1, %struct.ScmObj** %stackaddr$prim88962, align 8
%stackaddr$prim88963 = alloca %struct.ScmObj*, align 8
%args85998$ae63874$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63875, %struct.ScmObj* %args85998$ae63874$1)
store volatile %struct.ScmObj* %args85998$ae63874$2, %struct.ScmObj** %stackaddr$prim88963, align 8
%clofunc88964 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63874)
musttail call tailcc void %clofunc88964(%struct.ScmObj* %ae63874, %struct.ScmObj* %args85998$ae63874$2)
ret void
}

define tailcc void @proc_clo$ae63874(%struct.ScmObj* %env$ae63874,%struct.ScmObj* %current_45args85994) {
%stackaddr$prim88965 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85994)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88965, align 8
%stackaddr$prim88966 = alloca %struct.ScmObj*, align 8
%current_45args85995 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args85994)
store volatile %struct.ScmObj* %current_45args85995, %struct.ScmObj** %stackaddr$prim88966, align 8
%stackaddr$prim88967 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args85995)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88967, align 8
%stackaddr$prim88968 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88968, align 8
%args85997$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88969 = alloca %struct.ScmObj*, align 8
%args85997$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args85997$k$0)
store volatile %struct.ScmObj* %args85997$k$1, %struct.ScmObj** %stackaddr$prim88969, align 8
%clofunc88970 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88970(%struct.ScmObj* %k, %struct.ScmObj* %args85997$k$1)
ret void
}

define tailcc void @proc_clo$ae63925(%struct.ScmObj* %env$ae63925,%struct.ScmObj* %current_45args86000) {
%stackaddr$env-ref88971 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae63925, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88971
%stackaddr$prim88972 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86000)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim88972, align 8
%stackaddr$prim88973 = alloca %struct.ScmObj*, align 8
%current_45args86001 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86000)
store volatile %struct.ScmObj* %current_45args86001, %struct.ScmObj** %stackaddr$prim88973, align 8
%stackaddr$prim88974 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86001)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim88974, align 8
%ae63935 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88975 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae63935)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim88975, align 8
%stackaddr$makeclosure88976 = alloca %struct.ScmObj*, align 8
%fptrToInt88977 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae63936 to i64
%ae63936 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt88977)
store volatile %struct.ScmObj* %ae63936, %struct.ScmObj** %stackaddr$makeclosure88976, align 8
%ae63937 = call %struct.ScmObj* @const_init_int(i64 0)
%args86007$ae63936$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88978 = alloca %struct.ScmObj*, align 8
%args86007$ae63936$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args86007$ae63936$0)
store volatile %struct.ScmObj* %args86007$ae63936$1, %struct.ScmObj** %stackaddr$prim88978, align 8
%stackaddr$prim88979 = alloca %struct.ScmObj*, align 8
%args86007$ae63936$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae63937, %struct.ScmObj* %args86007$ae63936$1)
store volatile %struct.ScmObj* %args86007$ae63936$2, %struct.ScmObj** %stackaddr$prim88979, align 8
%clofunc88980 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae63936)
musttail call tailcc void %clofunc88980(%struct.ScmObj* %ae63936, %struct.ScmObj* %args86007$ae63936$2)
ret void
}

define tailcc void @proc_clo$ae63936(%struct.ScmObj* %env$ae63936,%struct.ScmObj* %current_45args86003) {
%stackaddr$prim88981 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86003)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim88981, align 8
%stackaddr$prim88982 = alloca %struct.ScmObj*, align 8
%current_45args86004 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86003)
store volatile %struct.ScmObj* %current_45args86004, %struct.ScmObj** %stackaddr$prim88982, align 8
%stackaddr$prim88983 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86004)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim88983, align 8
%stackaddr$prim88984 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim88984, align 8
%args86006$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88985 = alloca %struct.ScmObj*, align 8
%args86006$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args86006$k$0)
store volatile %struct.ScmObj* %args86006$k$1, %struct.ScmObj** %stackaddr$prim88985, align 8
%clofunc88986 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc88986(%struct.ScmObj* %k, %struct.ScmObj* %args86006$k$1)
ret void
}

define tailcc void @proc_clo$ae64070(%struct.ScmObj* %env$ae64070,%struct.ScmObj* %current_45args86011) {
%stackaddr$env-ref88987 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae64070, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref88987
%stackaddr$prim88988 = alloca %struct.ScmObj*, align 8
%_95k40415 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86011)
store volatile %struct.ScmObj* %_95k40415, %struct.ScmObj** %stackaddr$prim88988, align 8
%stackaddr$prim88989 = alloca %struct.ScmObj*, align 8
%current_45args86012 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86011)
store volatile %struct.ScmObj* %current_45args86012, %struct.ScmObj** %stackaddr$prim88989, align 8
%stackaddr$prim88990 = alloca %struct.ScmObj*, align 8
%t4010640234 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86012)
store volatile %struct.ScmObj* %t4010640234, %struct.ScmObj** %stackaddr$prim88990, align 8
%ae64077 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88991 = alloca %struct.ScmObj*, align 8
%anf_45bind40373 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64077)
store volatile %struct.ScmObj* %anf_45bind40373, %struct.ScmObj** %stackaddr$prim88991, align 8
%truthy$cmp88992 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40373)
%cmp$cmp88992 = icmp eq i64 %truthy$cmp88992, 1
br i1 %cmp$cmp88992, label %truebranch$cmp88992, label %falsebranch$cmp88992
truebranch$cmp88992:
%ae64080 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88993 = alloca %struct.ScmObj*, align 8
%anf_45bind40374 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64080)
store volatile %struct.ScmObj* %anf_45bind40374, %struct.ScmObj** %stackaddr$prim88993, align 8
%ae64082 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88994 = alloca %struct.ScmObj*, align 8
%anf_45bind40375 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64082)
store volatile %struct.ScmObj* %anf_45bind40375, %struct.ScmObj** %stackaddr$prim88994, align 8
%stackaddr$prim88995 = alloca %struct.ScmObj*, align 8
%anf_45bind40376 = call %struct.ScmObj* @prim__42(%struct.ScmObj* %anf_45bind40374, %struct.ScmObj* %anf_45bind40375)
store volatile %struct.ScmObj* %anf_45bind40376, %struct.ScmObj** %stackaddr$prim88995, align 8
%ae64086 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim88996 = alloca %struct.ScmObj*, align 8
%cpsprim40420 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64086, %struct.ScmObj* %anf_45bind40376)
store volatile %struct.ScmObj* %cpsprim40420, %struct.ScmObj** %stackaddr$prim88996, align 8
%stackaddr$makeclosure88997 = alloca %struct.ScmObj*, align 8
%fptrToInt88998 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64088 to i64
%ae64088 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt88998)
store volatile %struct.ScmObj* %ae64088, %struct.ScmObj** %stackaddr$makeclosure88997, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae64088, %struct.ScmObj* %x40229, i64 0)
%ae64089 = call %struct.ScmObj* @const_init_int(i64 0)
%args86035$ae64088$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim88999 = alloca %struct.ScmObj*, align 8
%args86035$ae64088$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40420, %struct.ScmObj* %args86035$ae64088$0)
store volatile %struct.ScmObj* %args86035$ae64088$1, %struct.ScmObj** %stackaddr$prim88999, align 8
%stackaddr$prim89000 = alloca %struct.ScmObj*, align 8
%args86035$ae64088$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64089, %struct.ScmObj* %args86035$ae64088$1)
store volatile %struct.ScmObj* %args86035$ae64088$2, %struct.ScmObj** %stackaddr$prim89000, align 8
%clofunc89001 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64088)
musttail call tailcc void %clofunc89001(%struct.ScmObj* %ae64088, %struct.ScmObj* %args86035$ae64088$2)
ret void
falsebranch$cmp88992:
%stackaddr$makeclosure89002 = alloca %struct.ScmObj*, align 8
%fptrToInt89003 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64326 to i64
%ae64326 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt89003)
store volatile %struct.ScmObj* %ae64326, %struct.ScmObj** %stackaddr$makeclosure89002, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae64326, %struct.ScmObj* %x40229, i64 0)
%ae64327 = call %struct.ScmObj* @const_init_int(i64 0)
%ae64328 = call %struct.ScmObj* @const_init_int(i64 7)
%args86057$ae64326$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89004 = alloca %struct.ScmObj*, align 8
%args86057$ae64326$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64328, %struct.ScmObj* %args86057$ae64326$0)
store volatile %struct.ScmObj* %args86057$ae64326$1, %struct.ScmObj** %stackaddr$prim89004, align 8
%stackaddr$prim89005 = alloca %struct.ScmObj*, align 8
%args86057$ae64326$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64327, %struct.ScmObj* %args86057$ae64326$1)
store volatile %struct.ScmObj* %args86057$ae64326$2, %struct.ScmObj** %stackaddr$prim89005, align 8
%clofunc89006 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64326)
musttail call tailcc void %clofunc89006(%struct.ScmObj* %ae64326, %struct.ScmObj* %args86057$ae64326$2)
ret void
}

define tailcc void @proc_clo$ae64088(%struct.ScmObj* %env$ae64088,%struct.ScmObj* %current_45args86014) {
%stackaddr$env-ref89007 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae64088, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref89007
%stackaddr$prim89008 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86014)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim89008, align 8
%stackaddr$prim89009 = alloca %struct.ScmObj*, align 8
%current_45args86015 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86014)
store volatile %struct.ScmObj* %current_45args86015, %struct.ScmObj** %stackaddr$prim89009, align 8
%stackaddr$prim89010 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86015)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim89010, align 8
%ae64094 = call %struct.ScmObj* @const_init_false()
%truthy$cmp89011 = call i64 @is_truthy_value(%struct.ScmObj* %ae64094)
%cmp$cmp89011 = icmp eq i64 %truthy$cmp89011, 1
br i1 %cmp$cmp89011, label %truebranch$cmp89011, label %falsebranch$cmp89011
truebranch$cmp89011:
%ae64096 = call %struct.ScmObj* @const_init_int(i64 0)
%ae64097 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89012 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64096, %struct.ScmObj* %ae64097)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim89012, align 8
%stackaddr$makeclosure89013 = alloca %struct.ScmObj*, align 8
%fptrToInt89014 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64098 to i64
%ae64098 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt89014)
store volatile %struct.ScmObj* %ae64098, %struct.ScmObj** %stackaddr$makeclosure89013, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae64098, %struct.ScmObj* %x40229, i64 0)
%ae64099 = call %struct.ScmObj* @const_init_int(i64 0)
%args86025$ae64098$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89015 = alloca %struct.ScmObj*, align 8
%args86025$ae64098$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args86025$ae64098$0)
store volatile %struct.ScmObj* %args86025$ae64098$1, %struct.ScmObj** %stackaddr$prim89015, align 8
%stackaddr$prim89016 = alloca %struct.ScmObj*, align 8
%args86025$ae64098$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64099, %struct.ScmObj* %args86025$ae64098$1)
store volatile %struct.ScmObj* %args86025$ae64098$2, %struct.ScmObj** %stackaddr$prim89016, align 8
%clofunc89017 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64098)
musttail call tailcc void %clofunc89017(%struct.ScmObj* %ae64098, %struct.ScmObj* %args86025$ae64098$2)
ret void
falsebranch$cmp89011:
%stackaddr$makeclosure89018 = alloca %struct.ScmObj*, align 8
%fptrToInt89019 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64157 to i64
%ae64157 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt89019)
store volatile %struct.ScmObj* %ae64157, %struct.ScmObj** %stackaddr$makeclosure89018, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae64157, %struct.ScmObj* %x40229, i64 0)
%ae64158 = call %struct.ScmObj* @const_init_int(i64 0)
%ae64159 = call %struct.ScmObj* @const_init_int(i64 9)
%args86034$ae64157$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89020 = alloca %struct.ScmObj*, align 8
%args86034$ae64157$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64159, %struct.ScmObj* %args86034$ae64157$0)
store volatile %struct.ScmObj* %args86034$ae64157$1, %struct.ScmObj** %stackaddr$prim89020, align 8
%stackaddr$prim89021 = alloca %struct.ScmObj*, align 8
%args86034$ae64157$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64158, %struct.ScmObj* %args86034$ae64157$1)
store volatile %struct.ScmObj* %args86034$ae64157$2, %struct.ScmObj** %stackaddr$prim89021, align 8
%clofunc89022 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64157)
musttail call tailcc void %clofunc89022(%struct.ScmObj* %ae64157, %struct.ScmObj* %args86034$ae64157$2)
ret void
}

define tailcc void @proc_clo$ae64098(%struct.ScmObj* %env$ae64098,%struct.ScmObj* %current_45args86017) {
%stackaddr$env-ref89023 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae64098, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref89023
%stackaddr$prim89024 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86017)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim89024, align 8
%stackaddr$prim89025 = alloca %struct.ScmObj*, align 8
%current_45args86018 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86017)
store volatile %struct.ScmObj* %current_45args86018, %struct.ScmObj** %stackaddr$prim89025, align 8
%stackaddr$prim89026 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86018)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim89026, align 8
%ae64105 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89027 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64105)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim89027, align 8
%stackaddr$makeclosure89028 = alloca %struct.ScmObj*, align 8
%fptrToInt89029 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64106 to i64
%ae64106 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89029)
store volatile %struct.ScmObj* %ae64106, %struct.ScmObj** %stackaddr$makeclosure89028, align 8
%ae64107 = call %struct.ScmObj* @const_init_int(i64 0)
%args86024$ae64106$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89030 = alloca %struct.ScmObj*, align 8
%args86024$ae64106$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args86024$ae64106$0)
store volatile %struct.ScmObj* %args86024$ae64106$1, %struct.ScmObj** %stackaddr$prim89030, align 8
%stackaddr$prim89031 = alloca %struct.ScmObj*, align 8
%args86024$ae64106$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64107, %struct.ScmObj* %args86024$ae64106$1)
store volatile %struct.ScmObj* %args86024$ae64106$2, %struct.ScmObj** %stackaddr$prim89031, align 8
%clofunc89032 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64106)
musttail call tailcc void %clofunc89032(%struct.ScmObj* %ae64106, %struct.ScmObj* %args86024$ae64106$2)
ret void
}

define tailcc void @proc_clo$ae64106(%struct.ScmObj* %env$ae64106,%struct.ScmObj* %current_45args86020) {
%stackaddr$prim89033 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86020)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim89033, align 8
%stackaddr$prim89034 = alloca %struct.ScmObj*, align 8
%current_45args86021 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86020)
store volatile %struct.ScmObj* %current_45args86021, %struct.ScmObj** %stackaddr$prim89034, align 8
%stackaddr$prim89035 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86021)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim89035, align 8
%stackaddr$prim89036 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim89036, align 8
%args86023$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89037 = alloca %struct.ScmObj*, align 8
%args86023$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args86023$k$0)
store volatile %struct.ScmObj* %args86023$k$1, %struct.ScmObj** %stackaddr$prim89037, align 8
%clofunc89038 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc89038(%struct.ScmObj* %k, %struct.ScmObj* %args86023$k$1)
ret void
}

define tailcc void @proc_clo$ae64157(%struct.ScmObj* %env$ae64157,%struct.ScmObj* %current_45args86026) {
%stackaddr$env-ref89039 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae64157, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref89039
%stackaddr$prim89040 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86026)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim89040, align 8
%stackaddr$prim89041 = alloca %struct.ScmObj*, align 8
%current_45args86027 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86026)
store volatile %struct.ScmObj* %current_45args86027, %struct.ScmObj** %stackaddr$prim89041, align 8
%stackaddr$prim89042 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86027)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim89042, align 8
%ae64167 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89043 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64167)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim89043, align 8
%stackaddr$makeclosure89044 = alloca %struct.ScmObj*, align 8
%fptrToInt89045 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64168 to i64
%ae64168 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89045)
store volatile %struct.ScmObj* %ae64168, %struct.ScmObj** %stackaddr$makeclosure89044, align 8
%ae64169 = call %struct.ScmObj* @const_init_int(i64 0)
%args86033$ae64168$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89046 = alloca %struct.ScmObj*, align 8
%args86033$ae64168$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args86033$ae64168$0)
store volatile %struct.ScmObj* %args86033$ae64168$1, %struct.ScmObj** %stackaddr$prim89046, align 8
%stackaddr$prim89047 = alloca %struct.ScmObj*, align 8
%args86033$ae64168$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64169, %struct.ScmObj* %args86033$ae64168$1)
store volatile %struct.ScmObj* %args86033$ae64168$2, %struct.ScmObj** %stackaddr$prim89047, align 8
%clofunc89048 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64168)
musttail call tailcc void %clofunc89048(%struct.ScmObj* %ae64168, %struct.ScmObj* %args86033$ae64168$2)
ret void
}

define tailcc void @proc_clo$ae64168(%struct.ScmObj* %env$ae64168,%struct.ScmObj* %current_45args86029) {
%stackaddr$prim89049 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86029)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim89049, align 8
%stackaddr$prim89050 = alloca %struct.ScmObj*, align 8
%current_45args86030 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86029)
store volatile %struct.ScmObj* %current_45args86030, %struct.ScmObj** %stackaddr$prim89050, align 8
%stackaddr$prim89051 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86030)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim89051, align 8
%stackaddr$prim89052 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim89052, align 8
%args86032$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89053 = alloca %struct.ScmObj*, align 8
%args86032$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args86032$k$0)
store volatile %struct.ScmObj* %args86032$k$1, %struct.ScmObj** %stackaddr$prim89053, align 8
%clofunc89054 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc89054(%struct.ScmObj* %k, %struct.ScmObj* %args86032$k$1)
ret void
}

define tailcc void @proc_clo$ae64326(%struct.ScmObj* %env$ae64326,%struct.ScmObj* %current_45args86036) {
%stackaddr$env-ref89055 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae64326, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref89055
%stackaddr$prim89056 = alloca %struct.ScmObj*, align 8
%_95k40416 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86036)
store volatile %struct.ScmObj* %_95k40416, %struct.ScmObj** %stackaddr$prim89056, align 8
%stackaddr$prim89057 = alloca %struct.ScmObj*, align 8
%current_45args86037 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86036)
store volatile %struct.ScmObj* %current_45args86037, %struct.ScmObj** %stackaddr$prim89057, align 8
%stackaddr$prim89058 = alloca %struct.ScmObj*, align 8
%t4010740235 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86037)
store volatile %struct.ScmObj* %t4010740235, %struct.ScmObj** %stackaddr$prim89058, align 8
%ae64335 = call %struct.ScmObj* @const_init_false()
%truthy$cmp89059 = call i64 @is_truthy_value(%struct.ScmObj* %ae64335)
%cmp$cmp89059 = icmp eq i64 %truthy$cmp89059, 1
br i1 %cmp$cmp89059, label %truebranch$cmp89059, label %falsebranch$cmp89059
truebranch$cmp89059:
%ae64337 = call %struct.ScmObj* @const_init_int(i64 0)
%ae64338 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89060 = alloca %struct.ScmObj*, align 8
%cpsprim40419 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64337, %struct.ScmObj* %ae64338)
store volatile %struct.ScmObj* %cpsprim40419, %struct.ScmObj** %stackaddr$prim89060, align 8
%stackaddr$makeclosure89061 = alloca %struct.ScmObj*, align 8
%fptrToInt89062 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64339 to i64
%ae64339 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt89062)
store volatile %struct.ScmObj* %ae64339, %struct.ScmObj** %stackaddr$makeclosure89061, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae64339, %struct.ScmObj* %x40229, i64 0)
%ae64340 = call %struct.ScmObj* @const_init_int(i64 0)
%args86047$ae64339$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89063 = alloca %struct.ScmObj*, align 8
%args86047$ae64339$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40419, %struct.ScmObj* %args86047$ae64339$0)
store volatile %struct.ScmObj* %args86047$ae64339$1, %struct.ScmObj** %stackaddr$prim89063, align 8
%stackaddr$prim89064 = alloca %struct.ScmObj*, align 8
%args86047$ae64339$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64340, %struct.ScmObj* %args86047$ae64339$1)
store volatile %struct.ScmObj* %args86047$ae64339$2, %struct.ScmObj** %stackaddr$prim89064, align 8
%clofunc89065 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64339)
musttail call tailcc void %clofunc89065(%struct.ScmObj* %ae64339, %struct.ScmObj* %args86047$ae64339$2)
ret void
falsebranch$cmp89059:
%stackaddr$makeclosure89066 = alloca %struct.ScmObj*, align 8
%fptrToInt89067 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64398 to i64
%ae64398 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt89067)
store volatile %struct.ScmObj* %ae64398, %struct.ScmObj** %stackaddr$makeclosure89066, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae64398, %struct.ScmObj* %x40229, i64 0)
%ae64399 = call %struct.ScmObj* @const_init_int(i64 0)
%ae64400 = call %struct.ScmObj* @const_init_int(i64 9)
%args86056$ae64398$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89068 = alloca %struct.ScmObj*, align 8
%args86056$ae64398$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64400, %struct.ScmObj* %args86056$ae64398$0)
store volatile %struct.ScmObj* %args86056$ae64398$1, %struct.ScmObj** %stackaddr$prim89068, align 8
%stackaddr$prim89069 = alloca %struct.ScmObj*, align 8
%args86056$ae64398$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64399, %struct.ScmObj* %args86056$ae64398$1)
store volatile %struct.ScmObj* %args86056$ae64398$2, %struct.ScmObj** %stackaddr$prim89069, align 8
%clofunc89070 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64398)
musttail call tailcc void %clofunc89070(%struct.ScmObj* %ae64398, %struct.ScmObj* %args86056$ae64398$2)
ret void
}

define tailcc void @proc_clo$ae64339(%struct.ScmObj* %env$ae64339,%struct.ScmObj* %current_45args86039) {
%stackaddr$env-ref89071 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae64339, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref89071
%stackaddr$prim89072 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86039)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim89072, align 8
%stackaddr$prim89073 = alloca %struct.ScmObj*, align 8
%current_45args86040 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86039)
store volatile %struct.ScmObj* %current_45args86040, %struct.ScmObj** %stackaddr$prim89073, align 8
%stackaddr$prim89074 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86040)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim89074, align 8
%ae64346 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89075 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64346)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim89075, align 8
%stackaddr$makeclosure89076 = alloca %struct.ScmObj*, align 8
%fptrToInt89077 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64347 to i64
%ae64347 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89077)
store volatile %struct.ScmObj* %ae64347, %struct.ScmObj** %stackaddr$makeclosure89076, align 8
%ae64348 = call %struct.ScmObj* @const_init_int(i64 0)
%args86046$ae64347$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89078 = alloca %struct.ScmObj*, align 8
%args86046$ae64347$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args86046$ae64347$0)
store volatile %struct.ScmObj* %args86046$ae64347$1, %struct.ScmObj** %stackaddr$prim89078, align 8
%stackaddr$prim89079 = alloca %struct.ScmObj*, align 8
%args86046$ae64347$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64348, %struct.ScmObj* %args86046$ae64347$1)
store volatile %struct.ScmObj* %args86046$ae64347$2, %struct.ScmObj** %stackaddr$prim89079, align 8
%clofunc89080 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64347)
musttail call tailcc void %clofunc89080(%struct.ScmObj* %ae64347, %struct.ScmObj* %args86046$ae64347$2)
ret void
}

define tailcc void @proc_clo$ae64347(%struct.ScmObj* %env$ae64347,%struct.ScmObj* %current_45args86042) {
%stackaddr$prim89081 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86042)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim89081, align 8
%stackaddr$prim89082 = alloca %struct.ScmObj*, align 8
%current_45args86043 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86042)
store volatile %struct.ScmObj* %current_45args86043, %struct.ScmObj** %stackaddr$prim89082, align 8
%stackaddr$prim89083 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86043)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim89083, align 8
%stackaddr$prim89084 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim89084, align 8
%args86045$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89085 = alloca %struct.ScmObj*, align 8
%args86045$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args86045$k$0)
store volatile %struct.ScmObj* %args86045$k$1, %struct.ScmObj** %stackaddr$prim89085, align 8
%clofunc89086 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc89086(%struct.ScmObj* %k, %struct.ScmObj* %args86045$k$1)
ret void
}

define tailcc void @proc_clo$ae64398(%struct.ScmObj* %env$ae64398,%struct.ScmObj* %current_45args86048) {
%stackaddr$env-ref89087 = alloca %struct.ScmObj*, align 8
%x40229 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae64398, i64 0)
store %struct.ScmObj* %x40229, %struct.ScmObj** %stackaddr$env-ref89087
%stackaddr$prim89088 = alloca %struct.ScmObj*, align 8
%_95k40417 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86048)
store volatile %struct.ScmObj* %_95k40417, %struct.ScmObj** %stackaddr$prim89088, align 8
%stackaddr$prim89089 = alloca %struct.ScmObj*, align 8
%current_45args86049 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86048)
store volatile %struct.ScmObj* %current_45args86049, %struct.ScmObj** %stackaddr$prim89089, align 8
%stackaddr$prim89090 = alloca %struct.ScmObj*, align 8
%t4010840236 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86049)
store volatile %struct.ScmObj* %t4010840236, %struct.ScmObj** %stackaddr$prim89090, align 8
%ae64408 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89091 = alloca %struct.ScmObj*, align 8
%cpsprim40418 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %x40229, %struct.ScmObj* %ae64408)
store volatile %struct.ScmObj* %cpsprim40418, %struct.ScmObj** %stackaddr$prim89091, align 8
%stackaddr$makeclosure89092 = alloca %struct.ScmObj*, align 8
%fptrToInt89093 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae64409 to i64
%ae64409 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89093)
store volatile %struct.ScmObj* %ae64409, %struct.ScmObj** %stackaddr$makeclosure89092, align 8
%ae64410 = call %struct.ScmObj* @const_init_int(i64 0)
%args86055$ae64409$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89094 = alloca %struct.ScmObj*, align 8
%args86055$ae64409$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40418, %struct.ScmObj* %args86055$ae64409$0)
store volatile %struct.ScmObj* %args86055$ae64409$1, %struct.ScmObj** %stackaddr$prim89094, align 8
%stackaddr$prim89095 = alloca %struct.ScmObj*, align 8
%args86055$ae64409$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae64410, %struct.ScmObj* %args86055$ae64409$1)
store volatile %struct.ScmObj* %args86055$ae64409$2, %struct.ScmObj** %stackaddr$prim89095, align 8
%clofunc89096 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae64409)
musttail call tailcc void %clofunc89096(%struct.ScmObj* %ae64409, %struct.ScmObj* %args86055$ae64409$2)
ret void
}

define tailcc void @proc_clo$ae64409(%struct.ScmObj* %env$ae64409,%struct.ScmObj* %current_45args86051) {
%stackaddr$prim89097 = alloca %struct.ScmObj*, align 8
%k = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86051)
store volatile %struct.ScmObj* %k, %struct.ScmObj** %stackaddr$prim89097, align 8
%stackaddr$prim89098 = alloca %struct.ScmObj*, align 8
%current_45args86052 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86051)
store volatile %struct.ScmObj* %current_45args86052, %struct.ScmObj** %stackaddr$prim89098, align 8
%stackaddr$prim89099 = alloca %struct.ScmObj*, align 8
%x = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86052)
store volatile %struct.ScmObj* %x, %struct.ScmObj** %stackaddr$prim89099, align 8
%stackaddr$prim89100 = alloca %struct.ScmObj*, align 8
%_95die = call %struct.ScmObj* @prim_halt(%struct.ScmObj* %x)
store volatile %struct.ScmObj* %_95die, %struct.ScmObj** %stackaddr$prim89100, align 8
%args86054$k$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89101 = alloca %struct.ScmObj*, align 8
%args86054$k$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x, %struct.ScmObj* %args86054$k$0)
store volatile %struct.ScmObj* %args86054$k$1, %struct.ScmObj** %stackaddr$prim89101, align 8
%clofunc89102 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k)
musttail call tailcc void %clofunc89102(%struct.ScmObj* %k, %struct.ScmObj* %args86054$k$1)
ret void
}

define tailcc void @proc_clo$ae43937(%struct.ScmObj* %env$ae43937,%struct.ScmObj* %current_45args86064) {
%stackaddr$prim89103 = alloca %struct.ScmObj*, align 8
%k40429 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86064)
store volatile %struct.ScmObj* %k40429, %struct.ScmObj** %stackaddr$prim89103, align 8
%stackaddr$prim89104 = alloca %struct.ScmObj*, align 8
%current_45args86065 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86064)
store volatile %struct.ScmObj* %current_45args86065, %struct.ScmObj** %stackaddr$prim89104, align 8
%stackaddr$prim89105 = alloca %struct.ScmObj*, align 8
%thunk40228 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86065)
store volatile %struct.ScmObj* %thunk40228, %struct.ScmObj** %stackaddr$prim89105, align 8
%stackaddr$prim89106 = alloca %struct.ScmObj*, align 8
%anf_45bind40348 = call %struct.ScmObj* @prim_vector_63(%struct.ScmObj* %thunk40228)
store volatile %struct.ScmObj* %anf_45bind40348, %struct.ScmObj** %stackaddr$prim89106, align 8
%truthy$cmp89107 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40348)
%cmp$cmp89107 = icmp eq i64 %truthy$cmp89107, 1
br i1 %cmp$cmp89107, label %truebranch$cmp89107, label %falsebranch$cmp89107
truebranch$cmp89107:
%stackaddr$prim89108 = alloca %struct.ScmObj*, align 8
%anf_45bind40349 = call %struct.ScmObj* @prim_vector_45length(%struct.ScmObj* %thunk40228)
store volatile %struct.ScmObj* %anf_45bind40349, %struct.ScmObj** %stackaddr$prim89108, align 8
%ae43942 = call %struct.ScmObj* @const_init_int(i64 3)
%stackaddr$prim89109 = alloca %struct.ScmObj*, align 8
%anf_45bind40350 = call %struct.ScmObj* @prim_equal_63(%struct.ScmObj* %anf_45bind40349, %struct.ScmObj* %ae43942)
store volatile %struct.ScmObj* %anf_45bind40350, %struct.ScmObj** %stackaddr$prim89109, align 8
%truthy$cmp89110 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40350)
%cmp$cmp89110 = icmp eq i64 %truthy$cmp89110, 1
br i1 %cmp$cmp89110, label %truebranch$cmp89110, label %falsebranch$cmp89110
truebranch$cmp89110:
%ae43945 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89111 = alloca %struct.ScmObj*, align 8
%anf_45bind40351 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %thunk40228, %struct.ScmObj* %ae43945)
store volatile %struct.ScmObj* %anf_45bind40351, %struct.ScmObj** %stackaddr$prim89111, align 8
%ae43947 = call %struct.ScmObj* @const_init_symbol(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global$sym$ae4394789112, i32 0, i32 0))
%stackaddr$prim89113 = alloca %struct.ScmObj*, align 8
%cpsprim40430 = call %struct.ScmObj* @prim_equal_63(%struct.ScmObj* %anf_45bind40351, %struct.ScmObj* %ae43947)
store volatile %struct.ScmObj* %cpsprim40430, %struct.ScmObj** %stackaddr$prim89113, align 8
%ae43949 = call %struct.ScmObj* @const_init_int(i64 0)
%args86067$k40429$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89114 = alloca %struct.ScmObj*, align 8
%args86067$k40429$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40430, %struct.ScmObj* %args86067$k40429$0)
store volatile %struct.ScmObj* %args86067$k40429$1, %struct.ScmObj** %stackaddr$prim89114, align 8
%stackaddr$prim89115 = alloca %struct.ScmObj*, align 8
%args86067$k40429$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43949, %struct.ScmObj* %args86067$k40429$1)
store volatile %struct.ScmObj* %args86067$k40429$2, %struct.ScmObj** %stackaddr$prim89115, align 8
%clofunc89116 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40429)
musttail call tailcc void %clofunc89116(%struct.ScmObj* %k40429, %struct.ScmObj* %args86067$k40429$2)
ret void
falsebranch$cmp89110:
%ae43967 = call %struct.ScmObj* @const_init_int(i64 0)
%ae43968 = call %struct.ScmObj* @const_init_false()
%args86068$k40429$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89117 = alloca %struct.ScmObj*, align 8
%args86068$k40429$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43968, %struct.ScmObj* %args86068$k40429$0)
store volatile %struct.ScmObj* %args86068$k40429$1, %struct.ScmObj** %stackaddr$prim89117, align 8
%stackaddr$prim89118 = alloca %struct.ScmObj*, align 8
%args86068$k40429$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43967, %struct.ScmObj* %args86068$k40429$1)
store volatile %struct.ScmObj* %args86068$k40429$2, %struct.ScmObj** %stackaddr$prim89118, align 8
%clofunc89119 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40429)
musttail call tailcc void %clofunc89119(%struct.ScmObj* %k40429, %struct.ScmObj* %args86068$k40429$2)
ret void
falsebranch$cmp89107:
%ae43989 = call %struct.ScmObj* @const_init_int(i64 0)
%ae43990 = call %struct.ScmObj* @const_init_false()
%args86069$k40429$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89120 = alloca %struct.ScmObj*, align 8
%args86069$k40429$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43990, %struct.ScmObj* %args86069$k40429$0)
store volatile %struct.ScmObj* %args86069$k40429$1, %struct.ScmObj** %stackaddr$prim89120, align 8
%stackaddr$prim89121 = alloca %struct.ScmObj*, align 8
%args86069$k40429$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43989, %struct.ScmObj* %args86069$k40429$1)
store volatile %struct.ScmObj* %args86069$k40429$2, %struct.ScmObj** %stackaddr$prim89121, align 8
%clofunc89122 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40429)
musttail call tailcc void %clofunc89122(%struct.ScmObj* %k40429, %struct.ScmObj* %args86069$k40429$2)
ret void
}

define tailcc void @proc_clo$ae43911(%struct.ScmObj* %env$ae43911,%struct.ScmObj* %current_45args86071) {
%stackaddr$prim89123 = alloca %struct.ScmObj*, align 8
%k40431 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86071)
store volatile %struct.ScmObj* %k40431, %struct.ScmObj** %stackaddr$prim89123, align 8
%stackaddr$prim89124 = alloca %struct.ScmObj*, align 8
%current_45args86072 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86071)
store volatile %struct.ScmObj* %current_45args86072, %struct.ScmObj** %stackaddr$prim89124, align 8
%stackaddr$prim89125 = alloca %struct.ScmObj*, align 8
%x40167 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86072)
store volatile %struct.ScmObj* %x40167, %struct.ScmObj** %stackaddr$prim89125, align 8
%stackaddr$prim89126 = alloca %struct.ScmObj*, align 8
%anf_45bind40345 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %x40167)
store volatile %struct.ScmObj* %anf_45bind40345, %struct.ScmObj** %stackaddr$prim89126, align 8
%stackaddr$prim89127 = alloca %struct.ScmObj*, align 8
%anf_45bind40346 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40345)
store volatile %struct.ScmObj* %anf_45bind40346, %struct.ScmObj** %stackaddr$prim89127, align 8
%stackaddr$prim89128 = alloca %struct.ScmObj*, align 8
%anf_45bind40347 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40346)
store volatile %struct.ScmObj* %anf_45bind40347, %struct.ScmObj** %stackaddr$prim89128, align 8
%stackaddr$prim89129 = alloca %struct.ScmObj*, align 8
%cpsprim40432 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind40347)
store volatile %struct.ScmObj* %cpsprim40432, %struct.ScmObj** %stackaddr$prim89129, align 8
%ae43917 = call %struct.ScmObj* @const_init_int(i64 0)
%args86074$k40431$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89130 = alloca %struct.ScmObj*, align 8
%args86074$k40431$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40432, %struct.ScmObj* %args86074$k40431$0)
store volatile %struct.ScmObj* %args86074$k40431$1, %struct.ScmObj** %stackaddr$prim89130, align 8
%stackaddr$prim89131 = alloca %struct.ScmObj*, align 8
%args86074$k40431$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43917, %struct.ScmObj* %args86074$k40431$1)
store volatile %struct.ScmObj* %args86074$k40431$2, %struct.ScmObj** %stackaddr$prim89131, align 8
%clofunc89132 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40431)
musttail call tailcc void %clofunc89132(%struct.ScmObj* %k40431, %struct.ScmObj* %args86074$k40431$2)
ret void
}

define tailcc void @proc_clo$ae43887(%struct.ScmObj* %env$ae43887,%struct.ScmObj* %current_45args86076) {
%stackaddr$prim89133 = alloca %struct.ScmObj*, align 8
%k40433 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86076)
store volatile %struct.ScmObj* %k40433, %struct.ScmObj** %stackaddr$prim89133, align 8
%stackaddr$prim89134 = alloca %struct.ScmObj*, align 8
%current_45args86077 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86076)
store volatile %struct.ScmObj* %current_45args86077, %struct.ScmObj** %stackaddr$prim89134, align 8
%stackaddr$prim89135 = alloca %struct.ScmObj*, align 8
%x40169 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86077)
store volatile %struct.ScmObj* %x40169, %struct.ScmObj** %stackaddr$prim89135, align 8
%stackaddr$prim89136 = alloca %struct.ScmObj*, align 8
%anf_45bind40343 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %x40169)
store volatile %struct.ScmObj* %anf_45bind40343, %struct.ScmObj** %stackaddr$prim89136, align 8
%stackaddr$prim89137 = alloca %struct.ScmObj*, align 8
%anf_45bind40344 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40343)
store volatile %struct.ScmObj* %anf_45bind40344, %struct.ScmObj** %stackaddr$prim89137, align 8
%stackaddr$prim89138 = alloca %struct.ScmObj*, align 8
%cpsprim40434 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind40344)
store volatile %struct.ScmObj* %cpsprim40434, %struct.ScmObj** %stackaddr$prim89138, align 8
%ae43892 = call %struct.ScmObj* @const_init_int(i64 0)
%args86079$k40433$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89139 = alloca %struct.ScmObj*, align 8
%args86079$k40433$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40434, %struct.ScmObj* %args86079$k40433$0)
store volatile %struct.ScmObj* %args86079$k40433$1, %struct.ScmObj** %stackaddr$prim89139, align 8
%stackaddr$prim89140 = alloca %struct.ScmObj*, align 8
%args86079$k40433$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43892, %struct.ScmObj* %args86079$k40433$1)
store volatile %struct.ScmObj* %args86079$k40433$2, %struct.ScmObj** %stackaddr$prim89140, align 8
%clofunc89141 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40433)
musttail call tailcc void %clofunc89141(%struct.ScmObj* %k40433, %struct.ScmObj* %args86079$k40433$2)
ret void
}

define tailcc void @proc_clo$ae43865(%struct.ScmObj* %env$ae43865,%struct.ScmObj* %current_45args86081) {
%stackaddr$prim89142 = alloca %struct.ScmObj*, align 8
%k40435 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86081)
store volatile %struct.ScmObj* %k40435, %struct.ScmObj** %stackaddr$prim89142, align 8
%stackaddr$prim89143 = alloca %struct.ScmObj*, align 8
%current_45args86082 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86081)
store volatile %struct.ScmObj* %current_45args86082, %struct.ScmObj** %stackaddr$prim89143, align 8
%stackaddr$prim89144 = alloca %struct.ScmObj*, align 8
%x40171 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86082)
store volatile %struct.ScmObj* %x40171, %struct.ScmObj** %stackaddr$prim89144, align 8
%stackaddr$prim89145 = alloca %struct.ScmObj*, align 8
%anf_45bind40342 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %x40171)
store volatile %struct.ScmObj* %anf_45bind40342, %struct.ScmObj** %stackaddr$prim89145, align 8
%stackaddr$prim89146 = alloca %struct.ScmObj*, align 8
%cpsprim40436 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind40342)
store volatile %struct.ScmObj* %cpsprim40436, %struct.ScmObj** %stackaddr$prim89146, align 8
%ae43869 = call %struct.ScmObj* @const_init_int(i64 0)
%args86084$k40435$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89147 = alloca %struct.ScmObj*, align 8
%args86084$k40435$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40436, %struct.ScmObj* %args86084$k40435$0)
store volatile %struct.ScmObj* %args86084$k40435$1, %struct.ScmObj** %stackaddr$prim89147, align 8
%stackaddr$prim89148 = alloca %struct.ScmObj*, align 8
%args86084$k40435$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43869, %struct.ScmObj* %args86084$k40435$1)
store volatile %struct.ScmObj* %args86084$k40435$2, %struct.ScmObj** %stackaddr$prim89148, align 8
%clofunc89149 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40435)
musttail call tailcc void %clofunc89149(%struct.ScmObj* %k40435, %struct.ScmObj* %args86084$k40435$2)
ret void
}

define tailcc void @proc_clo$ae43845(%struct.ScmObj* %env$ae43845,%struct.ScmObj* %current_45args86086) {
%stackaddr$prim89150 = alloca %struct.ScmObj*, align 8
%k40437 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86086)
store volatile %struct.ScmObj* %k40437, %struct.ScmObj** %stackaddr$prim89150, align 8
%stackaddr$prim89151 = alloca %struct.ScmObj*, align 8
%current_45args86087 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86086)
store volatile %struct.ScmObj* %current_45args86087, %struct.ScmObj** %stackaddr$prim89151, align 8
%stackaddr$prim89152 = alloca %struct.ScmObj*, align 8
%x40173 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86087)
store volatile %struct.ScmObj* %x40173, %struct.ScmObj** %stackaddr$prim89152, align 8
%stackaddr$prim89153 = alloca %struct.ScmObj*, align 8
%cpsprim40438 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %x40173)
store volatile %struct.ScmObj* %cpsprim40438, %struct.ScmObj** %stackaddr$prim89153, align 8
%ae43848 = call %struct.ScmObj* @const_init_int(i64 0)
%args86089$k40437$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89154 = alloca %struct.ScmObj*, align 8
%args86089$k40437$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40438, %struct.ScmObj* %args86089$k40437$0)
store volatile %struct.ScmObj* %args86089$k40437$1, %struct.ScmObj** %stackaddr$prim89154, align 8
%stackaddr$prim89155 = alloca %struct.ScmObj*, align 8
%args86089$k40437$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43848, %struct.ScmObj* %args86089$k40437$1)
store volatile %struct.ScmObj* %args86089$k40437$2, %struct.ScmObj** %stackaddr$prim89155, align 8
%clofunc89156 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40437)
musttail call tailcc void %clofunc89156(%struct.ScmObj* %k40437, %struct.ScmObj* %args86089$k40437$2)
ret void
}

define tailcc void @proc_clo$ae43747(%struct.ScmObj* %env$ae43747,%struct.ScmObj* %args4017540439) {
%stackaddr$env-ref89157 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43747, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref89157
%stackaddr$prim89158 = alloca %struct.ScmObj*, align 8
%k40440 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args4017540439)
store volatile %struct.ScmObj* %k40440, %struct.ScmObj** %stackaddr$prim89158, align 8
%stackaddr$prim89159 = alloca %struct.ScmObj*, align 8
%args40175 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args4017540439)
store volatile %struct.ScmObj* %args40175, %struct.ScmObj** %stackaddr$prim89159, align 8
%stackaddr$prim89160 = alloca %struct.ScmObj*, align 8
%anf_45bind40336 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %args40175)
store volatile %struct.ScmObj* %anf_45bind40336, %struct.ScmObj** %stackaddr$prim89160, align 8
%truthy$cmp89161 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40336)
%cmp$cmp89161 = icmp eq i64 %truthy$cmp89161, 1
br i1 %cmp$cmp89161, label %truebranch$cmp89161, label %falsebranch$cmp89161
truebranch$cmp89161:
%ae43753 = call %struct.ScmObj* @const_init_int(i64 0)
%ae43754 = call %struct.ScmObj* @const_init_int(i64 1)
%args86091$k40440$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89162 = alloca %struct.ScmObj*, align 8
%args86091$k40440$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43754, %struct.ScmObj* %args86091$k40440$0)
store volatile %struct.ScmObj* %args86091$k40440$1, %struct.ScmObj** %stackaddr$prim89162, align 8
%stackaddr$prim89163 = alloca %struct.ScmObj*, align 8
%args86091$k40440$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43753, %struct.ScmObj* %args86091$k40440$1)
store volatile %struct.ScmObj* %args86091$k40440$2, %struct.ScmObj** %stackaddr$prim89163, align 8
%clofunc89164 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40440)
musttail call tailcc void %clofunc89164(%struct.ScmObj* %k40440, %struct.ScmObj* %args86091$k40440$2)
ret void
falsebranch$cmp89161:
%stackaddr$prim89165 = alloca %struct.ScmObj*, align 8
%anf_45bind40337 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args40175)
store volatile %struct.ScmObj* %anf_45bind40337, %struct.ScmObj** %stackaddr$prim89165, align 8
%stackaddr$prim89166 = alloca %struct.ScmObj*, align 8
%anf_45bind40338 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %anf_45bind40337)
store volatile %struct.ScmObj* %anf_45bind40338, %struct.ScmObj** %stackaddr$prim89166, align 8
%truthy$cmp89167 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40338)
%cmp$cmp89167 = icmp eq i64 %truthy$cmp89167, 1
br i1 %cmp$cmp89167, label %truebranch$cmp89167, label %falsebranch$cmp89167
truebranch$cmp89167:
%stackaddr$prim89168 = alloca %struct.ScmObj*, align 8
%cpsprim40441 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args40175)
store volatile %struct.ScmObj* %cpsprim40441, %struct.ScmObj** %stackaddr$prim89168, align 8
%ae43766 = call %struct.ScmObj* @const_init_int(i64 0)
%args86092$k40440$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89169 = alloca %struct.ScmObj*, align 8
%args86092$k40440$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40441, %struct.ScmObj* %args86092$k40440$0)
store volatile %struct.ScmObj* %args86092$k40440$1, %struct.ScmObj** %stackaddr$prim89169, align 8
%stackaddr$prim89170 = alloca %struct.ScmObj*, align 8
%args86092$k40440$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43766, %struct.ScmObj* %args86092$k40440$1)
store volatile %struct.ScmObj* %args86092$k40440$2, %struct.ScmObj** %stackaddr$prim89170, align 8
%clofunc89171 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40440)
musttail call tailcc void %clofunc89171(%struct.ScmObj* %k40440, %struct.ScmObj* %args86092$k40440$2)
ret void
falsebranch$cmp89167:
%stackaddr$makeclosure89172 = alloca %struct.ScmObj*, align 8
%fptrToInt89173 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43771 to i64
%ae43771 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89173)
store volatile %struct.ScmObj* %ae43771, %struct.ScmObj** %stackaddr$makeclosure89172, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43771, %struct.ScmObj* %_37foldl140114, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae43771, %struct.ScmObj* %args40175, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae43771, %struct.ScmObj* %k40440, i64 2)
%ae43772 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89174 = alloca %struct.ScmObj*, align 8
%fptrToInt89175 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43773 to i64
%ae43773 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89175)
store volatile %struct.ScmObj* %ae43773, %struct.ScmObj** %stackaddr$makeclosure89174, align 8
%args86102$ae43771$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89176 = alloca %struct.ScmObj*, align 8
%args86102$ae43771$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43773, %struct.ScmObj* %args86102$ae43771$0)
store volatile %struct.ScmObj* %args86102$ae43771$1, %struct.ScmObj** %stackaddr$prim89176, align 8
%stackaddr$prim89177 = alloca %struct.ScmObj*, align 8
%args86102$ae43771$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43772, %struct.ScmObj* %args86102$ae43771$1)
store volatile %struct.ScmObj* %args86102$ae43771$2, %struct.ScmObj** %stackaddr$prim89177, align 8
%clofunc89178 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae43771)
musttail call tailcc void %clofunc89178(%struct.ScmObj* %ae43771, %struct.ScmObj* %args86102$ae43771$2)
ret void
}

define tailcc void @proc_clo$ae43771(%struct.ScmObj* %env$ae43771,%struct.ScmObj* %current_45args86093) {
%stackaddr$env-ref89179 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43771, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref89179
%stackaddr$env-ref89180 = alloca %struct.ScmObj*, align 8
%args40175 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43771, i64 1)
store %struct.ScmObj* %args40175, %struct.ScmObj** %stackaddr$env-ref89180
%stackaddr$env-ref89181 = alloca %struct.ScmObj*, align 8
%k40440 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43771, i64 2)
store %struct.ScmObj* %k40440, %struct.ScmObj** %stackaddr$env-ref89181
%stackaddr$prim89182 = alloca %struct.ScmObj*, align 8
%_95k40442 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86093)
store volatile %struct.ScmObj* %_95k40442, %struct.ScmObj** %stackaddr$prim89182, align 8
%stackaddr$prim89183 = alloca %struct.ScmObj*, align 8
%current_45args86094 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86093)
store volatile %struct.ScmObj* %current_45args86094, %struct.ScmObj** %stackaddr$prim89183, align 8
%stackaddr$prim89184 = alloca %struct.ScmObj*, align 8
%anf_45bind40339 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86094)
store volatile %struct.ScmObj* %anf_45bind40339, %struct.ScmObj** %stackaddr$prim89184, align 8
%stackaddr$prim89185 = alloca %struct.ScmObj*, align 8
%anf_45bind40340 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args40175)
store volatile %struct.ScmObj* %anf_45bind40340, %struct.ScmObj** %stackaddr$prim89185, align 8
%stackaddr$prim89186 = alloca %struct.ScmObj*, align 8
%anf_45bind40341 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args40175)
store volatile %struct.ScmObj* %anf_45bind40341, %struct.ScmObj** %stackaddr$prim89186, align 8
%args86096$_37foldl140114$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89187 = alloca %struct.ScmObj*, align 8
%args86096$_37foldl140114$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40341, %struct.ScmObj* %args86096$_37foldl140114$0)
store volatile %struct.ScmObj* %args86096$_37foldl140114$1, %struct.ScmObj** %stackaddr$prim89187, align 8
%stackaddr$prim89188 = alloca %struct.ScmObj*, align 8
%args86096$_37foldl140114$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40340, %struct.ScmObj* %args86096$_37foldl140114$1)
store volatile %struct.ScmObj* %args86096$_37foldl140114$2, %struct.ScmObj** %stackaddr$prim89188, align 8
%stackaddr$prim89189 = alloca %struct.ScmObj*, align 8
%args86096$_37foldl140114$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40339, %struct.ScmObj* %args86096$_37foldl140114$2)
store volatile %struct.ScmObj* %args86096$_37foldl140114$3, %struct.ScmObj** %stackaddr$prim89189, align 8
%stackaddr$prim89190 = alloca %struct.ScmObj*, align 8
%args86096$_37foldl140114$4 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40440, %struct.ScmObj* %args86096$_37foldl140114$3)
store volatile %struct.ScmObj* %args86096$_37foldl140114$4, %struct.ScmObj** %stackaddr$prim89190, align 8
%clofunc89191 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldl140114)
musttail call tailcc void %clofunc89191(%struct.ScmObj* %_37foldl140114, %struct.ScmObj* %args86096$_37foldl140114$4)
ret void
}

define tailcc void @proc_clo$ae43773(%struct.ScmObj* %env$ae43773,%struct.ScmObj* %current_45args86097) {
%stackaddr$prim89192 = alloca %struct.ScmObj*, align 8
%k40443 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86097)
store volatile %struct.ScmObj* %k40443, %struct.ScmObj** %stackaddr$prim89192, align 8
%stackaddr$prim89193 = alloca %struct.ScmObj*, align 8
%current_45args86098 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86097)
store volatile %struct.ScmObj* %current_45args86098, %struct.ScmObj** %stackaddr$prim89193, align 8
%stackaddr$prim89194 = alloca %struct.ScmObj*, align 8
%n40177 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86098)
store volatile %struct.ScmObj* %n40177, %struct.ScmObj** %stackaddr$prim89194, align 8
%stackaddr$prim89195 = alloca %struct.ScmObj*, align 8
%current_45args86099 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86098)
store volatile %struct.ScmObj* %current_45args86099, %struct.ScmObj** %stackaddr$prim89195, align 8
%stackaddr$prim89196 = alloca %struct.ScmObj*, align 8
%v40176 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86099)
store volatile %struct.ScmObj* %v40176, %struct.ScmObj** %stackaddr$prim89196, align 8
%stackaddr$prim89197 = alloca %struct.ScmObj*, align 8
%cpsprim40444 = call %struct.ScmObj* @prim__47(%struct.ScmObj* %v40176, %struct.ScmObj* %n40177)
store volatile %struct.ScmObj* %cpsprim40444, %struct.ScmObj** %stackaddr$prim89197, align 8
%ae43777 = call %struct.ScmObj* @const_init_int(i64 0)
%args86101$k40443$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89198 = alloca %struct.ScmObj*, align 8
%args86101$k40443$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40444, %struct.ScmObj* %args86101$k40443$0)
store volatile %struct.ScmObj* %args86101$k40443$1, %struct.ScmObj** %stackaddr$prim89198, align 8
%stackaddr$prim89199 = alloca %struct.ScmObj*, align 8
%args86101$k40443$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43777, %struct.ScmObj* %args86101$k40443$1)
store volatile %struct.ScmObj* %args86101$k40443$2, %struct.ScmObj** %stackaddr$prim89199, align 8
%clofunc89200 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40443)
musttail call tailcc void %clofunc89200(%struct.ScmObj* %k40443, %struct.ScmObj* %args86101$k40443$2)
ret void
}

define tailcc void @proc_clo$ae43343(%struct.ScmObj* %env$ae43343,%struct.ScmObj* %current_45args86104) {
%stackaddr$prim89201 = alloca %struct.ScmObj*, align 8
%k40445 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86104)
store volatile %struct.ScmObj* %k40445, %struct.ScmObj** %stackaddr$prim89201, align 8
%stackaddr$prim89202 = alloca %struct.ScmObj*, align 8
%current_45args86105 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86104)
store volatile %struct.ScmObj* %current_45args86105, %struct.ScmObj** %stackaddr$prim89202, align 8
%stackaddr$prim89203 = alloca %struct.ScmObj*, align 8
%v40180 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86105)
store volatile %struct.ScmObj* %v40180, %struct.ScmObj** %stackaddr$prim89203, align 8
%stackaddr$prim89204 = alloca %struct.ScmObj*, align 8
%current_45args86106 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86105)
store volatile %struct.ScmObj* %current_45args86106, %struct.ScmObj** %stackaddr$prim89204, align 8
%stackaddr$prim89205 = alloca %struct.ScmObj*, align 8
%lst40179 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86106)
store volatile %struct.ScmObj* %lst40179, %struct.ScmObj** %stackaddr$prim89205, align 8
%ae43344 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim89206 = alloca %struct.ScmObj*, align 8
%lst40181 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae43344, %struct.ScmObj* %lst40179)
store volatile %struct.ScmObj* %lst40181, %struct.ScmObj** %stackaddr$prim89206, align 8
%stackaddr$makeclosure89207 = alloca %struct.ScmObj*, align 8
%fptrToInt89208 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43346 to i64
%ae43346 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89208)
store volatile %struct.ScmObj* %ae43346, %struct.ScmObj** %stackaddr$makeclosure89207, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43346, %struct.ScmObj* %lst40181, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae43346, %struct.ScmObj* %v40180, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae43346, %struct.ScmObj* %k40445, i64 2)
%ae43347 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89209 = alloca %struct.ScmObj*, align 8
%fptrToInt89210 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43348 to i64
%ae43348 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89210)
store volatile %struct.ScmObj* %ae43348, %struct.ScmObj** %stackaddr$makeclosure89209, align 8
%args86128$ae43346$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89211 = alloca %struct.ScmObj*, align 8
%args86128$ae43346$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43348, %struct.ScmObj* %args86128$ae43346$0)
store volatile %struct.ScmObj* %args86128$ae43346$1, %struct.ScmObj** %stackaddr$prim89211, align 8
%stackaddr$prim89212 = alloca %struct.ScmObj*, align 8
%args86128$ae43346$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43347, %struct.ScmObj* %args86128$ae43346$1)
store volatile %struct.ScmObj* %args86128$ae43346$2, %struct.ScmObj** %stackaddr$prim89212, align 8
%clofunc89213 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae43346)
musttail call tailcc void %clofunc89213(%struct.ScmObj* %ae43346, %struct.ScmObj* %args86128$ae43346$2)
ret void
}

define tailcc void @proc_clo$ae43346(%struct.ScmObj* %env$ae43346,%struct.ScmObj* %current_45args86108) {
%stackaddr$env-ref89214 = alloca %struct.ScmObj*, align 8
%lst40181 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43346, i64 0)
store %struct.ScmObj* %lst40181, %struct.ScmObj** %stackaddr$env-ref89214
%stackaddr$env-ref89215 = alloca %struct.ScmObj*, align 8
%v40180 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43346, i64 1)
store %struct.ScmObj* %v40180, %struct.ScmObj** %stackaddr$env-ref89215
%stackaddr$env-ref89216 = alloca %struct.ScmObj*, align 8
%k40445 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43346, i64 2)
store %struct.ScmObj* %k40445, %struct.ScmObj** %stackaddr$env-ref89216
%stackaddr$prim89217 = alloca %struct.ScmObj*, align 8
%_95k40446 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86108)
store volatile %struct.ScmObj* %_95k40446, %struct.ScmObj** %stackaddr$prim89217, align 8
%stackaddr$prim89218 = alloca %struct.ScmObj*, align 8
%current_45args86109 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86108)
store volatile %struct.ScmObj* %current_45args86109, %struct.ScmObj** %stackaddr$prim89218, align 8
%stackaddr$prim89219 = alloca %struct.ScmObj*, align 8
%anf_45bind40328 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86109)
store volatile %struct.ScmObj* %anf_45bind40328, %struct.ScmObj** %stackaddr$prim89219, align 8
%stackaddr$makeclosure89220 = alloca %struct.ScmObj*, align 8
%fptrToInt89221 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43362 to i64
%ae43362 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89221)
store volatile %struct.ScmObj* %ae43362, %struct.ScmObj** %stackaddr$makeclosure89220, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43362, %struct.ScmObj* %lst40181, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae43362, %struct.ScmObj* %v40180, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae43362, %struct.ScmObj* %k40445, i64 2)
%stackaddr$makeclosure89222 = alloca %struct.ScmObj*, align 8
%fptrToInt89223 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae43363 to i64
%ae43363 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89223)
store volatile %struct.ScmObj* %ae43363, %struct.ScmObj** %stackaddr$makeclosure89222, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae43363, %struct.ScmObj* %lst40181, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae43363, %struct.ScmObj* %v40180, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae43363, %struct.ScmObj* %k40445, i64 2)
%args86123$anf_45bind40328$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89224 = alloca %struct.ScmObj*, align 8
%args86123$anf_45bind40328$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43363, %struct.ScmObj* %args86123$anf_45bind40328$0)
store volatile %struct.ScmObj* %args86123$anf_45bind40328$1, %struct.ScmObj** %stackaddr$prim89224, align 8
%stackaddr$prim89225 = alloca %struct.ScmObj*, align 8
%args86123$anf_45bind40328$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43362, %struct.ScmObj* %args86123$anf_45bind40328$1)
store volatile %struct.ScmObj* %args86123$anf_45bind40328$2, %struct.ScmObj** %stackaddr$prim89225, align 8
%clofunc89226 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind40328)
musttail call tailcc void %clofunc89226(%struct.ScmObj* %anf_45bind40328, %struct.ScmObj* %args86123$anf_45bind40328$2)
ret void
}

define tailcc void @proc_clo$ae43362(%struct.ScmObj* %env$ae43362,%struct.ScmObj* %current_45args86111) {
%stackaddr$env-ref89227 = alloca %struct.ScmObj*, align 8
%lst40181 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43362, i64 0)
store %struct.ScmObj* %lst40181, %struct.ScmObj** %stackaddr$env-ref89227
%stackaddr$env-ref89228 = alloca %struct.ScmObj*, align 8
%v40180 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43362, i64 1)
store %struct.ScmObj* %v40180, %struct.ScmObj** %stackaddr$env-ref89228
%stackaddr$env-ref89229 = alloca %struct.ScmObj*, align 8
%k40445 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43362, i64 2)
store %struct.ScmObj* %k40445, %struct.ScmObj** %stackaddr$env-ref89229
%stackaddr$prim89230 = alloca %struct.ScmObj*, align 8
%_95k40447 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86111)
store volatile %struct.ScmObj* %_95k40447, %struct.ScmObj** %stackaddr$prim89230, align 8
%stackaddr$prim89231 = alloca %struct.ScmObj*, align 8
%current_45args86112 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86111)
store volatile %struct.ScmObj* %current_45args86112, %struct.ScmObj** %stackaddr$prim89231, align 8
%stackaddr$prim89232 = alloca %struct.ScmObj*, align 8
%cc40182 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86112)
store volatile %struct.ScmObj* %cc40182, %struct.ScmObj** %stackaddr$prim89232, align 8
%ae43471 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89233 = alloca %struct.ScmObj*, align 8
%anf_45bind40329 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40181, %struct.ScmObj* %ae43471)
store volatile %struct.ScmObj* %anf_45bind40329, %struct.ScmObj** %stackaddr$prim89233, align 8
%stackaddr$prim89234 = alloca %struct.ScmObj*, align 8
%anf_45bind40330 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %anf_45bind40329)
store volatile %struct.ScmObj* %anf_45bind40330, %struct.ScmObj** %stackaddr$prim89234, align 8
%truthy$cmp89235 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40330)
%cmp$cmp89235 = icmp eq i64 %truthy$cmp89235, 1
br i1 %cmp$cmp89235, label %truebranch$cmp89235, label %falsebranch$cmp89235
truebranch$cmp89235:
%ae43475 = call %struct.ScmObj* @const_init_int(i64 0)
%ae43476 = call %struct.ScmObj* @const_init_false()
%args86114$k40445$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89236 = alloca %struct.ScmObj*, align 8
%args86114$k40445$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43476, %struct.ScmObj* %args86114$k40445$0)
store volatile %struct.ScmObj* %args86114$k40445$1, %struct.ScmObj** %stackaddr$prim89236, align 8
%stackaddr$prim89237 = alloca %struct.ScmObj*, align 8
%args86114$k40445$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43475, %struct.ScmObj* %args86114$k40445$1)
store volatile %struct.ScmObj* %args86114$k40445$2, %struct.ScmObj** %stackaddr$prim89237, align 8
%clofunc89238 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40445)
musttail call tailcc void %clofunc89238(%struct.ScmObj* %k40445, %struct.ScmObj* %args86114$k40445$2)
ret void
falsebranch$cmp89235:
%ae43484 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89239 = alloca %struct.ScmObj*, align 8
%anf_45bind40331 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40181, %struct.ScmObj* %ae43484)
store volatile %struct.ScmObj* %anf_45bind40331, %struct.ScmObj** %stackaddr$prim89239, align 8
%stackaddr$prim89240 = alloca %struct.ScmObj*, align 8
%anf_45bind40332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind40331)
store volatile %struct.ScmObj* %anf_45bind40332, %struct.ScmObj** %stackaddr$prim89240, align 8
%stackaddr$prim89241 = alloca %struct.ScmObj*, align 8
%anf_45bind40333 = call %struct.ScmObj* @prim_eqv_63(%struct.ScmObj* %anf_45bind40332, %struct.ScmObj* %v40180)
store volatile %struct.ScmObj* %anf_45bind40333, %struct.ScmObj** %stackaddr$prim89241, align 8
%truthy$cmp89242 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40333)
%cmp$cmp89242 = icmp eq i64 %truthy$cmp89242, 1
br i1 %cmp$cmp89242, label %truebranch$cmp89242, label %falsebranch$cmp89242
truebranch$cmp89242:
%ae43490 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89243 = alloca %struct.ScmObj*, align 8
%cpsprim40448 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40181, %struct.ScmObj* %ae43490)
store volatile %struct.ScmObj* %cpsprim40448, %struct.ScmObj** %stackaddr$prim89243, align 8
%ae43492 = call %struct.ScmObj* @const_init_int(i64 0)
%args86115$k40445$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89244 = alloca %struct.ScmObj*, align 8
%args86115$k40445$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40448, %struct.ScmObj* %args86115$k40445$0)
store volatile %struct.ScmObj* %args86115$k40445$1, %struct.ScmObj** %stackaddr$prim89244, align 8
%stackaddr$prim89245 = alloca %struct.ScmObj*, align 8
%args86115$k40445$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43492, %struct.ScmObj* %args86115$k40445$1)
store volatile %struct.ScmObj* %args86115$k40445$2, %struct.ScmObj** %stackaddr$prim89245, align 8
%clofunc89246 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40445)
musttail call tailcc void %clofunc89246(%struct.ScmObj* %k40445, %struct.ScmObj* %args86115$k40445$2)
ret void
falsebranch$cmp89242:
%ae43503 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89247 = alloca %struct.ScmObj*, align 8
%anf_45bind40334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40181, %struct.ScmObj* %ae43503)
store volatile %struct.ScmObj* %anf_45bind40334, %struct.ScmObj** %stackaddr$prim89247, align 8
%stackaddr$prim89248 = alloca %struct.ScmObj*, align 8
%anf_45bind40335 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40334)
store volatile %struct.ScmObj* %anf_45bind40335, %struct.ScmObj** %stackaddr$prim89248, align 8
%ae43506 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89249 = alloca %struct.ScmObj*, align 8
%_95040184 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %lst40181, %struct.ScmObj* %ae43506, %struct.ScmObj* %anf_45bind40335)
store volatile %struct.ScmObj* %_95040184, %struct.ScmObj** %stackaddr$prim89249, align 8
%args86116$cc40182$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89250 = alloca %struct.ScmObj*, align 8
%args86116$cc40182$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc40182, %struct.ScmObj* %args86116$cc40182$0)
store volatile %struct.ScmObj* %args86116$cc40182$1, %struct.ScmObj** %stackaddr$prim89250, align 8
%stackaddr$prim89251 = alloca %struct.ScmObj*, align 8
%args86116$cc40182$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40445, %struct.ScmObj* %args86116$cc40182$1)
store volatile %struct.ScmObj* %args86116$cc40182$2, %struct.ScmObj** %stackaddr$prim89251, align 8
%clofunc89252 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc40182)
musttail call tailcc void %clofunc89252(%struct.ScmObj* %cc40182, %struct.ScmObj* %args86116$cc40182$2)
ret void
}

define tailcc void @proc_clo$ae43363(%struct.ScmObj* %env$ae43363,%struct.ScmObj* %current_45args86117) {
%stackaddr$env-ref89253 = alloca %struct.ScmObj*, align 8
%lst40181 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43363, i64 0)
store %struct.ScmObj* %lst40181, %struct.ScmObj** %stackaddr$env-ref89253
%stackaddr$env-ref89254 = alloca %struct.ScmObj*, align 8
%v40180 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43363, i64 1)
store %struct.ScmObj* %v40180, %struct.ScmObj** %stackaddr$env-ref89254
%stackaddr$env-ref89255 = alloca %struct.ScmObj*, align 8
%k40445 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae43363, i64 2)
store %struct.ScmObj* %k40445, %struct.ScmObj** %stackaddr$env-ref89255
%stackaddr$prim89256 = alloca %struct.ScmObj*, align 8
%_95k40447 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86117)
store volatile %struct.ScmObj* %_95k40447, %struct.ScmObj** %stackaddr$prim89256, align 8
%stackaddr$prim89257 = alloca %struct.ScmObj*, align 8
%current_45args86118 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86117)
store volatile %struct.ScmObj* %current_45args86118, %struct.ScmObj** %stackaddr$prim89257, align 8
%stackaddr$prim89258 = alloca %struct.ScmObj*, align 8
%cc40182 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86118)
store volatile %struct.ScmObj* %cc40182, %struct.ScmObj** %stackaddr$prim89258, align 8
%ae43365 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89259 = alloca %struct.ScmObj*, align 8
%anf_45bind40329 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40181, %struct.ScmObj* %ae43365)
store volatile %struct.ScmObj* %anf_45bind40329, %struct.ScmObj** %stackaddr$prim89259, align 8
%stackaddr$prim89260 = alloca %struct.ScmObj*, align 8
%anf_45bind40330 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %anf_45bind40329)
store volatile %struct.ScmObj* %anf_45bind40330, %struct.ScmObj** %stackaddr$prim89260, align 8
%truthy$cmp89261 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40330)
%cmp$cmp89261 = icmp eq i64 %truthy$cmp89261, 1
br i1 %cmp$cmp89261, label %truebranch$cmp89261, label %falsebranch$cmp89261
truebranch$cmp89261:
%ae43369 = call %struct.ScmObj* @const_init_int(i64 0)
%ae43370 = call %struct.ScmObj* @const_init_false()
%args86120$k40445$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89262 = alloca %struct.ScmObj*, align 8
%args86120$k40445$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43370, %struct.ScmObj* %args86120$k40445$0)
store volatile %struct.ScmObj* %args86120$k40445$1, %struct.ScmObj** %stackaddr$prim89262, align 8
%stackaddr$prim89263 = alloca %struct.ScmObj*, align 8
%args86120$k40445$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43369, %struct.ScmObj* %args86120$k40445$1)
store volatile %struct.ScmObj* %args86120$k40445$2, %struct.ScmObj** %stackaddr$prim89263, align 8
%clofunc89264 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40445)
musttail call tailcc void %clofunc89264(%struct.ScmObj* %k40445, %struct.ScmObj* %args86120$k40445$2)
ret void
falsebranch$cmp89261:
%ae43378 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89265 = alloca %struct.ScmObj*, align 8
%anf_45bind40331 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40181, %struct.ScmObj* %ae43378)
store volatile %struct.ScmObj* %anf_45bind40331, %struct.ScmObj** %stackaddr$prim89265, align 8
%stackaddr$prim89266 = alloca %struct.ScmObj*, align 8
%anf_45bind40332 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind40331)
store volatile %struct.ScmObj* %anf_45bind40332, %struct.ScmObj** %stackaddr$prim89266, align 8
%stackaddr$prim89267 = alloca %struct.ScmObj*, align 8
%anf_45bind40333 = call %struct.ScmObj* @prim_eqv_63(%struct.ScmObj* %anf_45bind40332, %struct.ScmObj* %v40180)
store volatile %struct.ScmObj* %anf_45bind40333, %struct.ScmObj** %stackaddr$prim89267, align 8
%truthy$cmp89268 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40333)
%cmp$cmp89268 = icmp eq i64 %truthy$cmp89268, 1
br i1 %cmp$cmp89268, label %truebranch$cmp89268, label %falsebranch$cmp89268
truebranch$cmp89268:
%ae43384 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89269 = alloca %struct.ScmObj*, align 8
%cpsprim40448 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40181, %struct.ScmObj* %ae43384)
store volatile %struct.ScmObj* %cpsprim40448, %struct.ScmObj** %stackaddr$prim89269, align 8
%ae43386 = call %struct.ScmObj* @const_init_int(i64 0)
%args86121$k40445$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89270 = alloca %struct.ScmObj*, align 8
%args86121$k40445$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40448, %struct.ScmObj* %args86121$k40445$0)
store volatile %struct.ScmObj* %args86121$k40445$1, %struct.ScmObj** %stackaddr$prim89270, align 8
%stackaddr$prim89271 = alloca %struct.ScmObj*, align 8
%args86121$k40445$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae43386, %struct.ScmObj* %args86121$k40445$1)
store volatile %struct.ScmObj* %args86121$k40445$2, %struct.ScmObj** %stackaddr$prim89271, align 8
%clofunc89272 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40445)
musttail call tailcc void %clofunc89272(%struct.ScmObj* %k40445, %struct.ScmObj* %args86121$k40445$2)
ret void
falsebranch$cmp89268:
%ae43397 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89273 = alloca %struct.ScmObj*, align 8
%anf_45bind40334 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40181, %struct.ScmObj* %ae43397)
store volatile %struct.ScmObj* %anf_45bind40334, %struct.ScmObj** %stackaddr$prim89273, align 8
%stackaddr$prim89274 = alloca %struct.ScmObj*, align 8
%anf_45bind40335 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40334)
store volatile %struct.ScmObj* %anf_45bind40335, %struct.ScmObj** %stackaddr$prim89274, align 8
%ae43400 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89275 = alloca %struct.ScmObj*, align 8
%_95040184 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %lst40181, %struct.ScmObj* %ae43400, %struct.ScmObj* %anf_45bind40335)
store volatile %struct.ScmObj* %_95040184, %struct.ScmObj** %stackaddr$prim89275, align 8
%args86122$cc40182$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89276 = alloca %struct.ScmObj*, align 8
%args86122$cc40182$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc40182, %struct.ScmObj* %args86122$cc40182$0)
store volatile %struct.ScmObj* %args86122$cc40182$1, %struct.ScmObj** %stackaddr$prim89276, align 8
%stackaddr$prim89277 = alloca %struct.ScmObj*, align 8
%args86122$cc40182$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40445, %struct.ScmObj* %args86122$cc40182$1)
store volatile %struct.ScmObj* %args86122$cc40182$2, %struct.ScmObj** %stackaddr$prim89277, align 8
%clofunc89278 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc40182)
musttail call tailcc void %clofunc89278(%struct.ScmObj* %cc40182, %struct.ScmObj* %args86122$cc40182$2)
ret void
}

define tailcc void @proc_clo$ae43348(%struct.ScmObj* %env$ae43348,%struct.ScmObj* %current_45args86124) {
%stackaddr$prim89279 = alloca %struct.ScmObj*, align 8
%k40449 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86124)
store volatile %struct.ScmObj* %k40449, %struct.ScmObj** %stackaddr$prim89279, align 8
%stackaddr$prim89280 = alloca %struct.ScmObj*, align 8
%current_45args86125 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86124)
store volatile %struct.ScmObj* %current_45args86125, %struct.ScmObj** %stackaddr$prim89280, align 8
%stackaddr$prim89281 = alloca %struct.ScmObj*, align 8
%u40183 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86125)
store volatile %struct.ScmObj* %u40183, %struct.ScmObj** %stackaddr$prim89281, align 8
%args86127$u40183$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89282 = alloca %struct.ScmObj*, align 8
%args86127$u40183$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %u40183, %struct.ScmObj* %args86127$u40183$0)
store volatile %struct.ScmObj* %args86127$u40183$1, %struct.ScmObj** %stackaddr$prim89282, align 8
%stackaddr$prim89283 = alloca %struct.ScmObj*, align 8
%args86127$u40183$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40449, %struct.ScmObj* %args86127$u40183$1)
store volatile %struct.ScmObj* %args86127$u40183$2, %struct.ScmObj** %stackaddr$prim89283, align 8
%clofunc89284 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %u40183)
musttail call tailcc void %clofunc89284(%struct.ScmObj* %u40183, %struct.ScmObj* %args86127$u40183$2)
ret void
}

define tailcc void @proc_clo$ae42807(%struct.ScmObj* %env$ae42807,%struct.ScmObj* %current_45args86130) {
%stackaddr$prim89285 = alloca %struct.ScmObj*, align 8
%k40450 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86130)
store volatile %struct.ScmObj* %k40450, %struct.ScmObj** %stackaddr$prim89285, align 8
%stackaddr$prim89286 = alloca %struct.ScmObj*, align 8
%current_45args86131 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86130)
store volatile %struct.ScmObj* %current_45args86131, %struct.ScmObj** %stackaddr$prim89286, align 8
%stackaddr$prim89287 = alloca %struct.ScmObj*, align 8
%lst40187 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86131)
store volatile %struct.ScmObj* %lst40187, %struct.ScmObj** %stackaddr$prim89287, align 8
%stackaddr$prim89288 = alloca %struct.ScmObj*, align 8
%current_45args86132 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86131)
store volatile %struct.ScmObj* %current_45args86132, %struct.ScmObj** %stackaddr$prim89288, align 8
%stackaddr$prim89289 = alloca %struct.ScmObj*, align 8
%n40186 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86132)
store volatile %struct.ScmObj* %n40186, %struct.ScmObj** %stackaddr$prim89289, align 8
%ae42808 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim89290 = alloca %struct.ScmObj*, align 8
%n40189 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae42808, %struct.ScmObj* %n40186)
store volatile %struct.ScmObj* %n40189, %struct.ScmObj** %stackaddr$prim89290, align 8
%ae42810 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim89291 = alloca %struct.ScmObj*, align 8
%lst40188 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae42810, %struct.ScmObj* %lst40187)
store volatile %struct.ScmObj* %lst40188, %struct.ScmObj** %stackaddr$prim89291, align 8
%stackaddr$makeclosure89292 = alloca %struct.ScmObj*, align 8
%fptrToInt89293 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42812 to i64
%ae42812 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89293)
store volatile %struct.ScmObj* %ae42812, %struct.ScmObj** %stackaddr$makeclosure89292, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42812, %struct.ScmObj* %k40450, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42812, %struct.ScmObj* %n40189, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae42812, %struct.ScmObj* %lst40188, i64 2)
%ae42813 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89294 = alloca %struct.ScmObj*, align 8
%fptrToInt89295 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42814 to i64
%ae42814 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89295)
store volatile %struct.ScmObj* %ae42814, %struct.ScmObj** %stackaddr$makeclosure89294, align 8
%args86152$ae42812$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89296 = alloca %struct.ScmObj*, align 8
%args86152$ae42812$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42814, %struct.ScmObj* %args86152$ae42812$0)
store volatile %struct.ScmObj* %args86152$ae42812$1, %struct.ScmObj** %stackaddr$prim89296, align 8
%stackaddr$prim89297 = alloca %struct.ScmObj*, align 8
%args86152$ae42812$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42813, %struct.ScmObj* %args86152$ae42812$1)
store volatile %struct.ScmObj* %args86152$ae42812$2, %struct.ScmObj** %stackaddr$prim89297, align 8
%clofunc89298 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae42812)
musttail call tailcc void %clofunc89298(%struct.ScmObj* %ae42812, %struct.ScmObj* %args86152$ae42812$2)
ret void
}

define tailcc void @proc_clo$ae42812(%struct.ScmObj* %env$ae42812,%struct.ScmObj* %current_45args86134) {
%stackaddr$env-ref89299 = alloca %struct.ScmObj*, align 8
%k40450 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42812, i64 0)
store %struct.ScmObj* %k40450, %struct.ScmObj** %stackaddr$env-ref89299
%stackaddr$env-ref89300 = alloca %struct.ScmObj*, align 8
%n40189 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42812, i64 1)
store %struct.ScmObj* %n40189, %struct.ScmObj** %stackaddr$env-ref89300
%stackaddr$env-ref89301 = alloca %struct.ScmObj*, align 8
%lst40188 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42812, i64 2)
store %struct.ScmObj* %lst40188, %struct.ScmObj** %stackaddr$env-ref89301
%stackaddr$prim89302 = alloca %struct.ScmObj*, align 8
%_95k40451 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86134)
store volatile %struct.ScmObj* %_95k40451, %struct.ScmObj** %stackaddr$prim89302, align 8
%stackaddr$prim89303 = alloca %struct.ScmObj*, align 8
%current_45args86135 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86134)
store volatile %struct.ScmObj* %current_45args86135, %struct.ScmObj** %stackaddr$prim89303, align 8
%stackaddr$prim89304 = alloca %struct.ScmObj*, align 8
%anf_45bind40321 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86135)
store volatile %struct.ScmObj* %anf_45bind40321, %struct.ScmObj** %stackaddr$prim89304, align 8
%stackaddr$makeclosure89305 = alloca %struct.ScmObj*, align 8
%fptrToInt89306 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42828 to i64
%ae42828 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89306)
store volatile %struct.ScmObj* %ae42828, %struct.ScmObj** %stackaddr$makeclosure89305, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42828, %struct.ScmObj* %k40450, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42828, %struct.ScmObj* %n40189, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae42828, %struct.ScmObj* %lst40188, i64 2)
%stackaddr$makeclosure89307 = alloca %struct.ScmObj*, align 8
%fptrToInt89308 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42829 to i64
%ae42829 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89308)
store volatile %struct.ScmObj* %ae42829, %struct.ScmObj** %stackaddr$makeclosure89307, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42829, %struct.ScmObj* %k40450, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42829, %struct.ScmObj* %n40189, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae42829, %struct.ScmObj* %lst40188, i64 2)
%args86147$anf_45bind40321$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89309 = alloca %struct.ScmObj*, align 8
%args86147$anf_45bind40321$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42829, %struct.ScmObj* %args86147$anf_45bind40321$0)
store volatile %struct.ScmObj* %args86147$anf_45bind40321$1, %struct.ScmObj** %stackaddr$prim89309, align 8
%stackaddr$prim89310 = alloca %struct.ScmObj*, align 8
%args86147$anf_45bind40321$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42828, %struct.ScmObj* %args86147$anf_45bind40321$1)
store volatile %struct.ScmObj* %args86147$anf_45bind40321$2, %struct.ScmObj** %stackaddr$prim89310, align 8
%clofunc89311 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind40321)
musttail call tailcc void %clofunc89311(%struct.ScmObj* %anf_45bind40321, %struct.ScmObj* %args86147$anf_45bind40321$2)
ret void
}

define tailcc void @proc_clo$ae42828(%struct.ScmObj* %env$ae42828,%struct.ScmObj* %current_45args86137) {
%stackaddr$env-ref89312 = alloca %struct.ScmObj*, align 8
%k40450 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42828, i64 0)
store %struct.ScmObj* %k40450, %struct.ScmObj** %stackaddr$env-ref89312
%stackaddr$env-ref89313 = alloca %struct.ScmObj*, align 8
%n40189 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42828, i64 1)
store %struct.ScmObj* %n40189, %struct.ScmObj** %stackaddr$env-ref89313
%stackaddr$env-ref89314 = alloca %struct.ScmObj*, align 8
%lst40188 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42828, i64 2)
store %struct.ScmObj* %lst40188, %struct.ScmObj** %stackaddr$env-ref89314
%stackaddr$prim89315 = alloca %struct.ScmObj*, align 8
%_95k40452 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86137)
store volatile %struct.ScmObj* %_95k40452, %struct.ScmObj** %stackaddr$prim89315, align 8
%stackaddr$prim89316 = alloca %struct.ScmObj*, align 8
%current_45args86138 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86137)
store volatile %struct.ScmObj* %current_45args86138, %struct.ScmObj** %stackaddr$prim89316, align 8
%stackaddr$prim89317 = alloca %struct.ScmObj*, align 8
%cc40190 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86138)
store volatile %struct.ScmObj* %cc40190, %struct.ScmObj** %stackaddr$prim89317, align 8
%ae42971 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89318 = alloca %struct.ScmObj*, align 8
%anf_45bind40322 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %n40189, %struct.ScmObj* %ae42971)
store volatile %struct.ScmObj* %anf_45bind40322, %struct.ScmObj** %stackaddr$prim89318, align 8
%ae42972 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89319 = alloca %struct.ScmObj*, align 8
%anf_45bind40323 = call %struct.ScmObj* @prim__61(%struct.ScmObj* %ae42972, %struct.ScmObj* %anf_45bind40322)
store volatile %struct.ScmObj* %anf_45bind40323, %struct.ScmObj** %stackaddr$prim89319, align 8
%truthy$cmp89320 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40323)
%cmp$cmp89320 = icmp eq i64 %truthy$cmp89320, 1
br i1 %cmp$cmp89320, label %truebranch$cmp89320, label %falsebranch$cmp89320
truebranch$cmp89320:
%ae42976 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89321 = alloca %struct.ScmObj*, align 8
%cpsprim40453 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40188, %struct.ScmObj* %ae42976)
store volatile %struct.ScmObj* %cpsprim40453, %struct.ScmObj** %stackaddr$prim89321, align 8
%ae42978 = call %struct.ScmObj* @const_init_int(i64 0)
%args86140$k40450$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89322 = alloca %struct.ScmObj*, align 8
%args86140$k40450$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40453, %struct.ScmObj* %args86140$k40450$0)
store volatile %struct.ScmObj* %args86140$k40450$1, %struct.ScmObj** %stackaddr$prim89322, align 8
%stackaddr$prim89323 = alloca %struct.ScmObj*, align 8
%args86140$k40450$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42978, %struct.ScmObj* %args86140$k40450$1)
store volatile %struct.ScmObj* %args86140$k40450$2, %struct.ScmObj** %stackaddr$prim89323, align 8
%clofunc89324 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40450)
musttail call tailcc void %clofunc89324(%struct.ScmObj* %k40450, %struct.ScmObj* %args86140$k40450$2)
ret void
falsebranch$cmp89320:
%ae42989 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89325 = alloca %struct.ScmObj*, align 8
%anf_45bind40324 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40188, %struct.ScmObj* %ae42989)
store volatile %struct.ScmObj* %anf_45bind40324, %struct.ScmObj** %stackaddr$prim89325, align 8
%stackaddr$prim89326 = alloca %struct.ScmObj*, align 8
%anf_45bind40325 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40324)
store volatile %struct.ScmObj* %anf_45bind40325, %struct.ScmObj** %stackaddr$prim89326, align 8
%ae42992 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89327 = alloca %struct.ScmObj*, align 8
%_95040193 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %lst40188, %struct.ScmObj* %ae42992, %struct.ScmObj* %anf_45bind40325)
store volatile %struct.ScmObj* %_95040193, %struct.ScmObj** %stackaddr$prim89327, align 8
%ae42995 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89328 = alloca %struct.ScmObj*, align 8
%anf_45bind40326 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %n40189, %struct.ScmObj* %ae42995)
store volatile %struct.ScmObj* %anf_45bind40326, %struct.ScmObj** %stackaddr$prim89328, align 8
%ae42997 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim89329 = alloca %struct.ScmObj*, align 8
%anf_45bind40327 = call %struct.ScmObj* @prim__45(%struct.ScmObj* %anf_45bind40326, %struct.ScmObj* %ae42997)
store volatile %struct.ScmObj* %anf_45bind40327, %struct.ScmObj** %stackaddr$prim89329, align 8
%ae42999 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89330 = alloca %struct.ScmObj*, align 8
%_95140192 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %n40189, %struct.ScmObj* %ae42999, %struct.ScmObj* %anf_45bind40327)
store volatile %struct.ScmObj* %_95140192, %struct.ScmObj** %stackaddr$prim89330, align 8
%args86141$cc40190$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89331 = alloca %struct.ScmObj*, align 8
%args86141$cc40190$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc40190, %struct.ScmObj* %args86141$cc40190$0)
store volatile %struct.ScmObj* %args86141$cc40190$1, %struct.ScmObj** %stackaddr$prim89331, align 8
%stackaddr$prim89332 = alloca %struct.ScmObj*, align 8
%args86141$cc40190$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40450, %struct.ScmObj* %args86141$cc40190$1)
store volatile %struct.ScmObj* %args86141$cc40190$2, %struct.ScmObj** %stackaddr$prim89332, align 8
%clofunc89333 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc40190)
musttail call tailcc void %clofunc89333(%struct.ScmObj* %cc40190, %struct.ScmObj* %args86141$cc40190$2)
ret void
}

define tailcc void @proc_clo$ae42829(%struct.ScmObj* %env$ae42829,%struct.ScmObj* %current_45args86142) {
%stackaddr$env-ref89334 = alloca %struct.ScmObj*, align 8
%k40450 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42829, i64 0)
store %struct.ScmObj* %k40450, %struct.ScmObj** %stackaddr$env-ref89334
%stackaddr$env-ref89335 = alloca %struct.ScmObj*, align 8
%n40189 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42829, i64 1)
store %struct.ScmObj* %n40189, %struct.ScmObj** %stackaddr$env-ref89335
%stackaddr$env-ref89336 = alloca %struct.ScmObj*, align 8
%lst40188 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42829, i64 2)
store %struct.ScmObj* %lst40188, %struct.ScmObj** %stackaddr$env-ref89336
%stackaddr$prim89337 = alloca %struct.ScmObj*, align 8
%_95k40452 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86142)
store volatile %struct.ScmObj* %_95k40452, %struct.ScmObj** %stackaddr$prim89337, align 8
%stackaddr$prim89338 = alloca %struct.ScmObj*, align 8
%current_45args86143 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86142)
store volatile %struct.ScmObj* %current_45args86143, %struct.ScmObj** %stackaddr$prim89338, align 8
%stackaddr$prim89339 = alloca %struct.ScmObj*, align 8
%cc40190 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86143)
store volatile %struct.ScmObj* %cc40190, %struct.ScmObj** %stackaddr$prim89339, align 8
%ae42831 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89340 = alloca %struct.ScmObj*, align 8
%anf_45bind40322 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %n40189, %struct.ScmObj* %ae42831)
store volatile %struct.ScmObj* %anf_45bind40322, %struct.ScmObj** %stackaddr$prim89340, align 8
%ae42832 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89341 = alloca %struct.ScmObj*, align 8
%anf_45bind40323 = call %struct.ScmObj* @prim__61(%struct.ScmObj* %ae42832, %struct.ScmObj* %anf_45bind40322)
store volatile %struct.ScmObj* %anf_45bind40323, %struct.ScmObj** %stackaddr$prim89341, align 8
%truthy$cmp89342 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40323)
%cmp$cmp89342 = icmp eq i64 %truthy$cmp89342, 1
br i1 %cmp$cmp89342, label %truebranch$cmp89342, label %falsebranch$cmp89342
truebranch$cmp89342:
%ae42836 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89343 = alloca %struct.ScmObj*, align 8
%cpsprim40453 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40188, %struct.ScmObj* %ae42836)
store volatile %struct.ScmObj* %cpsprim40453, %struct.ScmObj** %stackaddr$prim89343, align 8
%ae42838 = call %struct.ScmObj* @const_init_int(i64 0)
%args86145$k40450$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89344 = alloca %struct.ScmObj*, align 8
%args86145$k40450$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40453, %struct.ScmObj* %args86145$k40450$0)
store volatile %struct.ScmObj* %args86145$k40450$1, %struct.ScmObj** %stackaddr$prim89344, align 8
%stackaddr$prim89345 = alloca %struct.ScmObj*, align 8
%args86145$k40450$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42838, %struct.ScmObj* %args86145$k40450$1)
store volatile %struct.ScmObj* %args86145$k40450$2, %struct.ScmObj** %stackaddr$prim89345, align 8
%clofunc89346 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40450)
musttail call tailcc void %clofunc89346(%struct.ScmObj* %k40450, %struct.ScmObj* %args86145$k40450$2)
ret void
falsebranch$cmp89342:
%ae42849 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89347 = alloca %struct.ScmObj*, align 8
%anf_45bind40324 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %lst40188, %struct.ScmObj* %ae42849)
store volatile %struct.ScmObj* %anf_45bind40324, %struct.ScmObj** %stackaddr$prim89347, align 8
%stackaddr$prim89348 = alloca %struct.ScmObj*, align 8
%anf_45bind40325 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40324)
store volatile %struct.ScmObj* %anf_45bind40325, %struct.ScmObj** %stackaddr$prim89348, align 8
%ae42852 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89349 = alloca %struct.ScmObj*, align 8
%_95040193 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %lst40188, %struct.ScmObj* %ae42852, %struct.ScmObj* %anf_45bind40325)
store volatile %struct.ScmObj* %_95040193, %struct.ScmObj** %stackaddr$prim89349, align 8
%ae42855 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89350 = alloca %struct.ScmObj*, align 8
%anf_45bind40326 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %n40189, %struct.ScmObj* %ae42855)
store volatile %struct.ScmObj* %anf_45bind40326, %struct.ScmObj** %stackaddr$prim89350, align 8
%ae42857 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim89351 = alloca %struct.ScmObj*, align 8
%anf_45bind40327 = call %struct.ScmObj* @prim__45(%struct.ScmObj* %anf_45bind40326, %struct.ScmObj* %ae42857)
store volatile %struct.ScmObj* %anf_45bind40327, %struct.ScmObj** %stackaddr$prim89351, align 8
%ae42859 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89352 = alloca %struct.ScmObj*, align 8
%_95140192 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %n40189, %struct.ScmObj* %ae42859, %struct.ScmObj* %anf_45bind40327)
store volatile %struct.ScmObj* %_95140192, %struct.ScmObj** %stackaddr$prim89352, align 8
%args86146$cc40190$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89353 = alloca %struct.ScmObj*, align 8
%args86146$cc40190$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc40190, %struct.ScmObj* %args86146$cc40190$0)
store volatile %struct.ScmObj* %args86146$cc40190$1, %struct.ScmObj** %stackaddr$prim89353, align 8
%stackaddr$prim89354 = alloca %struct.ScmObj*, align 8
%args86146$cc40190$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40450, %struct.ScmObj* %args86146$cc40190$1)
store volatile %struct.ScmObj* %args86146$cc40190$2, %struct.ScmObj** %stackaddr$prim89354, align 8
%clofunc89355 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc40190)
musttail call tailcc void %clofunc89355(%struct.ScmObj* %cc40190, %struct.ScmObj* %args86146$cc40190$2)
ret void
}

define tailcc void @proc_clo$ae42814(%struct.ScmObj* %env$ae42814,%struct.ScmObj* %current_45args86148) {
%stackaddr$prim89356 = alloca %struct.ScmObj*, align 8
%k40454 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86148)
store volatile %struct.ScmObj* %k40454, %struct.ScmObj** %stackaddr$prim89356, align 8
%stackaddr$prim89357 = alloca %struct.ScmObj*, align 8
%current_45args86149 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86148)
store volatile %struct.ScmObj* %current_45args86149, %struct.ScmObj** %stackaddr$prim89357, align 8
%stackaddr$prim89358 = alloca %struct.ScmObj*, align 8
%u40191 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86149)
store volatile %struct.ScmObj* %u40191, %struct.ScmObj** %stackaddr$prim89358, align 8
%args86151$u40191$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89359 = alloca %struct.ScmObj*, align 8
%args86151$u40191$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %u40191, %struct.ScmObj* %args86151$u40191$0)
store volatile %struct.ScmObj* %args86151$u40191$1, %struct.ScmObj** %stackaddr$prim89359, align 8
%stackaddr$prim89360 = alloca %struct.ScmObj*, align 8
%args86151$u40191$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40454, %struct.ScmObj* %args86151$u40191$1)
store volatile %struct.ScmObj* %args86151$u40191$2, %struct.ScmObj** %stackaddr$prim89360, align 8
%clofunc89361 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %u40191)
musttail call tailcc void %clofunc89361(%struct.ScmObj* %u40191, %struct.ScmObj* %args86151$u40191$2)
ret void
}

define tailcc void @proc_clo$ae42391(%struct.ScmObj* %env$ae42391,%struct.ScmObj* %current_45args86154) {
%stackaddr$prim89362 = alloca %struct.ScmObj*, align 8
%k40455 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86154)
store volatile %struct.ScmObj* %k40455, %struct.ScmObj** %stackaddr$prim89362, align 8
%stackaddr$prim89363 = alloca %struct.ScmObj*, align 8
%current_45args86155 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86154)
store volatile %struct.ScmObj* %current_45args86155, %struct.ScmObj** %stackaddr$prim89363, align 8
%stackaddr$prim89364 = alloca %struct.ScmObj*, align 8
%a40195 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86155)
store volatile %struct.ScmObj* %a40195, %struct.ScmObj** %stackaddr$prim89364, align 8
%ae42392 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim89365 = alloca %struct.ScmObj*, align 8
%a40196 = call %struct.ScmObj* @prim_make_45vector(%struct.ScmObj* %ae42392, %struct.ScmObj* %a40195)
store volatile %struct.ScmObj* %a40196, %struct.ScmObj** %stackaddr$prim89365, align 8
%stackaddr$makeclosure89366 = alloca %struct.ScmObj*, align 8
%fptrToInt89367 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42394 to i64
%ae42394 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt89367)
store volatile %struct.ScmObj* %ae42394, %struct.ScmObj** %stackaddr$makeclosure89366, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42394, %struct.ScmObj* %k40455, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42394, %struct.ScmObj* %a40196, i64 1)
%ae42395 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89368 = alloca %struct.ScmObj*, align 8
%fptrToInt89369 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42396 to i64
%ae42396 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89369)
store volatile %struct.ScmObj* %ae42396, %struct.ScmObj** %stackaddr$makeclosure89368, align 8
%args86177$ae42394$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89370 = alloca %struct.ScmObj*, align 8
%args86177$ae42394$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42396, %struct.ScmObj* %args86177$ae42394$0)
store volatile %struct.ScmObj* %args86177$ae42394$1, %struct.ScmObj** %stackaddr$prim89370, align 8
%stackaddr$prim89371 = alloca %struct.ScmObj*, align 8
%args86177$ae42394$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42395, %struct.ScmObj* %args86177$ae42394$1)
store volatile %struct.ScmObj* %args86177$ae42394$2, %struct.ScmObj** %stackaddr$prim89371, align 8
%clofunc89372 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae42394)
musttail call tailcc void %clofunc89372(%struct.ScmObj* %ae42394, %struct.ScmObj* %args86177$ae42394$2)
ret void
}

define tailcc void @proc_clo$ae42394(%struct.ScmObj* %env$ae42394,%struct.ScmObj* %current_45args86157) {
%stackaddr$env-ref89373 = alloca %struct.ScmObj*, align 8
%k40455 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42394, i64 0)
store %struct.ScmObj* %k40455, %struct.ScmObj** %stackaddr$env-ref89373
%stackaddr$env-ref89374 = alloca %struct.ScmObj*, align 8
%a40196 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42394, i64 1)
store %struct.ScmObj* %a40196, %struct.ScmObj** %stackaddr$env-ref89374
%stackaddr$prim89375 = alloca %struct.ScmObj*, align 8
%_95k40456 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86157)
store volatile %struct.ScmObj* %_95k40456, %struct.ScmObj** %stackaddr$prim89375, align 8
%stackaddr$prim89376 = alloca %struct.ScmObj*, align 8
%current_45args86158 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86157)
store volatile %struct.ScmObj* %current_45args86158, %struct.ScmObj** %stackaddr$prim89376, align 8
%stackaddr$prim89377 = alloca %struct.ScmObj*, align 8
%anf_45bind40313 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86158)
store volatile %struct.ScmObj* %anf_45bind40313, %struct.ScmObj** %stackaddr$prim89377, align 8
%stackaddr$makeclosure89378 = alloca %struct.ScmObj*, align 8
%fptrToInt89379 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42413 to i64
%ae42413 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt89379)
store volatile %struct.ScmObj* %ae42413, %struct.ScmObj** %stackaddr$makeclosure89378, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42413, %struct.ScmObj* %k40455, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42413, %struct.ScmObj* %a40196, i64 1)
%stackaddr$makeclosure89380 = alloca %struct.ScmObj*, align 8
%fptrToInt89381 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42414 to i64
%ae42414 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt89381)
store volatile %struct.ScmObj* %ae42414, %struct.ScmObj** %stackaddr$makeclosure89380, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42414, %struct.ScmObj* %k40455, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42414, %struct.ScmObj* %a40196, i64 1)
%args86172$anf_45bind40313$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89382 = alloca %struct.ScmObj*, align 8
%args86172$anf_45bind40313$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42414, %struct.ScmObj* %args86172$anf_45bind40313$0)
store volatile %struct.ScmObj* %args86172$anf_45bind40313$1, %struct.ScmObj** %stackaddr$prim89382, align 8
%stackaddr$prim89383 = alloca %struct.ScmObj*, align 8
%args86172$anf_45bind40313$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42413, %struct.ScmObj* %args86172$anf_45bind40313$1)
store volatile %struct.ScmObj* %args86172$anf_45bind40313$2, %struct.ScmObj** %stackaddr$prim89383, align 8
%clofunc89384 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind40313)
musttail call tailcc void %clofunc89384(%struct.ScmObj* %anf_45bind40313, %struct.ScmObj* %args86172$anf_45bind40313$2)
ret void
}

define tailcc void @proc_clo$ae42413(%struct.ScmObj* %env$ae42413,%struct.ScmObj* %current_45args86160) {
%stackaddr$env-ref89385 = alloca %struct.ScmObj*, align 8
%k40455 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42413, i64 0)
store %struct.ScmObj* %k40455, %struct.ScmObj** %stackaddr$env-ref89385
%stackaddr$env-ref89386 = alloca %struct.ScmObj*, align 8
%a40196 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42413, i64 1)
store %struct.ScmObj* %a40196, %struct.ScmObj** %stackaddr$env-ref89386
%stackaddr$prim89387 = alloca %struct.ScmObj*, align 8
%_95k40457 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86160)
store volatile %struct.ScmObj* %_95k40457, %struct.ScmObj** %stackaddr$prim89387, align 8
%stackaddr$prim89388 = alloca %struct.ScmObj*, align 8
%current_45args86161 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86160)
store volatile %struct.ScmObj* %current_45args86161, %struct.ScmObj** %stackaddr$prim89388, align 8
%stackaddr$prim89389 = alloca %struct.ScmObj*, align 8
%cc40197 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86161)
store volatile %struct.ScmObj* %cc40197, %struct.ScmObj** %stackaddr$prim89389, align 8
%ae42529 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89390 = alloca %struct.ScmObj*, align 8
%anf_45bind40314 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a40196, %struct.ScmObj* %ae42529)
store volatile %struct.ScmObj* %anf_45bind40314, %struct.ScmObj** %stackaddr$prim89390, align 8
%stackaddr$prim89391 = alloca %struct.ScmObj*, align 8
%anf_45bind40315 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %anf_45bind40314)
store volatile %struct.ScmObj* %anf_45bind40315, %struct.ScmObj** %stackaddr$prim89391, align 8
%truthy$cmp89392 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40315)
%cmp$cmp89392 = icmp eq i64 %truthy$cmp89392, 1
br i1 %cmp$cmp89392, label %truebranch$cmp89392, label %falsebranch$cmp89392
truebranch$cmp89392:
%ae42533 = call %struct.ScmObj* @const_init_int(i64 0)
%ae42534 = call %struct.ScmObj* @const_init_true()
%args86163$k40455$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89393 = alloca %struct.ScmObj*, align 8
%args86163$k40455$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42534, %struct.ScmObj* %args86163$k40455$0)
store volatile %struct.ScmObj* %args86163$k40455$1, %struct.ScmObj** %stackaddr$prim89393, align 8
%stackaddr$prim89394 = alloca %struct.ScmObj*, align 8
%args86163$k40455$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42533, %struct.ScmObj* %args86163$k40455$1)
store volatile %struct.ScmObj* %args86163$k40455$2, %struct.ScmObj** %stackaddr$prim89394, align 8
%clofunc89395 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40455)
musttail call tailcc void %clofunc89395(%struct.ScmObj* %k40455, %struct.ScmObj* %args86163$k40455$2)
ret void
falsebranch$cmp89392:
%ae42542 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89396 = alloca %struct.ScmObj*, align 8
%anf_45bind40316 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a40196, %struct.ScmObj* %ae42542)
store volatile %struct.ScmObj* %anf_45bind40316, %struct.ScmObj** %stackaddr$prim89396, align 8
%stackaddr$prim89397 = alloca %struct.ScmObj*, align 8
%anf_45bind40317 = call %struct.ScmObj* @prim_cons_63(%struct.ScmObj* %anf_45bind40316)
store volatile %struct.ScmObj* %anf_45bind40317, %struct.ScmObj** %stackaddr$prim89397, align 8
%truthy$cmp89398 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40317)
%cmp$cmp89398 = icmp eq i64 %truthy$cmp89398, 1
br i1 %cmp$cmp89398, label %truebranch$cmp89398, label %falsebranch$cmp89398
truebranch$cmp89398:
%ae42546 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89399 = alloca %struct.ScmObj*, align 8
%anf_45bind40318 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a40196, %struct.ScmObj* %ae42546)
store volatile %struct.ScmObj* %anf_45bind40318, %struct.ScmObj** %stackaddr$prim89399, align 8
%stackaddr$prim89400 = alloca %struct.ScmObj*, align 8
%b40199 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40318)
store volatile %struct.ScmObj* %b40199, %struct.ScmObj** %stackaddr$prim89400, align 8
%ae42549 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89401 = alloca %struct.ScmObj*, align 8
%anf_45bind40319 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a40196, %struct.ScmObj* %ae42549)
store volatile %struct.ScmObj* %anf_45bind40319, %struct.ScmObj** %stackaddr$prim89401, align 8
%stackaddr$prim89402 = alloca %struct.ScmObj*, align 8
%anf_45bind40320 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40319)
store volatile %struct.ScmObj* %anf_45bind40320, %struct.ScmObj** %stackaddr$prim89402, align 8
%ae42552 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89403 = alloca %struct.ScmObj*, align 8
%_95040200 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %a40196, %struct.ScmObj* %ae42552, %struct.ScmObj* %anf_45bind40320)
store volatile %struct.ScmObj* %_95040200, %struct.ScmObj** %stackaddr$prim89403, align 8
%args86164$cc40197$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89404 = alloca %struct.ScmObj*, align 8
%args86164$cc40197$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc40197, %struct.ScmObj* %args86164$cc40197$0)
store volatile %struct.ScmObj* %args86164$cc40197$1, %struct.ScmObj** %stackaddr$prim89404, align 8
%stackaddr$prim89405 = alloca %struct.ScmObj*, align 8
%args86164$cc40197$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40455, %struct.ScmObj* %args86164$cc40197$1)
store volatile %struct.ScmObj* %args86164$cc40197$2, %struct.ScmObj** %stackaddr$prim89405, align 8
%clofunc89406 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc40197)
musttail call tailcc void %clofunc89406(%struct.ScmObj* %cc40197, %struct.ScmObj* %args86164$cc40197$2)
ret void
falsebranch$cmp89398:
%ae42585 = call %struct.ScmObj* @const_init_int(i64 0)
%ae42586 = call %struct.ScmObj* @const_init_false()
%args86165$k40455$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89407 = alloca %struct.ScmObj*, align 8
%args86165$k40455$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42586, %struct.ScmObj* %args86165$k40455$0)
store volatile %struct.ScmObj* %args86165$k40455$1, %struct.ScmObj** %stackaddr$prim89407, align 8
%stackaddr$prim89408 = alloca %struct.ScmObj*, align 8
%args86165$k40455$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42585, %struct.ScmObj* %args86165$k40455$1)
store volatile %struct.ScmObj* %args86165$k40455$2, %struct.ScmObj** %stackaddr$prim89408, align 8
%clofunc89409 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40455)
musttail call tailcc void %clofunc89409(%struct.ScmObj* %k40455, %struct.ScmObj* %args86165$k40455$2)
ret void
}

define tailcc void @proc_clo$ae42414(%struct.ScmObj* %env$ae42414,%struct.ScmObj* %current_45args86166) {
%stackaddr$env-ref89410 = alloca %struct.ScmObj*, align 8
%k40455 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42414, i64 0)
store %struct.ScmObj* %k40455, %struct.ScmObj** %stackaddr$env-ref89410
%stackaddr$env-ref89411 = alloca %struct.ScmObj*, align 8
%a40196 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42414, i64 1)
store %struct.ScmObj* %a40196, %struct.ScmObj** %stackaddr$env-ref89411
%stackaddr$prim89412 = alloca %struct.ScmObj*, align 8
%_95k40457 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86166)
store volatile %struct.ScmObj* %_95k40457, %struct.ScmObj** %stackaddr$prim89412, align 8
%stackaddr$prim89413 = alloca %struct.ScmObj*, align 8
%current_45args86167 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86166)
store volatile %struct.ScmObj* %current_45args86167, %struct.ScmObj** %stackaddr$prim89413, align 8
%stackaddr$prim89414 = alloca %struct.ScmObj*, align 8
%cc40197 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86167)
store volatile %struct.ScmObj* %cc40197, %struct.ScmObj** %stackaddr$prim89414, align 8
%ae42416 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89415 = alloca %struct.ScmObj*, align 8
%anf_45bind40314 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a40196, %struct.ScmObj* %ae42416)
store volatile %struct.ScmObj* %anf_45bind40314, %struct.ScmObj** %stackaddr$prim89415, align 8
%stackaddr$prim89416 = alloca %struct.ScmObj*, align 8
%anf_45bind40315 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %anf_45bind40314)
store volatile %struct.ScmObj* %anf_45bind40315, %struct.ScmObj** %stackaddr$prim89416, align 8
%truthy$cmp89417 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40315)
%cmp$cmp89417 = icmp eq i64 %truthy$cmp89417, 1
br i1 %cmp$cmp89417, label %truebranch$cmp89417, label %falsebranch$cmp89417
truebranch$cmp89417:
%ae42420 = call %struct.ScmObj* @const_init_int(i64 0)
%ae42421 = call %struct.ScmObj* @const_init_true()
%args86169$k40455$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89418 = alloca %struct.ScmObj*, align 8
%args86169$k40455$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42421, %struct.ScmObj* %args86169$k40455$0)
store volatile %struct.ScmObj* %args86169$k40455$1, %struct.ScmObj** %stackaddr$prim89418, align 8
%stackaddr$prim89419 = alloca %struct.ScmObj*, align 8
%args86169$k40455$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42420, %struct.ScmObj* %args86169$k40455$1)
store volatile %struct.ScmObj* %args86169$k40455$2, %struct.ScmObj** %stackaddr$prim89419, align 8
%clofunc89420 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40455)
musttail call tailcc void %clofunc89420(%struct.ScmObj* %k40455, %struct.ScmObj* %args86169$k40455$2)
ret void
falsebranch$cmp89417:
%ae42429 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89421 = alloca %struct.ScmObj*, align 8
%anf_45bind40316 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a40196, %struct.ScmObj* %ae42429)
store volatile %struct.ScmObj* %anf_45bind40316, %struct.ScmObj** %stackaddr$prim89421, align 8
%stackaddr$prim89422 = alloca %struct.ScmObj*, align 8
%anf_45bind40317 = call %struct.ScmObj* @prim_cons_63(%struct.ScmObj* %anf_45bind40316)
store volatile %struct.ScmObj* %anf_45bind40317, %struct.ScmObj** %stackaddr$prim89422, align 8
%truthy$cmp89423 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40317)
%cmp$cmp89423 = icmp eq i64 %truthy$cmp89423, 1
br i1 %cmp$cmp89423, label %truebranch$cmp89423, label %falsebranch$cmp89423
truebranch$cmp89423:
%ae42433 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89424 = alloca %struct.ScmObj*, align 8
%anf_45bind40318 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a40196, %struct.ScmObj* %ae42433)
store volatile %struct.ScmObj* %anf_45bind40318, %struct.ScmObj** %stackaddr$prim89424, align 8
%stackaddr$prim89425 = alloca %struct.ScmObj*, align 8
%b40199 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40318)
store volatile %struct.ScmObj* %b40199, %struct.ScmObj** %stackaddr$prim89425, align 8
%ae42436 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89426 = alloca %struct.ScmObj*, align 8
%anf_45bind40319 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %a40196, %struct.ScmObj* %ae42436)
store volatile %struct.ScmObj* %anf_45bind40319, %struct.ScmObj** %stackaddr$prim89426, align 8
%stackaddr$prim89427 = alloca %struct.ScmObj*, align 8
%anf_45bind40320 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40319)
store volatile %struct.ScmObj* %anf_45bind40320, %struct.ScmObj** %stackaddr$prim89427, align 8
%ae42439 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89428 = alloca %struct.ScmObj*, align 8
%_95040200 = call %struct.ScmObj* @prim_vector_45set_33(%struct.ScmObj* %a40196, %struct.ScmObj* %ae42439, %struct.ScmObj* %anf_45bind40320)
store volatile %struct.ScmObj* %_95040200, %struct.ScmObj** %stackaddr$prim89428, align 8
%args86170$cc40197$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89429 = alloca %struct.ScmObj*, align 8
%args86170$cc40197$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cc40197, %struct.ScmObj* %args86170$cc40197$0)
store volatile %struct.ScmObj* %args86170$cc40197$1, %struct.ScmObj** %stackaddr$prim89429, align 8
%stackaddr$prim89430 = alloca %struct.ScmObj*, align 8
%args86170$cc40197$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40455, %struct.ScmObj* %args86170$cc40197$1)
store volatile %struct.ScmObj* %args86170$cc40197$2, %struct.ScmObj** %stackaddr$prim89430, align 8
%clofunc89431 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %cc40197)
musttail call tailcc void %clofunc89431(%struct.ScmObj* %cc40197, %struct.ScmObj* %args86170$cc40197$2)
ret void
falsebranch$cmp89423:
%ae42472 = call %struct.ScmObj* @const_init_int(i64 0)
%ae42473 = call %struct.ScmObj* @const_init_false()
%args86171$k40455$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89432 = alloca %struct.ScmObj*, align 8
%args86171$k40455$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42473, %struct.ScmObj* %args86171$k40455$0)
store volatile %struct.ScmObj* %args86171$k40455$1, %struct.ScmObj** %stackaddr$prim89432, align 8
%stackaddr$prim89433 = alloca %struct.ScmObj*, align 8
%args86171$k40455$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42472, %struct.ScmObj* %args86171$k40455$1)
store volatile %struct.ScmObj* %args86171$k40455$2, %struct.ScmObj** %stackaddr$prim89433, align 8
%clofunc89434 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40455)
musttail call tailcc void %clofunc89434(%struct.ScmObj* %k40455, %struct.ScmObj* %args86171$k40455$2)
ret void
}

define tailcc void @proc_clo$ae42396(%struct.ScmObj* %env$ae42396,%struct.ScmObj* %current_45args86173) {
%stackaddr$prim89435 = alloca %struct.ScmObj*, align 8
%k40458 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86173)
store volatile %struct.ScmObj* %k40458, %struct.ScmObj** %stackaddr$prim89435, align 8
%stackaddr$prim89436 = alloca %struct.ScmObj*, align 8
%current_45args86174 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86173)
store volatile %struct.ScmObj* %current_45args86174, %struct.ScmObj** %stackaddr$prim89436, align 8
%stackaddr$prim89437 = alloca %struct.ScmObj*, align 8
%k40198 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86174)
store volatile %struct.ScmObj* %k40198, %struct.ScmObj** %stackaddr$prim89437, align 8
%ae42398 = call %struct.ScmObj* @const_init_int(i64 0)
%args86176$k40458$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89438 = alloca %struct.ScmObj*, align 8
%args86176$k40458$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40198, %struct.ScmObj* %args86176$k40458$0)
store volatile %struct.ScmObj* %args86176$k40458$1, %struct.ScmObj** %stackaddr$prim89438, align 8
%stackaddr$prim89439 = alloca %struct.ScmObj*, align 8
%args86176$k40458$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42398, %struct.ScmObj* %args86176$k40458$1)
store volatile %struct.ScmObj* %args86176$k40458$2, %struct.ScmObj** %stackaddr$prim89439, align 8
%clofunc89440 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40458)
musttail call tailcc void %clofunc89440(%struct.ScmObj* %k40458, %struct.ScmObj* %args86176$k40458$2)
ret void
}

define tailcc void @proc_clo$ae42319(%struct.ScmObj* %env$ae42319,%struct.ScmObj* %current_45args86179) {
%stackaddr$env-ref89441 = alloca %struct.ScmObj*, align 8
%_37append40202 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42319, i64 0)
store %struct.ScmObj* %_37append40202, %struct.ScmObj** %stackaddr$env-ref89441
%stackaddr$prim89442 = alloca %struct.ScmObj*, align 8
%k40459 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86179)
store volatile %struct.ScmObj* %k40459, %struct.ScmObj** %stackaddr$prim89442, align 8
%stackaddr$prim89443 = alloca %struct.ScmObj*, align 8
%current_45args86180 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86179)
store volatile %struct.ScmObj* %current_45args86180, %struct.ScmObj** %stackaddr$prim89443, align 8
%stackaddr$prim89444 = alloca %struct.ScmObj*, align 8
%ls040205 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86180)
store volatile %struct.ScmObj* %ls040205, %struct.ScmObj** %stackaddr$prim89444, align 8
%stackaddr$prim89445 = alloca %struct.ScmObj*, align 8
%current_45args86181 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86180)
store volatile %struct.ScmObj* %current_45args86181, %struct.ScmObj** %stackaddr$prim89445, align 8
%stackaddr$prim89446 = alloca %struct.ScmObj*, align 8
%ls140204 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86181)
store volatile %struct.ScmObj* %ls140204, %struct.ScmObj** %stackaddr$prim89446, align 8
%stackaddr$prim89447 = alloca %struct.ScmObj*, align 8
%anf_45bind40307 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %ls040205)
store volatile %struct.ScmObj* %anf_45bind40307, %struct.ScmObj** %stackaddr$prim89447, align 8
%truthy$cmp89448 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40307)
%cmp$cmp89448 = icmp eq i64 %truthy$cmp89448, 1
br i1 %cmp$cmp89448, label %truebranch$cmp89448, label %falsebranch$cmp89448
truebranch$cmp89448:
%ae42323 = call %struct.ScmObj* @const_init_int(i64 0)
%args86183$k40459$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89449 = alloca %struct.ScmObj*, align 8
%args86183$k40459$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ls140204, %struct.ScmObj* %args86183$k40459$0)
store volatile %struct.ScmObj* %args86183$k40459$1, %struct.ScmObj** %stackaddr$prim89449, align 8
%stackaddr$prim89450 = alloca %struct.ScmObj*, align 8
%args86183$k40459$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42323, %struct.ScmObj* %args86183$k40459$1)
store volatile %struct.ScmObj* %args86183$k40459$2, %struct.ScmObj** %stackaddr$prim89450, align 8
%clofunc89451 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40459)
musttail call tailcc void %clofunc89451(%struct.ScmObj* %k40459, %struct.ScmObj* %args86183$k40459$2)
ret void
falsebranch$cmp89448:
%stackaddr$prim89452 = alloca %struct.ScmObj*, align 8
%anf_45bind40308 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %ls040205)
store volatile %struct.ScmObj* %anf_45bind40308, %struct.ScmObj** %stackaddr$prim89452, align 8
%ae42330 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim89453 = alloca %struct.ScmObj*, align 8
%anf_45bind40309 = call %struct.ScmObj* @prim_vector_45ref(%struct.ScmObj* %_37append40202, %struct.ScmObj* %ae42330)
store volatile %struct.ScmObj* %anf_45bind40309, %struct.ScmObj** %stackaddr$prim89453, align 8
%stackaddr$prim89454 = alloca %struct.ScmObj*, align 8
%anf_45bind40310 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %ls040205)
store volatile %struct.ScmObj* %anf_45bind40310, %struct.ScmObj** %stackaddr$prim89454, align 8
%stackaddr$makeclosure89455 = alloca %struct.ScmObj*, align 8
%fptrToInt89456 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42333 to i64
%ae42333 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt89456)
store volatile %struct.ScmObj* %ae42333, %struct.ScmObj** %stackaddr$makeclosure89455, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42333, %struct.ScmObj* %anf_45bind40308, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42333, %struct.ScmObj* %k40459, i64 1)
%args86188$anf_45bind40309$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89457 = alloca %struct.ScmObj*, align 8
%args86188$anf_45bind40309$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ls140204, %struct.ScmObj* %args86188$anf_45bind40309$0)
store volatile %struct.ScmObj* %args86188$anf_45bind40309$1, %struct.ScmObj** %stackaddr$prim89457, align 8
%stackaddr$prim89458 = alloca %struct.ScmObj*, align 8
%args86188$anf_45bind40309$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40310, %struct.ScmObj* %args86188$anf_45bind40309$1)
store volatile %struct.ScmObj* %args86188$anf_45bind40309$2, %struct.ScmObj** %stackaddr$prim89458, align 8
%stackaddr$prim89459 = alloca %struct.ScmObj*, align 8
%args86188$anf_45bind40309$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42333, %struct.ScmObj* %args86188$anf_45bind40309$2)
store volatile %struct.ScmObj* %args86188$anf_45bind40309$3, %struct.ScmObj** %stackaddr$prim89459, align 8
%clofunc89460 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind40309)
musttail call tailcc void %clofunc89460(%struct.ScmObj* %anf_45bind40309, %struct.ScmObj* %args86188$anf_45bind40309$3)
ret void
}

define tailcc void @proc_clo$ae42333(%struct.ScmObj* %env$ae42333,%struct.ScmObj* %current_45args86184) {
%stackaddr$env-ref89461 = alloca %struct.ScmObj*, align 8
%anf_45bind40308 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42333, i64 0)
store %struct.ScmObj* %anf_45bind40308, %struct.ScmObj** %stackaddr$env-ref89461
%stackaddr$env-ref89462 = alloca %struct.ScmObj*, align 8
%k40459 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42333, i64 1)
store %struct.ScmObj* %k40459, %struct.ScmObj** %stackaddr$env-ref89462
%stackaddr$prim89463 = alloca %struct.ScmObj*, align 8
%_95k40460 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86184)
store volatile %struct.ScmObj* %_95k40460, %struct.ScmObj** %stackaddr$prim89463, align 8
%stackaddr$prim89464 = alloca %struct.ScmObj*, align 8
%current_45args86185 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86184)
store volatile %struct.ScmObj* %current_45args86185, %struct.ScmObj** %stackaddr$prim89464, align 8
%stackaddr$prim89465 = alloca %struct.ScmObj*, align 8
%anf_45bind40311 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86185)
store volatile %struct.ScmObj* %anf_45bind40311, %struct.ScmObj** %stackaddr$prim89465, align 8
%stackaddr$prim89466 = alloca %struct.ScmObj*, align 8
%cpsprim40461 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40308, %struct.ScmObj* %anf_45bind40311)
store volatile %struct.ScmObj* %cpsprim40461, %struct.ScmObj** %stackaddr$prim89466, align 8
%ae42339 = call %struct.ScmObj* @const_init_int(i64 0)
%args86187$k40459$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89467 = alloca %struct.ScmObj*, align 8
%args86187$k40459$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40461, %struct.ScmObj* %args86187$k40459$0)
store volatile %struct.ScmObj* %args86187$k40459$1, %struct.ScmObj** %stackaddr$prim89467, align 8
%stackaddr$prim89468 = alloca %struct.ScmObj*, align 8
%args86187$k40459$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42339, %struct.ScmObj* %args86187$k40459$1)
store volatile %struct.ScmObj* %args86187$k40459$2, %struct.ScmObj** %stackaddr$prim89468, align 8
%clofunc89469 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40459)
musttail call tailcc void %clofunc89469(%struct.ScmObj* %k40459, %struct.ScmObj* %args86187$k40459$2)
ret void
}

define tailcc void @proc_clo$ae42293(%struct.ScmObj* %env$ae42293,%struct.ScmObj* %current_45args86190) {
%stackaddr$prim89470 = alloca %struct.ScmObj*, align 8
%k40462 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86190)
store volatile %struct.ScmObj* %k40462, %struct.ScmObj** %stackaddr$prim89470, align 8
%stackaddr$prim89471 = alloca %struct.ScmObj*, align 8
%current_45args86191 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86190)
store volatile %struct.ScmObj* %current_45args86191, %struct.ScmObj** %stackaddr$prim89471, align 8
%stackaddr$prim89472 = alloca %struct.ScmObj*, align 8
%a40208 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86191)
store volatile %struct.ScmObj* %a40208, %struct.ScmObj** %stackaddr$prim89472, align 8
%stackaddr$prim89473 = alloca %struct.ScmObj*, align 8
%current_45args86192 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86191)
store volatile %struct.ScmObj* %current_45args86192, %struct.ScmObj** %stackaddr$prim89473, align 8
%stackaddr$prim89474 = alloca %struct.ScmObj*, align 8
%b40207 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86192)
store volatile %struct.ScmObj* %b40207, %struct.ScmObj** %stackaddr$prim89474, align 8
%stackaddr$prim89475 = alloca %struct.ScmObj*, align 8
%anf_45bind40306 = call %struct.ScmObj* @prim__60(%struct.ScmObj* %a40208, %struct.ScmObj* %b40207)
store volatile %struct.ScmObj* %anf_45bind40306, %struct.ScmObj** %stackaddr$prim89475, align 8
%stackaddr$prim89476 = alloca %struct.ScmObj*, align 8
%cpsprim40463 = call %struct.ScmObj* @prim_not(%struct.ScmObj* %anf_45bind40306)
store volatile %struct.ScmObj* %cpsprim40463, %struct.ScmObj** %stackaddr$prim89476, align 8
%ae42298 = call %struct.ScmObj* @const_init_int(i64 0)
%args86194$k40462$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89477 = alloca %struct.ScmObj*, align 8
%args86194$k40462$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40463, %struct.ScmObj* %args86194$k40462$0)
store volatile %struct.ScmObj* %args86194$k40462$1, %struct.ScmObj** %stackaddr$prim89477, align 8
%stackaddr$prim89478 = alloca %struct.ScmObj*, align 8
%args86194$k40462$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42298, %struct.ScmObj* %args86194$k40462$1)
store volatile %struct.ScmObj* %args86194$k40462$2, %struct.ScmObj** %stackaddr$prim89478, align 8
%clofunc89479 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40462)
musttail call tailcc void %clofunc89479(%struct.ScmObj* %k40462, %struct.ScmObj* %args86194$k40462$2)
ret void
}

define tailcc void @proc_clo$ae42269(%struct.ScmObj* %env$ae42269,%struct.ScmObj* %current_45args86196) {
%stackaddr$prim89480 = alloca %struct.ScmObj*, align 8
%k40464 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86196)
store volatile %struct.ScmObj* %k40464, %struct.ScmObj** %stackaddr$prim89480, align 8
%stackaddr$prim89481 = alloca %struct.ScmObj*, align 8
%current_45args86197 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86196)
store volatile %struct.ScmObj* %current_45args86197, %struct.ScmObj** %stackaddr$prim89481, align 8
%stackaddr$prim89482 = alloca %struct.ScmObj*, align 8
%a40211 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86197)
store volatile %struct.ScmObj* %a40211, %struct.ScmObj** %stackaddr$prim89482, align 8
%stackaddr$prim89483 = alloca %struct.ScmObj*, align 8
%current_45args86198 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86197)
store volatile %struct.ScmObj* %current_45args86198, %struct.ScmObj** %stackaddr$prim89483, align 8
%stackaddr$prim89484 = alloca %struct.ScmObj*, align 8
%b40210 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86198)
store volatile %struct.ScmObj* %b40210, %struct.ScmObj** %stackaddr$prim89484, align 8
%stackaddr$prim89485 = alloca %struct.ScmObj*, align 8
%anf_45bind40305 = call %struct.ScmObj* @prim__60_61(%struct.ScmObj* %a40211, %struct.ScmObj* %b40210)
store volatile %struct.ScmObj* %anf_45bind40305, %struct.ScmObj** %stackaddr$prim89485, align 8
%stackaddr$prim89486 = alloca %struct.ScmObj*, align 8
%cpsprim40465 = call %struct.ScmObj* @prim_not(%struct.ScmObj* %anf_45bind40305)
store volatile %struct.ScmObj* %cpsprim40465, %struct.ScmObj** %stackaddr$prim89486, align 8
%ae42274 = call %struct.ScmObj* @const_init_int(i64 0)
%args86200$k40464$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89487 = alloca %struct.ScmObj*, align 8
%args86200$k40464$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40465, %struct.ScmObj* %args86200$k40464$0)
store volatile %struct.ScmObj* %args86200$k40464$1, %struct.ScmObj** %stackaddr$prim89487, align 8
%stackaddr$prim89488 = alloca %struct.ScmObj*, align 8
%args86200$k40464$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42274, %struct.ScmObj* %args86200$k40464$1)
store volatile %struct.ScmObj* %args86200$k40464$2, %struct.ScmObj** %stackaddr$prim89488, align 8
%clofunc89489 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40464)
musttail call tailcc void %clofunc89489(%struct.ScmObj* %k40464, %struct.ScmObj* %args86200$k40464$2)
ret void
}

define tailcc void @proc_clo$ae41875(%struct.ScmObj* %env$ae41875,%struct.ScmObj* %current_45args86203) {
%stackaddr$env-ref89490 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41875, i64 0)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89490
%stackaddr$env-ref89491 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41875, i64 1)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89491
%stackaddr$env-ref89492 = alloca %struct.ScmObj*, align 8
%_37map140161 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41875, i64 2)
store %struct.ScmObj* %_37map140161, %struct.ScmObj** %stackaddr$env-ref89492
%stackaddr$prim89493 = alloca %struct.ScmObj*, align 8
%k40466 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86203)
store volatile %struct.ScmObj* %k40466, %struct.ScmObj** %stackaddr$prim89493, align 8
%stackaddr$prim89494 = alloca %struct.ScmObj*, align 8
%current_45args86204 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86203)
store volatile %struct.ScmObj* %current_45args86204, %struct.ScmObj** %stackaddr$prim89494, align 8
%stackaddr$prim89495 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86204)
store volatile %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$prim89495, align 8
%ae41877 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89496 = alloca %struct.ScmObj*, align 8
%fptrToInt89497 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41878 to i64
%ae41878 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt89497)
store volatile %struct.ScmObj* %ae41878, %struct.ScmObj** %stackaddr$makeclosure89496, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41878, %struct.ScmObj* %_37foldr40135, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41878, %struct.ScmObj* %_37foldl40213, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41878, %struct.ScmObj* %_37foldr140130, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41878, %struct.ScmObj* %_37map140161, i64 3)
%args86261$k40466$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89498 = alloca %struct.ScmObj*, align 8
%args86261$k40466$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41878, %struct.ScmObj* %args86261$k40466$0)
store volatile %struct.ScmObj* %args86261$k40466$1, %struct.ScmObj** %stackaddr$prim89498, align 8
%stackaddr$prim89499 = alloca %struct.ScmObj*, align 8
%args86261$k40466$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41877, %struct.ScmObj* %args86261$k40466$1)
store volatile %struct.ScmObj* %args86261$k40466$2, %struct.ScmObj** %stackaddr$prim89499, align 8
%clofunc89500 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40466)
musttail call tailcc void %clofunc89500(%struct.ScmObj* %k40466, %struct.ScmObj* %args86261$k40466$2)
ret void
}

define tailcc void @proc_clo$ae41878(%struct.ScmObj* %env$ae41878,%struct.ScmObj* %args4021440467) {
%stackaddr$env-ref89501 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41878, i64 0)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89501
%stackaddr$env-ref89502 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41878, i64 1)
store %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$env-ref89502
%stackaddr$env-ref89503 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41878, i64 2)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89503
%stackaddr$env-ref89504 = alloca %struct.ScmObj*, align 8
%_37map140161 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41878, i64 3)
store %struct.ScmObj* %_37map140161, %struct.ScmObj** %stackaddr$env-ref89504
%stackaddr$prim89505 = alloca %struct.ScmObj*, align 8
%k40468 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args4021440467)
store volatile %struct.ScmObj* %k40468, %struct.ScmObj** %stackaddr$prim89505, align 8
%stackaddr$prim89506 = alloca %struct.ScmObj*, align 8
%args40214 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args4021440467)
store volatile %struct.ScmObj* %args40214, %struct.ScmObj** %stackaddr$prim89506, align 8
%stackaddr$prim89507 = alloca %struct.ScmObj*, align 8
%f40217 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args40214)
store volatile %struct.ScmObj* %f40217, %struct.ScmObj** %stackaddr$prim89507, align 8
%stackaddr$prim89508 = alloca %struct.ScmObj*, align 8
%anf_45bind40293 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args40214)
store volatile %struct.ScmObj* %anf_45bind40293, %struct.ScmObj** %stackaddr$prim89508, align 8
%stackaddr$prim89509 = alloca %struct.ScmObj*, align 8
%acc40216 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind40293)
store volatile %struct.ScmObj* %acc40216, %struct.ScmObj** %stackaddr$prim89509, align 8
%stackaddr$prim89510 = alloca %struct.ScmObj*, align 8
%anf_45bind40294 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args40214)
store volatile %struct.ScmObj* %anf_45bind40294, %struct.ScmObj** %stackaddr$prim89510, align 8
%stackaddr$prim89511 = alloca %struct.ScmObj*, align 8
%lsts40215 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40294)
store volatile %struct.ScmObj* %lsts40215, %struct.ScmObj** %stackaddr$prim89511, align 8
%stackaddr$makeclosure89512 = alloca %struct.ScmObj*, align 8
%fptrToInt89513 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41886 to i64
%ae41886 = call %struct.ScmObj* @closure_alloc(i64 8, i64 %fptrToInt89513)
store volatile %struct.ScmObj* %ae41886, %struct.ScmObj** %stackaddr$makeclosure89512, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41886, %struct.ScmObj* %lsts40215, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41886, %struct.ScmObj* %_37foldr40135, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41886, %struct.ScmObj* %_37foldl40213, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41886, %struct.ScmObj* %k40468, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41886, %struct.ScmObj* %_37foldr140130, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41886, %struct.ScmObj* %_37map140161, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41886, %struct.ScmObj* %f40217, i64 6)
call void @closure_place_freevar(%struct.ScmObj* %ae41886, %struct.ScmObj* %acc40216, i64 7)
%ae41887 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89514 = alloca %struct.ScmObj*, align 8
%fptrToInt89515 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41888 to i64
%ae41888 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89515)
store volatile %struct.ScmObj* %ae41888, %struct.ScmObj** %stackaddr$makeclosure89514, align 8
%args86260$ae41886$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89516 = alloca %struct.ScmObj*, align 8
%args86260$ae41886$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41888, %struct.ScmObj* %args86260$ae41886$0)
store volatile %struct.ScmObj* %args86260$ae41886$1, %struct.ScmObj** %stackaddr$prim89516, align 8
%stackaddr$prim89517 = alloca %struct.ScmObj*, align 8
%args86260$ae41886$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41887, %struct.ScmObj* %args86260$ae41886$1)
store volatile %struct.ScmObj* %args86260$ae41886$2, %struct.ScmObj** %stackaddr$prim89517, align 8
%clofunc89518 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41886)
musttail call tailcc void %clofunc89518(%struct.ScmObj* %ae41886, %struct.ScmObj* %args86260$ae41886$2)
ret void
}

define tailcc void @proc_clo$ae41886(%struct.ScmObj* %env$ae41886,%struct.ScmObj* %current_45args86206) {
%stackaddr$env-ref89519 = alloca %struct.ScmObj*, align 8
%lsts40215 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41886, i64 0)
store %struct.ScmObj* %lsts40215, %struct.ScmObj** %stackaddr$env-ref89519
%stackaddr$env-ref89520 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41886, i64 1)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89520
%stackaddr$env-ref89521 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41886, i64 2)
store %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$env-ref89521
%stackaddr$env-ref89522 = alloca %struct.ScmObj*, align 8
%k40468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41886, i64 3)
store %struct.ScmObj* %k40468, %struct.ScmObj** %stackaddr$env-ref89522
%stackaddr$env-ref89523 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41886, i64 4)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89523
%stackaddr$env-ref89524 = alloca %struct.ScmObj*, align 8
%_37map140161 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41886, i64 5)
store %struct.ScmObj* %_37map140161, %struct.ScmObj** %stackaddr$env-ref89524
%stackaddr$env-ref89525 = alloca %struct.ScmObj*, align 8
%f40217 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41886, i64 6)
store %struct.ScmObj* %f40217, %struct.ScmObj** %stackaddr$env-ref89525
%stackaddr$env-ref89526 = alloca %struct.ScmObj*, align 8
%acc40216 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41886, i64 7)
store %struct.ScmObj* %acc40216, %struct.ScmObj** %stackaddr$env-ref89526
%stackaddr$prim89527 = alloca %struct.ScmObj*, align 8
%_95k40469 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86206)
store volatile %struct.ScmObj* %_95k40469, %struct.ScmObj** %stackaddr$prim89527, align 8
%stackaddr$prim89528 = alloca %struct.ScmObj*, align 8
%current_45args86207 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86206)
store volatile %struct.ScmObj* %current_45args86207, %struct.ScmObj** %stackaddr$prim89528, align 8
%stackaddr$prim89529 = alloca %struct.ScmObj*, align 8
%anf_45bind40295 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86207)
store volatile %struct.ScmObj* %anf_45bind40295, %struct.ScmObj** %stackaddr$prim89529, align 8
%stackaddr$makeclosure89530 = alloca %struct.ScmObj*, align 8
%fptrToInt89531 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41918 to i64
%ae41918 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt89531)
store volatile %struct.ScmObj* %ae41918, %struct.ScmObj** %stackaddr$makeclosure89530, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41918, %struct.ScmObj* %lsts40215, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41918, %struct.ScmObj* %_37foldr40135, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41918, %struct.ScmObj* %_37foldl40213, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41918, %struct.ScmObj* %k40468, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41918, %struct.ScmObj* %_37map140161, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41918, %struct.ScmObj* %f40217, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41918, %struct.ScmObj* %acc40216, i64 6)
%ae41920 = call %struct.ScmObj* @const_init_false()
%args86253$_37foldr140130$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89532 = alloca %struct.ScmObj*, align 8
%args86253$_37foldr140130$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts40215, %struct.ScmObj* %args86253$_37foldr140130$0)
store volatile %struct.ScmObj* %args86253$_37foldr140130$1, %struct.ScmObj** %stackaddr$prim89532, align 8
%stackaddr$prim89533 = alloca %struct.ScmObj*, align 8
%args86253$_37foldr140130$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41920, %struct.ScmObj* %args86253$_37foldr140130$1)
store volatile %struct.ScmObj* %args86253$_37foldr140130$2, %struct.ScmObj** %stackaddr$prim89533, align 8
%stackaddr$prim89534 = alloca %struct.ScmObj*, align 8
%args86253$_37foldr140130$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40295, %struct.ScmObj* %args86253$_37foldr140130$2)
store volatile %struct.ScmObj* %args86253$_37foldr140130$3, %struct.ScmObj** %stackaddr$prim89534, align 8
%stackaddr$prim89535 = alloca %struct.ScmObj*, align 8
%args86253$_37foldr140130$4 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41918, %struct.ScmObj* %args86253$_37foldr140130$3)
store volatile %struct.ScmObj* %args86253$_37foldr140130$4, %struct.ScmObj** %stackaddr$prim89535, align 8
%clofunc89536 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr140130)
musttail call tailcc void %clofunc89536(%struct.ScmObj* %_37foldr140130, %struct.ScmObj* %args86253$_37foldr140130$4)
ret void
}

define tailcc void @proc_clo$ae41918(%struct.ScmObj* %env$ae41918,%struct.ScmObj* %current_45args86209) {
%stackaddr$env-ref89537 = alloca %struct.ScmObj*, align 8
%lsts40215 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41918, i64 0)
store %struct.ScmObj* %lsts40215, %struct.ScmObj** %stackaddr$env-ref89537
%stackaddr$env-ref89538 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41918, i64 1)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89538
%stackaddr$env-ref89539 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41918, i64 2)
store %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$env-ref89539
%stackaddr$env-ref89540 = alloca %struct.ScmObj*, align 8
%k40468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41918, i64 3)
store %struct.ScmObj* %k40468, %struct.ScmObj** %stackaddr$env-ref89540
%stackaddr$env-ref89541 = alloca %struct.ScmObj*, align 8
%_37map140161 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41918, i64 4)
store %struct.ScmObj* %_37map140161, %struct.ScmObj** %stackaddr$env-ref89541
%stackaddr$env-ref89542 = alloca %struct.ScmObj*, align 8
%f40217 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41918, i64 5)
store %struct.ScmObj* %f40217, %struct.ScmObj** %stackaddr$env-ref89542
%stackaddr$env-ref89543 = alloca %struct.ScmObj*, align 8
%acc40216 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41918, i64 6)
store %struct.ScmObj* %acc40216, %struct.ScmObj** %stackaddr$env-ref89543
%stackaddr$prim89544 = alloca %struct.ScmObj*, align 8
%_95k40470 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86209)
store volatile %struct.ScmObj* %_95k40470, %struct.ScmObj** %stackaddr$prim89544, align 8
%stackaddr$prim89545 = alloca %struct.ScmObj*, align 8
%current_45args86210 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86209)
store volatile %struct.ScmObj* %current_45args86210, %struct.ScmObj** %stackaddr$prim89545, align 8
%stackaddr$prim89546 = alloca %struct.ScmObj*, align 8
%anf_45bind40296 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86210)
store volatile %struct.ScmObj* %anf_45bind40296, %struct.ScmObj** %stackaddr$prim89546, align 8
%truthy$cmp89547 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40296)
%cmp$cmp89547 = icmp eq i64 %truthy$cmp89547, 1
br i1 %cmp$cmp89547, label %truebranch$cmp89547, label %falsebranch$cmp89547
truebranch$cmp89547:
%ae41929 = call %struct.ScmObj* @const_init_int(i64 0)
%args86212$k40468$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89548 = alloca %struct.ScmObj*, align 8
%args86212$k40468$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc40216, %struct.ScmObj* %args86212$k40468$0)
store volatile %struct.ScmObj* %args86212$k40468$1, %struct.ScmObj** %stackaddr$prim89548, align 8
%stackaddr$prim89549 = alloca %struct.ScmObj*, align 8
%args86212$k40468$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41929, %struct.ScmObj* %args86212$k40468$1)
store volatile %struct.ScmObj* %args86212$k40468$2, %struct.ScmObj** %stackaddr$prim89549, align 8
%clofunc89550 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40468)
musttail call tailcc void %clofunc89550(%struct.ScmObj* %k40468, %struct.ScmObj* %args86212$k40468$2)
ret void
falsebranch$cmp89547:
%stackaddr$makeclosure89551 = alloca %struct.ScmObj*, align 8
%fptrToInt89552 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41934 to i64
%ae41934 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt89552)
store volatile %struct.ScmObj* %ae41934, %struct.ScmObj** %stackaddr$makeclosure89551, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41934, %struct.ScmObj* %lsts40215, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41934, %struct.ScmObj* %_37foldr40135, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41934, %struct.ScmObj* %_37foldl40213, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41934, %struct.ScmObj* %k40468, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41934, %struct.ScmObj* %_37map140161, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41934, %struct.ScmObj* %f40217, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41934, %struct.ScmObj* %acc40216, i64 6)
%ae41935 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89553 = alloca %struct.ScmObj*, align 8
%fptrToInt89554 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41936 to i64
%ae41936 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89554)
store volatile %struct.ScmObj* %ae41936, %struct.ScmObj** %stackaddr$makeclosure89553, align 8
%args86252$ae41934$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89555 = alloca %struct.ScmObj*, align 8
%args86252$ae41934$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41936, %struct.ScmObj* %args86252$ae41934$0)
store volatile %struct.ScmObj* %args86252$ae41934$1, %struct.ScmObj** %stackaddr$prim89555, align 8
%stackaddr$prim89556 = alloca %struct.ScmObj*, align 8
%args86252$ae41934$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41935, %struct.ScmObj* %args86252$ae41934$1)
store volatile %struct.ScmObj* %args86252$ae41934$2, %struct.ScmObj** %stackaddr$prim89556, align 8
%clofunc89557 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41934)
musttail call tailcc void %clofunc89557(%struct.ScmObj* %ae41934, %struct.ScmObj* %args86252$ae41934$2)
ret void
}

define tailcc void @proc_clo$ae41934(%struct.ScmObj* %env$ae41934,%struct.ScmObj* %current_45args86213) {
%stackaddr$env-ref89558 = alloca %struct.ScmObj*, align 8
%lsts40215 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41934, i64 0)
store %struct.ScmObj* %lsts40215, %struct.ScmObj** %stackaddr$env-ref89558
%stackaddr$env-ref89559 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41934, i64 1)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89559
%stackaddr$env-ref89560 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41934, i64 2)
store %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$env-ref89560
%stackaddr$env-ref89561 = alloca %struct.ScmObj*, align 8
%k40468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41934, i64 3)
store %struct.ScmObj* %k40468, %struct.ScmObj** %stackaddr$env-ref89561
%stackaddr$env-ref89562 = alloca %struct.ScmObj*, align 8
%_37map140161 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41934, i64 4)
store %struct.ScmObj* %_37map140161, %struct.ScmObj** %stackaddr$env-ref89562
%stackaddr$env-ref89563 = alloca %struct.ScmObj*, align 8
%f40217 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41934, i64 5)
store %struct.ScmObj* %f40217, %struct.ScmObj** %stackaddr$env-ref89563
%stackaddr$env-ref89564 = alloca %struct.ScmObj*, align 8
%acc40216 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41934, i64 6)
store %struct.ScmObj* %acc40216, %struct.ScmObj** %stackaddr$env-ref89564
%stackaddr$prim89565 = alloca %struct.ScmObj*, align 8
%_95k40471 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86213)
store volatile %struct.ScmObj* %_95k40471, %struct.ScmObj** %stackaddr$prim89565, align 8
%stackaddr$prim89566 = alloca %struct.ScmObj*, align 8
%current_45args86214 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86213)
store volatile %struct.ScmObj* %current_45args86214, %struct.ScmObj** %stackaddr$prim89566, align 8
%stackaddr$prim89567 = alloca %struct.ScmObj*, align 8
%anf_45bind40297 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86214)
store volatile %struct.ScmObj* %anf_45bind40297, %struct.ScmObj** %stackaddr$prim89567, align 8
%stackaddr$makeclosure89568 = alloca %struct.ScmObj*, align 8
%fptrToInt89569 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41955 to i64
%ae41955 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt89569)
store volatile %struct.ScmObj* %ae41955, %struct.ScmObj** %stackaddr$makeclosure89568, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41955, %struct.ScmObj* %lsts40215, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41955, %struct.ScmObj* %_37foldr40135, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41955, %struct.ScmObj* %_37foldl40213, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41955, %struct.ScmObj* %k40468, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41955, %struct.ScmObj* %_37map140161, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41955, %struct.ScmObj* %f40217, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41955, %struct.ScmObj* %acc40216, i64 6)
%args86247$_37map140161$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89570 = alloca %struct.ScmObj*, align 8
%args86247$_37map140161$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts40215, %struct.ScmObj* %args86247$_37map140161$0)
store volatile %struct.ScmObj* %args86247$_37map140161$1, %struct.ScmObj** %stackaddr$prim89570, align 8
%stackaddr$prim89571 = alloca %struct.ScmObj*, align 8
%args86247$_37map140161$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40297, %struct.ScmObj* %args86247$_37map140161$1)
store volatile %struct.ScmObj* %args86247$_37map140161$2, %struct.ScmObj** %stackaddr$prim89571, align 8
%stackaddr$prim89572 = alloca %struct.ScmObj*, align 8
%args86247$_37map140161$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41955, %struct.ScmObj* %args86247$_37map140161$2)
store volatile %struct.ScmObj* %args86247$_37map140161$3, %struct.ScmObj** %stackaddr$prim89572, align 8
%clofunc89573 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37map140161)
musttail call tailcc void %clofunc89573(%struct.ScmObj* %_37map140161, %struct.ScmObj* %args86247$_37map140161$3)
ret void
}

define tailcc void @proc_clo$ae41955(%struct.ScmObj* %env$ae41955,%struct.ScmObj* %current_45args86216) {
%stackaddr$env-ref89574 = alloca %struct.ScmObj*, align 8
%lsts40215 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41955, i64 0)
store %struct.ScmObj* %lsts40215, %struct.ScmObj** %stackaddr$env-ref89574
%stackaddr$env-ref89575 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41955, i64 1)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89575
%stackaddr$env-ref89576 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41955, i64 2)
store %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$env-ref89576
%stackaddr$env-ref89577 = alloca %struct.ScmObj*, align 8
%k40468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41955, i64 3)
store %struct.ScmObj* %k40468, %struct.ScmObj** %stackaddr$env-ref89577
%stackaddr$env-ref89578 = alloca %struct.ScmObj*, align 8
%_37map140161 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41955, i64 4)
store %struct.ScmObj* %_37map140161, %struct.ScmObj** %stackaddr$env-ref89578
%stackaddr$env-ref89579 = alloca %struct.ScmObj*, align 8
%f40217 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41955, i64 5)
store %struct.ScmObj* %f40217, %struct.ScmObj** %stackaddr$env-ref89579
%stackaddr$env-ref89580 = alloca %struct.ScmObj*, align 8
%acc40216 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41955, i64 6)
store %struct.ScmObj* %acc40216, %struct.ScmObj** %stackaddr$env-ref89580
%stackaddr$prim89581 = alloca %struct.ScmObj*, align 8
%_95k40472 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86216)
store volatile %struct.ScmObj* %_95k40472, %struct.ScmObj** %stackaddr$prim89581, align 8
%stackaddr$prim89582 = alloca %struct.ScmObj*, align 8
%current_45args86217 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86216)
store volatile %struct.ScmObj* %current_45args86217, %struct.ScmObj** %stackaddr$prim89582, align 8
%stackaddr$prim89583 = alloca %struct.ScmObj*, align 8
%lsts_4340222 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86217)
store volatile %struct.ScmObj* %lsts_4340222, %struct.ScmObj** %stackaddr$prim89583, align 8
%stackaddr$makeclosure89584 = alloca %struct.ScmObj*, align 8
%fptrToInt89585 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41958 to i64
%ae41958 = call %struct.ScmObj* @closure_alloc(i64 8, i64 %fptrToInt89585)
store volatile %struct.ScmObj* %ae41958, %struct.ScmObj** %stackaddr$makeclosure89584, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41958, %struct.ScmObj* %lsts40215, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41958, %struct.ScmObj* %_37foldr40135, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41958, %struct.ScmObj* %_37foldl40213, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41958, %struct.ScmObj* %k40468, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41958, %struct.ScmObj* %_37map140161, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41958, %struct.ScmObj* %lsts_4340222, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41958, %struct.ScmObj* %f40217, i64 6)
call void @closure_place_freevar(%struct.ScmObj* %ae41958, %struct.ScmObj* %acc40216, i64 7)
%ae41959 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89586 = alloca %struct.ScmObj*, align 8
%fptrToInt89587 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41960 to i64
%ae41960 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89587)
store volatile %struct.ScmObj* %ae41960, %struct.ScmObj** %stackaddr$makeclosure89586, align 8
%args86246$ae41958$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89588 = alloca %struct.ScmObj*, align 8
%args86246$ae41958$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41960, %struct.ScmObj* %args86246$ae41958$0)
store volatile %struct.ScmObj* %args86246$ae41958$1, %struct.ScmObj** %stackaddr$prim89588, align 8
%stackaddr$prim89589 = alloca %struct.ScmObj*, align 8
%args86246$ae41958$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41959, %struct.ScmObj* %args86246$ae41958$1)
store volatile %struct.ScmObj* %args86246$ae41958$2, %struct.ScmObj** %stackaddr$prim89589, align 8
%clofunc89590 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41958)
musttail call tailcc void %clofunc89590(%struct.ScmObj* %ae41958, %struct.ScmObj* %args86246$ae41958$2)
ret void
}

define tailcc void @proc_clo$ae41958(%struct.ScmObj* %env$ae41958,%struct.ScmObj* %current_45args86219) {
%stackaddr$env-ref89591 = alloca %struct.ScmObj*, align 8
%lsts40215 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41958, i64 0)
store %struct.ScmObj* %lsts40215, %struct.ScmObj** %stackaddr$env-ref89591
%stackaddr$env-ref89592 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41958, i64 1)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89592
%stackaddr$env-ref89593 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41958, i64 2)
store %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$env-ref89593
%stackaddr$env-ref89594 = alloca %struct.ScmObj*, align 8
%k40468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41958, i64 3)
store %struct.ScmObj* %k40468, %struct.ScmObj** %stackaddr$env-ref89594
%stackaddr$env-ref89595 = alloca %struct.ScmObj*, align 8
%_37map140161 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41958, i64 4)
store %struct.ScmObj* %_37map140161, %struct.ScmObj** %stackaddr$env-ref89595
%stackaddr$env-ref89596 = alloca %struct.ScmObj*, align 8
%lsts_4340222 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41958, i64 5)
store %struct.ScmObj* %lsts_4340222, %struct.ScmObj** %stackaddr$env-ref89596
%stackaddr$env-ref89597 = alloca %struct.ScmObj*, align 8
%f40217 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41958, i64 6)
store %struct.ScmObj* %f40217, %struct.ScmObj** %stackaddr$env-ref89597
%stackaddr$env-ref89598 = alloca %struct.ScmObj*, align 8
%acc40216 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41958, i64 7)
store %struct.ScmObj* %acc40216, %struct.ScmObj** %stackaddr$env-ref89598
%stackaddr$prim89599 = alloca %struct.ScmObj*, align 8
%_95k40473 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86219)
store volatile %struct.ScmObj* %_95k40473, %struct.ScmObj** %stackaddr$prim89599, align 8
%stackaddr$prim89600 = alloca %struct.ScmObj*, align 8
%current_45args86220 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86219)
store volatile %struct.ScmObj* %current_45args86220, %struct.ScmObj** %stackaddr$prim89600, align 8
%stackaddr$prim89601 = alloca %struct.ScmObj*, align 8
%anf_45bind40298 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86220)
store volatile %struct.ScmObj* %anf_45bind40298, %struct.ScmObj** %stackaddr$prim89601, align 8
%stackaddr$makeclosure89602 = alloca %struct.ScmObj*, align 8
%fptrToInt89603 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41979 to i64
%ae41979 = call %struct.ScmObj* @closure_alloc(i64 6, i64 %fptrToInt89603)
store volatile %struct.ScmObj* %ae41979, %struct.ScmObj** %stackaddr$makeclosure89602, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41979, %struct.ScmObj* %_37foldr40135, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41979, %struct.ScmObj* %_37foldl40213, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41979, %struct.ScmObj* %k40468, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41979, %struct.ScmObj* %lsts_4340222, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41979, %struct.ScmObj* %f40217, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41979, %struct.ScmObj* %acc40216, i64 5)
%args86241$_37map140161$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89604 = alloca %struct.ScmObj*, align 8
%args86241$_37map140161$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts40215, %struct.ScmObj* %args86241$_37map140161$0)
store volatile %struct.ScmObj* %args86241$_37map140161$1, %struct.ScmObj** %stackaddr$prim89604, align 8
%stackaddr$prim89605 = alloca %struct.ScmObj*, align 8
%args86241$_37map140161$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40298, %struct.ScmObj* %args86241$_37map140161$1)
store volatile %struct.ScmObj* %args86241$_37map140161$2, %struct.ScmObj** %stackaddr$prim89605, align 8
%stackaddr$prim89606 = alloca %struct.ScmObj*, align 8
%args86241$_37map140161$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41979, %struct.ScmObj* %args86241$_37map140161$2)
store volatile %struct.ScmObj* %args86241$_37map140161$3, %struct.ScmObj** %stackaddr$prim89606, align 8
%clofunc89607 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37map140161)
musttail call tailcc void %clofunc89607(%struct.ScmObj* %_37map140161, %struct.ScmObj* %args86241$_37map140161$3)
ret void
}

define tailcc void @proc_clo$ae41979(%struct.ScmObj* %env$ae41979,%struct.ScmObj* %current_45args86222) {
%stackaddr$env-ref89608 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41979, i64 0)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89608
%stackaddr$env-ref89609 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41979, i64 1)
store %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$env-ref89609
%stackaddr$env-ref89610 = alloca %struct.ScmObj*, align 8
%k40468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41979, i64 2)
store %struct.ScmObj* %k40468, %struct.ScmObj** %stackaddr$env-ref89610
%stackaddr$env-ref89611 = alloca %struct.ScmObj*, align 8
%lsts_4340222 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41979, i64 3)
store %struct.ScmObj* %lsts_4340222, %struct.ScmObj** %stackaddr$env-ref89611
%stackaddr$env-ref89612 = alloca %struct.ScmObj*, align 8
%f40217 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41979, i64 4)
store %struct.ScmObj* %f40217, %struct.ScmObj** %stackaddr$env-ref89612
%stackaddr$env-ref89613 = alloca %struct.ScmObj*, align 8
%acc40216 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41979, i64 5)
store %struct.ScmObj* %acc40216, %struct.ScmObj** %stackaddr$env-ref89613
%stackaddr$prim89614 = alloca %struct.ScmObj*, align 8
%_95k40474 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86222)
store volatile %struct.ScmObj* %_95k40474, %struct.ScmObj** %stackaddr$prim89614, align 8
%stackaddr$prim89615 = alloca %struct.ScmObj*, align 8
%current_45args86223 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86222)
store volatile %struct.ScmObj* %current_45args86223, %struct.ScmObj** %stackaddr$prim89615, align 8
%stackaddr$prim89616 = alloca %struct.ScmObj*, align 8
%vs40220 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86223)
store volatile %struct.ScmObj* %vs40220, %struct.ScmObj** %stackaddr$prim89616, align 8
%stackaddr$makeclosure89617 = alloca %struct.ScmObj*, align 8
%fptrToInt89618 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41982 to i64
%ae41982 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt89618)
store volatile %struct.ScmObj* %ae41982, %struct.ScmObj** %stackaddr$makeclosure89617, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41982, %struct.ScmObj* %_37foldr40135, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41982, %struct.ScmObj* %_37foldl40213, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41982, %struct.ScmObj* %k40468, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41982, %struct.ScmObj* %lsts_4340222, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41982, %struct.ScmObj* %vs40220, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41982, %struct.ScmObj* %f40217, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41982, %struct.ScmObj* %acc40216, i64 6)
%ae41983 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89619 = alloca %struct.ScmObj*, align 8
%fptrToInt89620 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41984 to i64
%ae41984 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89620)
store volatile %struct.ScmObj* %ae41984, %struct.ScmObj** %stackaddr$makeclosure89619, align 8
%args86240$ae41982$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89621 = alloca %struct.ScmObj*, align 8
%args86240$ae41982$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41984, %struct.ScmObj* %args86240$ae41982$0)
store volatile %struct.ScmObj* %args86240$ae41982$1, %struct.ScmObj** %stackaddr$prim89621, align 8
%stackaddr$prim89622 = alloca %struct.ScmObj*, align 8
%args86240$ae41982$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41983, %struct.ScmObj* %args86240$ae41982$1)
store volatile %struct.ScmObj* %args86240$ae41982$2, %struct.ScmObj** %stackaddr$prim89622, align 8
%clofunc89623 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41982)
musttail call tailcc void %clofunc89623(%struct.ScmObj* %ae41982, %struct.ScmObj* %args86240$ae41982$2)
ret void
}

define tailcc void @proc_clo$ae41982(%struct.ScmObj* %env$ae41982,%struct.ScmObj* %current_45args86225) {
%stackaddr$env-ref89624 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41982, i64 0)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89624
%stackaddr$env-ref89625 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41982, i64 1)
store %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$env-ref89625
%stackaddr$env-ref89626 = alloca %struct.ScmObj*, align 8
%k40468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41982, i64 2)
store %struct.ScmObj* %k40468, %struct.ScmObj** %stackaddr$env-ref89626
%stackaddr$env-ref89627 = alloca %struct.ScmObj*, align 8
%lsts_4340222 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41982, i64 3)
store %struct.ScmObj* %lsts_4340222, %struct.ScmObj** %stackaddr$env-ref89627
%stackaddr$env-ref89628 = alloca %struct.ScmObj*, align 8
%vs40220 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41982, i64 4)
store %struct.ScmObj* %vs40220, %struct.ScmObj** %stackaddr$env-ref89628
%stackaddr$env-ref89629 = alloca %struct.ScmObj*, align 8
%f40217 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41982, i64 5)
store %struct.ScmObj* %f40217, %struct.ScmObj** %stackaddr$env-ref89629
%stackaddr$env-ref89630 = alloca %struct.ScmObj*, align 8
%acc40216 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41982, i64 6)
store %struct.ScmObj* %acc40216, %struct.ScmObj** %stackaddr$env-ref89630
%stackaddr$prim89631 = alloca %struct.ScmObj*, align 8
%_95k40475 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86225)
store volatile %struct.ScmObj* %_95k40475, %struct.ScmObj** %stackaddr$prim89631, align 8
%stackaddr$prim89632 = alloca %struct.ScmObj*, align 8
%current_45args86226 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86225)
store volatile %struct.ScmObj* %current_45args86226, %struct.ScmObj** %stackaddr$prim89632, align 8
%stackaddr$prim89633 = alloca %struct.ScmObj*, align 8
%anf_45bind40299 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86226)
store volatile %struct.ScmObj* %anf_45bind40299, %struct.ScmObj** %stackaddr$prim89633, align 8
%ae42005 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89634 = alloca %struct.ScmObj*, align 8
%anf_45bind40300 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc40216, %struct.ScmObj* %ae42005)
store volatile %struct.ScmObj* %anf_45bind40300, %struct.ScmObj** %stackaddr$prim89634, align 8
%stackaddr$makeclosure89635 = alloca %struct.ScmObj*, align 8
%fptrToInt89636 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42007 to i64
%ae42007 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt89636)
store volatile %struct.ScmObj* %ae42007, %struct.ScmObj** %stackaddr$makeclosure89635, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42007, %struct.ScmObj* %_37foldl40213, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42007, %struct.ScmObj* %k40468, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae42007, %struct.ScmObj* %lsts_4340222, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae42007, %struct.ScmObj* %f40217, i64 3)
%args86234$_37foldr40135$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89637 = alloca %struct.ScmObj*, align 8
%args86234$_37foldr40135$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %vs40220, %struct.ScmObj* %args86234$_37foldr40135$0)
store volatile %struct.ScmObj* %args86234$_37foldr40135$1, %struct.ScmObj** %stackaddr$prim89637, align 8
%stackaddr$prim89638 = alloca %struct.ScmObj*, align 8
%args86234$_37foldr40135$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40300, %struct.ScmObj* %args86234$_37foldr40135$1)
store volatile %struct.ScmObj* %args86234$_37foldr40135$2, %struct.ScmObj** %stackaddr$prim89638, align 8
%stackaddr$prim89639 = alloca %struct.ScmObj*, align 8
%args86234$_37foldr40135$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40299, %struct.ScmObj* %args86234$_37foldr40135$2)
store volatile %struct.ScmObj* %args86234$_37foldr40135$3, %struct.ScmObj** %stackaddr$prim89639, align 8
%stackaddr$prim89640 = alloca %struct.ScmObj*, align 8
%args86234$_37foldr40135$4 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42007, %struct.ScmObj* %args86234$_37foldr40135$3)
store volatile %struct.ScmObj* %args86234$_37foldr40135$4, %struct.ScmObj** %stackaddr$prim89640, align 8
%clofunc89641 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr40135)
musttail call tailcc void %clofunc89641(%struct.ScmObj* %_37foldr40135, %struct.ScmObj* %args86234$_37foldr40135$4)
ret void
}

define tailcc void @proc_clo$ae42007(%struct.ScmObj* %env$ae42007,%struct.ScmObj* %current_45args86228) {
%stackaddr$env-ref89642 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42007, i64 0)
store %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$env-ref89642
%stackaddr$env-ref89643 = alloca %struct.ScmObj*, align 8
%k40468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42007, i64 1)
store %struct.ScmObj* %k40468, %struct.ScmObj** %stackaddr$env-ref89643
%stackaddr$env-ref89644 = alloca %struct.ScmObj*, align 8
%lsts_4340222 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42007, i64 2)
store %struct.ScmObj* %lsts_4340222, %struct.ScmObj** %stackaddr$env-ref89644
%stackaddr$env-ref89645 = alloca %struct.ScmObj*, align 8
%f40217 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42007, i64 3)
store %struct.ScmObj* %f40217, %struct.ScmObj** %stackaddr$env-ref89645
%stackaddr$prim89646 = alloca %struct.ScmObj*, align 8
%_95k40476 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86228)
store volatile %struct.ScmObj* %_95k40476, %struct.ScmObj** %stackaddr$prim89646, align 8
%stackaddr$prim89647 = alloca %struct.ScmObj*, align 8
%current_45args86229 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86228)
store volatile %struct.ScmObj* %current_45args86229, %struct.ScmObj** %stackaddr$prim89647, align 8
%stackaddr$prim89648 = alloca %struct.ScmObj*, align 8
%anf_45bind40301 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86229)
store volatile %struct.ScmObj* %anf_45bind40301, %struct.ScmObj** %stackaddr$prim89648, align 8
%stackaddr$makeclosure89649 = alloca %struct.ScmObj*, align 8
%fptrToInt89650 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae42011 to i64
%ae42011 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt89650)
store volatile %struct.ScmObj* %ae42011, %struct.ScmObj** %stackaddr$makeclosure89649, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae42011, %struct.ScmObj* %_37foldl40213, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae42011, %struct.ScmObj* %k40468, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae42011, %struct.ScmObj* %lsts_4340222, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae42011, %struct.ScmObj* %f40217, i64 3)
%stackaddr$prim89651 = alloca %struct.ScmObj*, align 8
%cpsargs40479 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae42011, %struct.ScmObj* %anf_45bind40301)
store volatile %struct.ScmObj* %cpsargs40479, %struct.ScmObj** %stackaddr$prim89651, align 8
%clofunc89652 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f40217)
musttail call tailcc void %clofunc89652(%struct.ScmObj* %f40217, %struct.ScmObj* %cpsargs40479)
ret void
}

define tailcc void @proc_clo$ae42011(%struct.ScmObj* %env$ae42011,%struct.ScmObj* %current_45args86231) {
%stackaddr$env-ref89653 = alloca %struct.ScmObj*, align 8
%_37foldl40213 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42011, i64 0)
store %struct.ScmObj* %_37foldl40213, %struct.ScmObj** %stackaddr$env-ref89653
%stackaddr$env-ref89654 = alloca %struct.ScmObj*, align 8
%k40468 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42011, i64 1)
store %struct.ScmObj* %k40468, %struct.ScmObj** %stackaddr$env-ref89654
%stackaddr$env-ref89655 = alloca %struct.ScmObj*, align 8
%lsts_4340222 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42011, i64 2)
store %struct.ScmObj* %lsts_4340222, %struct.ScmObj** %stackaddr$env-ref89655
%stackaddr$env-ref89656 = alloca %struct.ScmObj*, align 8
%f40217 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae42011, i64 3)
store %struct.ScmObj* %f40217, %struct.ScmObj** %stackaddr$env-ref89656
%stackaddr$prim89657 = alloca %struct.ScmObj*, align 8
%_95k40477 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86231)
store volatile %struct.ScmObj* %_95k40477, %struct.ScmObj** %stackaddr$prim89657, align 8
%stackaddr$prim89658 = alloca %struct.ScmObj*, align 8
%current_45args86232 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86231)
store volatile %struct.ScmObj* %current_45args86232, %struct.ScmObj** %stackaddr$prim89658, align 8
%stackaddr$prim89659 = alloca %struct.ScmObj*, align 8
%acc_4340224 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86232)
store volatile %struct.ScmObj* %acc_4340224, %struct.ScmObj** %stackaddr$prim89659, align 8
%stackaddr$prim89660 = alloca %struct.ScmObj*, align 8
%anf_45bind40302 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc_4340224, %struct.ScmObj* %lsts_4340222)
store volatile %struct.ScmObj* %anf_45bind40302, %struct.ScmObj** %stackaddr$prim89660, align 8
%stackaddr$prim89661 = alloca %struct.ScmObj*, align 8
%anf_45bind40303 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f40217, %struct.ScmObj* %anf_45bind40302)
store volatile %struct.ScmObj* %anf_45bind40303, %struct.ScmObj** %stackaddr$prim89661, align 8
%stackaddr$prim89662 = alloca %struct.ScmObj*, align 8
%cpsargs40478 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40468, %struct.ScmObj* %anf_45bind40303)
store volatile %struct.ScmObj* %cpsargs40478, %struct.ScmObj** %stackaddr$prim89662, align 8
%clofunc89663 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldl40213)
musttail call tailcc void %clofunc89663(%struct.ScmObj* %_37foldl40213, %struct.ScmObj* %cpsargs40478)
ret void
}

define tailcc void @proc_clo$ae41984(%struct.ScmObj* %env$ae41984,%struct.ScmObj* %current_45args86235) {
%stackaddr$prim89664 = alloca %struct.ScmObj*, align 8
%k40480 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86235)
store volatile %struct.ScmObj* %k40480, %struct.ScmObj** %stackaddr$prim89664, align 8
%stackaddr$prim89665 = alloca %struct.ScmObj*, align 8
%current_45args86236 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86235)
store volatile %struct.ScmObj* %current_45args86236, %struct.ScmObj** %stackaddr$prim89665, align 8
%stackaddr$prim89666 = alloca %struct.ScmObj*, align 8
%a40226 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86236)
store volatile %struct.ScmObj* %a40226, %struct.ScmObj** %stackaddr$prim89666, align 8
%stackaddr$prim89667 = alloca %struct.ScmObj*, align 8
%current_45args86237 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86236)
store volatile %struct.ScmObj* %current_45args86237, %struct.ScmObj** %stackaddr$prim89667, align 8
%stackaddr$prim89668 = alloca %struct.ScmObj*, align 8
%b40225 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86237)
store volatile %struct.ScmObj* %b40225, %struct.ScmObj** %stackaddr$prim89668, align 8
%stackaddr$prim89669 = alloca %struct.ScmObj*, align 8
%cpsprim40481 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %a40226, %struct.ScmObj* %b40225)
store volatile %struct.ScmObj* %cpsprim40481, %struct.ScmObj** %stackaddr$prim89669, align 8
%ae41988 = call %struct.ScmObj* @const_init_int(i64 0)
%args86239$k40480$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89670 = alloca %struct.ScmObj*, align 8
%args86239$k40480$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40481, %struct.ScmObj* %args86239$k40480$0)
store volatile %struct.ScmObj* %args86239$k40480$1, %struct.ScmObj** %stackaddr$prim89670, align 8
%stackaddr$prim89671 = alloca %struct.ScmObj*, align 8
%args86239$k40480$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41988, %struct.ScmObj* %args86239$k40480$1)
store volatile %struct.ScmObj* %args86239$k40480$2, %struct.ScmObj** %stackaddr$prim89671, align 8
%clofunc89672 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40480)
musttail call tailcc void %clofunc89672(%struct.ScmObj* %k40480, %struct.ScmObj* %args86239$k40480$2)
ret void
}

define tailcc void @proc_clo$ae41960(%struct.ScmObj* %env$ae41960,%struct.ScmObj* %current_45args86242) {
%stackaddr$prim89673 = alloca %struct.ScmObj*, align 8
%k40482 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86242)
store volatile %struct.ScmObj* %k40482, %struct.ScmObj** %stackaddr$prim89673, align 8
%stackaddr$prim89674 = alloca %struct.ScmObj*, align 8
%current_45args86243 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86242)
store volatile %struct.ScmObj* %current_45args86243, %struct.ScmObj** %stackaddr$prim89674, align 8
%stackaddr$prim89675 = alloca %struct.ScmObj*, align 8
%x40221 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86243)
store volatile %struct.ScmObj* %x40221, %struct.ScmObj** %stackaddr$prim89675, align 8
%stackaddr$prim89676 = alloca %struct.ScmObj*, align 8
%cpsprim40483 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %x40221)
store volatile %struct.ScmObj* %cpsprim40483, %struct.ScmObj** %stackaddr$prim89676, align 8
%ae41963 = call %struct.ScmObj* @const_init_int(i64 0)
%args86245$k40482$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89677 = alloca %struct.ScmObj*, align 8
%args86245$k40482$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40483, %struct.ScmObj* %args86245$k40482$0)
store volatile %struct.ScmObj* %args86245$k40482$1, %struct.ScmObj** %stackaddr$prim89677, align 8
%stackaddr$prim89678 = alloca %struct.ScmObj*, align 8
%args86245$k40482$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41963, %struct.ScmObj* %args86245$k40482$1)
store volatile %struct.ScmObj* %args86245$k40482$2, %struct.ScmObj** %stackaddr$prim89678, align 8
%clofunc89679 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40482)
musttail call tailcc void %clofunc89679(%struct.ScmObj* %k40482, %struct.ScmObj* %args86245$k40482$2)
ret void
}

define tailcc void @proc_clo$ae41936(%struct.ScmObj* %env$ae41936,%struct.ScmObj* %current_45args86248) {
%stackaddr$prim89680 = alloca %struct.ScmObj*, align 8
%k40484 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86248)
store volatile %struct.ScmObj* %k40484, %struct.ScmObj** %stackaddr$prim89680, align 8
%stackaddr$prim89681 = alloca %struct.ScmObj*, align 8
%current_45args86249 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86248)
store volatile %struct.ScmObj* %current_45args86249, %struct.ScmObj** %stackaddr$prim89681, align 8
%stackaddr$prim89682 = alloca %struct.ScmObj*, align 8
%x40223 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86249)
store volatile %struct.ScmObj* %x40223, %struct.ScmObj** %stackaddr$prim89682, align 8
%stackaddr$prim89683 = alloca %struct.ScmObj*, align 8
%cpsprim40485 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %x40223)
store volatile %struct.ScmObj* %cpsprim40485, %struct.ScmObj** %stackaddr$prim89683, align 8
%ae41939 = call %struct.ScmObj* @const_init_int(i64 0)
%args86251$k40484$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89684 = alloca %struct.ScmObj*, align 8
%args86251$k40484$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40485, %struct.ScmObj* %args86251$k40484$0)
store volatile %struct.ScmObj* %args86251$k40484$1, %struct.ScmObj** %stackaddr$prim89684, align 8
%stackaddr$prim89685 = alloca %struct.ScmObj*, align 8
%args86251$k40484$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41939, %struct.ScmObj* %args86251$k40484$1)
store volatile %struct.ScmObj* %args86251$k40484$2, %struct.ScmObj** %stackaddr$prim89685, align 8
%clofunc89686 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40484)
musttail call tailcc void %clofunc89686(%struct.ScmObj* %k40484, %struct.ScmObj* %args86251$k40484$2)
ret void
}

define tailcc void @proc_clo$ae41888(%struct.ScmObj* %env$ae41888,%struct.ScmObj* %current_45args86254) {
%stackaddr$prim89687 = alloca %struct.ScmObj*, align 8
%k40486 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86254)
store volatile %struct.ScmObj* %k40486, %struct.ScmObj** %stackaddr$prim89687, align 8
%stackaddr$prim89688 = alloca %struct.ScmObj*, align 8
%current_45args86255 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86254)
store volatile %struct.ScmObj* %current_45args86255, %struct.ScmObj** %stackaddr$prim89688, align 8
%stackaddr$prim89689 = alloca %struct.ScmObj*, align 8
%lst40219 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86255)
store volatile %struct.ScmObj* %lst40219, %struct.ScmObj** %stackaddr$prim89689, align 8
%stackaddr$prim89690 = alloca %struct.ScmObj*, align 8
%current_45args86256 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86255)
store volatile %struct.ScmObj* %current_45args86256, %struct.ScmObj** %stackaddr$prim89690, align 8
%stackaddr$prim89691 = alloca %struct.ScmObj*, align 8
%b40218 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86256)
store volatile %struct.ScmObj* %b40218, %struct.ScmObj** %stackaddr$prim89691, align 8
%truthy$cmp89692 = call i64 @is_truthy_value(%struct.ScmObj* %b40218)
%cmp$cmp89692 = icmp eq i64 %truthy$cmp89692, 1
br i1 %cmp$cmp89692, label %truebranch$cmp89692, label %falsebranch$cmp89692
truebranch$cmp89692:
%ae41891 = call %struct.ScmObj* @const_init_int(i64 0)
%args86258$k40486$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89693 = alloca %struct.ScmObj*, align 8
%args86258$k40486$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %b40218, %struct.ScmObj* %args86258$k40486$0)
store volatile %struct.ScmObj* %args86258$k40486$1, %struct.ScmObj** %stackaddr$prim89693, align 8
%stackaddr$prim89694 = alloca %struct.ScmObj*, align 8
%args86258$k40486$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41891, %struct.ScmObj* %args86258$k40486$1)
store volatile %struct.ScmObj* %args86258$k40486$2, %struct.ScmObj** %stackaddr$prim89694, align 8
%clofunc89695 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40486)
musttail call tailcc void %clofunc89695(%struct.ScmObj* %k40486, %struct.ScmObj* %args86258$k40486$2)
ret void
falsebranch$cmp89692:
%stackaddr$prim89696 = alloca %struct.ScmObj*, align 8
%cpsprim40487 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst40219)
store volatile %struct.ScmObj* %cpsprim40487, %struct.ScmObj** %stackaddr$prim89696, align 8
%ae41898 = call %struct.ScmObj* @const_init_int(i64 0)
%args86259$k40486$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89697 = alloca %struct.ScmObj*, align 8
%args86259$k40486$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40487, %struct.ScmObj* %args86259$k40486$0)
store volatile %struct.ScmObj* %args86259$k40486$1, %struct.ScmObj** %stackaddr$prim89697, align 8
%stackaddr$prim89698 = alloca %struct.ScmObj*, align 8
%args86259$k40486$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41898, %struct.ScmObj* %args86259$k40486$1)
store volatile %struct.ScmObj* %args86259$k40486$2, %struct.ScmObj** %stackaddr$prim89698, align 8
%clofunc89699 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40486)
musttail call tailcc void %clofunc89699(%struct.ScmObj* %k40486, %struct.ScmObj* %args86259$k40486$2)
ret void
}

define tailcc void @proc_clo$ae41729(%struct.ScmObj* %env$ae41729,%struct.ScmObj* %args4015740488) {
%stackaddr$env-ref89700 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41729, i64 0)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89700
%stackaddr$env-ref89701 = alloca %struct.ScmObj*, align 8
%_37drop_45right40149 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41729, i64 1)
store %struct.ScmObj* %_37drop_45right40149, %struct.ScmObj** %stackaddr$env-ref89701
%stackaddr$env-ref89702 = alloca %struct.ScmObj*, align 8
%_37last40152 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41729, i64 2)
store %struct.ScmObj* %_37last40152, %struct.ScmObj** %stackaddr$env-ref89702
%stackaddr$prim89703 = alloca %struct.ScmObj*, align 8
%k40489 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args4015740488)
store volatile %struct.ScmObj* %k40489, %struct.ScmObj** %stackaddr$prim89703, align 8
%stackaddr$prim89704 = alloca %struct.ScmObj*, align 8
%args40157 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args4015740488)
store volatile %struct.ScmObj* %args40157, %struct.ScmObj** %stackaddr$prim89704, align 8
%stackaddr$prim89705 = alloca %struct.ScmObj*, align 8
%f40159 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args40157)
store volatile %struct.ScmObj* %f40159, %struct.ScmObj** %stackaddr$prim89705, align 8
%stackaddr$prim89706 = alloca %struct.ScmObj*, align 8
%lsts40158 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args40157)
store volatile %struct.ScmObj* %lsts40158, %struct.ScmObj** %stackaddr$prim89706, align 8
%stackaddr$makeclosure89707 = alloca %struct.ScmObj*, align 8
%fptrToInt89708 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41734 to i64
%ae41734 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89708)
store volatile %struct.ScmObj* %ae41734, %struct.ScmObj** %stackaddr$makeclosure89707, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41734, %struct.ScmObj* %_37foldr40135, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41734, %struct.ScmObj* %lsts40158, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41734, %struct.ScmObj* %k40489, i64 2)
%ae41735 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89709 = alloca %struct.ScmObj*, align 8
%fptrToInt89710 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41736 to i64
%ae41736 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89710)
store volatile %struct.ScmObj* %ae41736, %struct.ScmObj** %stackaddr$makeclosure89709, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41736, %struct.ScmObj* %_37drop_45right40149, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41736, %struct.ScmObj* %f40159, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41736, %struct.ScmObj* %_37last40152, i64 2)
%args86278$ae41734$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89711 = alloca %struct.ScmObj*, align 8
%args86278$ae41734$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41736, %struct.ScmObj* %args86278$ae41734$0)
store volatile %struct.ScmObj* %args86278$ae41734$1, %struct.ScmObj** %stackaddr$prim89711, align 8
%stackaddr$prim89712 = alloca %struct.ScmObj*, align 8
%args86278$ae41734$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41735, %struct.ScmObj* %args86278$ae41734$1)
store volatile %struct.ScmObj* %args86278$ae41734$2, %struct.ScmObj** %stackaddr$prim89712, align 8
%clofunc89713 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41734)
musttail call tailcc void %clofunc89713(%struct.ScmObj* %ae41734, %struct.ScmObj* %args86278$ae41734$2)
ret void
}

define tailcc void @proc_clo$ae41734(%struct.ScmObj* %env$ae41734,%struct.ScmObj* %current_45args86263) {
%stackaddr$env-ref89714 = alloca %struct.ScmObj*, align 8
%_37foldr40135 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41734, i64 0)
store %struct.ScmObj* %_37foldr40135, %struct.ScmObj** %stackaddr$env-ref89714
%stackaddr$env-ref89715 = alloca %struct.ScmObj*, align 8
%lsts40158 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41734, i64 1)
store %struct.ScmObj* %lsts40158, %struct.ScmObj** %stackaddr$env-ref89715
%stackaddr$env-ref89716 = alloca %struct.ScmObj*, align 8
%k40489 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41734, i64 2)
store %struct.ScmObj* %k40489, %struct.ScmObj** %stackaddr$env-ref89716
%stackaddr$prim89717 = alloca %struct.ScmObj*, align 8
%_95k40490 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86263)
store volatile %struct.ScmObj* %_95k40490, %struct.ScmObj** %stackaddr$prim89717, align 8
%stackaddr$prim89718 = alloca %struct.ScmObj*, align 8
%current_45args86264 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86263)
store volatile %struct.ScmObj* %current_45args86264, %struct.ScmObj** %stackaddr$prim89718, align 8
%stackaddr$prim89719 = alloca %struct.ScmObj*, align 8
%anf_45bind40290 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86264)
store volatile %struct.ScmObj* %anf_45bind40290, %struct.ScmObj** %stackaddr$prim89719, align 8
%ae41797 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89720 = alloca %struct.ScmObj*, align 8
%anf_45bind40291 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41797, %struct.ScmObj* %lsts40158)
store volatile %struct.ScmObj* %anf_45bind40291, %struct.ScmObj** %stackaddr$prim89720, align 8
%stackaddr$prim89721 = alloca %struct.ScmObj*, align 8
%anf_45bind40292 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40290, %struct.ScmObj* %anf_45bind40291)
store volatile %struct.ScmObj* %anf_45bind40292, %struct.ScmObj** %stackaddr$prim89721, align 8
%stackaddr$prim89722 = alloca %struct.ScmObj*, align 8
%cpsargs40491 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40489, %struct.ScmObj* %anf_45bind40292)
store volatile %struct.ScmObj* %cpsargs40491, %struct.ScmObj** %stackaddr$prim89722, align 8
%clofunc89723 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr40135)
musttail call tailcc void %clofunc89723(%struct.ScmObj* %_37foldr40135, %struct.ScmObj* %cpsargs40491)
ret void
}

define tailcc void @proc_clo$ae41736(%struct.ScmObj* %env$ae41736,%struct.ScmObj* %fargs4016040492) {
%stackaddr$env-ref89724 = alloca %struct.ScmObj*, align 8
%_37drop_45right40149 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41736, i64 0)
store %struct.ScmObj* %_37drop_45right40149, %struct.ScmObj** %stackaddr$env-ref89724
%stackaddr$env-ref89725 = alloca %struct.ScmObj*, align 8
%f40159 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41736, i64 1)
store %struct.ScmObj* %f40159, %struct.ScmObj** %stackaddr$env-ref89725
%stackaddr$env-ref89726 = alloca %struct.ScmObj*, align 8
%_37last40152 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41736, i64 2)
store %struct.ScmObj* %_37last40152, %struct.ScmObj** %stackaddr$env-ref89726
%stackaddr$prim89727 = alloca %struct.ScmObj*, align 8
%k40493 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %fargs4016040492)
store volatile %struct.ScmObj* %k40493, %struct.ScmObj** %stackaddr$prim89727, align 8
%stackaddr$prim89728 = alloca %struct.ScmObj*, align 8
%fargs40160 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %fargs4016040492)
store volatile %struct.ScmObj* %fargs40160, %struct.ScmObj** %stackaddr$prim89728, align 8
%stackaddr$makeclosure89729 = alloca %struct.ScmObj*, align 8
%fptrToInt89730 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41740 to i64
%ae41740 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt89730)
store volatile %struct.ScmObj* %ae41740, %struct.ScmObj** %stackaddr$makeclosure89729, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41740, %struct.ScmObj* %fargs40160, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41740, %struct.ScmObj* %f40159, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41740, %struct.ScmObj* %k40493, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41740, %struct.ScmObj* %_37last40152, i64 3)
%ae41742 = call %struct.ScmObj* @const_init_int(i64 1)
%args86277$_37drop_45right40149$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89731 = alloca %struct.ScmObj*, align 8
%args86277$_37drop_45right40149$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41742, %struct.ScmObj* %args86277$_37drop_45right40149$0)
store volatile %struct.ScmObj* %args86277$_37drop_45right40149$1, %struct.ScmObj** %stackaddr$prim89731, align 8
%stackaddr$prim89732 = alloca %struct.ScmObj*, align 8
%args86277$_37drop_45right40149$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %fargs40160, %struct.ScmObj* %args86277$_37drop_45right40149$1)
store volatile %struct.ScmObj* %args86277$_37drop_45right40149$2, %struct.ScmObj** %stackaddr$prim89732, align 8
%stackaddr$prim89733 = alloca %struct.ScmObj*, align 8
%args86277$_37drop_45right40149$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41740, %struct.ScmObj* %args86277$_37drop_45right40149$2)
store volatile %struct.ScmObj* %args86277$_37drop_45right40149$3, %struct.ScmObj** %stackaddr$prim89733, align 8
%clofunc89734 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37drop_45right40149)
musttail call tailcc void %clofunc89734(%struct.ScmObj* %_37drop_45right40149, %struct.ScmObj* %args86277$_37drop_45right40149$3)
ret void
}

define tailcc void @proc_clo$ae41740(%struct.ScmObj* %env$ae41740,%struct.ScmObj* %current_45args86266) {
%stackaddr$env-ref89735 = alloca %struct.ScmObj*, align 8
%fargs40160 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41740, i64 0)
store %struct.ScmObj* %fargs40160, %struct.ScmObj** %stackaddr$env-ref89735
%stackaddr$env-ref89736 = alloca %struct.ScmObj*, align 8
%f40159 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41740, i64 1)
store %struct.ScmObj* %f40159, %struct.ScmObj** %stackaddr$env-ref89736
%stackaddr$env-ref89737 = alloca %struct.ScmObj*, align 8
%k40493 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41740, i64 2)
store %struct.ScmObj* %k40493, %struct.ScmObj** %stackaddr$env-ref89737
%stackaddr$env-ref89738 = alloca %struct.ScmObj*, align 8
%_37last40152 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41740, i64 3)
store %struct.ScmObj* %_37last40152, %struct.ScmObj** %stackaddr$env-ref89738
%stackaddr$prim89739 = alloca %struct.ScmObj*, align 8
%_95k40494 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86266)
store volatile %struct.ScmObj* %_95k40494, %struct.ScmObj** %stackaddr$prim89739, align 8
%stackaddr$prim89740 = alloca %struct.ScmObj*, align 8
%current_45args86267 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86266)
store volatile %struct.ScmObj* %current_45args86267, %struct.ScmObj** %stackaddr$prim89740, align 8
%stackaddr$prim89741 = alloca %struct.ScmObj*, align 8
%anf_45bind40287 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86267)
store volatile %struct.ScmObj* %anf_45bind40287, %struct.ScmObj** %stackaddr$prim89741, align 8
%stackaddr$makeclosure89742 = alloca %struct.ScmObj*, align 8
%fptrToInt89743 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41747 to i64
%ae41747 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89743)
store volatile %struct.ScmObj* %ae41747, %struct.ScmObj** %stackaddr$makeclosure89742, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41747, %struct.ScmObj* %fargs40160, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41747, %struct.ScmObj* %k40493, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41747, %struct.ScmObj* %_37last40152, i64 2)
%stackaddr$prim89744 = alloca %struct.ScmObj*, align 8
%cpsargs40498 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41747, %struct.ScmObj* %anf_45bind40287)
store volatile %struct.ScmObj* %cpsargs40498, %struct.ScmObj** %stackaddr$prim89744, align 8
%clofunc89745 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f40159)
musttail call tailcc void %clofunc89745(%struct.ScmObj* %f40159, %struct.ScmObj* %cpsargs40498)
ret void
}

define tailcc void @proc_clo$ae41747(%struct.ScmObj* %env$ae41747,%struct.ScmObj* %current_45args86269) {
%stackaddr$env-ref89746 = alloca %struct.ScmObj*, align 8
%fargs40160 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41747, i64 0)
store %struct.ScmObj* %fargs40160, %struct.ScmObj** %stackaddr$env-ref89746
%stackaddr$env-ref89747 = alloca %struct.ScmObj*, align 8
%k40493 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41747, i64 1)
store %struct.ScmObj* %k40493, %struct.ScmObj** %stackaddr$env-ref89747
%stackaddr$env-ref89748 = alloca %struct.ScmObj*, align 8
%_37last40152 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41747, i64 2)
store %struct.ScmObj* %_37last40152, %struct.ScmObj** %stackaddr$env-ref89748
%stackaddr$prim89749 = alloca %struct.ScmObj*, align 8
%_95k40495 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86269)
store volatile %struct.ScmObj* %_95k40495, %struct.ScmObj** %stackaddr$prim89749, align 8
%stackaddr$prim89750 = alloca %struct.ScmObj*, align 8
%current_45args86270 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86269)
store volatile %struct.ScmObj* %current_45args86270, %struct.ScmObj** %stackaddr$prim89750, align 8
%stackaddr$prim89751 = alloca %struct.ScmObj*, align 8
%anf_45bind40288 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86270)
store volatile %struct.ScmObj* %anf_45bind40288, %struct.ScmObj** %stackaddr$prim89751, align 8
%stackaddr$makeclosure89752 = alloca %struct.ScmObj*, align 8
%fptrToInt89753 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41752 to i64
%ae41752 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt89753)
store volatile %struct.ScmObj* %ae41752, %struct.ScmObj** %stackaddr$makeclosure89752, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41752, %struct.ScmObj* %anf_45bind40288, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41752, %struct.ScmObj* %k40493, i64 1)
%args86276$_37last40152$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89754 = alloca %struct.ScmObj*, align 8
%args86276$_37last40152$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %fargs40160, %struct.ScmObj* %args86276$_37last40152$0)
store volatile %struct.ScmObj* %args86276$_37last40152$1, %struct.ScmObj** %stackaddr$prim89754, align 8
%stackaddr$prim89755 = alloca %struct.ScmObj*, align 8
%args86276$_37last40152$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41752, %struct.ScmObj* %args86276$_37last40152$1)
store volatile %struct.ScmObj* %args86276$_37last40152$2, %struct.ScmObj** %stackaddr$prim89755, align 8
%clofunc89756 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37last40152)
musttail call tailcc void %clofunc89756(%struct.ScmObj* %_37last40152, %struct.ScmObj* %args86276$_37last40152$2)
ret void
}

define tailcc void @proc_clo$ae41752(%struct.ScmObj* %env$ae41752,%struct.ScmObj* %current_45args86272) {
%stackaddr$env-ref89757 = alloca %struct.ScmObj*, align 8
%anf_45bind40288 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41752, i64 0)
store %struct.ScmObj* %anf_45bind40288, %struct.ScmObj** %stackaddr$env-ref89757
%stackaddr$env-ref89758 = alloca %struct.ScmObj*, align 8
%k40493 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41752, i64 1)
store %struct.ScmObj* %k40493, %struct.ScmObj** %stackaddr$env-ref89758
%stackaddr$prim89759 = alloca %struct.ScmObj*, align 8
%_95k40496 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86272)
store volatile %struct.ScmObj* %_95k40496, %struct.ScmObj** %stackaddr$prim89759, align 8
%stackaddr$prim89760 = alloca %struct.ScmObj*, align 8
%current_45args86273 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86272)
store volatile %struct.ScmObj* %current_45args86273, %struct.ScmObj** %stackaddr$prim89760, align 8
%stackaddr$prim89761 = alloca %struct.ScmObj*, align 8
%anf_45bind40289 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86273)
store volatile %struct.ScmObj* %anf_45bind40289, %struct.ScmObj** %stackaddr$prim89761, align 8
%stackaddr$prim89762 = alloca %struct.ScmObj*, align 8
%cpsprim40497 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40288, %struct.ScmObj* %anf_45bind40289)
store volatile %struct.ScmObj* %cpsprim40497, %struct.ScmObj** %stackaddr$prim89762, align 8
%ae41757 = call %struct.ScmObj* @const_init_int(i64 0)
%args86275$k40493$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89763 = alloca %struct.ScmObj*, align 8
%args86275$k40493$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40497, %struct.ScmObj* %args86275$k40493$0)
store volatile %struct.ScmObj* %args86275$k40493$1, %struct.ScmObj** %stackaddr$prim89763, align 8
%stackaddr$prim89764 = alloca %struct.ScmObj*, align 8
%args86275$k40493$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41757, %struct.ScmObj* %args86275$k40493$1)
store volatile %struct.ScmObj* %args86275$k40493$2, %struct.ScmObj** %stackaddr$prim89764, align 8
%clofunc89765 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40493)
musttail call tailcc void %clofunc89765(%struct.ScmObj* %k40493, %struct.ScmObj* %args86275$k40493$2)
ret void
}

define tailcc void @proc_clo$ae41652(%struct.ScmObj* %env$ae41652,%struct.ScmObj* %current_45args86280) {
%stackaddr$env-ref89766 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41652, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89766
%stackaddr$prim89767 = alloca %struct.ScmObj*, align 8
%k40499 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86280)
store volatile %struct.ScmObj* %k40499, %struct.ScmObj** %stackaddr$prim89767, align 8
%stackaddr$prim89768 = alloca %struct.ScmObj*, align 8
%current_45args86281 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86280)
store volatile %struct.ScmObj* %current_45args86281, %struct.ScmObj** %stackaddr$prim89768, align 8
%stackaddr$prim89769 = alloca %struct.ScmObj*, align 8
%f40163 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86281)
store volatile %struct.ScmObj* %f40163, %struct.ScmObj** %stackaddr$prim89769, align 8
%stackaddr$prim89770 = alloca %struct.ScmObj*, align 8
%current_45args86282 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86281)
store volatile %struct.ScmObj* %current_45args86282, %struct.ScmObj** %stackaddr$prim89770, align 8
%stackaddr$prim89771 = alloca %struct.ScmObj*, align 8
%lst40162 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86282)
store volatile %struct.ScmObj* %lst40162, %struct.ScmObj** %stackaddr$prim89771, align 8
%stackaddr$makeclosure89772 = alloca %struct.ScmObj*, align 8
%fptrToInt89773 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41653 to i64
%ae41653 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89773)
store volatile %struct.ScmObj* %ae41653, %struct.ScmObj** %stackaddr$makeclosure89772, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41653, %struct.ScmObj* %lst40162, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41653, %struct.ScmObj* %_37foldr140130, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41653, %struct.ScmObj* %k40499, i64 2)
%ae41654 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89774 = alloca %struct.ScmObj*, align 8
%fptrToInt89775 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41655 to i64
%ae41655 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt89775)
store volatile %struct.ScmObj* %ae41655, %struct.ScmObj** %stackaddr$makeclosure89774, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41655, %struct.ScmObj* %f40163, i64 0)
%args86297$ae41653$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89776 = alloca %struct.ScmObj*, align 8
%args86297$ae41653$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41655, %struct.ScmObj* %args86297$ae41653$0)
store volatile %struct.ScmObj* %args86297$ae41653$1, %struct.ScmObj** %stackaddr$prim89776, align 8
%stackaddr$prim89777 = alloca %struct.ScmObj*, align 8
%args86297$ae41653$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41654, %struct.ScmObj* %args86297$ae41653$1)
store volatile %struct.ScmObj* %args86297$ae41653$2, %struct.ScmObj** %stackaddr$prim89777, align 8
%clofunc89778 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41653)
musttail call tailcc void %clofunc89778(%struct.ScmObj* %ae41653, %struct.ScmObj* %args86297$ae41653$2)
ret void
}

define tailcc void @proc_clo$ae41653(%struct.ScmObj* %env$ae41653,%struct.ScmObj* %current_45args86284) {
%stackaddr$env-ref89779 = alloca %struct.ScmObj*, align 8
%lst40162 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41653, i64 0)
store %struct.ScmObj* %lst40162, %struct.ScmObj** %stackaddr$env-ref89779
%stackaddr$env-ref89780 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41653, i64 1)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89780
%stackaddr$env-ref89781 = alloca %struct.ScmObj*, align 8
%k40499 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41653, i64 2)
store %struct.ScmObj* %k40499, %struct.ScmObj** %stackaddr$env-ref89781
%stackaddr$prim89782 = alloca %struct.ScmObj*, align 8
%_95k40500 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86284)
store volatile %struct.ScmObj* %_95k40500, %struct.ScmObj** %stackaddr$prim89782, align 8
%stackaddr$prim89783 = alloca %struct.ScmObj*, align 8
%current_45args86285 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86284)
store volatile %struct.ScmObj* %current_45args86285, %struct.ScmObj** %stackaddr$prim89783, align 8
%stackaddr$prim89784 = alloca %struct.ScmObj*, align 8
%anf_45bind40286 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86285)
store volatile %struct.ScmObj* %anf_45bind40286, %struct.ScmObj** %stackaddr$prim89784, align 8
%ae41687 = call %struct.ScmObj* @const_init_null()
%args86287$_37foldr140130$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89785 = alloca %struct.ScmObj*, align 8
%args86287$_37foldr140130$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lst40162, %struct.ScmObj* %args86287$_37foldr140130$0)
store volatile %struct.ScmObj* %args86287$_37foldr140130$1, %struct.ScmObj** %stackaddr$prim89785, align 8
%stackaddr$prim89786 = alloca %struct.ScmObj*, align 8
%args86287$_37foldr140130$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41687, %struct.ScmObj* %args86287$_37foldr140130$1)
store volatile %struct.ScmObj* %args86287$_37foldr140130$2, %struct.ScmObj** %stackaddr$prim89786, align 8
%stackaddr$prim89787 = alloca %struct.ScmObj*, align 8
%args86287$_37foldr140130$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40286, %struct.ScmObj* %args86287$_37foldr140130$2)
store volatile %struct.ScmObj* %args86287$_37foldr140130$3, %struct.ScmObj** %stackaddr$prim89787, align 8
%stackaddr$prim89788 = alloca %struct.ScmObj*, align 8
%args86287$_37foldr140130$4 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40499, %struct.ScmObj* %args86287$_37foldr140130$3)
store volatile %struct.ScmObj* %args86287$_37foldr140130$4, %struct.ScmObj** %stackaddr$prim89788, align 8
%clofunc89789 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr140130)
musttail call tailcc void %clofunc89789(%struct.ScmObj* %_37foldr140130, %struct.ScmObj* %args86287$_37foldr140130$4)
ret void
}

define tailcc void @proc_clo$ae41655(%struct.ScmObj* %env$ae41655,%struct.ScmObj* %current_45args86288) {
%stackaddr$env-ref89790 = alloca %struct.ScmObj*, align 8
%f40163 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41655, i64 0)
store %struct.ScmObj* %f40163, %struct.ScmObj** %stackaddr$env-ref89790
%stackaddr$prim89791 = alloca %struct.ScmObj*, align 8
%k40501 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86288)
store volatile %struct.ScmObj* %k40501, %struct.ScmObj** %stackaddr$prim89791, align 8
%stackaddr$prim89792 = alloca %struct.ScmObj*, align 8
%current_45args86289 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86288)
store volatile %struct.ScmObj* %current_45args86289, %struct.ScmObj** %stackaddr$prim89792, align 8
%stackaddr$prim89793 = alloca %struct.ScmObj*, align 8
%v40165 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86289)
store volatile %struct.ScmObj* %v40165, %struct.ScmObj** %stackaddr$prim89793, align 8
%stackaddr$prim89794 = alloca %struct.ScmObj*, align 8
%current_45args86290 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86289)
store volatile %struct.ScmObj* %current_45args86290, %struct.ScmObj** %stackaddr$prim89794, align 8
%stackaddr$prim89795 = alloca %struct.ScmObj*, align 8
%r40164 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86290)
store volatile %struct.ScmObj* %r40164, %struct.ScmObj** %stackaddr$prim89795, align 8
%stackaddr$makeclosure89796 = alloca %struct.ScmObj*, align 8
%fptrToInt89797 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41657 to i64
%ae41657 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt89797)
store volatile %struct.ScmObj* %ae41657, %struct.ScmObj** %stackaddr$makeclosure89796, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41657, %struct.ScmObj* %k40501, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41657, %struct.ScmObj* %r40164, i64 1)
%args86296$f40163$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89798 = alloca %struct.ScmObj*, align 8
%args86296$f40163$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %v40165, %struct.ScmObj* %args86296$f40163$0)
store volatile %struct.ScmObj* %args86296$f40163$1, %struct.ScmObj** %stackaddr$prim89798, align 8
%stackaddr$prim89799 = alloca %struct.ScmObj*, align 8
%args86296$f40163$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41657, %struct.ScmObj* %args86296$f40163$1)
store volatile %struct.ScmObj* %args86296$f40163$2, %struct.ScmObj** %stackaddr$prim89799, align 8
%clofunc89800 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f40163)
musttail call tailcc void %clofunc89800(%struct.ScmObj* %f40163, %struct.ScmObj* %args86296$f40163$2)
ret void
}

define tailcc void @proc_clo$ae41657(%struct.ScmObj* %env$ae41657,%struct.ScmObj* %current_45args86292) {
%stackaddr$env-ref89801 = alloca %struct.ScmObj*, align 8
%k40501 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41657, i64 0)
store %struct.ScmObj* %k40501, %struct.ScmObj** %stackaddr$env-ref89801
%stackaddr$env-ref89802 = alloca %struct.ScmObj*, align 8
%r40164 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41657, i64 1)
store %struct.ScmObj* %r40164, %struct.ScmObj** %stackaddr$env-ref89802
%stackaddr$prim89803 = alloca %struct.ScmObj*, align 8
%_95k40502 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86292)
store volatile %struct.ScmObj* %_95k40502, %struct.ScmObj** %stackaddr$prim89803, align 8
%stackaddr$prim89804 = alloca %struct.ScmObj*, align 8
%current_45args86293 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86292)
store volatile %struct.ScmObj* %current_45args86293, %struct.ScmObj** %stackaddr$prim89804, align 8
%stackaddr$prim89805 = alloca %struct.ScmObj*, align 8
%anf_45bind40285 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86293)
store volatile %struct.ScmObj* %anf_45bind40285, %struct.ScmObj** %stackaddr$prim89805, align 8
%stackaddr$prim89806 = alloca %struct.ScmObj*, align 8
%cpsprim40503 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40285, %struct.ScmObj* %r40164)
store volatile %struct.ScmObj* %cpsprim40503, %struct.ScmObj** %stackaddr$prim89806, align 8
%ae41662 = call %struct.ScmObj* @const_init_int(i64 0)
%args86295$k40501$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89807 = alloca %struct.ScmObj*, align 8
%args86295$k40501$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40503, %struct.ScmObj* %args86295$k40501$0)
store volatile %struct.ScmObj* %args86295$k40501$1, %struct.ScmObj** %stackaddr$prim89807, align 8
%stackaddr$prim89808 = alloca %struct.ScmObj*, align 8
%args86295$k40501$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41662, %struct.ScmObj* %args86295$k40501$1)
store volatile %struct.ScmObj* %args86295$k40501$2, %struct.ScmObj** %stackaddr$prim89808, align 8
%clofunc89809 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40501)
musttail call tailcc void %clofunc89809(%struct.ScmObj* %k40501, %struct.ScmObj* %args86295$k40501$2)
ret void
}

define tailcc void @proc_clo$ae41266(%struct.ScmObj* %env$ae41266,%struct.ScmObj* %current_45args86300) {
%stackaddr$env-ref89810 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41266, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89810
%stackaddr$env-ref89811 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41266, i64 1)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref89811
%stackaddr$prim89812 = alloca %struct.ScmObj*, align 8
%k40504 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86300)
store volatile %struct.ScmObj* %k40504, %struct.ScmObj** %stackaddr$prim89812, align 8
%stackaddr$prim89813 = alloca %struct.ScmObj*, align 8
%current_45args86301 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86300)
store volatile %struct.ScmObj* %current_45args86301, %struct.ScmObj** %stackaddr$prim89813, align 8
%stackaddr$prim89814 = alloca %struct.ScmObj*, align 8
%_37foldr40136 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86301)
store volatile %struct.ScmObj* %_37foldr40136, %struct.ScmObj** %stackaddr$prim89814, align 8
%ae41268 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89815 = alloca %struct.ScmObj*, align 8
%fptrToInt89816 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41269 to i64
%ae41269 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt89816)
store volatile %struct.ScmObj* %ae41269, %struct.ScmObj** %stackaddr$makeclosure89815, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41269, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41269, %struct.ScmObj* %_37map140126, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41269, %struct.ScmObj* %_37foldr40136, i64 2)
%args86358$k40504$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89817 = alloca %struct.ScmObj*, align 8
%args86358$k40504$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41269, %struct.ScmObj* %args86358$k40504$0)
store volatile %struct.ScmObj* %args86358$k40504$1, %struct.ScmObj** %stackaddr$prim89817, align 8
%stackaddr$prim89818 = alloca %struct.ScmObj*, align 8
%args86358$k40504$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41268, %struct.ScmObj* %args86358$k40504$1)
store volatile %struct.ScmObj* %args86358$k40504$2, %struct.ScmObj** %stackaddr$prim89818, align 8
%clofunc89819 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40504)
musttail call tailcc void %clofunc89819(%struct.ScmObj* %k40504, %struct.ScmObj* %args86358$k40504$2)
ret void
}

define tailcc void @proc_clo$ae41269(%struct.ScmObj* %env$ae41269,%struct.ScmObj* %args4013740505) {
%stackaddr$env-ref89820 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41269, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89820
%stackaddr$env-ref89821 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41269, i64 1)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref89821
%stackaddr$env-ref89822 = alloca %struct.ScmObj*, align 8
%_37foldr40136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41269, i64 2)
store %struct.ScmObj* %_37foldr40136, %struct.ScmObj** %stackaddr$env-ref89822
%stackaddr$prim89823 = alloca %struct.ScmObj*, align 8
%k40506 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args4013740505)
store volatile %struct.ScmObj* %k40506, %struct.ScmObj** %stackaddr$prim89823, align 8
%stackaddr$prim89824 = alloca %struct.ScmObj*, align 8
%args40137 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args4013740505)
store volatile %struct.ScmObj* %args40137, %struct.ScmObj** %stackaddr$prim89824, align 8
%stackaddr$prim89825 = alloca %struct.ScmObj*, align 8
%f40140 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args40137)
store volatile %struct.ScmObj* %f40140, %struct.ScmObj** %stackaddr$prim89825, align 8
%stackaddr$prim89826 = alloca %struct.ScmObj*, align 8
%anf_45bind40272 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args40137)
store volatile %struct.ScmObj* %anf_45bind40272, %struct.ScmObj** %stackaddr$prim89826, align 8
%stackaddr$prim89827 = alloca %struct.ScmObj*, align 8
%acc40139 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %anf_45bind40272)
store volatile %struct.ScmObj* %acc40139, %struct.ScmObj** %stackaddr$prim89827, align 8
%stackaddr$prim89828 = alloca %struct.ScmObj*, align 8
%anf_45bind40273 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args40137)
store volatile %struct.ScmObj* %anf_45bind40273, %struct.ScmObj** %stackaddr$prim89828, align 8
%stackaddr$prim89829 = alloca %struct.ScmObj*, align 8
%lsts40138 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %anf_45bind40273)
store volatile %struct.ScmObj* %lsts40138, %struct.ScmObj** %stackaddr$prim89829, align 8
%stackaddr$makeclosure89830 = alloca %struct.ScmObj*, align 8
%fptrToInt89831 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41277 to i64
%ae41277 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt89831)
store volatile %struct.ScmObj* %ae41277, %struct.ScmObj** %stackaddr$makeclosure89830, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41277, %struct.ScmObj* %k40506, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41277, %struct.ScmObj* %lsts40138, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41277, %struct.ScmObj* %_37foldr140130, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41277, %struct.ScmObj* %_37map140126, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41277, %struct.ScmObj* %f40140, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41277, %struct.ScmObj* %acc40139, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41277, %struct.ScmObj* %_37foldr40136, i64 6)
%ae41278 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89832 = alloca %struct.ScmObj*, align 8
%fptrToInt89833 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41279 to i64
%ae41279 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89833)
store volatile %struct.ScmObj* %ae41279, %struct.ScmObj** %stackaddr$makeclosure89832, align 8
%args86357$ae41277$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89834 = alloca %struct.ScmObj*, align 8
%args86357$ae41277$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41279, %struct.ScmObj* %args86357$ae41277$0)
store volatile %struct.ScmObj* %args86357$ae41277$1, %struct.ScmObj** %stackaddr$prim89834, align 8
%stackaddr$prim89835 = alloca %struct.ScmObj*, align 8
%args86357$ae41277$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41278, %struct.ScmObj* %args86357$ae41277$1)
store volatile %struct.ScmObj* %args86357$ae41277$2, %struct.ScmObj** %stackaddr$prim89835, align 8
%clofunc89836 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41277)
musttail call tailcc void %clofunc89836(%struct.ScmObj* %ae41277, %struct.ScmObj* %args86357$ae41277$2)
ret void
}

define tailcc void @proc_clo$ae41277(%struct.ScmObj* %env$ae41277,%struct.ScmObj* %current_45args86303) {
%stackaddr$env-ref89837 = alloca %struct.ScmObj*, align 8
%k40506 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41277, i64 0)
store %struct.ScmObj* %k40506, %struct.ScmObj** %stackaddr$env-ref89837
%stackaddr$env-ref89838 = alloca %struct.ScmObj*, align 8
%lsts40138 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41277, i64 1)
store %struct.ScmObj* %lsts40138, %struct.ScmObj** %stackaddr$env-ref89838
%stackaddr$env-ref89839 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41277, i64 2)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89839
%stackaddr$env-ref89840 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41277, i64 3)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref89840
%stackaddr$env-ref89841 = alloca %struct.ScmObj*, align 8
%f40140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41277, i64 4)
store %struct.ScmObj* %f40140, %struct.ScmObj** %stackaddr$env-ref89841
%stackaddr$env-ref89842 = alloca %struct.ScmObj*, align 8
%acc40139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41277, i64 5)
store %struct.ScmObj* %acc40139, %struct.ScmObj** %stackaddr$env-ref89842
%stackaddr$env-ref89843 = alloca %struct.ScmObj*, align 8
%_37foldr40136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41277, i64 6)
store %struct.ScmObj* %_37foldr40136, %struct.ScmObj** %stackaddr$env-ref89843
%stackaddr$prim89844 = alloca %struct.ScmObj*, align 8
%_95k40507 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86303)
store volatile %struct.ScmObj* %_95k40507, %struct.ScmObj** %stackaddr$prim89844, align 8
%stackaddr$prim89845 = alloca %struct.ScmObj*, align 8
%current_45args86304 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86303)
store volatile %struct.ScmObj* %current_45args86304, %struct.ScmObj** %stackaddr$prim89845, align 8
%stackaddr$prim89846 = alloca %struct.ScmObj*, align 8
%anf_45bind40274 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86304)
store volatile %struct.ScmObj* %anf_45bind40274, %struct.ScmObj** %stackaddr$prim89846, align 8
%stackaddr$makeclosure89847 = alloca %struct.ScmObj*, align 8
%fptrToInt89848 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41309 to i64
%ae41309 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt89848)
store volatile %struct.ScmObj* %ae41309, %struct.ScmObj** %stackaddr$makeclosure89847, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41309, %struct.ScmObj* %k40506, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41309, %struct.ScmObj* %lsts40138, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41309, %struct.ScmObj* %_37foldr140130, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41309, %struct.ScmObj* %_37map140126, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41309, %struct.ScmObj* %f40140, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41309, %struct.ScmObj* %acc40139, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41309, %struct.ScmObj* %_37foldr40136, i64 6)
%ae41311 = call %struct.ScmObj* @const_init_false()
%args86350$_37foldr140130$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89849 = alloca %struct.ScmObj*, align 8
%args86350$_37foldr140130$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts40138, %struct.ScmObj* %args86350$_37foldr140130$0)
store volatile %struct.ScmObj* %args86350$_37foldr140130$1, %struct.ScmObj** %stackaddr$prim89849, align 8
%stackaddr$prim89850 = alloca %struct.ScmObj*, align 8
%args86350$_37foldr140130$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41311, %struct.ScmObj* %args86350$_37foldr140130$1)
store volatile %struct.ScmObj* %args86350$_37foldr140130$2, %struct.ScmObj** %stackaddr$prim89850, align 8
%stackaddr$prim89851 = alloca %struct.ScmObj*, align 8
%args86350$_37foldr140130$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40274, %struct.ScmObj* %args86350$_37foldr140130$2)
store volatile %struct.ScmObj* %args86350$_37foldr140130$3, %struct.ScmObj** %stackaddr$prim89851, align 8
%stackaddr$prim89852 = alloca %struct.ScmObj*, align 8
%args86350$_37foldr140130$4 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41309, %struct.ScmObj* %args86350$_37foldr140130$3)
store volatile %struct.ScmObj* %args86350$_37foldr140130$4, %struct.ScmObj** %stackaddr$prim89852, align 8
%clofunc89853 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr140130)
musttail call tailcc void %clofunc89853(%struct.ScmObj* %_37foldr140130, %struct.ScmObj* %args86350$_37foldr140130$4)
ret void
}

define tailcc void @proc_clo$ae41309(%struct.ScmObj* %env$ae41309,%struct.ScmObj* %current_45args86306) {
%stackaddr$env-ref89854 = alloca %struct.ScmObj*, align 8
%k40506 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41309, i64 0)
store %struct.ScmObj* %k40506, %struct.ScmObj** %stackaddr$env-ref89854
%stackaddr$env-ref89855 = alloca %struct.ScmObj*, align 8
%lsts40138 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41309, i64 1)
store %struct.ScmObj* %lsts40138, %struct.ScmObj** %stackaddr$env-ref89855
%stackaddr$env-ref89856 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41309, i64 2)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89856
%stackaddr$env-ref89857 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41309, i64 3)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref89857
%stackaddr$env-ref89858 = alloca %struct.ScmObj*, align 8
%f40140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41309, i64 4)
store %struct.ScmObj* %f40140, %struct.ScmObj** %stackaddr$env-ref89858
%stackaddr$env-ref89859 = alloca %struct.ScmObj*, align 8
%acc40139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41309, i64 5)
store %struct.ScmObj* %acc40139, %struct.ScmObj** %stackaddr$env-ref89859
%stackaddr$env-ref89860 = alloca %struct.ScmObj*, align 8
%_37foldr40136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41309, i64 6)
store %struct.ScmObj* %_37foldr40136, %struct.ScmObj** %stackaddr$env-ref89860
%stackaddr$prim89861 = alloca %struct.ScmObj*, align 8
%_95k40508 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86306)
store volatile %struct.ScmObj* %_95k40508, %struct.ScmObj** %stackaddr$prim89861, align 8
%stackaddr$prim89862 = alloca %struct.ScmObj*, align 8
%current_45args86307 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86306)
store volatile %struct.ScmObj* %current_45args86307, %struct.ScmObj** %stackaddr$prim89862, align 8
%stackaddr$prim89863 = alloca %struct.ScmObj*, align 8
%anf_45bind40275 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86307)
store volatile %struct.ScmObj* %anf_45bind40275, %struct.ScmObj** %stackaddr$prim89863, align 8
%truthy$cmp89864 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40275)
%cmp$cmp89864 = icmp eq i64 %truthy$cmp89864, 1
br i1 %cmp$cmp89864, label %truebranch$cmp89864, label %falsebranch$cmp89864
truebranch$cmp89864:
%ae41320 = call %struct.ScmObj* @const_init_int(i64 0)
%args86309$k40506$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89865 = alloca %struct.ScmObj*, align 8
%args86309$k40506$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc40139, %struct.ScmObj* %args86309$k40506$0)
store volatile %struct.ScmObj* %args86309$k40506$1, %struct.ScmObj** %stackaddr$prim89865, align 8
%stackaddr$prim89866 = alloca %struct.ScmObj*, align 8
%args86309$k40506$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41320, %struct.ScmObj* %args86309$k40506$1)
store volatile %struct.ScmObj* %args86309$k40506$2, %struct.ScmObj** %stackaddr$prim89866, align 8
%clofunc89867 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40506)
musttail call tailcc void %clofunc89867(%struct.ScmObj* %k40506, %struct.ScmObj* %args86309$k40506$2)
ret void
falsebranch$cmp89864:
%stackaddr$makeclosure89868 = alloca %struct.ScmObj*, align 8
%fptrToInt89869 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41325 to i64
%ae41325 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt89869)
store volatile %struct.ScmObj* %ae41325, %struct.ScmObj** %stackaddr$makeclosure89868, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41325, %struct.ScmObj* %k40506, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41325, %struct.ScmObj* %lsts40138, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41325, %struct.ScmObj* %_37foldr140130, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41325, %struct.ScmObj* %_37map140126, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41325, %struct.ScmObj* %f40140, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41325, %struct.ScmObj* %acc40139, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41325, %struct.ScmObj* %_37foldr40136, i64 6)
%ae41326 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89870 = alloca %struct.ScmObj*, align 8
%fptrToInt89871 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41327 to i64
%ae41327 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89871)
store volatile %struct.ScmObj* %ae41327, %struct.ScmObj** %stackaddr$makeclosure89870, align 8
%args86349$ae41325$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89872 = alloca %struct.ScmObj*, align 8
%args86349$ae41325$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41327, %struct.ScmObj* %args86349$ae41325$0)
store volatile %struct.ScmObj* %args86349$ae41325$1, %struct.ScmObj** %stackaddr$prim89872, align 8
%stackaddr$prim89873 = alloca %struct.ScmObj*, align 8
%args86349$ae41325$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41326, %struct.ScmObj* %args86349$ae41325$1)
store volatile %struct.ScmObj* %args86349$ae41325$2, %struct.ScmObj** %stackaddr$prim89873, align 8
%clofunc89874 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41325)
musttail call tailcc void %clofunc89874(%struct.ScmObj* %ae41325, %struct.ScmObj* %args86349$ae41325$2)
ret void
}

define tailcc void @proc_clo$ae41325(%struct.ScmObj* %env$ae41325,%struct.ScmObj* %current_45args86310) {
%stackaddr$env-ref89875 = alloca %struct.ScmObj*, align 8
%k40506 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41325, i64 0)
store %struct.ScmObj* %k40506, %struct.ScmObj** %stackaddr$env-ref89875
%stackaddr$env-ref89876 = alloca %struct.ScmObj*, align 8
%lsts40138 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41325, i64 1)
store %struct.ScmObj* %lsts40138, %struct.ScmObj** %stackaddr$env-ref89876
%stackaddr$env-ref89877 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41325, i64 2)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89877
%stackaddr$env-ref89878 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41325, i64 3)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref89878
%stackaddr$env-ref89879 = alloca %struct.ScmObj*, align 8
%f40140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41325, i64 4)
store %struct.ScmObj* %f40140, %struct.ScmObj** %stackaddr$env-ref89879
%stackaddr$env-ref89880 = alloca %struct.ScmObj*, align 8
%acc40139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41325, i64 5)
store %struct.ScmObj* %acc40139, %struct.ScmObj** %stackaddr$env-ref89880
%stackaddr$env-ref89881 = alloca %struct.ScmObj*, align 8
%_37foldr40136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41325, i64 6)
store %struct.ScmObj* %_37foldr40136, %struct.ScmObj** %stackaddr$env-ref89881
%stackaddr$prim89882 = alloca %struct.ScmObj*, align 8
%_95k40509 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86310)
store volatile %struct.ScmObj* %_95k40509, %struct.ScmObj** %stackaddr$prim89882, align 8
%stackaddr$prim89883 = alloca %struct.ScmObj*, align 8
%current_45args86311 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86310)
store volatile %struct.ScmObj* %current_45args86311, %struct.ScmObj** %stackaddr$prim89883, align 8
%stackaddr$prim89884 = alloca %struct.ScmObj*, align 8
%anf_45bind40276 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86311)
store volatile %struct.ScmObj* %anf_45bind40276, %struct.ScmObj** %stackaddr$prim89884, align 8
%stackaddr$makeclosure89885 = alloca %struct.ScmObj*, align 8
%fptrToInt89886 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41346 to i64
%ae41346 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt89886)
store volatile %struct.ScmObj* %ae41346, %struct.ScmObj** %stackaddr$makeclosure89885, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41346, %struct.ScmObj* %k40506, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41346, %struct.ScmObj* %lsts40138, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41346, %struct.ScmObj* %_37foldr140130, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41346, %struct.ScmObj* %_37map140126, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41346, %struct.ScmObj* %f40140, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41346, %struct.ScmObj* %acc40139, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41346, %struct.ScmObj* %_37foldr40136, i64 6)
%args86344$_37map140126$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89887 = alloca %struct.ScmObj*, align 8
%args86344$_37map140126$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts40138, %struct.ScmObj* %args86344$_37map140126$0)
store volatile %struct.ScmObj* %args86344$_37map140126$1, %struct.ScmObj** %stackaddr$prim89887, align 8
%stackaddr$prim89888 = alloca %struct.ScmObj*, align 8
%args86344$_37map140126$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40276, %struct.ScmObj* %args86344$_37map140126$1)
store volatile %struct.ScmObj* %args86344$_37map140126$2, %struct.ScmObj** %stackaddr$prim89888, align 8
%stackaddr$prim89889 = alloca %struct.ScmObj*, align 8
%args86344$_37map140126$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41346, %struct.ScmObj* %args86344$_37map140126$2)
store volatile %struct.ScmObj* %args86344$_37map140126$3, %struct.ScmObj** %stackaddr$prim89889, align 8
%clofunc89890 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37map140126)
musttail call tailcc void %clofunc89890(%struct.ScmObj* %_37map140126, %struct.ScmObj* %args86344$_37map140126$3)
ret void
}

define tailcc void @proc_clo$ae41346(%struct.ScmObj* %env$ae41346,%struct.ScmObj* %current_45args86313) {
%stackaddr$env-ref89891 = alloca %struct.ScmObj*, align 8
%k40506 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41346, i64 0)
store %struct.ScmObj* %k40506, %struct.ScmObj** %stackaddr$env-ref89891
%stackaddr$env-ref89892 = alloca %struct.ScmObj*, align 8
%lsts40138 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41346, i64 1)
store %struct.ScmObj* %lsts40138, %struct.ScmObj** %stackaddr$env-ref89892
%stackaddr$env-ref89893 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41346, i64 2)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89893
%stackaddr$env-ref89894 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41346, i64 3)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref89894
%stackaddr$env-ref89895 = alloca %struct.ScmObj*, align 8
%f40140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41346, i64 4)
store %struct.ScmObj* %f40140, %struct.ScmObj** %stackaddr$env-ref89895
%stackaddr$env-ref89896 = alloca %struct.ScmObj*, align 8
%acc40139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41346, i64 5)
store %struct.ScmObj* %acc40139, %struct.ScmObj** %stackaddr$env-ref89896
%stackaddr$env-ref89897 = alloca %struct.ScmObj*, align 8
%_37foldr40136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41346, i64 6)
store %struct.ScmObj* %_37foldr40136, %struct.ScmObj** %stackaddr$env-ref89897
%stackaddr$prim89898 = alloca %struct.ScmObj*, align 8
%_95k40510 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86313)
store volatile %struct.ScmObj* %_95k40510, %struct.ScmObj** %stackaddr$prim89898, align 8
%stackaddr$prim89899 = alloca %struct.ScmObj*, align 8
%current_45args86314 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86313)
store volatile %struct.ScmObj* %current_45args86314, %struct.ScmObj** %stackaddr$prim89899, align 8
%stackaddr$prim89900 = alloca %struct.ScmObj*, align 8
%lsts_4340145 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86314)
store volatile %struct.ScmObj* %lsts_4340145, %struct.ScmObj** %stackaddr$prim89900, align 8
%stackaddr$makeclosure89901 = alloca %struct.ScmObj*, align 8
%fptrToInt89902 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41349 to i64
%ae41349 = call %struct.ScmObj* @closure_alloc(i64 8, i64 %fptrToInt89902)
store volatile %struct.ScmObj* %ae41349, %struct.ScmObj** %stackaddr$makeclosure89901, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41349, %struct.ScmObj* %k40506, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41349, %struct.ScmObj* %lsts40138, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41349, %struct.ScmObj* %_37foldr140130, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41349, %struct.ScmObj* %lsts_4340145, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41349, %struct.ScmObj* %_37map140126, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41349, %struct.ScmObj* %f40140, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41349, %struct.ScmObj* %acc40139, i64 6)
call void @closure_place_freevar(%struct.ScmObj* %ae41349, %struct.ScmObj* %_37foldr40136, i64 7)
%ae41350 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89903 = alloca %struct.ScmObj*, align 8
%fptrToInt89904 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41351 to i64
%ae41351 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89904)
store volatile %struct.ScmObj* %ae41351, %struct.ScmObj** %stackaddr$makeclosure89903, align 8
%args86343$ae41349$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89905 = alloca %struct.ScmObj*, align 8
%args86343$ae41349$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41351, %struct.ScmObj* %args86343$ae41349$0)
store volatile %struct.ScmObj* %args86343$ae41349$1, %struct.ScmObj** %stackaddr$prim89905, align 8
%stackaddr$prim89906 = alloca %struct.ScmObj*, align 8
%args86343$ae41349$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41350, %struct.ScmObj* %args86343$ae41349$1)
store volatile %struct.ScmObj* %args86343$ae41349$2, %struct.ScmObj** %stackaddr$prim89906, align 8
%clofunc89907 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41349)
musttail call tailcc void %clofunc89907(%struct.ScmObj* %ae41349, %struct.ScmObj* %args86343$ae41349$2)
ret void
}

define tailcc void @proc_clo$ae41349(%struct.ScmObj* %env$ae41349,%struct.ScmObj* %current_45args86316) {
%stackaddr$env-ref89908 = alloca %struct.ScmObj*, align 8
%k40506 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41349, i64 0)
store %struct.ScmObj* %k40506, %struct.ScmObj** %stackaddr$env-ref89908
%stackaddr$env-ref89909 = alloca %struct.ScmObj*, align 8
%lsts40138 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41349, i64 1)
store %struct.ScmObj* %lsts40138, %struct.ScmObj** %stackaddr$env-ref89909
%stackaddr$env-ref89910 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41349, i64 2)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89910
%stackaddr$env-ref89911 = alloca %struct.ScmObj*, align 8
%lsts_4340145 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41349, i64 3)
store %struct.ScmObj* %lsts_4340145, %struct.ScmObj** %stackaddr$env-ref89911
%stackaddr$env-ref89912 = alloca %struct.ScmObj*, align 8
%_37map140126 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41349, i64 4)
store %struct.ScmObj* %_37map140126, %struct.ScmObj** %stackaddr$env-ref89912
%stackaddr$env-ref89913 = alloca %struct.ScmObj*, align 8
%f40140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41349, i64 5)
store %struct.ScmObj* %f40140, %struct.ScmObj** %stackaddr$env-ref89913
%stackaddr$env-ref89914 = alloca %struct.ScmObj*, align 8
%acc40139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41349, i64 6)
store %struct.ScmObj* %acc40139, %struct.ScmObj** %stackaddr$env-ref89914
%stackaddr$env-ref89915 = alloca %struct.ScmObj*, align 8
%_37foldr40136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41349, i64 7)
store %struct.ScmObj* %_37foldr40136, %struct.ScmObj** %stackaddr$env-ref89915
%stackaddr$prim89916 = alloca %struct.ScmObj*, align 8
%_95k40511 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86316)
store volatile %struct.ScmObj* %_95k40511, %struct.ScmObj** %stackaddr$prim89916, align 8
%stackaddr$prim89917 = alloca %struct.ScmObj*, align 8
%current_45args86317 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86316)
store volatile %struct.ScmObj* %current_45args86317, %struct.ScmObj** %stackaddr$prim89917, align 8
%stackaddr$prim89918 = alloca %struct.ScmObj*, align 8
%anf_45bind40277 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86317)
store volatile %struct.ScmObj* %anf_45bind40277, %struct.ScmObj** %stackaddr$prim89918, align 8
%stackaddr$makeclosure89919 = alloca %struct.ScmObj*, align 8
%fptrToInt89920 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41370 to i64
%ae41370 = call %struct.ScmObj* @closure_alloc(i64 6, i64 %fptrToInt89920)
store volatile %struct.ScmObj* %ae41370, %struct.ScmObj** %stackaddr$makeclosure89919, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41370, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41370, %struct.ScmObj* %lsts_4340145, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41370, %struct.ScmObj* %f40140, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41370, %struct.ScmObj* %acc40139, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41370, %struct.ScmObj* %k40506, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41370, %struct.ScmObj* %_37foldr40136, i64 5)
%args86338$_37map140126$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89921 = alloca %struct.ScmObj*, align 8
%args86338$_37map140126$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lsts40138, %struct.ScmObj* %args86338$_37map140126$0)
store volatile %struct.ScmObj* %args86338$_37map140126$1, %struct.ScmObj** %stackaddr$prim89921, align 8
%stackaddr$prim89922 = alloca %struct.ScmObj*, align 8
%args86338$_37map140126$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40277, %struct.ScmObj* %args86338$_37map140126$1)
store volatile %struct.ScmObj* %args86338$_37map140126$2, %struct.ScmObj** %stackaddr$prim89922, align 8
%stackaddr$prim89923 = alloca %struct.ScmObj*, align 8
%args86338$_37map140126$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41370, %struct.ScmObj* %args86338$_37map140126$2)
store volatile %struct.ScmObj* %args86338$_37map140126$3, %struct.ScmObj** %stackaddr$prim89923, align 8
%clofunc89924 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37map140126)
musttail call tailcc void %clofunc89924(%struct.ScmObj* %_37map140126, %struct.ScmObj* %args86338$_37map140126$3)
ret void
}

define tailcc void @proc_clo$ae41370(%struct.ScmObj* %env$ae41370,%struct.ScmObj* %current_45args86319) {
%stackaddr$env-ref89925 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41370, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89925
%stackaddr$env-ref89926 = alloca %struct.ScmObj*, align 8
%lsts_4340145 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41370, i64 1)
store %struct.ScmObj* %lsts_4340145, %struct.ScmObj** %stackaddr$env-ref89926
%stackaddr$env-ref89927 = alloca %struct.ScmObj*, align 8
%f40140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41370, i64 2)
store %struct.ScmObj* %f40140, %struct.ScmObj** %stackaddr$env-ref89927
%stackaddr$env-ref89928 = alloca %struct.ScmObj*, align 8
%acc40139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41370, i64 3)
store %struct.ScmObj* %acc40139, %struct.ScmObj** %stackaddr$env-ref89928
%stackaddr$env-ref89929 = alloca %struct.ScmObj*, align 8
%k40506 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41370, i64 4)
store %struct.ScmObj* %k40506, %struct.ScmObj** %stackaddr$env-ref89929
%stackaddr$env-ref89930 = alloca %struct.ScmObj*, align 8
%_37foldr40136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41370, i64 5)
store %struct.ScmObj* %_37foldr40136, %struct.ScmObj** %stackaddr$env-ref89930
%stackaddr$prim89931 = alloca %struct.ScmObj*, align 8
%_95k40512 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86319)
store volatile %struct.ScmObj* %_95k40512, %struct.ScmObj** %stackaddr$prim89931, align 8
%stackaddr$prim89932 = alloca %struct.ScmObj*, align 8
%current_45args86320 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86319)
store volatile %struct.ScmObj* %current_45args86320, %struct.ScmObj** %stackaddr$prim89932, align 8
%stackaddr$prim89933 = alloca %struct.ScmObj*, align 8
%vs40143 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86320)
store volatile %struct.ScmObj* %vs40143, %struct.ScmObj** %stackaddr$prim89933, align 8
%stackaddr$makeclosure89934 = alloca %struct.ScmObj*, align 8
%fptrToInt89935 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41373 to i64
%ae41373 = call %struct.ScmObj* @closure_alloc(i64 7, i64 %fptrToInt89935)
store volatile %struct.ScmObj* %ae41373, %struct.ScmObj** %stackaddr$makeclosure89934, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41373, %struct.ScmObj* %_37foldr140130, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41373, %struct.ScmObj* %lsts_4340145, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41373, %struct.ScmObj* %vs40143, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41373, %struct.ScmObj* %f40140, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41373, %struct.ScmObj* %acc40139, i64 4)
call void @closure_place_freevar(%struct.ScmObj* %ae41373, %struct.ScmObj* %k40506, i64 5)
call void @closure_place_freevar(%struct.ScmObj* %ae41373, %struct.ScmObj* %_37foldr40136, i64 6)
%ae41374 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure89936 = alloca %struct.ScmObj*, align 8
%fptrToInt89937 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41375 to i64
%ae41375 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt89937)
store volatile %struct.ScmObj* %ae41375, %struct.ScmObj** %stackaddr$makeclosure89936, align 8
%args86337$ae41373$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89938 = alloca %struct.ScmObj*, align 8
%args86337$ae41373$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41375, %struct.ScmObj* %args86337$ae41373$0)
store volatile %struct.ScmObj* %args86337$ae41373$1, %struct.ScmObj** %stackaddr$prim89938, align 8
%stackaddr$prim89939 = alloca %struct.ScmObj*, align 8
%args86337$ae41373$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41374, %struct.ScmObj* %args86337$ae41373$1)
store volatile %struct.ScmObj* %args86337$ae41373$2, %struct.ScmObj** %stackaddr$prim89939, align 8
%clofunc89940 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41373)
musttail call tailcc void %clofunc89940(%struct.ScmObj* %ae41373, %struct.ScmObj* %args86337$ae41373$2)
ret void
}

define tailcc void @proc_clo$ae41373(%struct.ScmObj* %env$ae41373,%struct.ScmObj* %current_45args86322) {
%stackaddr$env-ref89941 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41373, i64 0)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89941
%stackaddr$env-ref89942 = alloca %struct.ScmObj*, align 8
%lsts_4340145 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41373, i64 1)
store %struct.ScmObj* %lsts_4340145, %struct.ScmObj** %stackaddr$env-ref89942
%stackaddr$env-ref89943 = alloca %struct.ScmObj*, align 8
%vs40143 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41373, i64 2)
store %struct.ScmObj* %vs40143, %struct.ScmObj** %stackaddr$env-ref89943
%stackaddr$env-ref89944 = alloca %struct.ScmObj*, align 8
%f40140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41373, i64 3)
store %struct.ScmObj* %f40140, %struct.ScmObj** %stackaddr$env-ref89944
%stackaddr$env-ref89945 = alloca %struct.ScmObj*, align 8
%acc40139 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41373, i64 4)
store %struct.ScmObj* %acc40139, %struct.ScmObj** %stackaddr$env-ref89945
%stackaddr$env-ref89946 = alloca %struct.ScmObj*, align 8
%k40506 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41373, i64 5)
store %struct.ScmObj* %k40506, %struct.ScmObj** %stackaddr$env-ref89946
%stackaddr$env-ref89947 = alloca %struct.ScmObj*, align 8
%_37foldr40136 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41373, i64 6)
store %struct.ScmObj* %_37foldr40136, %struct.ScmObj** %stackaddr$env-ref89947
%stackaddr$prim89948 = alloca %struct.ScmObj*, align 8
%_95k40513 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86322)
store volatile %struct.ScmObj* %_95k40513, %struct.ScmObj** %stackaddr$prim89948, align 8
%stackaddr$prim89949 = alloca %struct.ScmObj*, align 8
%current_45args86323 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86322)
store volatile %struct.ScmObj* %current_45args86323, %struct.ScmObj** %stackaddr$prim89949, align 8
%stackaddr$prim89950 = alloca %struct.ScmObj*, align 8
%anf_45bind40278 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86323)
store volatile %struct.ScmObj* %anf_45bind40278, %struct.ScmObj** %stackaddr$prim89950, align 8
%stackaddr$prim89951 = alloca %struct.ScmObj*, align 8
%anf_45bind40279 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc40139, %struct.ScmObj* %lsts_4340145)
store volatile %struct.ScmObj* %anf_45bind40279, %struct.ScmObj** %stackaddr$prim89951, align 8
%stackaddr$prim89952 = alloca %struct.ScmObj*, align 8
%anf_45bind40280 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f40140, %struct.ScmObj* %anf_45bind40279)
store volatile %struct.ScmObj* %anf_45bind40280, %struct.ScmObj** %stackaddr$prim89952, align 8
%stackaddr$makeclosure89953 = alloca %struct.ScmObj*, align 8
%fptrToInt89954 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41399 to i64
%ae41399 = call %struct.ScmObj* @closure_alloc(i64 5, i64 %fptrToInt89954)
store volatile %struct.ScmObj* %ae41399, %struct.ScmObj** %stackaddr$makeclosure89953, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41399, %struct.ScmObj* %anf_45bind40278, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41399, %struct.ScmObj* %_37foldr140130, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41399, %struct.ScmObj* %vs40143, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41399, %struct.ScmObj* %f40140, i64 3)
call void @closure_place_freevar(%struct.ScmObj* %ae41399, %struct.ScmObj* %k40506, i64 4)
%stackaddr$prim89955 = alloca %struct.ScmObj*, align 8
%cpsargs40517 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41399, %struct.ScmObj* %anf_45bind40280)
store volatile %struct.ScmObj* %cpsargs40517, %struct.ScmObj** %stackaddr$prim89955, align 8
%clofunc89956 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr40136)
musttail call tailcc void %clofunc89956(%struct.ScmObj* %_37foldr40136, %struct.ScmObj* %cpsargs40517)
ret void
}

define tailcc void @proc_clo$ae41399(%struct.ScmObj* %env$ae41399,%struct.ScmObj* %current_45args86325) {
%stackaddr$env-ref89957 = alloca %struct.ScmObj*, align 8
%anf_45bind40278 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41399, i64 0)
store %struct.ScmObj* %anf_45bind40278, %struct.ScmObj** %stackaddr$env-ref89957
%stackaddr$env-ref89958 = alloca %struct.ScmObj*, align 8
%_37foldr140130 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41399, i64 1)
store %struct.ScmObj* %_37foldr140130, %struct.ScmObj** %stackaddr$env-ref89958
%stackaddr$env-ref89959 = alloca %struct.ScmObj*, align 8
%vs40143 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41399, i64 2)
store %struct.ScmObj* %vs40143, %struct.ScmObj** %stackaddr$env-ref89959
%stackaddr$env-ref89960 = alloca %struct.ScmObj*, align 8
%f40140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41399, i64 3)
store %struct.ScmObj* %f40140, %struct.ScmObj** %stackaddr$env-ref89960
%stackaddr$env-ref89961 = alloca %struct.ScmObj*, align 8
%k40506 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41399, i64 4)
store %struct.ScmObj* %k40506, %struct.ScmObj** %stackaddr$env-ref89961
%stackaddr$prim89962 = alloca %struct.ScmObj*, align 8
%_95k40514 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86325)
store volatile %struct.ScmObj* %_95k40514, %struct.ScmObj** %stackaddr$prim89962, align 8
%stackaddr$prim89963 = alloca %struct.ScmObj*, align 8
%current_45args86326 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86325)
store volatile %struct.ScmObj* %current_45args86326, %struct.ScmObj** %stackaddr$prim89963, align 8
%stackaddr$prim89964 = alloca %struct.ScmObj*, align 8
%anf_45bind40281 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86326)
store volatile %struct.ScmObj* %anf_45bind40281, %struct.ScmObj** %stackaddr$prim89964, align 8
%ae41404 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89965 = alloca %struct.ScmObj*, align 8
%anf_45bind40282 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40281, %struct.ScmObj* %ae41404)
store volatile %struct.ScmObj* %anf_45bind40282, %struct.ScmObj** %stackaddr$prim89965, align 8
%stackaddr$makeclosure89966 = alloca %struct.ScmObj*, align 8
%fptrToInt89967 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41406 to i64
%ae41406 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt89967)
store volatile %struct.ScmObj* %ae41406, %struct.ScmObj** %stackaddr$makeclosure89966, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41406, %struct.ScmObj* %f40140, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41406, %struct.ScmObj* %k40506, i64 1)
%args86331$_37foldr140130$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89968 = alloca %struct.ScmObj*, align 8
%args86331$_37foldr140130$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %vs40143, %struct.ScmObj* %args86331$_37foldr140130$0)
store volatile %struct.ScmObj* %args86331$_37foldr140130$1, %struct.ScmObj** %stackaddr$prim89968, align 8
%stackaddr$prim89969 = alloca %struct.ScmObj*, align 8
%args86331$_37foldr140130$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40282, %struct.ScmObj* %args86331$_37foldr140130$1)
store volatile %struct.ScmObj* %args86331$_37foldr140130$2, %struct.ScmObj** %stackaddr$prim89969, align 8
%stackaddr$prim89970 = alloca %struct.ScmObj*, align 8
%args86331$_37foldr140130$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40278, %struct.ScmObj* %args86331$_37foldr140130$2)
store volatile %struct.ScmObj* %args86331$_37foldr140130$3, %struct.ScmObj** %stackaddr$prim89970, align 8
%stackaddr$prim89971 = alloca %struct.ScmObj*, align 8
%args86331$_37foldr140130$4 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41406, %struct.ScmObj* %args86331$_37foldr140130$3)
store volatile %struct.ScmObj* %args86331$_37foldr140130$4, %struct.ScmObj** %stackaddr$prim89971, align 8
%clofunc89972 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr140130)
musttail call tailcc void %clofunc89972(%struct.ScmObj* %_37foldr140130, %struct.ScmObj* %args86331$_37foldr140130$4)
ret void
}

define tailcc void @proc_clo$ae41406(%struct.ScmObj* %env$ae41406,%struct.ScmObj* %current_45args86328) {
%stackaddr$env-ref89973 = alloca %struct.ScmObj*, align 8
%f40140 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41406, i64 0)
store %struct.ScmObj* %f40140, %struct.ScmObj** %stackaddr$env-ref89973
%stackaddr$env-ref89974 = alloca %struct.ScmObj*, align 8
%k40506 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41406, i64 1)
store %struct.ScmObj* %k40506, %struct.ScmObj** %stackaddr$env-ref89974
%stackaddr$prim89975 = alloca %struct.ScmObj*, align 8
%_95k40515 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86328)
store volatile %struct.ScmObj* %_95k40515, %struct.ScmObj** %stackaddr$prim89975, align 8
%stackaddr$prim89976 = alloca %struct.ScmObj*, align 8
%current_45args86329 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86328)
store volatile %struct.ScmObj* %current_45args86329, %struct.ScmObj** %stackaddr$prim89976, align 8
%stackaddr$prim89977 = alloca %struct.ScmObj*, align 8
%anf_45bind40283 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86329)
store volatile %struct.ScmObj* %anf_45bind40283, %struct.ScmObj** %stackaddr$prim89977, align 8
%stackaddr$prim89978 = alloca %struct.ScmObj*, align 8
%cpsargs40516 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40506, %struct.ScmObj* %anf_45bind40283)
store volatile %struct.ScmObj* %cpsargs40516, %struct.ScmObj** %stackaddr$prim89978, align 8
%clofunc89979 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f40140)
musttail call tailcc void %clofunc89979(%struct.ScmObj* %f40140, %struct.ScmObj* %cpsargs40516)
ret void
}

define tailcc void @proc_clo$ae41375(%struct.ScmObj* %env$ae41375,%struct.ScmObj* %current_45args86332) {
%stackaddr$prim89980 = alloca %struct.ScmObj*, align 8
%k40518 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86332)
store volatile %struct.ScmObj* %k40518, %struct.ScmObj** %stackaddr$prim89980, align 8
%stackaddr$prim89981 = alloca %struct.ScmObj*, align 8
%current_45args86333 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86332)
store volatile %struct.ScmObj* %current_45args86333, %struct.ScmObj** %stackaddr$prim89981, align 8
%stackaddr$prim89982 = alloca %struct.ScmObj*, align 8
%a40148 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86333)
store volatile %struct.ScmObj* %a40148, %struct.ScmObj** %stackaddr$prim89982, align 8
%stackaddr$prim89983 = alloca %struct.ScmObj*, align 8
%current_45args86334 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86333)
store volatile %struct.ScmObj* %current_45args86334, %struct.ScmObj** %stackaddr$prim89983, align 8
%stackaddr$prim89984 = alloca %struct.ScmObj*, align 8
%b40147 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86334)
store volatile %struct.ScmObj* %b40147, %struct.ScmObj** %stackaddr$prim89984, align 8
%stackaddr$prim89985 = alloca %struct.ScmObj*, align 8
%cpsprim40519 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %a40148, %struct.ScmObj* %b40147)
store volatile %struct.ScmObj* %cpsprim40519, %struct.ScmObj** %stackaddr$prim89985, align 8
%ae41379 = call %struct.ScmObj* @const_init_int(i64 0)
%args86336$k40518$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89986 = alloca %struct.ScmObj*, align 8
%args86336$k40518$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40519, %struct.ScmObj* %args86336$k40518$0)
store volatile %struct.ScmObj* %args86336$k40518$1, %struct.ScmObj** %stackaddr$prim89986, align 8
%stackaddr$prim89987 = alloca %struct.ScmObj*, align 8
%args86336$k40518$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41379, %struct.ScmObj* %args86336$k40518$1)
store volatile %struct.ScmObj* %args86336$k40518$2, %struct.ScmObj** %stackaddr$prim89987, align 8
%clofunc89988 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40518)
musttail call tailcc void %clofunc89988(%struct.ScmObj* %k40518, %struct.ScmObj* %args86336$k40518$2)
ret void
}

define tailcc void @proc_clo$ae41351(%struct.ScmObj* %env$ae41351,%struct.ScmObj* %current_45args86339) {
%stackaddr$prim89989 = alloca %struct.ScmObj*, align 8
%k40520 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86339)
store volatile %struct.ScmObj* %k40520, %struct.ScmObj** %stackaddr$prim89989, align 8
%stackaddr$prim89990 = alloca %struct.ScmObj*, align 8
%current_45args86340 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86339)
store volatile %struct.ScmObj* %current_45args86340, %struct.ScmObj** %stackaddr$prim89990, align 8
%stackaddr$prim89991 = alloca %struct.ScmObj*, align 8
%x40144 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86340)
store volatile %struct.ScmObj* %x40144, %struct.ScmObj** %stackaddr$prim89991, align 8
%stackaddr$prim89992 = alloca %struct.ScmObj*, align 8
%cpsprim40521 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %x40144)
store volatile %struct.ScmObj* %cpsprim40521, %struct.ScmObj** %stackaddr$prim89992, align 8
%ae41354 = call %struct.ScmObj* @const_init_int(i64 0)
%args86342$k40520$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim89993 = alloca %struct.ScmObj*, align 8
%args86342$k40520$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40521, %struct.ScmObj* %args86342$k40520$0)
store volatile %struct.ScmObj* %args86342$k40520$1, %struct.ScmObj** %stackaddr$prim89993, align 8
%stackaddr$prim89994 = alloca %struct.ScmObj*, align 8
%args86342$k40520$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41354, %struct.ScmObj* %args86342$k40520$1)
store volatile %struct.ScmObj* %args86342$k40520$2, %struct.ScmObj** %stackaddr$prim89994, align 8
%clofunc89995 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40520)
musttail call tailcc void %clofunc89995(%struct.ScmObj* %k40520, %struct.ScmObj* %args86342$k40520$2)
ret void
}

define tailcc void @proc_clo$ae41327(%struct.ScmObj* %env$ae41327,%struct.ScmObj* %current_45args86345) {
%stackaddr$prim89996 = alloca %struct.ScmObj*, align 8
%k40522 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86345)
store volatile %struct.ScmObj* %k40522, %struct.ScmObj** %stackaddr$prim89996, align 8
%stackaddr$prim89997 = alloca %struct.ScmObj*, align 8
%current_45args86346 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86345)
store volatile %struct.ScmObj* %current_45args86346, %struct.ScmObj** %stackaddr$prim89997, align 8
%stackaddr$prim89998 = alloca %struct.ScmObj*, align 8
%x40146 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86346)
store volatile %struct.ScmObj* %x40146, %struct.ScmObj** %stackaddr$prim89998, align 8
%stackaddr$prim89999 = alloca %struct.ScmObj*, align 8
%cpsprim40523 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %x40146)
store volatile %struct.ScmObj* %cpsprim40523, %struct.ScmObj** %stackaddr$prim89999, align 8
%ae41330 = call %struct.ScmObj* @const_init_int(i64 0)
%args86348$k40522$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90000 = alloca %struct.ScmObj*, align 8
%args86348$k40522$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40523, %struct.ScmObj* %args86348$k40522$0)
store volatile %struct.ScmObj* %args86348$k40522$1, %struct.ScmObj** %stackaddr$prim90000, align 8
%stackaddr$prim90001 = alloca %struct.ScmObj*, align 8
%args86348$k40522$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41330, %struct.ScmObj* %args86348$k40522$1)
store volatile %struct.ScmObj* %args86348$k40522$2, %struct.ScmObj** %stackaddr$prim90001, align 8
%clofunc90002 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40522)
musttail call tailcc void %clofunc90002(%struct.ScmObj* %k40522, %struct.ScmObj* %args86348$k40522$2)
ret void
}

define tailcc void @proc_clo$ae41279(%struct.ScmObj* %env$ae41279,%struct.ScmObj* %current_45args86351) {
%stackaddr$prim90003 = alloca %struct.ScmObj*, align 8
%k40524 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86351)
store volatile %struct.ScmObj* %k40524, %struct.ScmObj** %stackaddr$prim90003, align 8
%stackaddr$prim90004 = alloca %struct.ScmObj*, align 8
%current_45args86352 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86351)
store volatile %struct.ScmObj* %current_45args86352, %struct.ScmObj** %stackaddr$prim90004, align 8
%stackaddr$prim90005 = alloca %struct.ScmObj*, align 8
%lst40142 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86352)
store volatile %struct.ScmObj* %lst40142, %struct.ScmObj** %stackaddr$prim90005, align 8
%stackaddr$prim90006 = alloca %struct.ScmObj*, align 8
%current_45args86353 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86352)
store volatile %struct.ScmObj* %current_45args86353, %struct.ScmObj** %stackaddr$prim90006, align 8
%stackaddr$prim90007 = alloca %struct.ScmObj*, align 8
%b40141 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86353)
store volatile %struct.ScmObj* %b40141, %struct.ScmObj** %stackaddr$prim90007, align 8
%truthy$cmp90008 = call i64 @is_truthy_value(%struct.ScmObj* %b40141)
%cmp$cmp90008 = icmp eq i64 %truthy$cmp90008, 1
br i1 %cmp$cmp90008, label %truebranch$cmp90008, label %falsebranch$cmp90008
truebranch$cmp90008:
%ae41282 = call %struct.ScmObj* @const_init_int(i64 0)
%args86355$k40524$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90009 = alloca %struct.ScmObj*, align 8
%args86355$k40524$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %b40141, %struct.ScmObj* %args86355$k40524$0)
store volatile %struct.ScmObj* %args86355$k40524$1, %struct.ScmObj** %stackaddr$prim90009, align 8
%stackaddr$prim90010 = alloca %struct.ScmObj*, align 8
%args86355$k40524$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41282, %struct.ScmObj* %args86355$k40524$1)
store volatile %struct.ScmObj* %args86355$k40524$2, %struct.ScmObj** %stackaddr$prim90010, align 8
%clofunc90011 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40524)
musttail call tailcc void %clofunc90011(%struct.ScmObj* %k40524, %struct.ScmObj* %args86355$k40524$2)
ret void
falsebranch$cmp90008:
%stackaddr$prim90012 = alloca %struct.ScmObj*, align 8
%cpsprim40525 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst40142)
store volatile %struct.ScmObj* %cpsprim40525, %struct.ScmObj** %stackaddr$prim90012, align 8
%ae41289 = call %struct.ScmObj* @const_init_int(i64 0)
%args86356$k40524$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90013 = alloca %struct.ScmObj*, align 8
%args86356$k40524$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40525, %struct.ScmObj* %args86356$k40524$0)
store volatile %struct.ScmObj* %args86356$k40524$1, %struct.ScmObj** %stackaddr$prim90013, align 8
%stackaddr$prim90014 = alloca %struct.ScmObj*, align 8
%args86356$k40524$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41289, %struct.ScmObj* %args86356$k40524$1)
store volatile %struct.ScmObj* %args86356$k40524$2, %struct.ScmObj** %stackaddr$prim90014, align 8
%clofunc90015 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40524)
musttail call tailcc void %clofunc90015(%struct.ScmObj* %k40524, %struct.ScmObj* %args86356$k40524$2)
ret void
}

define tailcc void @proc_clo$ae41236(%struct.ScmObj* %env$ae41236,%struct.ScmObj* %current_45args86360) {
%stackaddr$env-ref90016 = alloca %struct.ScmObj*, align 8
%_37length40119 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41236, i64 0)
store %struct.ScmObj* %_37length40119, %struct.ScmObj** %stackaddr$env-ref90016
%stackaddr$env-ref90017 = alloca %struct.ScmObj*, align 8
%_37take40122 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41236, i64 1)
store %struct.ScmObj* %_37take40122, %struct.ScmObj** %stackaddr$env-ref90017
%stackaddr$prim90018 = alloca %struct.ScmObj*, align 8
%k40526 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86360)
store volatile %struct.ScmObj* %k40526, %struct.ScmObj** %stackaddr$prim90018, align 8
%stackaddr$prim90019 = alloca %struct.ScmObj*, align 8
%current_45args86361 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86360)
store volatile %struct.ScmObj* %current_45args86361, %struct.ScmObj** %stackaddr$prim90019, align 8
%stackaddr$prim90020 = alloca %struct.ScmObj*, align 8
%lst40151 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86361)
store volatile %struct.ScmObj* %lst40151, %struct.ScmObj** %stackaddr$prim90020, align 8
%stackaddr$prim90021 = alloca %struct.ScmObj*, align 8
%current_45args86362 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86361)
store volatile %struct.ScmObj* %current_45args86362, %struct.ScmObj** %stackaddr$prim90021, align 8
%stackaddr$prim90022 = alloca %struct.ScmObj*, align 8
%n40150 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86362)
store volatile %struct.ScmObj* %n40150, %struct.ScmObj** %stackaddr$prim90022, align 8
%stackaddr$makeclosure90023 = alloca %struct.ScmObj*, align 8
%fptrToInt90024 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41238 to i64
%ae41238 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt90024)
store volatile %struct.ScmObj* %ae41238, %struct.ScmObj** %stackaddr$makeclosure90023, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41238, %struct.ScmObj* %lst40151, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41238, %struct.ScmObj* %n40150, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41238, %struct.ScmObj* %k40526, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41238, %struct.ScmObj* %_37take40122, i64 3)
%args86368$_37length40119$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90025 = alloca %struct.ScmObj*, align 8
%args86368$_37length40119$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lst40151, %struct.ScmObj* %args86368$_37length40119$0)
store volatile %struct.ScmObj* %args86368$_37length40119$1, %struct.ScmObj** %stackaddr$prim90025, align 8
%stackaddr$prim90026 = alloca %struct.ScmObj*, align 8
%args86368$_37length40119$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41238, %struct.ScmObj* %args86368$_37length40119$1)
store volatile %struct.ScmObj* %args86368$_37length40119$2, %struct.ScmObj** %stackaddr$prim90026, align 8
%clofunc90027 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37length40119)
musttail call tailcc void %clofunc90027(%struct.ScmObj* %_37length40119, %struct.ScmObj* %args86368$_37length40119$2)
ret void
}

define tailcc void @proc_clo$ae41238(%struct.ScmObj* %env$ae41238,%struct.ScmObj* %current_45args86364) {
%stackaddr$env-ref90028 = alloca %struct.ScmObj*, align 8
%lst40151 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41238, i64 0)
store %struct.ScmObj* %lst40151, %struct.ScmObj** %stackaddr$env-ref90028
%stackaddr$env-ref90029 = alloca %struct.ScmObj*, align 8
%n40150 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41238, i64 1)
store %struct.ScmObj* %n40150, %struct.ScmObj** %stackaddr$env-ref90029
%stackaddr$env-ref90030 = alloca %struct.ScmObj*, align 8
%k40526 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41238, i64 2)
store %struct.ScmObj* %k40526, %struct.ScmObj** %stackaddr$env-ref90030
%stackaddr$env-ref90031 = alloca %struct.ScmObj*, align 8
%_37take40122 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41238, i64 3)
store %struct.ScmObj* %_37take40122, %struct.ScmObj** %stackaddr$env-ref90031
%stackaddr$prim90032 = alloca %struct.ScmObj*, align 8
%_95k40527 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86364)
store volatile %struct.ScmObj* %_95k40527, %struct.ScmObj** %stackaddr$prim90032, align 8
%stackaddr$prim90033 = alloca %struct.ScmObj*, align 8
%current_45args86365 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86364)
store volatile %struct.ScmObj* %current_45args86365, %struct.ScmObj** %stackaddr$prim90033, align 8
%stackaddr$prim90034 = alloca %struct.ScmObj*, align 8
%anf_45bind40270 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86365)
store volatile %struct.ScmObj* %anf_45bind40270, %struct.ScmObj** %stackaddr$prim90034, align 8
%stackaddr$prim90035 = alloca %struct.ScmObj*, align 8
%anf_45bind40271 = call %struct.ScmObj* @prim__45(%struct.ScmObj* %anf_45bind40270, %struct.ScmObj* %n40150)
store volatile %struct.ScmObj* %anf_45bind40271, %struct.ScmObj** %stackaddr$prim90035, align 8
%args86367$_37take40122$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90036 = alloca %struct.ScmObj*, align 8
%args86367$_37take40122$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40271, %struct.ScmObj* %args86367$_37take40122$0)
store volatile %struct.ScmObj* %args86367$_37take40122$1, %struct.ScmObj** %stackaddr$prim90036, align 8
%stackaddr$prim90037 = alloca %struct.ScmObj*, align 8
%args86367$_37take40122$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lst40151, %struct.ScmObj* %args86367$_37take40122$1)
store volatile %struct.ScmObj* %args86367$_37take40122$2, %struct.ScmObj** %stackaddr$prim90037, align 8
%stackaddr$prim90038 = alloca %struct.ScmObj*, align 8
%args86367$_37take40122$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40526, %struct.ScmObj* %args86367$_37take40122$2)
store volatile %struct.ScmObj* %args86367$_37take40122$3, %struct.ScmObj** %stackaddr$prim90038, align 8
%clofunc90039 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37take40122)
musttail call tailcc void %clofunc90039(%struct.ScmObj* %_37take40122, %struct.ScmObj* %args86367$_37take40122$3)
ret void
}

define tailcc void @proc_clo$ae41182(%struct.ScmObj* %env$ae41182,%struct.ScmObj* %current_45args86370) {
%stackaddr$env-ref90040 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41182, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref90040
%stackaddr$prim90041 = alloca %struct.ScmObj*, align 8
%k40528 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86370)
store volatile %struct.ScmObj* %k40528, %struct.ScmObj** %stackaddr$prim90041, align 8
%stackaddr$prim90042 = alloca %struct.ScmObj*, align 8
%current_45args86371 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86370)
store volatile %struct.ScmObj* %current_45args86371, %struct.ScmObj** %stackaddr$prim90042, align 8
%stackaddr$prim90043 = alloca %struct.ScmObj*, align 8
%lst40153 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86371)
store volatile %struct.ScmObj* %lst40153, %struct.ScmObj** %stackaddr$prim90043, align 8
%stackaddr$makeclosure90044 = alloca %struct.ScmObj*, align 8
%fptrToInt90045 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41183 to i64
%ae41183 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt90045)
store volatile %struct.ScmObj* %ae41183, %struct.ScmObj** %stackaddr$makeclosure90044, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41183, %struct.ScmObj* %_37foldl140114, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41183, %struct.ScmObj* %k40528, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41183, %struct.ScmObj* %lst40153, i64 2)
%ae41184 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure90046 = alloca %struct.ScmObj*, align 8
%fptrToInt90047 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41185 to i64
%ae41185 = call %struct.ScmObj* @closure_alloc(i64 0, i64 %fptrToInt90047)
store volatile %struct.ScmObj* %ae41185, %struct.ScmObj** %stackaddr$makeclosure90046, align 8
%args86382$ae41183$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90048 = alloca %struct.ScmObj*, align 8
%args86382$ae41183$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41185, %struct.ScmObj* %args86382$ae41183$0)
store volatile %struct.ScmObj* %args86382$ae41183$1, %struct.ScmObj** %stackaddr$prim90048, align 8
%stackaddr$prim90049 = alloca %struct.ScmObj*, align 8
%args86382$ae41183$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41184, %struct.ScmObj* %args86382$ae41183$1)
store volatile %struct.ScmObj* %args86382$ae41183$2, %struct.ScmObj** %stackaddr$prim90049, align 8
%clofunc90050 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae41183)
musttail call tailcc void %clofunc90050(%struct.ScmObj* %ae41183, %struct.ScmObj* %args86382$ae41183$2)
ret void
}

define tailcc void @proc_clo$ae41183(%struct.ScmObj* %env$ae41183,%struct.ScmObj* %current_45args86373) {
%stackaddr$env-ref90051 = alloca %struct.ScmObj*, align 8
%_37foldl140114 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41183, i64 0)
store %struct.ScmObj* %_37foldl140114, %struct.ScmObj** %stackaddr$env-ref90051
%stackaddr$env-ref90052 = alloca %struct.ScmObj*, align 8
%k40528 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41183, i64 1)
store %struct.ScmObj* %k40528, %struct.ScmObj** %stackaddr$env-ref90052
%stackaddr$env-ref90053 = alloca %struct.ScmObj*, align 8
%lst40153 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41183, i64 2)
store %struct.ScmObj* %lst40153, %struct.ScmObj** %stackaddr$env-ref90053
%stackaddr$prim90054 = alloca %struct.ScmObj*, align 8
%_95k40529 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86373)
store volatile %struct.ScmObj* %_95k40529, %struct.ScmObj** %stackaddr$prim90054, align 8
%stackaddr$prim90055 = alloca %struct.ScmObj*, align 8
%current_45args86374 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86373)
store volatile %struct.ScmObj* %current_45args86374, %struct.ScmObj** %stackaddr$prim90055, align 8
%stackaddr$prim90056 = alloca %struct.ScmObj*, align 8
%anf_45bind40269 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86374)
store volatile %struct.ScmObj* %anf_45bind40269, %struct.ScmObj** %stackaddr$prim90056, align 8
%ae41204 = call %struct.ScmObj* @const_init_null()
%args86376$_37foldl140114$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90057 = alloca %struct.ScmObj*, align 8
%args86376$_37foldl140114$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %lst40153, %struct.ScmObj* %args86376$_37foldl140114$0)
store volatile %struct.ScmObj* %args86376$_37foldl140114$1, %struct.ScmObj** %stackaddr$prim90057, align 8
%stackaddr$prim90058 = alloca %struct.ScmObj*, align 8
%args86376$_37foldl140114$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41204, %struct.ScmObj* %args86376$_37foldl140114$1)
store volatile %struct.ScmObj* %args86376$_37foldl140114$2, %struct.ScmObj** %stackaddr$prim90058, align 8
%stackaddr$prim90059 = alloca %struct.ScmObj*, align 8
%args86376$_37foldl140114$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40269, %struct.ScmObj* %args86376$_37foldl140114$2)
store volatile %struct.ScmObj* %args86376$_37foldl140114$3, %struct.ScmObj** %stackaddr$prim90059, align 8
%stackaddr$prim90060 = alloca %struct.ScmObj*, align 8
%args86376$_37foldl140114$4 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40528, %struct.ScmObj* %args86376$_37foldl140114$3)
store volatile %struct.ScmObj* %args86376$_37foldl140114$4, %struct.ScmObj** %stackaddr$prim90060, align 8
%clofunc90061 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldl140114)
musttail call tailcc void %clofunc90061(%struct.ScmObj* %_37foldl140114, %struct.ScmObj* %args86376$_37foldl140114$4)
ret void
}

define tailcc void @proc_clo$ae41185(%struct.ScmObj* %env$ae41185,%struct.ScmObj* %current_45args86377) {
%stackaddr$prim90062 = alloca %struct.ScmObj*, align 8
%k40530 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86377)
store volatile %struct.ScmObj* %k40530, %struct.ScmObj** %stackaddr$prim90062, align 8
%stackaddr$prim90063 = alloca %struct.ScmObj*, align 8
%current_45args86378 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86377)
store volatile %struct.ScmObj* %current_45args86378, %struct.ScmObj** %stackaddr$prim90063, align 8
%stackaddr$prim90064 = alloca %struct.ScmObj*, align 8
%x40155 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86378)
store volatile %struct.ScmObj* %x40155, %struct.ScmObj** %stackaddr$prim90064, align 8
%stackaddr$prim90065 = alloca %struct.ScmObj*, align 8
%current_45args86379 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86378)
store volatile %struct.ScmObj* %current_45args86379, %struct.ScmObj** %stackaddr$prim90065, align 8
%stackaddr$prim90066 = alloca %struct.ScmObj*, align 8
%y40154 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86379)
store volatile %struct.ScmObj* %y40154, %struct.ScmObj** %stackaddr$prim90066, align 8
%ae41187 = call %struct.ScmObj* @const_init_int(i64 0)
%args86381$k40530$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90067 = alloca %struct.ScmObj*, align 8
%args86381$k40530$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %x40155, %struct.ScmObj* %args86381$k40530$0)
store volatile %struct.ScmObj* %args86381$k40530$1, %struct.ScmObj** %stackaddr$prim90067, align 8
%stackaddr$prim90068 = alloca %struct.ScmObj*, align 8
%args86381$k40530$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41187, %struct.ScmObj* %args86381$k40530$1)
store volatile %struct.ScmObj* %args86381$k40530$2, %struct.ScmObj** %stackaddr$prim90068, align 8
%clofunc90069 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40530)
musttail call tailcc void %clofunc90069(%struct.ScmObj* %k40530, %struct.ScmObj* %args86381$k40530$2)
ret void
}

define tailcc void @proc_clo$ae41103(%struct.ScmObj* %env$ae41103,%struct.ScmObj* %current_45args86385) {
%stackaddr$prim90070 = alloca %struct.ScmObj*, align 8
%k40531 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86385)
store volatile %struct.ScmObj* %k40531, %struct.ScmObj** %stackaddr$prim90070, align 8
%stackaddr$prim90071 = alloca %struct.ScmObj*, align 8
%current_45args86386 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86385)
store volatile %struct.ScmObj* %current_45args86386, %struct.ScmObj** %stackaddr$prim90071, align 8
%stackaddr$prim90072 = alloca %struct.ScmObj*, align 8
%_37foldl140115 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86386)
store volatile %struct.ScmObj* %_37foldl140115, %struct.ScmObj** %stackaddr$prim90072, align 8
%ae41105 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure90073 = alloca %struct.ScmObj*, align 8
%fptrToInt90074 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41106 to i64
%ae41106 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt90074)
store volatile %struct.ScmObj* %ae41106, %struct.ScmObj** %stackaddr$makeclosure90073, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41106, %struct.ScmObj* %_37foldl140115, i64 0)
%args86399$k40531$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90075 = alloca %struct.ScmObj*, align 8
%args86399$k40531$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41106, %struct.ScmObj* %args86399$k40531$0)
store volatile %struct.ScmObj* %args86399$k40531$1, %struct.ScmObj** %stackaddr$prim90075, align 8
%stackaddr$prim90076 = alloca %struct.ScmObj*, align 8
%args86399$k40531$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41105, %struct.ScmObj* %args86399$k40531$1)
store volatile %struct.ScmObj* %args86399$k40531$2, %struct.ScmObj** %stackaddr$prim90076, align 8
%clofunc90077 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40531)
musttail call tailcc void %clofunc90077(%struct.ScmObj* %k40531, %struct.ScmObj* %args86399$k40531$2)
ret void
}

define tailcc void @proc_clo$ae41106(%struct.ScmObj* %env$ae41106,%struct.ScmObj* %current_45args86388) {
%stackaddr$env-ref90078 = alloca %struct.ScmObj*, align 8
%_37foldl140115 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41106, i64 0)
store %struct.ScmObj* %_37foldl140115, %struct.ScmObj** %stackaddr$env-ref90078
%stackaddr$prim90079 = alloca %struct.ScmObj*, align 8
%k40532 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86388)
store volatile %struct.ScmObj* %k40532, %struct.ScmObj** %stackaddr$prim90079, align 8
%stackaddr$prim90080 = alloca %struct.ScmObj*, align 8
%current_45args86389 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86388)
store volatile %struct.ScmObj* %current_45args86389, %struct.ScmObj** %stackaddr$prim90080, align 8
%stackaddr$prim90081 = alloca %struct.ScmObj*, align 8
%f40118 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86389)
store volatile %struct.ScmObj* %f40118, %struct.ScmObj** %stackaddr$prim90081, align 8
%stackaddr$prim90082 = alloca %struct.ScmObj*, align 8
%current_45args86390 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86389)
store volatile %struct.ScmObj* %current_45args86390, %struct.ScmObj** %stackaddr$prim90082, align 8
%stackaddr$prim90083 = alloca %struct.ScmObj*, align 8
%acc40117 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86390)
store volatile %struct.ScmObj* %acc40117, %struct.ScmObj** %stackaddr$prim90083, align 8
%stackaddr$prim90084 = alloca %struct.ScmObj*, align 8
%current_45args86391 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86390)
store volatile %struct.ScmObj* %current_45args86391, %struct.ScmObj** %stackaddr$prim90084, align 8
%stackaddr$prim90085 = alloca %struct.ScmObj*, align 8
%lst40116 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86391)
store volatile %struct.ScmObj* %lst40116, %struct.ScmObj** %stackaddr$prim90085, align 8
%stackaddr$prim90086 = alloca %struct.ScmObj*, align 8
%anf_45bind40264 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst40116)
store volatile %struct.ScmObj* %anf_45bind40264, %struct.ScmObj** %stackaddr$prim90086, align 8
%truthy$cmp90087 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40264)
%cmp$cmp90087 = icmp eq i64 %truthy$cmp90087, 1
br i1 %cmp$cmp90087, label %truebranch$cmp90087, label %falsebranch$cmp90087
truebranch$cmp90087:
%ae41110 = call %struct.ScmObj* @const_init_int(i64 0)
%args86393$k40532$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90088 = alloca %struct.ScmObj*, align 8
%args86393$k40532$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc40117, %struct.ScmObj* %args86393$k40532$0)
store volatile %struct.ScmObj* %args86393$k40532$1, %struct.ScmObj** %stackaddr$prim90088, align 8
%stackaddr$prim90089 = alloca %struct.ScmObj*, align 8
%args86393$k40532$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41110, %struct.ScmObj* %args86393$k40532$1)
store volatile %struct.ScmObj* %args86393$k40532$2, %struct.ScmObj** %stackaddr$prim90089, align 8
%clofunc90090 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40532)
musttail call tailcc void %clofunc90090(%struct.ScmObj* %k40532, %struct.ScmObj* %args86393$k40532$2)
ret void
falsebranch$cmp90087:
%stackaddr$prim90091 = alloca %struct.ScmObj*, align 8
%anf_45bind40265 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %lst40116)
store volatile %struct.ScmObj* %anf_45bind40265, %struct.ScmObj** %stackaddr$prim90091, align 8
%stackaddr$makeclosure90092 = alloca %struct.ScmObj*, align 8
%fptrToInt90093 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41117 to i64
%ae41117 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt90093)
store volatile %struct.ScmObj* %ae41117, %struct.ScmObj** %stackaddr$makeclosure90092, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41117, %struct.ScmObj* %k40532, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae41117, %struct.ScmObj* %lst40116, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae41117, %struct.ScmObj* %f40118, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae41117, %struct.ScmObj* %_37foldl140115, i64 3)
%args86398$f40118$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90094 = alloca %struct.ScmObj*, align 8
%args86398$f40118$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc40117, %struct.ScmObj* %args86398$f40118$0)
store volatile %struct.ScmObj* %args86398$f40118$1, %struct.ScmObj** %stackaddr$prim90094, align 8
%stackaddr$prim90095 = alloca %struct.ScmObj*, align 8
%args86398$f40118$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40265, %struct.ScmObj* %args86398$f40118$1)
store volatile %struct.ScmObj* %args86398$f40118$2, %struct.ScmObj** %stackaddr$prim90095, align 8
%stackaddr$prim90096 = alloca %struct.ScmObj*, align 8
%args86398$f40118$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41117, %struct.ScmObj* %args86398$f40118$2)
store volatile %struct.ScmObj* %args86398$f40118$3, %struct.ScmObj** %stackaddr$prim90096, align 8
%clofunc90097 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f40118)
musttail call tailcc void %clofunc90097(%struct.ScmObj* %f40118, %struct.ScmObj* %args86398$f40118$3)
ret void
}

define tailcc void @proc_clo$ae41117(%struct.ScmObj* %env$ae41117,%struct.ScmObj* %current_45args86394) {
%stackaddr$env-ref90098 = alloca %struct.ScmObj*, align 8
%k40532 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41117, i64 0)
store %struct.ScmObj* %k40532, %struct.ScmObj** %stackaddr$env-ref90098
%stackaddr$env-ref90099 = alloca %struct.ScmObj*, align 8
%lst40116 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41117, i64 1)
store %struct.ScmObj* %lst40116, %struct.ScmObj** %stackaddr$env-ref90099
%stackaddr$env-ref90100 = alloca %struct.ScmObj*, align 8
%f40118 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41117, i64 2)
store %struct.ScmObj* %f40118, %struct.ScmObj** %stackaddr$env-ref90100
%stackaddr$env-ref90101 = alloca %struct.ScmObj*, align 8
%_37foldl140115 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41117, i64 3)
store %struct.ScmObj* %_37foldl140115, %struct.ScmObj** %stackaddr$env-ref90101
%stackaddr$prim90102 = alloca %struct.ScmObj*, align 8
%_95k40533 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86394)
store volatile %struct.ScmObj* %_95k40533, %struct.ScmObj** %stackaddr$prim90102, align 8
%stackaddr$prim90103 = alloca %struct.ScmObj*, align 8
%current_45args86395 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86394)
store volatile %struct.ScmObj* %current_45args86395, %struct.ScmObj** %stackaddr$prim90103, align 8
%stackaddr$prim90104 = alloca %struct.ScmObj*, align 8
%anf_45bind40266 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86395)
store volatile %struct.ScmObj* %anf_45bind40266, %struct.ScmObj** %stackaddr$prim90104, align 8
%stackaddr$prim90105 = alloca %struct.ScmObj*, align 8
%anf_45bind40267 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %lst40116)
store volatile %struct.ScmObj* %anf_45bind40267, %struct.ScmObj** %stackaddr$prim90105, align 8
%args86397$_37foldl140115$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90106 = alloca %struct.ScmObj*, align 8
%args86397$_37foldl140115$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40267, %struct.ScmObj* %args86397$_37foldl140115$0)
store volatile %struct.ScmObj* %args86397$_37foldl140115$1, %struct.ScmObj** %stackaddr$prim90106, align 8
%stackaddr$prim90107 = alloca %struct.ScmObj*, align 8
%args86397$_37foldl140115$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40266, %struct.ScmObj* %args86397$_37foldl140115$1)
store volatile %struct.ScmObj* %args86397$_37foldl140115$2, %struct.ScmObj** %stackaddr$prim90107, align 8
%stackaddr$prim90108 = alloca %struct.ScmObj*, align 8
%args86397$_37foldl140115$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f40118, %struct.ScmObj* %args86397$_37foldl140115$2)
store volatile %struct.ScmObj* %args86397$_37foldl140115$3, %struct.ScmObj** %stackaddr$prim90108, align 8
%stackaddr$prim90109 = alloca %struct.ScmObj*, align 8
%args86397$_37foldl140115$4 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40532, %struct.ScmObj* %args86397$_37foldl140115$3)
store volatile %struct.ScmObj* %args86397$_37foldl140115$4, %struct.ScmObj** %stackaddr$prim90109, align 8
%clofunc90110 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldl140115)
musttail call tailcc void %clofunc90110(%struct.ScmObj* %_37foldl140115, %struct.ScmObj* %args86397$_37foldl140115$4)
ret void
}

define tailcc void @proc_clo$ae41020(%struct.ScmObj* %env$ae41020,%struct.ScmObj* %current_45args86402) {
%stackaddr$prim90111 = alloca %struct.ScmObj*, align 8
%k40534 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86402)
store volatile %struct.ScmObj* %k40534, %struct.ScmObj** %stackaddr$prim90111, align 8
%stackaddr$prim90112 = alloca %struct.ScmObj*, align 8
%current_45args86403 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86402)
store volatile %struct.ScmObj* %current_45args86403, %struct.ScmObj** %stackaddr$prim90112, align 8
%stackaddr$prim90113 = alloca %struct.ScmObj*, align 8
%_37length40120 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86403)
store volatile %struct.ScmObj* %_37length40120, %struct.ScmObj** %stackaddr$prim90113, align 8
%ae41022 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure90114 = alloca %struct.ScmObj*, align 8
%fptrToInt90115 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41023 to i64
%ae41023 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt90115)
store volatile %struct.ScmObj* %ae41023, %struct.ScmObj** %stackaddr$makeclosure90114, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41023, %struct.ScmObj* %_37length40120, i64 0)
%args86414$k40534$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90116 = alloca %struct.ScmObj*, align 8
%args86414$k40534$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41023, %struct.ScmObj* %args86414$k40534$0)
store volatile %struct.ScmObj* %args86414$k40534$1, %struct.ScmObj** %stackaddr$prim90116, align 8
%stackaddr$prim90117 = alloca %struct.ScmObj*, align 8
%args86414$k40534$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41022, %struct.ScmObj* %args86414$k40534$1)
store volatile %struct.ScmObj* %args86414$k40534$2, %struct.ScmObj** %stackaddr$prim90117, align 8
%clofunc90118 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40534)
musttail call tailcc void %clofunc90118(%struct.ScmObj* %k40534, %struct.ScmObj* %args86414$k40534$2)
ret void
}

define tailcc void @proc_clo$ae41023(%struct.ScmObj* %env$ae41023,%struct.ScmObj* %current_45args86405) {
%stackaddr$env-ref90119 = alloca %struct.ScmObj*, align 8
%_37length40120 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41023, i64 0)
store %struct.ScmObj* %_37length40120, %struct.ScmObj** %stackaddr$env-ref90119
%stackaddr$prim90120 = alloca %struct.ScmObj*, align 8
%k40535 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86405)
store volatile %struct.ScmObj* %k40535, %struct.ScmObj** %stackaddr$prim90120, align 8
%stackaddr$prim90121 = alloca %struct.ScmObj*, align 8
%current_45args86406 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86405)
store volatile %struct.ScmObj* %current_45args86406, %struct.ScmObj** %stackaddr$prim90121, align 8
%stackaddr$prim90122 = alloca %struct.ScmObj*, align 8
%lst40121 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86406)
store volatile %struct.ScmObj* %lst40121, %struct.ScmObj** %stackaddr$prim90122, align 8
%stackaddr$prim90123 = alloca %struct.ScmObj*, align 8
%anf_45bind40260 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst40121)
store volatile %struct.ScmObj* %anf_45bind40260, %struct.ScmObj** %stackaddr$prim90123, align 8
%truthy$cmp90124 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40260)
%cmp$cmp90124 = icmp eq i64 %truthy$cmp90124, 1
br i1 %cmp$cmp90124, label %truebranch$cmp90124, label %falsebranch$cmp90124
truebranch$cmp90124:
%ae41027 = call %struct.ScmObj* @const_init_int(i64 0)
%ae41028 = call %struct.ScmObj* @const_init_int(i64 0)
%args86408$k40535$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90125 = alloca %struct.ScmObj*, align 8
%args86408$k40535$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41028, %struct.ScmObj* %args86408$k40535$0)
store volatile %struct.ScmObj* %args86408$k40535$1, %struct.ScmObj** %stackaddr$prim90125, align 8
%stackaddr$prim90126 = alloca %struct.ScmObj*, align 8
%args86408$k40535$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41027, %struct.ScmObj* %args86408$k40535$1)
store volatile %struct.ScmObj* %args86408$k40535$2, %struct.ScmObj** %stackaddr$prim90126, align 8
%clofunc90127 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40535)
musttail call tailcc void %clofunc90127(%struct.ScmObj* %k40535, %struct.ScmObj* %args86408$k40535$2)
ret void
falsebranch$cmp90124:
%stackaddr$prim90128 = alloca %struct.ScmObj*, align 8
%anf_45bind40261 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %lst40121)
store volatile %struct.ScmObj* %anf_45bind40261, %struct.ScmObj** %stackaddr$prim90128, align 8
%stackaddr$makeclosure90129 = alloca %struct.ScmObj*, align 8
%fptrToInt90130 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae41037 to i64
%ae41037 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt90130)
store volatile %struct.ScmObj* %ae41037, %struct.ScmObj** %stackaddr$makeclosure90129, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae41037, %struct.ScmObj* %k40535, i64 0)
%args86413$_37length40120$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90131 = alloca %struct.ScmObj*, align 8
%args86413$_37length40120$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40261, %struct.ScmObj* %args86413$_37length40120$0)
store volatile %struct.ScmObj* %args86413$_37length40120$1, %struct.ScmObj** %stackaddr$prim90131, align 8
%stackaddr$prim90132 = alloca %struct.ScmObj*, align 8
%args86413$_37length40120$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41037, %struct.ScmObj* %args86413$_37length40120$1)
store volatile %struct.ScmObj* %args86413$_37length40120$2, %struct.ScmObj** %stackaddr$prim90132, align 8
%clofunc90133 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37length40120)
musttail call tailcc void %clofunc90133(%struct.ScmObj* %_37length40120, %struct.ScmObj* %args86413$_37length40120$2)
ret void
}

define tailcc void @proc_clo$ae41037(%struct.ScmObj* %env$ae41037,%struct.ScmObj* %current_45args86409) {
%stackaddr$env-ref90134 = alloca %struct.ScmObj*, align 8
%k40535 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae41037, i64 0)
store %struct.ScmObj* %k40535, %struct.ScmObj** %stackaddr$env-ref90134
%stackaddr$prim90135 = alloca %struct.ScmObj*, align 8
%_95k40536 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86409)
store volatile %struct.ScmObj* %_95k40536, %struct.ScmObj** %stackaddr$prim90135, align 8
%stackaddr$prim90136 = alloca %struct.ScmObj*, align 8
%current_45args86410 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86409)
store volatile %struct.ScmObj* %current_45args86410, %struct.ScmObj** %stackaddr$prim90136, align 8
%stackaddr$prim90137 = alloca %struct.ScmObj*, align 8
%anf_45bind40262 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86410)
store volatile %struct.ScmObj* %anf_45bind40262, %struct.ScmObj** %stackaddr$prim90137, align 8
%ae41039 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim90138 = alloca %struct.ScmObj*, align 8
%cpsprim40537 = call %struct.ScmObj* @prim__43(%struct.ScmObj* %ae41039, %struct.ScmObj* %anf_45bind40262)
store volatile %struct.ScmObj* %cpsprim40537, %struct.ScmObj** %stackaddr$prim90138, align 8
%ae41042 = call %struct.ScmObj* @const_init_int(i64 0)
%args86412$k40535$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90139 = alloca %struct.ScmObj*, align 8
%args86412$k40535$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40537, %struct.ScmObj* %args86412$k40535$0)
store volatile %struct.ScmObj* %args86412$k40535$1, %struct.ScmObj** %stackaddr$prim90139, align 8
%stackaddr$prim90140 = alloca %struct.ScmObj*, align 8
%args86412$k40535$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae41042, %struct.ScmObj* %args86412$k40535$1)
store volatile %struct.ScmObj* %args86412$k40535$2, %struct.ScmObj** %stackaddr$prim90140, align 8
%clofunc90141 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40535)
musttail call tailcc void %clofunc90141(%struct.ScmObj* %k40535, %struct.ScmObj* %args86412$k40535$2)
ret void
}

define tailcc void @proc_clo$ae40870(%struct.ScmObj* %env$ae40870,%struct.ScmObj* %current_45args86417) {
%stackaddr$prim90142 = alloca %struct.ScmObj*, align 8
%k40538 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86417)
store volatile %struct.ScmObj* %k40538, %struct.ScmObj** %stackaddr$prim90142, align 8
%stackaddr$prim90143 = alloca %struct.ScmObj*, align 8
%current_45args86418 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86417)
store volatile %struct.ScmObj* %current_45args86418, %struct.ScmObj** %stackaddr$prim90143, align 8
%stackaddr$prim90144 = alloca %struct.ScmObj*, align 8
%_37take40123 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86418)
store volatile %struct.ScmObj* %_37take40123, %struct.ScmObj** %stackaddr$prim90144, align 8
%ae40872 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure90145 = alloca %struct.ScmObj*, align 8
%fptrToInt90146 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40873 to i64
%ae40873 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt90146)
store volatile %struct.ScmObj* %ae40873, %struct.ScmObj** %stackaddr$makeclosure90145, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40873, %struct.ScmObj* %_37take40123, i64 0)
%args86431$k40538$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90147 = alloca %struct.ScmObj*, align 8
%args86431$k40538$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40873, %struct.ScmObj* %args86431$k40538$0)
store volatile %struct.ScmObj* %args86431$k40538$1, %struct.ScmObj** %stackaddr$prim90147, align 8
%stackaddr$prim90148 = alloca %struct.ScmObj*, align 8
%args86431$k40538$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40872, %struct.ScmObj* %args86431$k40538$1)
store volatile %struct.ScmObj* %args86431$k40538$2, %struct.ScmObj** %stackaddr$prim90148, align 8
%clofunc90149 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40538)
musttail call tailcc void %clofunc90149(%struct.ScmObj* %k40538, %struct.ScmObj* %args86431$k40538$2)
ret void
}

define tailcc void @proc_clo$ae40873(%struct.ScmObj* %env$ae40873,%struct.ScmObj* %current_45args86420) {
%stackaddr$env-ref90150 = alloca %struct.ScmObj*, align 8
%_37take40123 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40873, i64 0)
store %struct.ScmObj* %_37take40123, %struct.ScmObj** %stackaddr$env-ref90150
%stackaddr$prim90151 = alloca %struct.ScmObj*, align 8
%k40539 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86420)
store volatile %struct.ScmObj* %k40539, %struct.ScmObj** %stackaddr$prim90151, align 8
%stackaddr$prim90152 = alloca %struct.ScmObj*, align 8
%current_45args86421 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86420)
store volatile %struct.ScmObj* %current_45args86421, %struct.ScmObj** %stackaddr$prim90152, align 8
%stackaddr$prim90153 = alloca %struct.ScmObj*, align 8
%lst40125 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86421)
store volatile %struct.ScmObj* %lst40125, %struct.ScmObj** %stackaddr$prim90153, align 8
%stackaddr$prim90154 = alloca %struct.ScmObj*, align 8
%current_45args86422 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86421)
store volatile %struct.ScmObj* %current_45args86422, %struct.ScmObj** %stackaddr$prim90154, align 8
%stackaddr$prim90155 = alloca %struct.ScmObj*, align 8
%n40124 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86422)
store volatile %struct.ScmObj* %n40124, %struct.ScmObj** %stackaddr$prim90155, align 8
%ae40875 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$prim90156 = alloca %struct.ScmObj*, align 8
%anf_45bind40253 = call %struct.ScmObj* @prim__61(%struct.ScmObj* %n40124, %struct.ScmObj* %ae40875)
store volatile %struct.ScmObj* %anf_45bind40253, %struct.ScmObj** %stackaddr$prim90156, align 8
%truthy$cmp90157 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40253)
%cmp$cmp90157 = icmp eq i64 %truthy$cmp90157, 1
br i1 %cmp$cmp90157, label %truebranch$cmp90157, label %falsebranch$cmp90157
truebranch$cmp90157:
%ae40878 = call %struct.ScmObj* @const_init_int(i64 0)
%ae40879 = call %struct.ScmObj* @const_init_null()
%args86424$k40539$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90158 = alloca %struct.ScmObj*, align 8
%args86424$k40539$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40879, %struct.ScmObj* %args86424$k40539$0)
store volatile %struct.ScmObj* %args86424$k40539$1, %struct.ScmObj** %stackaddr$prim90158, align 8
%stackaddr$prim90159 = alloca %struct.ScmObj*, align 8
%args86424$k40539$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40878, %struct.ScmObj* %args86424$k40539$1)
store volatile %struct.ScmObj* %args86424$k40539$2, %struct.ScmObj** %stackaddr$prim90159, align 8
%clofunc90160 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40539)
musttail call tailcc void %clofunc90160(%struct.ScmObj* %k40539, %struct.ScmObj* %args86424$k40539$2)
ret void
falsebranch$cmp90157:
%stackaddr$prim90161 = alloca %struct.ScmObj*, align 8
%anf_45bind40254 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst40125)
store volatile %struct.ScmObj* %anf_45bind40254, %struct.ScmObj** %stackaddr$prim90161, align 8
%truthy$cmp90162 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40254)
%cmp$cmp90162 = icmp eq i64 %truthy$cmp90162, 1
br i1 %cmp$cmp90162, label %truebranch$cmp90162, label %falsebranch$cmp90162
truebranch$cmp90162:
%ae40889 = call %struct.ScmObj* @const_init_int(i64 0)
%ae40890 = call %struct.ScmObj* @const_init_null()
%args86425$k40539$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90163 = alloca %struct.ScmObj*, align 8
%args86425$k40539$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40890, %struct.ScmObj* %args86425$k40539$0)
store volatile %struct.ScmObj* %args86425$k40539$1, %struct.ScmObj** %stackaddr$prim90163, align 8
%stackaddr$prim90164 = alloca %struct.ScmObj*, align 8
%args86425$k40539$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40889, %struct.ScmObj* %args86425$k40539$1)
store volatile %struct.ScmObj* %args86425$k40539$2, %struct.ScmObj** %stackaddr$prim90164, align 8
%clofunc90165 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40539)
musttail call tailcc void %clofunc90165(%struct.ScmObj* %k40539, %struct.ScmObj* %args86425$k40539$2)
ret void
falsebranch$cmp90162:
%stackaddr$prim90166 = alloca %struct.ScmObj*, align 8
%anf_45bind40255 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %lst40125)
store volatile %struct.ScmObj* %anf_45bind40255, %struct.ScmObj** %stackaddr$prim90166, align 8
%stackaddr$prim90167 = alloca %struct.ScmObj*, align 8
%anf_45bind40256 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %lst40125)
store volatile %struct.ScmObj* %anf_45bind40256, %struct.ScmObj** %stackaddr$prim90167, align 8
%ae40900 = call %struct.ScmObj* @const_init_int(i64 1)
%stackaddr$prim90168 = alloca %struct.ScmObj*, align 8
%anf_45bind40257 = call %struct.ScmObj* @prim__45(%struct.ScmObj* %n40124, %struct.ScmObj* %ae40900)
store volatile %struct.ScmObj* %anf_45bind40257, %struct.ScmObj** %stackaddr$prim90168, align 8
%stackaddr$makeclosure90169 = alloca %struct.ScmObj*, align 8
%fptrToInt90170 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40902 to i64
%ae40902 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt90170)
store volatile %struct.ScmObj* %ae40902, %struct.ScmObj** %stackaddr$makeclosure90169, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40902, %struct.ScmObj* %anf_45bind40255, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40902, %struct.ScmObj* %k40539, i64 1)
%args86430$_37take40123$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90171 = alloca %struct.ScmObj*, align 8
%args86430$_37take40123$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40257, %struct.ScmObj* %args86430$_37take40123$0)
store volatile %struct.ScmObj* %args86430$_37take40123$1, %struct.ScmObj** %stackaddr$prim90171, align 8
%stackaddr$prim90172 = alloca %struct.ScmObj*, align 8
%args86430$_37take40123$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40256, %struct.ScmObj* %args86430$_37take40123$1)
store volatile %struct.ScmObj* %args86430$_37take40123$2, %struct.ScmObj** %stackaddr$prim90172, align 8
%stackaddr$prim90173 = alloca %struct.ScmObj*, align 8
%args86430$_37take40123$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40902, %struct.ScmObj* %args86430$_37take40123$2)
store volatile %struct.ScmObj* %args86430$_37take40123$3, %struct.ScmObj** %stackaddr$prim90173, align 8
%clofunc90174 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37take40123)
musttail call tailcc void %clofunc90174(%struct.ScmObj* %_37take40123, %struct.ScmObj* %args86430$_37take40123$3)
ret void
}

define tailcc void @proc_clo$ae40902(%struct.ScmObj* %env$ae40902,%struct.ScmObj* %current_45args86426) {
%stackaddr$env-ref90175 = alloca %struct.ScmObj*, align 8
%anf_45bind40255 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40902, i64 0)
store %struct.ScmObj* %anf_45bind40255, %struct.ScmObj** %stackaddr$env-ref90175
%stackaddr$env-ref90176 = alloca %struct.ScmObj*, align 8
%k40539 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40902, i64 1)
store %struct.ScmObj* %k40539, %struct.ScmObj** %stackaddr$env-ref90176
%stackaddr$prim90177 = alloca %struct.ScmObj*, align 8
%_95k40540 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86426)
store volatile %struct.ScmObj* %_95k40540, %struct.ScmObj** %stackaddr$prim90177, align 8
%stackaddr$prim90178 = alloca %struct.ScmObj*, align 8
%current_45args86427 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86426)
store volatile %struct.ScmObj* %current_45args86427, %struct.ScmObj** %stackaddr$prim90178, align 8
%stackaddr$prim90179 = alloca %struct.ScmObj*, align 8
%anf_45bind40258 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86427)
store volatile %struct.ScmObj* %anf_45bind40258, %struct.ScmObj** %stackaddr$prim90179, align 8
%stackaddr$prim90180 = alloca %struct.ScmObj*, align 8
%cpsprim40541 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40255, %struct.ScmObj* %anf_45bind40258)
store volatile %struct.ScmObj* %cpsprim40541, %struct.ScmObj** %stackaddr$prim90180, align 8
%ae40908 = call %struct.ScmObj* @const_init_int(i64 0)
%args86429$k40539$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90181 = alloca %struct.ScmObj*, align 8
%args86429$k40539$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40541, %struct.ScmObj* %args86429$k40539$0)
store volatile %struct.ScmObj* %args86429$k40539$1, %struct.ScmObj** %stackaddr$prim90181, align 8
%stackaddr$prim90182 = alloca %struct.ScmObj*, align 8
%args86429$k40539$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40908, %struct.ScmObj* %args86429$k40539$1)
store volatile %struct.ScmObj* %args86429$k40539$2, %struct.ScmObj** %stackaddr$prim90182, align 8
%clofunc90183 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40539)
musttail call tailcc void %clofunc90183(%struct.ScmObj* %k40539, %struct.ScmObj* %args86429$k40539$2)
ret void
}

define tailcc void @proc_clo$ae40773(%struct.ScmObj* %env$ae40773,%struct.ScmObj* %current_45args86434) {
%stackaddr$prim90184 = alloca %struct.ScmObj*, align 8
%k40542 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86434)
store volatile %struct.ScmObj* %k40542, %struct.ScmObj** %stackaddr$prim90184, align 8
%stackaddr$prim90185 = alloca %struct.ScmObj*, align 8
%current_45args86435 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86434)
store volatile %struct.ScmObj* %current_45args86435, %struct.ScmObj** %stackaddr$prim90185, align 8
%stackaddr$prim90186 = alloca %struct.ScmObj*, align 8
%_37map40127 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86435)
store volatile %struct.ScmObj* %_37map40127, %struct.ScmObj** %stackaddr$prim90186, align 8
%ae40775 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure90187 = alloca %struct.ScmObj*, align 8
%fptrToInt90188 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40776 to i64
%ae40776 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt90188)
store volatile %struct.ScmObj* %ae40776, %struct.ScmObj** %stackaddr$makeclosure90187, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40776, %struct.ScmObj* %_37map40127, i64 0)
%args86451$k40542$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90189 = alloca %struct.ScmObj*, align 8
%args86451$k40542$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40776, %struct.ScmObj* %args86451$k40542$0)
store volatile %struct.ScmObj* %args86451$k40542$1, %struct.ScmObj** %stackaddr$prim90189, align 8
%stackaddr$prim90190 = alloca %struct.ScmObj*, align 8
%args86451$k40542$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40775, %struct.ScmObj* %args86451$k40542$1)
store volatile %struct.ScmObj* %args86451$k40542$2, %struct.ScmObj** %stackaddr$prim90190, align 8
%clofunc90191 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40542)
musttail call tailcc void %clofunc90191(%struct.ScmObj* %k40542, %struct.ScmObj* %args86451$k40542$2)
ret void
}

define tailcc void @proc_clo$ae40776(%struct.ScmObj* %env$ae40776,%struct.ScmObj* %current_45args86437) {
%stackaddr$env-ref90192 = alloca %struct.ScmObj*, align 8
%_37map40127 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40776, i64 0)
store %struct.ScmObj* %_37map40127, %struct.ScmObj** %stackaddr$env-ref90192
%stackaddr$prim90193 = alloca %struct.ScmObj*, align 8
%k40543 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86437)
store volatile %struct.ScmObj* %k40543, %struct.ScmObj** %stackaddr$prim90193, align 8
%stackaddr$prim90194 = alloca %struct.ScmObj*, align 8
%current_45args86438 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86437)
store volatile %struct.ScmObj* %current_45args86438, %struct.ScmObj** %stackaddr$prim90194, align 8
%stackaddr$prim90195 = alloca %struct.ScmObj*, align 8
%f40129 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86438)
store volatile %struct.ScmObj* %f40129, %struct.ScmObj** %stackaddr$prim90195, align 8
%stackaddr$prim90196 = alloca %struct.ScmObj*, align 8
%current_45args86439 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86438)
store volatile %struct.ScmObj* %current_45args86439, %struct.ScmObj** %stackaddr$prim90196, align 8
%stackaddr$prim90197 = alloca %struct.ScmObj*, align 8
%lst40128 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86439)
store volatile %struct.ScmObj* %lst40128, %struct.ScmObj** %stackaddr$prim90197, align 8
%stackaddr$prim90198 = alloca %struct.ScmObj*, align 8
%anf_45bind40247 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst40128)
store volatile %struct.ScmObj* %anf_45bind40247, %struct.ScmObj** %stackaddr$prim90198, align 8
%truthy$cmp90199 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40247)
%cmp$cmp90199 = icmp eq i64 %truthy$cmp90199, 1
br i1 %cmp$cmp90199, label %truebranch$cmp90199, label %falsebranch$cmp90199
truebranch$cmp90199:
%ae40780 = call %struct.ScmObj* @const_init_int(i64 0)
%ae40781 = call %struct.ScmObj* @const_init_null()
%args86441$k40543$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90200 = alloca %struct.ScmObj*, align 8
%args86441$k40543$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40781, %struct.ScmObj* %args86441$k40543$0)
store volatile %struct.ScmObj* %args86441$k40543$1, %struct.ScmObj** %stackaddr$prim90200, align 8
%stackaddr$prim90201 = alloca %struct.ScmObj*, align 8
%args86441$k40543$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40780, %struct.ScmObj* %args86441$k40543$1)
store volatile %struct.ScmObj* %args86441$k40543$2, %struct.ScmObj** %stackaddr$prim90201, align 8
%clofunc90202 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40543)
musttail call tailcc void %clofunc90202(%struct.ScmObj* %k40543, %struct.ScmObj* %args86441$k40543$2)
ret void
falsebranch$cmp90199:
%stackaddr$prim90203 = alloca %struct.ScmObj*, align 8
%anf_45bind40248 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %lst40128)
store volatile %struct.ScmObj* %anf_45bind40248, %struct.ScmObj** %stackaddr$prim90203, align 8
%stackaddr$makeclosure90204 = alloca %struct.ScmObj*, align 8
%fptrToInt90205 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40790 to i64
%ae40790 = call %struct.ScmObj* @closure_alloc(i64 4, i64 %fptrToInt90205)
store volatile %struct.ScmObj* %ae40790, %struct.ScmObj** %stackaddr$makeclosure90204, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40790, %struct.ScmObj* %k40543, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40790, %struct.ScmObj* %_37map40127, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae40790, %struct.ScmObj* %f40129, i64 2)
call void @closure_place_freevar(%struct.ScmObj* %ae40790, %struct.ScmObj* %lst40128, i64 3)
%args86450$f40129$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90206 = alloca %struct.ScmObj*, align 8
%args86450$f40129$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40248, %struct.ScmObj* %args86450$f40129$0)
store volatile %struct.ScmObj* %args86450$f40129$1, %struct.ScmObj** %stackaddr$prim90206, align 8
%stackaddr$prim90207 = alloca %struct.ScmObj*, align 8
%args86450$f40129$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40790, %struct.ScmObj* %args86450$f40129$1)
store volatile %struct.ScmObj* %args86450$f40129$2, %struct.ScmObj** %stackaddr$prim90207, align 8
%clofunc90208 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f40129)
musttail call tailcc void %clofunc90208(%struct.ScmObj* %f40129, %struct.ScmObj* %args86450$f40129$2)
ret void
}

define tailcc void @proc_clo$ae40790(%struct.ScmObj* %env$ae40790,%struct.ScmObj* %current_45args86442) {
%stackaddr$env-ref90209 = alloca %struct.ScmObj*, align 8
%k40543 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40790, i64 0)
store %struct.ScmObj* %k40543, %struct.ScmObj** %stackaddr$env-ref90209
%stackaddr$env-ref90210 = alloca %struct.ScmObj*, align 8
%_37map40127 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40790, i64 1)
store %struct.ScmObj* %_37map40127, %struct.ScmObj** %stackaddr$env-ref90210
%stackaddr$env-ref90211 = alloca %struct.ScmObj*, align 8
%f40129 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40790, i64 2)
store %struct.ScmObj* %f40129, %struct.ScmObj** %stackaddr$env-ref90211
%stackaddr$env-ref90212 = alloca %struct.ScmObj*, align 8
%lst40128 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40790, i64 3)
store %struct.ScmObj* %lst40128, %struct.ScmObj** %stackaddr$env-ref90212
%stackaddr$prim90213 = alloca %struct.ScmObj*, align 8
%_95k40544 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86442)
store volatile %struct.ScmObj* %_95k40544, %struct.ScmObj** %stackaddr$prim90213, align 8
%stackaddr$prim90214 = alloca %struct.ScmObj*, align 8
%current_45args86443 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86442)
store volatile %struct.ScmObj* %current_45args86443, %struct.ScmObj** %stackaddr$prim90214, align 8
%stackaddr$prim90215 = alloca %struct.ScmObj*, align 8
%anf_45bind40249 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86443)
store volatile %struct.ScmObj* %anf_45bind40249, %struct.ScmObj** %stackaddr$prim90215, align 8
%stackaddr$prim90216 = alloca %struct.ScmObj*, align 8
%anf_45bind40250 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %lst40128)
store volatile %struct.ScmObj* %anf_45bind40250, %struct.ScmObj** %stackaddr$prim90216, align 8
%stackaddr$makeclosure90217 = alloca %struct.ScmObj*, align 8
%fptrToInt90218 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40794 to i64
%ae40794 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt90218)
store volatile %struct.ScmObj* %ae40794, %struct.ScmObj** %stackaddr$makeclosure90217, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40794, %struct.ScmObj* %k40543, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40794, %struct.ScmObj* %anf_45bind40249, i64 1)
%args86449$_37map40127$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90219 = alloca %struct.ScmObj*, align 8
%args86449$_37map40127$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40250, %struct.ScmObj* %args86449$_37map40127$0)
store volatile %struct.ScmObj* %args86449$_37map40127$1, %struct.ScmObj** %stackaddr$prim90219, align 8
%stackaddr$prim90220 = alloca %struct.ScmObj*, align 8
%args86449$_37map40127$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f40129, %struct.ScmObj* %args86449$_37map40127$1)
store volatile %struct.ScmObj* %args86449$_37map40127$2, %struct.ScmObj** %stackaddr$prim90220, align 8
%stackaddr$prim90221 = alloca %struct.ScmObj*, align 8
%args86449$_37map40127$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40794, %struct.ScmObj* %args86449$_37map40127$2)
store volatile %struct.ScmObj* %args86449$_37map40127$3, %struct.ScmObj** %stackaddr$prim90221, align 8
%clofunc90222 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37map40127)
musttail call tailcc void %clofunc90222(%struct.ScmObj* %_37map40127, %struct.ScmObj* %args86449$_37map40127$3)
ret void
}

define tailcc void @proc_clo$ae40794(%struct.ScmObj* %env$ae40794,%struct.ScmObj* %current_45args86445) {
%stackaddr$env-ref90223 = alloca %struct.ScmObj*, align 8
%k40543 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40794, i64 0)
store %struct.ScmObj* %k40543, %struct.ScmObj** %stackaddr$env-ref90223
%stackaddr$env-ref90224 = alloca %struct.ScmObj*, align 8
%anf_45bind40249 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40794, i64 1)
store %struct.ScmObj* %anf_45bind40249, %struct.ScmObj** %stackaddr$env-ref90224
%stackaddr$prim90225 = alloca %struct.ScmObj*, align 8
%_95k40545 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86445)
store volatile %struct.ScmObj* %_95k40545, %struct.ScmObj** %stackaddr$prim90225, align 8
%stackaddr$prim90226 = alloca %struct.ScmObj*, align 8
%current_45args86446 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86445)
store volatile %struct.ScmObj* %current_45args86446, %struct.ScmObj** %stackaddr$prim90226, align 8
%stackaddr$prim90227 = alloca %struct.ScmObj*, align 8
%anf_45bind40251 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86446)
store volatile %struct.ScmObj* %anf_45bind40251, %struct.ScmObj** %stackaddr$prim90227, align 8
%stackaddr$prim90228 = alloca %struct.ScmObj*, align 8
%cpsprim40546 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40249, %struct.ScmObj* %anf_45bind40251)
store volatile %struct.ScmObj* %cpsprim40546, %struct.ScmObj** %stackaddr$prim90228, align 8
%ae40800 = call %struct.ScmObj* @const_init_int(i64 0)
%args86448$k40543$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90229 = alloca %struct.ScmObj*, align 8
%args86448$k40543$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %cpsprim40546, %struct.ScmObj* %args86448$k40543$0)
store volatile %struct.ScmObj* %args86448$k40543$1, %struct.ScmObj** %stackaddr$prim90229, align 8
%stackaddr$prim90230 = alloca %struct.ScmObj*, align 8
%args86448$k40543$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40800, %struct.ScmObj* %args86448$k40543$1)
store volatile %struct.ScmObj* %args86448$k40543$2, %struct.ScmObj** %stackaddr$prim90230, align 8
%clofunc90231 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40543)
musttail call tailcc void %clofunc90231(%struct.ScmObj* %k40543, %struct.ScmObj* %args86448$k40543$2)
ret void
}

define tailcc void @proc_clo$ae40693(%struct.ScmObj* %env$ae40693,%struct.ScmObj* %current_45args86454) {
%stackaddr$prim90232 = alloca %struct.ScmObj*, align 8
%k40547 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86454)
store volatile %struct.ScmObj* %k40547, %struct.ScmObj** %stackaddr$prim90232, align 8
%stackaddr$prim90233 = alloca %struct.ScmObj*, align 8
%current_45args86455 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86454)
store volatile %struct.ScmObj* %current_45args86455, %struct.ScmObj** %stackaddr$prim90233, align 8
%stackaddr$prim90234 = alloca %struct.ScmObj*, align 8
%_37foldr140131 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86455)
store volatile %struct.ScmObj* %_37foldr140131, %struct.ScmObj** %stackaddr$prim90234, align 8
%ae40695 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure90235 = alloca %struct.ScmObj*, align 8
%fptrToInt90236 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40696 to i64
%ae40696 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt90236)
store volatile %struct.ScmObj* %ae40696, %struct.ScmObj** %stackaddr$makeclosure90235, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40696, %struct.ScmObj* %_37foldr140131, i64 0)
%args86468$k40547$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90237 = alloca %struct.ScmObj*, align 8
%args86468$k40547$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40696, %struct.ScmObj* %args86468$k40547$0)
store volatile %struct.ScmObj* %args86468$k40547$1, %struct.ScmObj** %stackaddr$prim90237, align 8
%stackaddr$prim90238 = alloca %struct.ScmObj*, align 8
%args86468$k40547$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40695, %struct.ScmObj* %args86468$k40547$1)
store volatile %struct.ScmObj* %args86468$k40547$2, %struct.ScmObj** %stackaddr$prim90238, align 8
%clofunc90239 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40547)
musttail call tailcc void %clofunc90239(%struct.ScmObj* %k40547, %struct.ScmObj* %args86468$k40547$2)
ret void
}

define tailcc void @proc_clo$ae40696(%struct.ScmObj* %env$ae40696,%struct.ScmObj* %current_45args86457) {
%stackaddr$env-ref90240 = alloca %struct.ScmObj*, align 8
%_37foldr140131 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40696, i64 0)
store %struct.ScmObj* %_37foldr140131, %struct.ScmObj** %stackaddr$env-ref90240
%stackaddr$prim90241 = alloca %struct.ScmObj*, align 8
%k40548 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86457)
store volatile %struct.ScmObj* %k40548, %struct.ScmObj** %stackaddr$prim90241, align 8
%stackaddr$prim90242 = alloca %struct.ScmObj*, align 8
%current_45args86458 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86457)
store volatile %struct.ScmObj* %current_45args86458, %struct.ScmObj** %stackaddr$prim90242, align 8
%stackaddr$prim90243 = alloca %struct.ScmObj*, align 8
%f40134 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86458)
store volatile %struct.ScmObj* %f40134, %struct.ScmObj** %stackaddr$prim90243, align 8
%stackaddr$prim90244 = alloca %struct.ScmObj*, align 8
%current_45args86459 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86458)
store volatile %struct.ScmObj* %current_45args86459, %struct.ScmObj** %stackaddr$prim90244, align 8
%stackaddr$prim90245 = alloca %struct.ScmObj*, align 8
%acc40133 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86459)
store volatile %struct.ScmObj* %acc40133, %struct.ScmObj** %stackaddr$prim90245, align 8
%stackaddr$prim90246 = alloca %struct.ScmObj*, align 8
%current_45args86460 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86459)
store volatile %struct.ScmObj* %current_45args86460, %struct.ScmObj** %stackaddr$prim90246, align 8
%stackaddr$prim90247 = alloca %struct.ScmObj*, align 8
%lst40132 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86460)
store volatile %struct.ScmObj* %lst40132, %struct.ScmObj** %stackaddr$prim90247, align 8
%stackaddr$prim90248 = alloca %struct.ScmObj*, align 8
%anf_45bind40242 = call %struct.ScmObj* @prim_null_63(%struct.ScmObj* %lst40132)
store volatile %struct.ScmObj* %anf_45bind40242, %struct.ScmObj** %stackaddr$prim90248, align 8
%truthy$cmp90249 = call i64 @is_truthy_value(%struct.ScmObj* %anf_45bind40242)
%cmp$cmp90249 = icmp eq i64 %truthy$cmp90249, 1
br i1 %cmp$cmp90249, label %truebranch$cmp90249, label %falsebranch$cmp90249
truebranch$cmp90249:
%ae40700 = call %struct.ScmObj* @const_init_int(i64 0)
%args86462$k40548$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90250 = alloca %struct.ScmObj*, align 8
%args86462$k40548$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc40133, %struct.ScmObj* %args86462$k40548$0)
store volatile %struct.ScmObj* %args86462$k40548$1, %struct.ScmObj** %stackaddr$prim90250, align 8
%stackaddr$prim90251 = alloca %struct.ScmObj*, align 8
%args86462$k40548$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40700, %struct.ScmObj* %args86462$k40548$1)
store volatile %struct.ScmObj* %args86462$k40548$2, %struct.ScmObj** %stackaddr$prim90251, align 8
%clofunc90252 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40548)
musttail call tailcc void %clofunc90252(%struct.ScmObj* %k40548, %struct.ScmObj* %args86462$k40548$2)
ret void
falsebranch$cmp90249:
%stackaddr$prim90253 = alloca %struct.ScmObj*, align 8
%anf_45bind40243 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %lst40132)
store volatile %struct.ScmObj* %anf_45bind40243, %struct.ScmObj** %stackaddr$prim90253, align 8
%stackaddr$prim90254 = alloca %struct.ScmObj*, align 8
%anf_45bind40244 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %lst40132)
store volatile %struct.ScmObj* %anf_45bind40244, %struct.ScmObj** %stackaddr$prim90254, align 8
%stackaddr$makeclosure90255 = alloca %struct.ScmObj*, align 8
%fptrToInt90256 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40708 to i64
%ae40708 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt90256)
store volatile %struct.ScmObj* %ae40708, %struct.ScmObj** %stackaddr$makeclosure90255, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40708, %struct.ScmObj* %f40134, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40708, %struct.ScmObj* %k40548, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae40708, %struct.ScmObj* %anf_45bind40243, i64 2)
%args86467$_37foldr140131$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90257 = alloca %struct.ScmObj*, align 8
%args86467$_37foldr140131$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40244, %struct.ScmObj* %args86467$_37foldr140131$0)
store volatile %struct.ScmObj* %args86467$_37foldr140131$1, %struct.ScmObj** %stackaddr$prim90257, align 8
%stackaddr$prim90258 = alloca %struct.ScmObj*, align 8
%args86467$_37foldr140131$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %acc40133, %struct.ScmObj* %args86467$_37foldr140131$1)
store volatile %struct.ScmObj* %args86467$_37foldr140131$2, %struct.ScmObj** %stackaddr$prim90258, align 8
%stackaddr$prim90259 = alloca %struct.ScmObj*, align 8
%args86467$_37foldr140131$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f40134, %struct.ScmObj* %args86467$_37foldr140131$2)
store volatile %struct.ScmObj* %args86467$_37foldr140131$3, %struct.ScmObj** %stackaddr$prim90259, align 8
%stackaddr$prim90260 = alloca %struct.ScmObj*, align 8
%args86467$_37foldr140131$4 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40708, %struct.ScmObj* %args86467$_37foldr140131$3)
store volatile %struct.ScmObj* %args86467$_37foldr140131$4, %struct.ScmObj** %stackaddr$prim90260, align 8
%clofunc90261 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %_37foldr140131)
musttail call tailcc void %clofunc90261(%struct.ScmObj* %_37foldr140131, %struct.ScmObj* %args86467$_37foldr140131$4)
ret void
}

define tailcc void @proc_clo$ae40708(%struct.ScmObj* %env$ae40708,%struct.ScmObj* %current_45args86463) {
%stackaddr$env-ref90262 = alloca %struct.ScmObj*, align 8
%f40134 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40708, i64 0)
store %struct.ScmObj* %f40134, %struct.ScmObj** %stackaddr$env-ref90262
%stackaddr$env-ref90263 = alloca %struct.ScmObj*, align 8
%k40548 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40708, i64 1)
store %struct.ScmObj* %k40548, %struct.ScmObj** %stackaddr$env-ref90263
%stackaddr$env-ref90264 = alloca %struct.ScmObj*, align 8
%anf_45bind40243 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40708, i64 2)
store %struct.ScmObj* %anf_45bind40243, %struct.ScmObj** %stackaddr$env-ref90264
%stackaddr$prim90265 = alloca %struct.ScmObj*, align 8
%_95k40549 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86463)
store volatile %struct.ScmObj* %_95k40549, %struct.ScmObj** %stackaddr$prim90265, align 8
%stackaddr$prim90266 = alloca %struct.ScmObj*, align 8
%current_45args86464 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86463)
store volatile %struct.ScmObj* %current_45args86464, %struct.ScmObj** %stackaddr$prim90266, align 8
%stackaddr$prim90267 = alloca %struct.ScmObj*, align 8
%anf_45bind40245 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86464)
store volatile %struct.ScmObj* %anf_45bind40245, %struct.ScmObj** %stackaddr$prim90267, align 8
%args86466$f40134$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90268 = alloca %struct.ScmObj*, align 8
%args86466$f40134$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40245, %struct.ScmObj* %args86466$f40134$0)
store volatile %struct.ScmObj* %args86466$f40134$1, %struct.ScmObj** %stackaddr$prim90268, align 8
%stackaddr$prim90269 = alloca %struct.ScmObj*, align 8
%args86466$f40134$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40243, %struct.ScmObj* %args86466$f40134$1)
store volatile %struct.ScmObj* %args86466$f40134$2, %struct.ScmObj** %stackaddr$prim90269, align 8
%stackaddr$prim90270 = alloca %struct.ScmObj*, align 8
%args86466$f40134$3 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40548, %struct.ScmObj* %args86466$f40134$2)
store volatile %struct.ScmObj* %args86466$f40134$3, %struct.ScmObj** %stackaddr$prim90270, align 8
%clofunc90271 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f40134)
musttail call tailcc void %clofunc90271(%struct.ScmObj* %f40134, %struct.ScmObj* %args86466$f40134$3)
ret void
}

define tailcc void @proc_clo$ae40576(%struct.ScmObj* %env$ae40576,%struct.ScmObj* %current_45args86471) {
%stackaddr$prim90272 = alloca %struct.ScmObj*, align 8
%k40550 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86471)
store volatile %struct.ScmObj* %k40550, %struct.ScmObj** %stackaddr$prim90272, align 8
%stackaddr$prim90273 = alloca %struct.ScmObj*, align 8
%current_45args86472 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86471)
store volatile %struct.ScmObj* %current_45args86472, %struct.ScmObj** %stackaddr$prim90273, align 8
%stackaddr$prim90274 = alloca %struct.ScmObj*, align 8
%y40111 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86472)
store volatile %struct.ScmObj* %y40111, %struct.ScmObj** %stackaddr$prim90274, align 8
%ae40578 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure90275 = alloca %struct.ScmObj*, align 8
%fptrToInt90276 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40579 to i64
%ae40579 = call %struct.ScmObj* @closure_alloc(i64 1, i64 %fptrToInt90276)
store volatile %struct.ScmObj* %ae40579, %struct.ScmObj** %stackaddr$makeclosure90275, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40579, %struct.ScmObj* %y40111, i64 0)
%args86490$k40550$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90277 = alloca %struct.ScmObj*, align 8
%args86490$k40550$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40579, %struct.ScmObj* %args86490$k40550$0)
store volatile %struct.ScmObj* %args86490$k40550$1, %struct.ScmObj** %stackaddr$prim90277, align 8
%stackaddr$prim90278 = alloca %struct.ScmObj*, align 8
%args86490$k40550$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40578, %struct.ScmObj* %args86490$k40550$1)
store volatile %struct.ScmObj* %args86490$k40550$2, %struct.ScmObj** %stackaddr$prim90278, align 8
%clofunc90279 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %k40550)
musttail call tailcc void %clofunc90279(%struct.ScmObj* %k40550, %struct.ScmObj* %args86490$k40550$2)
ret void
}

define tailcc void @proc_clo$ae40579(%struct.ScmObj* %env$ae40579,%struct.ScmObj* %current_45args86474) {
%stackaddr$env-ref90280 = alloca %struct.ScmObj*, align 8
%y40111 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40579, i64 0)
store %struct.ScmObj* %y40111, %struct.ScmObj** %stackaddr$env-ref90280
%stackaddr$prim90281 = alloca %struct.ScmObj*, align 8
%k40551 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86474)
store volatile %struct.ScmObj* %k40551, %struct.ScmObj** %stackaddr$prim90281, align 8
%stackaddr$prim90282 = alloca %struct.ScmObj*, align 8
%current_45args86475 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86474)
store volatile %struct.ScmObj* %current_45args86475, %struct.ScmObj** %stackaddr$prim90282, align 8
%stackaddr$prim90283 = alloca %struct.ScmObj*, align 8
%f40112 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86475)
store volatile %struct.ScmObj* %f40112, %struct.ScmObj** %stackaddr$prim90283, align 8
%stackaddr$makeclosure90284 = alloca %struct.ScmObj*, align 8
%fptrToInt90285 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40580 to i64
%ae40580 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt90285)
store volatile %struct.ScmObj* %ae40580, %struct.ScmObj** %stackaddr$makeclosure90284, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40580, %struct.ScmObj* %k40551, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40580, %struct.ScmObj* %f40112, i64 1)
%ae40581 = call %struct.ScmObj* @const_init_int(i64 0)
%stackaddr$makeclosure90286 = alloca %struct.ScmObj*, align 8
%fptrToInt90287 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40582 to i64
%ae40582 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt90287)
store volatile %struct.ScmObj* %ae40582, %struct.ScmObj** %stackaddr$makeclosure90286, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40582, %struct.ScmObj* %f40112, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40582, %struct.ScmObj* %y40111, i64 1)
%args86489$ae40580$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90288 = alloca %struct.ScmObj*, align 8
%args86489$ae40580$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40582, %struct.ScmObj* %args86489$ae40580$0)
store volatile %struct.ScmObj* %args86489$ae40580$1, %struct.ScmObj** %stackaddr$prim90288, align 8
%stackaddr$prim90289 = alloca %struct.ScmObj*, align 8
%args86489$ae40580$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40581, %struct.ScmObj* %args86489$ae40580$1)
store volatile %struct.ScmObj* %args86489$ae40580$2, %struct.ScmObj** %stackaddr$prim90289, align 8
%clofunc90290 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %ae40580)
musttail call tailcc void %clofunc90290(%struct.ScmObj* %ae40580, %struct.ScmObj* %args86489$ae40580$2)
ret void
}

define tailcc void @proc_clo$ae40580(%struct.ScmObj* %env$ae40580,%struct.ScmObj* %current_45args86477) {
%stackaddr$env-ref90291 = alloca %struct.ScmObj*, align 8
%k40551 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40580, i64 0)
store %struct.ScmObj* %k40551, %struct.ScmObj** %stackaddr$env-ref90291
%stackaddr$env-ref90292 = alloca %struct.ScmObj*, align 8
%f40112 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40580, i64 1)
store %struct.ScmObj* %f40112, %struct.ScmObj** %stackaddr$env-ref90292
%stackaddr$prim90293 = alloca %struct.ScmObj*, align 8
%_95k40552 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86477)
store volatile %struct.ScmObj* %_95k40552, %struct.ScmObj** %stackaddr$prim90293, align 8
%stackaddr$prim90294 = alloca %struct.ScmObj*, align 8
%current_45args86478 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86477)
store volatile %struct.ScmObj* %current_45args86478, %struct.ScmObj** %stackaddr$prim90294, align 8
%stackaddr$prim90295 = alloca %struct.ScmObj*, align 8
%anf_45bind40240 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86478)
store volatile %struct.ScmObj* %anf_45bind40240, %struct.ScmObj** %stackaddr$prim90295, align 8
%args86480$f40112$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90296 = alloca %struct.ScmObj*, align 8
%args86480$f40112$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %anf_45bind40240, %struct.ScmObj* %args86480$f40112$0)
store volatile %struct.ScmObj* %args86480$f40112$1, %struct.ScmObj** %stackaddr$prim90296, align 8
%stackaddr$prim90297 = alloca %struct.ScmObj*, align 8
%args86480$f40112$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40551, %struct.ScmObj* %args86480$f40112$1)
store volatile %struct.ScmObj* %args86480$f40112$2, %struct.ScmObj** %stackaddr$prim90297, align 8
%clofunc90298 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %f40112)
musttail call tailcc void %clofunc90298(%struct.ScmObj* %f40112, %struct.ScmObj* %args86480$f40112$2)
ret void
}

define tailcc void @proc_clo$ae40582(%struct.ScmObj* %env$ae40582,%struct.ScmObj* %args4011340553) {
%stackaddr$env-ref90299 = alloca %struct.ScmObj*, align 8
%f40112 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40582, i64 0)
store %struct.ScmObj* %f40112, %struct.ScmObj** %stackaddr$env-ref90299
%stackaddr$env-ref90300 = alloca %struct.ScmObj*, align 8
%y40111 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40582, i64 1)
store %struct.ScmObj* %y40111, %struct.ScmObj** %stackaddr$env-ref90300
%stackaddr$prim90301 = alloca %struct.ScmObj*, align 8
%k40554 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %args4011340553)
store volatile %struct.ScmObj* %k40554, %struct.ScmObj** %stackaddr$prim90301, align 8
%stackaddr$prim90302 = alloca %struct.ScmObj*, align 8
%args40113 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %args4011340553)
store volatile %struct.ScmObj* %args40113, %struct.ScmObj** %stackaddr$prim90302, align 8
%stackaddr$makeclosure90303 = alloca %struct.ScmObj*, align 8
%fptrToInt90304 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40586 to i64
%ae40586 = call %struct.ScmObj* @closure_alloc(i64 3, i64 %fptrToInt90304)
store volatile %struct.ScmObj* %ae40586, %struct.ScmObj** %stackaddr$makeclosure90303, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40586, %struct.ScmObj* %args40113, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40586, %struct.ScmObj* %f40112, i64 1)
call void @closure_place_freevar(%struct.ScmObj* %ae40586, %struct.ScmObj* %k40554, i64 2)
%args86488$y40111$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90305 = alloca %struct.ScmObj*, align 8
%args86488$y40111$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %y40111, %struct.ScmObj* %args86488$y40111$0)
store volatile %struct.ScmObj* %args86488$y40111$1, %struct.ScmObj** %stackaddr$prim90305, align 8
%stackaddr$prim90306 = alloca %struct.ScmObj*, align 8
%args86488$y40111$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40586, %struct.ScmObj* %args86488$y40111$1)
store volatile %struct.ScmObj* %args86488$y40111$2, %struct.ScmObj** %stackaddr$prim90306, align 8
%clofunc90307 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %y40111)
musttail call tailcc void %clofunc90307(%struct.ScmObj* %y40111, %struct.ScmObj* %args86488$y40111$2)
ret void
}

define tailcc void @proc_clo$ae40586(%struct.ScmObj* %env$ae40586,%struct.ScmObj* %current_45args86481) {
%stackaddr$env-ref90308 = alloca %struct.ScmObj*, align 8
%args40113 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40586, i64 0)
store %struct.ScmObj* %args40113, %struct.ScmObj** %stackaddr$env-ref90308
%stackaddr$env-ref90309 = alloca %struct.ScmObj*, align 8
%f40112 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40586, i64 1)
store %struct.ScmObj* %f40112, %struct.ScmObj** %stackaddr$env-ref90309
%stackaddr$env-ref90310 = alloca %struct.ScmObj*, align 8
%k40554 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40586, i64 2)
store %struct.ScmObj* %k40554, %struct.ScmObj** %stackaddr$env-ref90310
%stackaddr$prim90311 = alloca %struct.ScmObj*, align 8
%_95k40555 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86481)
store volatile %struct.ScmObj* %_95k40555, %struct.ScmObj** %stackaddr$prim90311, align 8
%stackaddr$prim90312 = alloca %struct.ScmObj*, align 8
%current_45args86482 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86481)
store volatile %struct.ScmObj* %current_45args86482, %struct.ScmObj** %stackaddr$prim90312, align 8
%stackaddr$prim90313 = alloca %struct.ScmObj*, align 8
%anf_45bind40238 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86482)
store volatile %struct.ScmObj* %anf_45bind40238, %struct.ScmObj** %stackaddr$prim90313, align 8
%stackaddr$makeclosure90314 = alloca %struct.ScmObj*, align 8
%fptrToInt90315 = ptrtoint void(%struct.ScmObj*,%struct.ScmObj*)* @proc_clo$ae40589 to i64
%ae40589 = call %struct.ScmObj* @closure_alloc(i64 2, i64 %fptrToInt90315)
store volatile %struct.ScmObj* %ae40589, %struct.ScmObj** %stackaddr$makeclosure90314, align 8
call void @closure_place_freevar(%struct.ScmObj* %ae40589, %struct.ScmObj* %args40113, i64 0)
call void @closure_place_freevar(%struct.ScmObj* %ae40589, %struct.ScmObj* %k40554, i64 1)
%args86487$anf_45bind40238$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90316 = alloca %struct.ScmObj*, align 8
%args86487$anf_45bind40238$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %f40112, %struct.ScmObj* %args86487$anf_45bind40238$0)
store volatile %struct.ScmObj* %args86487$anf_45bind40238$1, %struct.ScmObj** %stackaddr$prim90316, align 8
%stackaddr$prim90317 = alloca %struct.ScmObj*, align 8
%args86487$anf_45bind40238$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %ae40589, %struct.ScmObj* %args86487$anf_45bind40238$1)
store volatile %struct.ScmObj* %args86487$anf_45bind40238$2, %struct.ScmObj** %stackaddr$prim90317, align 8
%clofunc90318 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind40238)
musttail call tailcc void %clofunc90318(%struct.ScmObj* %anf_45bind40238, %struct.ScmObj* %args86487$anf_45bind40238$2)
ret void
}

define tailcc void @proc_clo$ae40589(%struct.ScmObj* %env$ae40589,%struct.ScmObj* %current_45args86484) {
%stackaddr$env-ref90319 = alloca %struct.ScmObj*, align 8
%args40113 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40589, i64 0)
store %struct.ScmObj* %args40113, %struct.ScmObj** %stackaddr$env-ref90319
%stackaddr$env-ref90320 = alloca %struct.ScmObj*, align 8
%k40554 = call %struct.ScmObj* @closure_env_get(%struct.ScmObj* %env$ae40589, i64 1)
store %struct.ScmObj* %k40554, %struct.ScmObj** %stackaddr$env-ref90320
%stackaddr$prim90321 = alloca %struct.ScmObj*, align 8
%_95k40556 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86484)
store volatile %struct.ScmObj* %_95k40556, %struct.ScmObj** %stackaddr$prim90321, align 8
%stackaddr$prim90322 = alloca %struct.ScmObj*, align 8
%current_45args86485 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86484)
store volatile %struct.ScmObj* %current_45args86485, %struct.ScmObj** %stackaddr$prim90322, align 8
%stackaddr$prim90323 = alloca %struct.ScmObj*, align 8
%anf_45bind40239 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86485)
store volatile %struct.ScmObj* %anf_45bind40239, %struct.ScmObj** %stackaddr$prim90323, align 8
%stackaddr$prim90324 = alloca %struct.ScmObj*, align 8
%cpsargs40557 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40554, %struct.ScmObj* %args40113)
store volatile %struct.ScmObj* %cpsargs40557, %struct.ScmObj** %stackaddr$prim90324, align 8
%clofunc90325 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %anf_45bind40239)
musttail call tailcc void %clofunc90325(%struct.ScmObj* %anf_45bind40239, %struct.ScmObj* %cpsargs40557)
ret void
}

define tailcc void @proc_clo$ae40561(%struct.ScmObj* %env$ae40561,%struct.ScmObj* %current_45args86492) {
%stackaddr$prim90326 = alloca %struct.ScmObj*, align 8
%k40558 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86492)
store volatile %struct.ScmObj* %k40558, %struct.ScmObj** %stackaddr$prim90326, align 8
%stackaddr$prim90327 = alloca %struct.ScmObj*, align 8
%current_45args86493 = call %struct.ScmObj* @prim_cdr(%struct.ScmObj* %current_45args86492)
store volatile %struct.ScmObj* %current_45args86493, %struct.ScmObj** %stackaddr$prim90327, align 8
%stackaddr$prim90328 = alloca %struct.ScmObj*, align 8
%yu40110 = call %struct.ScmObj* @prim_car(%struct.ScmObj* %current_45args86493)
store volatile %struct.ScmObj* %yu40110, %struct.ScmObj** %stackaddr$prim90328, align 8
%args86495$yu40110$0 = call %struct.ScmObj* @const_init_null()
%stackaddr$prim90329 = alloca %struct.ScmObj*, align 8
%args86495$yu40110$1 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %yu40110, %struct.ScmObj* %args86495$yu40110$0)
store volatile %struct.ScmObj* %args86495$yu40110$1, %struct.ScmObj** %stackaddr$prim90329, align 8
%stackaddr$prim90330 = alloca %struct.ScmObj*, align 8
%args86495$yu40110$2 = call %struct.ScmObj* @prim_cons(%struct.ScmObj* %k40558, %struct.ScmObj* %args86495$yu40110$1)
store volatile %struct.ScmObj* %args86495$yu40110$2, %struct.ScmObj** %stackaddr$prim90330, align 8
%clofunc90331 = call void(%struct.ScmObj*,%struct.ScmObj*)* @closure_get_fn_part(%struct.ScmObj* %yu40110)
musttail call tailcc void %clofunc90331(%struct.ScmObj* %yu40110, %struct.ScmObj* %args86495$yu40110$2)
ret void
}